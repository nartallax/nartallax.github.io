{"mappings":"kUAAA,IAAAA,EAAAC,EAAA,S,aAGO,SAASC,EAAKC,GACpB,MAAMC,EAAQ,IAAI,EAAAC,EAAAC,+BAA8BH,EAAM,MAEhDI,EAAMH,EAAMI,QAAQ,CACzBC,EAAG,EAAGC,EAAG,EACTC,OAAQ,EAAGC,OAAQ,EACnBC,KAAM,SACNC,MAAO,UACPC,OAAQ,GACRC,QAAS,YAIVZ,EAAMa,gBAAgB,CACrBC,YAAaX,EACbY,SAAU,UACVC,KAAM,CACLP,KAAM,SACNC,MAAO,UACPC,OAAQ,EACRC,QAAS,aAKXZ,EAAMa,gBAAgB,CACrBC,YAAaX,EACbY,SAAU,SACVE,UAAW,GACXD,KAAM,CACLP,KAAM,SACNC,MAAO,UACPC,OAAQ,EACRC,QAAS,aAIX,MAAMM,EAAQlB,EAAMa,gBAAgB,CACnCC,YAAaX,EACbY,SAAU,QACVC,KAAM,CACLP,KAAM,QACNC,MAAO,UACPC,OAAQ,GACRC,QAAS,aAKXZ,EAAMa,gBAAgB,CACrBC,YAAaI,EACbH,SAAU,OACVE,UAAW,GACXD,KAAM,CACLP,KAAM,aACNC,MAAO,UACPC,OAAQ,EACRC,QAAS,aAKXZ,EAAMa,gBAAgB,CACrBC,YAAaX,EACbY,SAAU,YACVC,KAAM,CACLP,KAAM,SACNC,MAAO,UACPC,OAAQ,EACRC,QAAS,cAKX,EAAAhB,EAAAuB,8BAA4BC,IACxBA,EAAY,IAGfpB,EAAMqB,KAAiB,IAAZD,EAAkB,MAE/B,C,sCChFA,SAAgBE,EAA4BC,GAC3C,IAAIC,GAAU,EAEVC,EAAe,EAEnB,MAAMC,EAAkBC,IACvB,GAAGH,EACF,OAED,MAAMI,EAAQD,EAAOF,EACrBA,EAAeE,EACfE,sBAAsBH,GACtBH,EAAQK,EAAA,EAKT,OAFAC,sBAAsBH,GAEf,IAAMF,GAAU,CACxB,C,6ICrBA,IAAAM,EAAAjC,EAAA,S,0BAkBO,MAAMkC,EAKZC,YAAYjC,EAAoCkC,G,UAAAA,EAC/CC,KAAKC,WAAa,IAAI,EAAAC,EAAAC,mBACtBH,KAAKI,KAAM,EAAAC,EAAAC,QAAO,CAACC,QAAS,QAC5B1C,EAAK2C,YAAYR,KAAKI,KACtBJ,KAAKS,iBACL,EAAAb,EAAAc,WAAU7C,GAAM8C,UAAS,IAAMX,KAAKS,iBACrC,CAEQA,gBACP,MAAM5C,EAAOmC,KAAKI,IAAIQ,cACtB,IAAI/C,EACH,OAED,MAAMgD,EAAIhD,EAAKiD,YACTC,EAAIlD,EAAKmD,aACfhB,KAAKI,IAAIa,aAAa,QAASJ,EAAI,IACnCb,KAAKI,IAAIa,aAAa,SAAUF,EAAI,IACpCf,KAAKI,IAAIa,aAAa,UAAW,IAAIJ,EAAI,MAAME,EAAI,KAAKF,KAAKE,IAC9D,CAEQG,gBAAgBC,GACvB,MAAMC,GAAK,EAAAf,EAAAC,QAAO,CAACC,QAAS,SAAUc,MAAO,CAC5CC,GAAI,EAAGC,GAAI,EAAGC,EAAGL,EAAK1C,OAAQgD,KAAMN,EAAK3C,MAAOkD,OAAQP,EAAKzC,QAAS,eAAgB,KAGvF,OADAsB,KAAKI,IAAII,YAAYY,GACdA,CACR,CAEAlD,QAAQiD,GACP,OAAOnB,KAAKC,WAAW/B,QAAQ,CAC9BU,YAAa,KACbG,UAAW,QACRoC,EACHC,GAAIpB,KAAKkB,gBAAgBC,IAE3B,CAEAxC,gBAAgBgD,GACf,OAAO3B,KAAKC,WAAWtB,gBAAgB,IACnCgD,EACH7C,KAAM,IACF6C,EAAK7C,KACRF,YAAagD,MAAMC,QAAQF,EAAK/C,aAAe+C,EAAK/C,YAAc,CAAC+C,EAAK/C,aACxEG,UAAW4C,EAAK5C,WAAa,EAC7BqC,GAAIpB,KAAKkB,gBAAgBS,EAAK7C,QAGjC,CAEAK,KAAKD,EAAmB4C,EAAiB,GACxC,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAgBC,IAClC/B,KAAKC,WAAWd,KAAKD,EAAY4C,GAElC,IAAI,MAAMhD,KAAQkB,KAAKC,WAAW+B,OAAO,CACxC,MAAMZ,EAAKtC,EAAKsC,GAEhB,IAAIjD,EAAWC,EACf,GAAIU,EAAKF,aAAgBE,EAAKC,UAGvB,CACN,MAAMH,EAAcoB,KAAKC,WAAWgC,iBAAiBnD,EAAKF,aACpDsD,EAAKpD,EAAKX,EAAIS,EAAYT,EAC1BgE,EAAKrD,EAAKV,EAAIQ,EAAYR,EAChC,IAAIgE,EAAOC,KAAKC,KAAKJ,GAAM,EAAIC,GAAM,GACrC,MAAMI,EAAQF,KAAKG,MAAML,EAAID,GAC7BE,GAAQtD,EAAKC,UACbZ,EAAIS,EAAYT,EAAKiE,EAAOC,KAAKI,IAAIF,GACrCnE,EAAIQ,EAAYR,EAAKgE,EAAOC,KAAKK,IAAIH,EACtC,MAXCpE,EAAIW,EAAKX,EACTC,EAAIU,EAAKV,EAYVgD,EAAGH,aAAa,KAAM9C,EAAK6B,KAAKD,KAAQ,IACxCqB,EAAGH,aAAa,KAAM7C,EAAK4B,KAAKD,KAAQ,GACzC,CACD,E,+FCjGD,IAAAH,EAAAjC,EAAA,S,0BA+BA,SAASgF,EAAeC,EAAoBC,GAC3C,OAAID,EAEMhB,MAAMC,QAAQe,KAAM,EAAAE,EAAAC,QAAOH,GAC7B,CAAC,CAAC,EAAQA,GAEV,CAACA,EAAQC,GAJT,CAAC,CAAC,EAAQA,EAMnB,CAEA,SAASG,EAAiCC,EAAkBC,EAAmCC,GAC9F,IAAIC,EAAwB,KAE5B,GAAGF,EAAYG,KAAK,CACnB,MAAMA,EAAOH,EAAYG,MACtB,EAAAP,EAAAC,QAAOM,KACRD,KAAW,EAAAxD,EAAAc,WAAUuC,IAAUK,MAAuBD,GAAMA,IAC5DJ,EAAQM,YAAcF,EAAO,MAG/BJ,EAAQM,aAAc,EAAAT,EAAAU,OAAMH,GAAQ,EACrC,CAEA,GAAGH,EAAYO,GACd,IAAI,MAAMC,KAAWR,EAAYO,GAAG,CACnC,MAAMpE,EAAU6D,EAAYO,GAAGC,GAK/BT,EAAQU,iBAAiBD,EAASrE,EAAgB,CAACuE,SAAS,EAAMC,SAAS,GAC5E,CAGD,IAAI,MAAMC,KAAKZ,EAAY7B,MAAM,CAChC,MAAM0C,EAAIb,EAAY7B,MAAMyC,IACzB,EAAAhB,EAAAC,QAAOgB,KACRX,KAAW,EAAAxD,EAAAc,WAAUuC,IAAUK,MAA0CS,GAAGA,IACzEA,QACFd,EAAQe,gBAAgBF,GAExBb,EAAQhC,aAAa6C,EAAGC,EAAI,OAI/B,MAAME,GAAK,EAAAnB,EAAAU,OAAMO,GACdA,SACFd,EAAQhC,aAAa6C,EAAGG,EAAK,GAE/B,CAEA,GAAGd,EAAS,CACX,MAAMe,EAAef,IACpB,MAAMgB,EAAYhB,EAASiB,QAAOjG,KAAOA,KAuE5C,SAAwBkG,EAAiBC,GACxC,IAAI,IAAIvC,EAAI,EAAGA,EAAIuC,EAAYC,OAAQxC,IAAI,CAC1C,MAAMyC,EAAWF,EAAYvC,GACvB5D,EAAIkG,EAAOI,WAAW1C,GACzB5D,IAAMqG,IAGNrG,EACFkG,EAAOK,aAAaF,EAAUrG,GAE9BkG,EAAO7D,YAAYgE,GAErB,CAEA,KAAMH,EAAOI,WAAWH,EAAYC,SACnCF,EAAOI,WAAWH,EAAYC,QAASI,QAEzC,CAvFGC,CAAe3B,EAASkB,EAAA,GAGtB,EAAArB,EAAAC,QAAOI,KACRC,KAAW,EAAAxD,EAAAc,WAAUuC,IAAUK,MAAMH,GAAUA,IAC/Ce,EAAYf,EAAA,IAGde,GAAY,EAAApB,EAAAU,OAAML,GACnB,CAYA,OAVGD,EAAY2B,QACdzB,GAAS,EAAA0B,EAAAC,eACR3B,EACAH,EACAC,EAAY2B,OAEZG,GAAa/B,EAAQgC,UAAUC,MAAQF,KACnC5B,GAGCA,CACR,CAOO,SAAS+B,EAAmDvC,EAAwCC,GAC1G,MAAOK,EAAaC,GAAYR,EAAYC,EAAGC,GAEzCI,EAAUmC,SAASC,cAAcnC,EAAY3C,SAAW,OAE9D,IAAI6C,EAASJ,EAAYC,EAASC,EAAaC,GAE/C,GAAGD,EAAYoC,MACd,IAAI,MAAMxB,KAAKZ,EAAYoC,MAAM,CAChC,MAAMvB,EAAIb,EAAYoC,MAAMxB,IACzB,EAAAhB,EAAAC,QAAOgB,KACRX,KAAW,EAAAxD,EAAAc,WAAUuC,IAAUK,MAAuBS,GAAGA,IACzDd,EAAQqC,MAAMxB,GAAKC,EAAI,MAGzBd,EAAQqC,MAAMxB,IAAK,EAAAhB,EAAAU,OAAMN,EAAYoC,MAAMxB,IAAO,EACnD,CAGD,OAAOb,CACR,CAOO,SAASsC,EAAmD3C,EAAuCC,GACzG,MAAOK,EAAaC,GAAYR,EAAYC,EAAGC,GAEzCI,EAAUmC,SAASI,gBAAgB,6BAA8BtC,EAAY3C,SAAW,KAQ9F,MAN2B,QAAxB2C,EAAY3C,SACd0C,EAAQwC,eAAe,gCAAiC,cAAe,gCAGxEzC,EAAYC,EAASC,EAAaC,GAE3BF,CACR,C,2ECzJA,IAAArD,EAAAjC,EAAA,S,aAOO,SAAS+H,EAActC,EAAuBuC,EAAYC,EAAuBC,GACvF,MAAMC,EAAMlE,MAAMC,QAAQ+D,GAASA,EAAQ,CAACA,GAC5C,IAAI,MAAMG,KAAQD,EACjB,IAAG,EAAAhD,EAAAC,QAAOgD,IACR3C,KAAW,EAAAxD,EAAAc,WAAUiF,IAAOrC,MAAMyC,EAAMC,QACnC,GAAGD,GAAyB,iBAAVA,EACxB,IAAI,MAAME,KAAOF,EAAK,CACrB,MAAMG,EAAOH,EAAKE,IACf,EAAAnD,EAAAC,QAAOmD,KACR9C,KAAW,EAAAxD,EAAAc,WAAUiF,IAAOrC,MAAM4C,EAAMF,EAE3C,CAIF,SAASA,IACR,MAAMG,EAAS,GACf,IAAI,MAAMJ,KAAQD,EACjB,GAAGC,GAAyB,iBAAVA,EACjB,IAAI,MAAMf,KAAae,GACnB,EAAAjD,EAAAU,OAAMuC,EAAKf,KACbmB,EAAOC,KAAKpB,OAGR,CACN,MAAMqB,GAAY,EAAAvD,EAAAU,OAAMuC,GACrBM,GACFF,EAAOC,KAAKC,EAEd,CAEDR,EAASM,EAAOG,KAAK,KACtB,CAIA,OAFAN,IAEO5C,CACR,C,+ECpCA,MAAMmD,EAAI,WAEH,MAAMC,EAEZxE,OAAc,GAEd7C,KAAKD,GACJc,KAAKyG,aAAavH,GAClBc,KAAK0G,aAAaxH,EACnB,CAEAhB,QAAQY,GAEP,OADAkB,KAAKgC,OAAOoE,KAAKtH,GACVA,CACR,CAEAmD,iBAAiBD,GAChB,MAAMzD,EAAOyD,EAAO2E,KAAI7H,GAAQA,EAAKP,OAAMqI,QAAO,CAAChE,EAAGC,IAAMD,EAAIC,GAAG,GAKnE,MAAO,C,KAACtE,E,EAJEyD,EAAO2E,KAAI7H,GAAQA,EAAKP,KAAOO,EAAKX,IAAGyI,QAAO,CAAChE,EAAGC,IAAMD,EAAIC,GAAG,GAAKtE,E,EACpEyD,EAAO2E,KAAI7H,GAAQA,EAAKP,KAAOO,EAAKV,IAAGwI,QAAO,CAAChE,EAAGC,IAAMD,EAAIC,GAAG,GAAKtE,E,OAC/DyD,EAAO2E,KAAI7H,GAAQA,EAAKP,KAAOO,EAAKT,SAAQuI,QAAO,CAAChE,EAAGC,IAAMD,EAAIC,GAAG,GAAKtE,E,OACzEyD,EAAO2E,KAAI7H,GAAQA,EAAKP,KAAOO,EAAKR,SAAQsI,QAAO,CAAChE,EAAGC,IAAMD,EAAIC,GAAG,GAAKtE,EAEzF,CAEAI,gBAAgBgD,GACf,MAAMkF,EAAS7G,KAAKiC,iBAAiBL,MAAMC,QAAQF,EAAK/C,aAAe+C,EAAK/C,YAAc,CAAC+C,EAAK/C,cAE1FkI,EAAazE,KAAKC,KAAKiE,EAAKM,EAAOtI,KAAQoD,EAAK9C,WAAa8C,EAAKoF,SAAU,EAAK,GACjFC,GAAOrF,EAAKsF,UAAY5E,KAAK6E,UAAY7E,KAAK8E,GAAK,EAEzD,OAAOnH,KAAK9B,QAAQ,CACnBC,EAAG0I,EAAO1I,EAAIwD,EAAK9C,SAAWwD,KAAKI,IAAIuE,GACvC5I,EAAGyI,EAAOzI,EAAIuD,EAAK9C,SAAWwD,KAAKK,IAAIsE,GACvC3I,OAAQwI,EAAOxI,OAASyI,EAAazE,KAAKK,IAAIsE,GAC9C1I,OAAQuI,EAAOvI,OAASwI,EAAazE,KAAKI,IAAIuE,MAC3CrF,EAAK7C,MAEV,CAEQ2H,aAAavH,GACpB,IAAI,IAAI6C,EAAI,EAAGA,EAAI/B,KAAKgC,OAAOuC,OAAQxC,IAAI,CAC1C,MAAMjD,EAAOkB,KAAKgC,OAAOD,GACzB,IAAI,IAAIqF,EAAIrF,EAAI,EAAGqF,EAAIpH,KAAKgC,OAAOuC,OAAQ6C,IAAI,CAC9C,MAAMC,EAAYrH,KAAKgC,OAAOoF,GACxBlF,EAAKmF,EAAUlJ,EAAIW,EAAKX,EACxBgE,EAAKkF,EAAUjJ,EAAIU,EAAKV,EACxBkJ,EAAQpF,GAAO,EAAMC,GAAM,EAC3BoF,EAAYlF,KAAKG,MAAML,EAAID,GAE3BsF,EAAiBjB,EAAMc,EAAU9I,KAAQ+I,EAASpI,EACxDJ,EAAKT,QAAUmJ,EAAiBnF,KAAKI,IAAI8E,GACzCzI,EAAKR,QAAUkJ,EAAiBnF,KAAKK,IAAI6E,GAEzC,MAAME,EAAkBlB,EAAMzH,EAAKP,KAAQ+I,EAASpI,EACpDmI,EAAUhJ,QAAUoJ,EAAkBpF,KAAKI,KAAK8E,GAChDF,EAAU/I,QAAUmJ,EAAkBpF,KAAKK,KAAK6E,EACjD,CACD,CACD,CAEUb,aAAaxH,GACtB,IAAI,MAAMJ,KAAQkB,KAAKgC,OACtBlD,EAAKX,GAAKW,EAAKT,OAASa,EACxBJ,EAAKV,GAAKU,EAAKR,OAASY,CAE1B,E","sources":["src/sketches/planets/planets.ts","src/common/cycled_request_animation_frame.ts","src/sketches/planets/planets_graphics.ts","src/common/tag.ts","src/common/classname.ts","src/sketches/planets/planets_simulation.ts"],"sourcesContent":["import {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {PlanetsSimulationWithGraphics} from \"sketches/planets/planets_graphics\"\n\nexport function main(root: HTMLElement): void {\n\tconst scene = new PlanetsSimulationWithGraphics(root, 1e-9)\n\n\tconst sun = scene.addBody({\n\t\tx: 0, y: 0,\n\t\txSpeed: 0, ySpeed: 0,\n\t\tmass: 1.989e30, // kg\n\t\tcolor: \"#eca72c\",\n\t\tradius: 25,\n\t\toutline: \"#ee5622\"\n\t})\n\n\t// mercury\n\tscene.addOrbitingBody({\n\t\torbitTarget: sun,\n\t\tdistance: 57909050000,\n\t\tbody: {\n\t\t\tmass: 3.3011e23,\n\t\t\tcolor: \"#96031a\",\n\t\t\tradius: 5,\n\t\t\toutline: \"#363636\"\n\t\t}\n\t})\n\n\t// venus\n\tscene.addOrbitingBody({\n\t\torbitTarget: sun,\n\t\tdistance: 108208000000,\n\t\torbitZoom: 0.9,\n\t\tbody: {\n\t\t\tmass: 4.8675e24,\n\t\t\tcolor: \"#63ccca\",\n\t\t\tradius: 8,\n\t\t\toutline: \"#5da9e9\"\n\t\t}\n\t})\n\n\tconst earth = scene.addOrbitingBody({\n\t\torbitTarget: sun,\n\t\tdistance: 147.12e9,\n\t\tbody: {\n\t\t\tmass: 5.972e24,\n\t\t\tcolor: \"#087e8b\",\n\t\t\tradius: 10,\n\t\t\toutline: \"#08605f\"\n\t\t}\n\t})\n\n\t// moon\n\tscene.addOrbitingBody({\n\t\torbitTarget: earth,\n\t\tdistance: 384400000,\n\t\torbitZoom: 60,\n\t\tbody: {\n\t\t\tmass: 7.34767309e22,\n\t\t\tcolor: \"#ccc9e7\",\n\t\t\tradius: 2,\n\t\t\toutline: \"#f5f5f5\"\n\t\t}\n\t})\n\n\t// mars\n\tscene.addOrbitingBody({\n\t\torbitTarget: sun,\n\t\tdistance: 227939366000,\n\t\tbody: {\n\t\t\tmass: 6.4171e23,\n\t\t\tcolor: \"#bc8034\",\n\t\t\tradius: 7,\n\t\t\toutline: \"#ff8552\"\n\t\t}\n\t})\n\n\n\tcycledRequestAnimationFrame(deltaTime => {\n\t\tif(deltaTime > 50){\n\t\t\treturn\n\t\t}\n\t\tscene.step(deltaTime * 5000, 25)\n\t})\n}\n","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function */\nexport function cycledRequestAnimationFrame(handler: (delta: number) => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","import {getBinder} from \"common/binder/binder\"\nimport {svgTag} from \"common/tag\"\nimport {PlanetSimulationBody, PlanetsSimulation} from \"sketches/planets/planets_simulation\"\n\ninterface BodyInternalProps {\n\tel: SVGCircleElement\n\torbitTarget: PlanetSimulationBody[] | null\n\torbitZoom: number | null\n}\n\ninterface BodyBase extends PlanetSimulationBody {\n\tcolor: string\n\toutline: string\n\tradius: number\n}\n\nexport type PlanetSimulationBodyWithGraphics = BodyBase & BodyInternalProps\n\nexport class PlanetsSimulationWithGraphics {\n\n\tprivate readonly svg: SVGSVGElement\n\tprivate readonly simulation: PlanetsSimulation<PlanetSimulationBodyWithGraphics>\n\n\tconstructor(root: HTMLElement, private readonly zoom: number) {\n\t\tthis.simulation = new PlanetsSimulation()\n\t\tthis.svg = svgTag({tagName: \"svg\"})\n\t\troot.appendChild(this.svg)\n\t\tthis.updateSvgSize()\n\t\tgetBinder(root).onResize(() => this.updateSvgSize())\n\t}\n\n\tprivate updateSvgSize(): void {\n\t\tconst root = this.svg.parentElement\n\t\tif(!root){\n\t\t\treturn\n\t\t}\n\t\tconst w = root.clientWidth\n\t\tconst h = root.clientHeight\n\t\tthis.svg.setAttribute(\"width\", w + \"\")\n\t\tthis.svg.setAttribute(\"height\", h + \"\")\n\t\tthis.svg.setAttribute(\"viewBox\", `${-w / 2} ${-h / 2} ${w} ${h}`)\n\t}\n\n\tprivate makeBodyElement(base: Omit<BodyBase, \"x\" | \"y\" | \"xSpeed\" | \"ySpeed\">): SVGCircleElement {\n\t\tconst el = svgTag({tagName: \"circle\", attrs: {\n\t\t\tcx: 0, cy: 0, r: base.radius, fill: base.color, stroke: base.outline, \"stroke-width\": 3\n\t\t}})\n\t\tthis.svg.appendChild(el)\n\t\treturn el\n\t}\n\n\taddBody(base: BodyBase & Partial<BodyInternalProps>): PlanetSimulationBodyWithGraphics {\n\t\treturn this.simulation.addBody({\n\t\t\torbitTarget: null,\n\t\t\torbitZoom: null,\n\t\t\t...base,\n\t\t\tel: this.makeBodyElement(base)\n\t\t})\n\t}\n\n\taddOrbitingBody(args: {orbitTarget: PlanetSimulationBody | PlanetSimulationBody[], body: Omit<BodyBase, \"x\" | \"y\" | \"xSpeed\" | \"ySpeed\">, distance: number, position?: number, reverse?: boolean, orbitZoom?: number}): PlanetSimulationBodyWithGraphics {\n\t\treturn this.simulation.addOrbitingBody({\n\t\t\t...args,\n\t\t\tbody: {\n\t\t\t\t...args.body,\n\t\t\t\torbitTarget: Array.isArray(args.orbitTarget) ? args.orbitTarget : [args.orbitTarget],\n\t\t\t\torbitZoom: args.orbitZoom ?? 1,\n\t\t\t\tel: this.makeBodyElement(args.body)\n\t\t\t}\n\t\t})\n\t}\n\n\tstep(deltaTime: number, logicStepCount = 1): void {\n\t\tfor(let i = 0; i < logicStepCount; i++){\n\t\t\tthis.simulation.step(deltaTime / logicStepCount)\n\t\t}\n\t\tfor(const body of this.simulation.bodies){\n\t\t\tconst el = body.el!\n\n\t\t\tlet x: number, y: number\n\t\t\tif(!body.orbitTarget || !body.orbitZoom){\n\t\t\t\tx = body.x\n\t\t\t\ty = body.y\n\t\t\t} else {\n\t\t\t\tconst orbitTarget = this.simulation.findCenterOfMass(body.orbitTarget)\n\t\t\t\tconst dx = body.x - orbitTarget.x\n\t\t\t\tconst dy = body.y - orbitTarget.y\n\t\t\t\tlet dist = Math.sqrt(dx ** 2 + dy ** 2)\n\t\t\t\tconst angle = Math.atan2(dy, dx)\n\t\t\t\tdist *= body.orbitZoom\n\t\t\t\tx = orbitTarget.x + (dist * Math.cos(angle))\n\t\t\t\ty = orbitTarget.y + (dist * Math.sin(angle))\n\t\t\t}\n\n\t\t\tel.setAttribute(\"cx\", (x * this.zoom) + \"\")\n\t\t\tel.setAttribute(\"cy\", (y * this.zoom) + \"\")\n\t\t}\n\t}\n\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","export interface PlanetSimulationBody {\n\tx: number\n\ty: number\n\tmass: number\n\txSpeed: number\n\tySpeed: number\n}\n\nconst G = 6.67408e-11\n\nexport class PlanetsSimulation<B extends PlanetSimulationBody> {\n\n\tbodies: B[] = []\n\n\tstep(deltaTime: number): void {\n\t\tthis.velocityStep(deltaTime)\n\t\tthis.positionStep(deltaTime)\n\t}\n\n\taddBody(body: B): B {\n\t\tthis.bodies.push(body)\n\t\treturn body\n\t}\n\n\tfindCenterOfMass(bodies: readonly PlanetSimulationBody[]): PlanetSimulationBody {\n\t\tconst mass = bodies.map(body => body.mass).reduce((a, b) => a + b, 0)\n\t\tconst x = bodies.map(body => body.mass * body.x).reduce((a, b) => a + b, 0) / mass\n\t\tconst y = bodies.map(body => body.mass * body.y).reduce((a, b) => a + b, 0) / mass\n\t\tconst xSpeed = bodies.map(body => body.mass * body.xSpeed).reduce((a, b) => a + b, 0) / mass\n\t\tconst ySpeed = bodies.map(body => body.mass * body.ySpeed).reduce((a, b) => a + b, 0) / mass\n\t\treturn {mass, x, y, xSpeed, ySpeed}\n\t}\n\n\taddOrbitingBody(args: {orbitTarget: PlanetSimulationBody | PlanetSimulationBody[], body: Omit<B, \"x\" | \"y\" | \"xSpeed\" | \"ySpeed\">, distance: number, position?: number, reverse?: boolean}): B {\n\t\tconst target = this.findCenterOfMass(Array.isArray(args.orbitTarget) ? args.orbitTarget : [args.orbitTarget])\n\n\t\tconst orbitSpeed = Math.sqrt((G * target.mass) / args.distance) * (args.reverse ? -1 : 1)\n\t\tconst pos = (args.position ?? Math.random()) * Math.PI * 2\n\n\t\treturn this.addBody({\n\t\t\tx: target.x + args.distance * Math.cos(pos),\n\t\t\ty: target.y + args.distance * Math.sin(pos),\n\t\t\txSpeed: target.xSpeed - orbitSpeed * Math.sin(pos),\n\t\t\tySpeed: target.ySpeed + orbitSpeed * Math.cos(pos),\n\t\t\t...args.body\n\t\t} as B) // yeah, that's not pretty, but whatever\n\t}\n\n\tprivate velocityStep(deltaTime: number): void {\n\t\tfor(let i = 0; i < this.bodies.length; i++){\n\t\t\tconst body = this.bodies[i]!\n\t\t\tfor(let j = i + 1; j < this.bodies.length; j++){\n\t\t\t\tconst otherBody = this.bodies[j]!\n\t\t\t\tconst dx = otherBody.x - body.x\n\t\t\t\tconst dy = otherBody.y - body.y\n\t\t\t\tconst dist2 = (dx ** 2) + (dy ** 2)\n\t\t\t\tconst direction = Math.atan2(dy, dx)\n\n\t\t\t\tconst thisDeltaSpeed = ((G * otherBody.mass) / dist2) * deltaTime\n\t\t\t\tbody.xSpeed -= thisDeltaSpeed * Math.cos(direction)\n\t\t\t\tbody.ySpeed += thisDeltaSpeed * Math.sin(direction)\n\n\t\t\t\tconst otherDeltaSpeed = ((G * body.mass) / dist2) * deltaTime\n\t\t\t\totherBody.xSpeed -= otherDeltaSpeed * Math.cos(-direction)\n\t\t\t\totherBody.ySpeed += otherDeltaSpeed * Math.sin(-direction)\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected positionStep(deltaTime: number): void {\n\t\tfor(const body of this.bodies){\n\t\t\tbody.x += body.xSpeed * deltaTime\n\t\t\tbody.y += body.ySpeed * deltaTime\n\t\t}\n\t}\n\n}"],"names":["$5DUDw","parcelRequire","$5345fbd5ca3c0200$export$f22da7240b7add18","root","scene","$ilBaf","PlanetsSimulationWithGraphics","sun","addBody","x","y","xSpeed","ySpeed","mass","color","radius","outline","addOrbitingBody","orbitTarget","distance","body","orbitZoom","earth","cycledRequestAnimationFrame","deltaTime","step","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","stopped","prevCallTime","wrappedHandler","time","delta","requestAnimationFrame","$hIDiW","$4be702f97fd21592$export$2b44ee5eaf6ac4f2","constructor","zoom","this","simulation","$5GlZg","PlanetsSimulation","svg","$aCP3q","svgTag","tagName","appendChild","updateSvgSize","getBinder","onResize","parentElement","w","clientWidth","h","clientHeight","setAttribute","makeBodyElement","base","el","attrs","cx","cy","r","fill","stroke","args","Array","isArray","logicStepCount","i","bodies","findCenterOfMass","dx","dy","dist","Math","sqrt","angle","atan2","cos","sin","$4c0fbf616468c6ce$var$resolveArgs","a","b","$hsvBG","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","text","watch","textContent","unbox","on","evtName","addEventListener","passive","capture","k","v","removeAttribute","vv","setChildren","childTags","filter","parent","newChildren","length","childTag","childNodes","insertBefore","remove","$4c0fbf616468c6ce$var$updateChildren","class","$jM5hi","makeClassname","classname","classList","value","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","style","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","result","push","classname1","join","$503fbb131173ea1c$var$G","$503fbb131173ea1c$export$28ea231c27d078e3","velocityStep","positionStep","map","reduce","target","orbitSpeed","reverse","pos","position","random","PI","j","otherBody","dist2","direction","thisDeltaSpeed","otherDeltaSpeed"],"version":3,"file":"planets.35ef4218.js.map"}