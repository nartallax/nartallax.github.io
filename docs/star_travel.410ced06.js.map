{"mappings":"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","sources":["src/sketches/star_travel/star_travel.ts","src/common/cycled_request_animation_frame.ts","src/common/queue.ts","src/common/tag.ts","src/common/classname.ts","src/sketches/star_travel/nebula_generator.ts","src/sketches/star_travel/bezier_smoothed_closed_path.ts","src/sketches/star_travel/wobbly_circle.ts","src/sketches/star_travel/star_travel.module.scss"],"sourcesContent":["import {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {Queue} from \"common/queue\"\nimport {svgTag} from \"common/tag\"\nimport {generateRandomNebula} from \"./nebula_generator\"\nimport * as css from \"./star_travel.module.scss\"\n\nexport function main(root: HTMLElement): void {\n\tconst controller = new StarTravelController({\n\t\tcolors: [\"#ddd\", \"#B2BBFF\", \"#9EA6FF\", \"#A3E4FF\", \"#8CC7FF\", \"#B596FF\"],\n\t\tcount: 100,\n\t\ttravelTime: 2500,\n\t\ttravelTimeDeviation: 0.2\n\t})\n\troot.appendChild(controller.root)\n\tcontroller.start()\n}\n\ninterface StarTravelOpts {\n\tcolors: string[]\n\tcount: number\n\ttravelTime: number\n\ttravelTimeDeviation: number\n}\n\ninterface Star {\n\tdiesAt: number\n\tel: SVGElement\n}\n\n\nclass StarTravelController {\n\n\treadonly root: SVGSVGElement\n\tprivate readonly stars = new Queue<Star>()\n\tprivate width = 0\n\tprivate height = 0\n\tprivate starFlightRadius = 0\n\n\tconstructor(private readonly opts: StarTravelOpts) {\n\t\tthis.root = svgTag({tagName: \"svg\", attrs: {x: \"0\", y: \"0\"}, class: css.startravelSvg})\n\t}\n\n\tprivate init(): void {\n\t\tthis.stars.clear()\n\t\tconst w = this.width = this.root.clientWidth\n\t\tconst h = this.height = this.root.clientHeight\n\t\tthis.starFlightRadius = Math.sqrt(Math.pow(this.width / 2, 2) + Math.pow(this.height / 2, 2))\n\t\tthis.root.setAttribute(\"width\", w + \"\")\n\t\tthis.root.setAttribute(\"height\", h + \"\")\n\t\tthis.root.setAttribute(\"viewBox\", `0 0 ${w} ${h}`)\n\n\t\tthis.root.innerHTML = \"\"\n\t\tthis.root.appendChild(this.generateBackground())\n\t}\n\n\tprivate removeOldStars() {\n\t\tconst now = Date.now()\n\t\twhile(this.stars.head && this.stars.head.diesAt < now){\n\t\t\tconst star = this.stars.dequeue()\n\t\t\tstar.el.remove()\n\t\t}\n\t}\n\n\tprivate addNewStars(count = this.opts.count - this.stars.length) {\n\t\tconst offsetPerStar = 1 / count\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tthis.addStar(offsetPerStar * i)\n\t\t}\n\t}\n\n\tprivate addStar(animationProgress = 0): void {\n\t\tconst direction = Math.random() * 360\n\t\t// let travelTime = this.opts.travelTime * (1 + ((Math.random() - 0.5) * this.opts.travelTimeDeviation));\n\t\tconst travelTime = this.opts.travelTime\n\t\tconst speed = this.starFlightRadius / travelTime\n\t\tconst trackLength = speed * 350\n\t\tconst trackWidth = (Math.random() + 0.5) * 10\n\t\tconst color = this.opts.colors[Math.floor(Math.random() * this.opts.colors.length)]\n\n\t\tconst offsetDistance = ((((this.width + this.height) / 2) * 0.2) * (Math.random() + 0.15))\n\t\tconst timeOffset = animationProgress * travelTime\n\n\t\tconst star: Star = {\n\t\t\tdiesAt: Date.now() + travelTime - timeOffset,\n\t\t\tel: svgTag({\n\t\t\t\ttagName: \"g\",\n\t\t\t\tclass: css.startravelStar,\n\t\t\t\tattrs: {\n\t\t\t\t\ttransform: `translate(${this.width / 2}, ${this.height / 2}) rotate(${direction}) translate(${offsetDistance}, 0)`\n\t\t\t\t}\n\t\t\t}, [svgTag({\n\t\t\t\ttagName: \"g\",\n\t\t\t\tattrs: {\n\t\t\t\t\tstyle: `animation-duration: ${travelTime / 1000}s;animation-delay: ${-timeOffset / 1000}s`\n\t\t\t\t}\n\t\t\t}, [\n\t\t\t\tsvgTag({\n\t\t\t\t\ttagName: \"path\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\td: `M ${-trackLength} 0 L 0 ${trackWidth / 2} A ${trackWidth / 2} ${trackWidth / 2} 0 0 0 0 ${-trackWidth / 2} z`,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tsvgTag({\n\t\t\t\t\ttagName: \"circle\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tcx: 0,\n\t\t\t\t\t\tcy: 0,\n\t\t\t\t\t\tr: trackWidth / 3,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t\t)]\n\t\t\t)\n\t\t}\n\n\t\tthis.stars.enqueue(star)\n\t\tthis.root.appendChild(star.el)\n\t}\n\n\tstart() {\n\t\tthis.init()\n\t\tcycledRequestAnimationFrame(this.root, timePassed => {\n\t\t\tif(timePassed > 1000 || this.root.clientWidth !== this.width || this.root.clientHeight !== this.height){\n\t\t\t\tthis.init()\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// void this.removeOldStars, void this.addNewStars\n\t\t\tthis.removeOldStars()\n\t\t\tthis.addNewStars()\n\t\t})\n\t}\n\n\tprivate generateBackground(): SVGElement {\n\t\tconst nebulae = [] as SVGElement[]\n\t\tfor(let i = 0; i < 2; i++){\n\t\t\tconst nebula = generateRandomNebula(Math.min(this.width + this.height) / 3)\n\t\t\tnebulae.push(nebula)\n\t\t\tconst dx = (Math.random() - 0.5) * (this.width / 3)\n\t\t\tconst dy = (Math.random() - 0.5) * (this.height / 3)\n\t\t\tnebula.setAttribute(\"transform\", `translate(${(this.width / 2) + dx}, ${(this.height / 2) + dy})`)\n\t\t}\n\t\treturn svgTag({tagName: \"g\", class: css.startravelBackground}, nebulae)\n\t}\n\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function\n * Unmounting root also stops it */\nexport function cycledRequestAnimationFrame(root: HTMLElement | SVGElement, handler: (delta: number) => void, onStop?: () => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\tonStop?.()\n\t\t\treturn\n\t\t}\n\t\tif(!root.isConnected){\n\t\t\tonStop?.()\n\t\t\tstopped = true\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.tailNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tmaybeDequeue(): T | undefined {\n\t\tif(!this.headNode){\n\t\t\treturn undefined\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n\ttoArrayHeadFirst(): T[] {\n\t\tconst result: T[] = new Array(this.len)\n\t\tlet node = this.headNode\n\t\tlet i = 0\n\t\twhile(node){\n\t\t\tresult[i++] = node.value\n\t\t\tnode = node.prev\n\t\t}\n\t\treturn result\n\t}\n\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {svgTag} from \"common/tag\"\nimport {makeBezierSmoothedClosePath} from \"./bezier_smoothed_closed_path\"\nimport {generateWobblyCirclePoints} from \"./wobbly_circle\"\n\ninterface Color {\n\tr: number\n\tg: number\n\tb: number\n}\n\nconst filterName = \"random-nebula-blur\"\n\nfunction twoHex(x: number): string {\n\treturn (x < 16 ? \"0\" : \"\") + x.toString(16)\n}\n\nfunction twoHexOneBased(x: number): string {\n\treturn twoHex(Math.floor(Math.min(1, x) * 255))\n}\n\nfunction generateColorMults(totalMultAmount = 1): Color {\n\tlet r = Math.random()\n\t// зеленый всегда должен быть на нуле\n\t// иначе при применении градиента начинает даваться йобу глубина цвета\n\t// и появляются \"лесенки\"\n\t// и ваще зеленый не смотрится в космосе\n\tlet g = 0 // Math.random();\n\tlet b = Math.random() * 0.5\n\tconst normalizer = totalMultAmount / (r + g + b)\n\tr *= normalizer\n\tg *= normalizer\n\tb *= normalizer\n\treturn {r, g, b}\n}\n\nfunction makeColorStr(mults: Color, power: number): string {\n\t// return `#${twoHexOneBased(mults.r * power)}${twoHexOneBased(mults.g * power)}${twoHexOneBased(mults.b * power)}`\n\tvoid twoHexOneBased\n\treturn `rgba(${mults.r}, ${mults.g}, ${mults.b}, ${power})`\n}\n\nexport function generateRandomNebula(radius: number): SVGElement {\n\tconst vertex = generateWobblyCirclePoints({\n\t\tradius: radius,\n\t\tvertexCount: 15,\n\t\twobbliness: 0.9\n\t})\n\n\tconst smoothness = 0.2\n\tlet intensity = 0.2\n\tconst colorMult = generateColorMults(255)\n\n\tconst circles: SVGElement[] = []\n\tfor(let i = 0; i < 15; i++){\n\t\tconst path = makeBezierSmoothedClosePath(vertex, smoothness)\n\t\t// path.setAttribute(\"filter\", `url(#${filterName})`)\n\t\tpath.setAttribute(\"fill\", makeColorStr(colorMult, intensity))\n\t\tpath.setAttribute(\"fill-opacity\", intensity.toFixed(2))\n\t\tcircles.push(path)\n\n\t\tintensity += 0.05\n\t\tvertex.forEach(vertex => {\n\t\t\tvertex.x /= 1.15\n\t\t\tvertex.y /= 1.15\n\t\t})\n\t}\n\n\treturn svgTag({tagName: \"g\"}, [\n\t\tsvgTag({tagName: \"filter\",\n\t\t\tattrs: {\n\t\t\t\tid: filterName\n\t\t\t}}, [\n\t\t\tsvgTag({\n\t\t\t\ttagName: \"feGaussianBlur\",\n\t\t\t\tattrs: {\n\t\t\t\t\tin: \"SourceGraphic\",\n\t\t\t\t\tstdDeviation: \"15\"\n\t\t\t\t}\n\t\t\t})\n\t\t]),\n\t\tsvgTag({\n\t\t\ttagName: \"g\",\n\t\t\tattrs: {\n\t\t\t\tfilter: `url(#${filterName})`\n\t\t\t}\n\t\t}, circles)\n\t])\n}","import {svgTag} from \"common/tag\"\nimport {Point} from \"sketches/star_travel/wobbly_circle\"\n\n/** Имея массив точек, сделать из него сглаженный path  */\nexport function makeBezierSmoothedClosePath(vertex: Point[], smoothness: number): SVGPathElement {\n\tfunction getBezierAt(i: number, firstPoint: boolean): Point {\n\t\tconst cur = vertex[(i + vertex.length) % vertex.length]!\n\t\tconst prev = vertex[(i + vertex.length - 1) % vertex.length]!\n\t\tconst next = vertex[(i + 1) % vertex.length]!\n\t\treturn calcBezierPoint(cur, prev, next, firstPoint, smoothness)\n\t}\n\n\t// transforming points to svg path string, generating bezier points in process\n\tlet pathStr = `M ${vertex[vertex.length - 1]!.x} ${vertex[vertex.length - 1]!.y}`\n\tfor(let i = 0; i < vertex.length; i++){\n\t\tconst cur = vertex[i]!\n\t\tconst prevBezier = getBezierAt(i - 1, true)\n\t\tconst curBezier = getBezierAt(i, false)\n\t\tpathStr += `C ${prevBezier.x} ${prevBezier.y}, ${curBezier.x} ${curBezier.y}, ${cur.x} ${cur.y}`\n\t}\n\n\treturn svgTag({tagName: \"path\", attrs: {d: pathStr}})\n}\n\nfunction calcBezierPoint(cur: Point, prev: Point, next: Point, firstPoint: boolean, smoothness: number): Point {\n\t// нам нужно, чтобы точка безье была на линии, параллельной линии prev -> next, проходящей через cur\n\t// поэтому мы двигаем одну из точек (prev, next) на расстояние от cur до другой из них\n\tconst a = firstPoint ? prev : next\n\tconst b = firstPoint ? next : prev\n\tlet dx = cur.x - a.x\n\tlet dy = cur.y - a.y\n\tconst result = {x: b.x + dx, y: b.y + dy}\n\t// после такого сдвига новая точка действительно лежит на этой линии, но она получается слишком далеко\n\t// поэтому мы её двигаем ближе к cur\n\tdx = cur.x - result.x\n\tdy = cur.y - result.y\n\tresult.x = cur.x - (dx * smoothness)\n\tresult.y = cur.y - (dy * smoothness)\n\treturn result\n}","export interface Point {\n\tx: number\n\ty: number\n}\n\nexport interface WobblyCircleParams {\n\tradius: number\n\tvertexCount: number\n\twobbliness: number\n}\n\nexport function generateWobblyCirclePoints(params: WobblyCircleParams): Point[] {\n\tconst vertex = [] as Point[]\n\n\t// generating random circle-like points\n\tlet currentDistance = params.radius\n\tconst degStep = (Math.PI * 2) / params.vertexCount\n\tfor(let i = 0; i < params.vertexCount; i++){\n\t\tconst deg = (i * degStep)\n\t\tcurrentDistance += (currentDistance < params.radius ? 1 : -1) * params.radius * params.wobbliness * 0.25\n\t\tcurrentDistance += (Math.random() - 0.5) * params.radius * params.wobbliness\n\t\tvertex.push({\n\t\t\tx: Math.cos(deg) * currentDistance,\n\t\t\t// минус здесь - потому что в svg ось y направлена вниз\n\t\t\t// а мне привычнее, когда радианы идут по часовой стрелке при увеличении\n\t\t\ty: -Math.sin(deg) * currentDistance\n\t\t})\n\t}\n\n\treturn vertex\n}\n\n","@keyframes startravel-starfly {\n\t0% { \n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 0;\n\t}\n\t50% {\n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 1;\n\t}\n\t100% { \n\t\ttransform: scale(5) translate(100%, 0);\n\t\topacity: 1;\n\t}\n}\n\n@keyframes startravel-rotate-bg {\n\tfrom { \n\t\ttransform: translate(50%, 50%) rotate(0deg) translate(-50%, -50%);\n\t}\n\tto { \n\t\ttransform: translate(50%, 50%) rotate(360deg) translate(-50%, -50%);\n\t}\n}\n\n.startravelSvg {\n\tposition: relative;\n\tbackground: #000;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.startravelStar > g {\n\tanimation: startravel-starfly 1s cubic-bezier(1,0,1,0);\n\tanimation-fill-mode: forwards;\n}\n\n.startravelStar circle {\n\tfilter: brightness(200%);\n}\n\n.startravelBackground {\n\tanimation: startravel-rotate-bg 250s linear infinite;\n}"],"names":["$5DUDw","parcelRequire","$ad08eec3e5b7b8ba$export$f22da7240b7add18","root","controller","$ad08eec3e5b7b8ba$var$StarTravelController","colors","count","travelTime","travelTimeDeviation","appendChild","start","constructor","opts","stars","$6A5Hp","Queue","width","height","starFlightRadius","this","$aCP3q","svgTag","tagName","attrs","x","y","class","$5mUU2","startravelSvg","init","clear","w","clientWidth","h","clientHeight","Math","sqrt","pow","setAttribute","innerHTML","generateBackground","removeOldStars","now","Date","head","diesAt","dequeue","el","remove","addNewStars","length","offsetPerStar","i","addStar","animationProgress","direction","random","trackLength","trackWidth","color","floor","offsetDistance","timeOffset","star","startravelStar","transform","style","d","fill","cx","cy","r","enqueue","cycledRequestAnimationFrame","timePassed","nebulae","nebula","$f6lcZ","generateRandomNebula","min","push","dx","dy","startravelBackground","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","onStop","stopped","prevCallTime","wrappedHandler","time","isConnected","delta","requestAnimationFrame","$d86dd992f2068262$export$3dc07afe418952bc","len","headNode","value","tail","tailNode","oldTail","prev","Error","result","maybeDequeue","undefined","toArrayHeadFirst","Array","node","$hIDiW","$4c0fbf616468c6ce$var$resolveArgs","a","b","isArray","$hsvBG","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","text","getBinder","watch","textContent","unbox","on","evtName","addEventListener","passive","capture","k","v","removeAttribute","vv","setChildren","childTags","filter","parent","newChildren","childTag","childNodes","insertBefore","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","classname","classList","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","classname1","join","$8345261d26a3b178$var$filterName","$8345261d26a3b178$export$dd54aaf74a2bf32b","radius","vertex","$5sXTG","generateWobblyCirclePoints","vertexCount","wobbliness","intensity","colorMult","totalMultAmount","g","normalizer","$8345261d26a3b178$var$generateColorMults","circles","path","$bddrq","makeBezierSmoothedClosePath","power","mults","toFixed","forEach","id","in","stdDeviation","$22ccbd76036f7d57$export$d77b7e82a9cc293e","smoothness","getBezierAt","firstPoint","cur","next","$22ccbd76036f7d57$var$calcBezierPoint","pathStr","prevBezier","curBezier","$6d5408446ab836f7$export$22c1218281d54f73","params","currentDistance","degStep","PI","deg","cos","sin","$3e8b258f448bc1f2$export$756cdbf8a4a74372","$3e8b258f448bc1f2$export$3250ca2bbee7d90c","$3e8b258f448bc1f2$export$c84ea88972675b","$3e8b258f448bc1f2$export$279cefaa126c9ca2","$3e8b258f448bc1f2$export$132cdb902872b111"],"version":3,"file":"star_travel.410ced06.js.map"}