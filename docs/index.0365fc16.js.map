{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@nartallax/cardboard-dom/ts/src/box_dom_binding/dom_value_link.ts","node_modules/@nartallax/cardboard-dom/ts/src/box_dom_binding/css_variable_box.ts","node_modules/@nartallax/cardboard-dom/ts/src/parts/check_repeater.ts","node_modules/@nartallax/cardboard-dom/ts/src/monkeypatching/history_monkeypatching.ts","node_modules/@nartallax/cardboard-dom/ts/src/box_dom_binding/url_box.ts","node_modules/@nartallax/cardboard-dom/ts/src/parts/binder.ts","node_modules/@nartallax/cardboard-dom/ts/src/monkeypatching/dom_monkeypatching.ts","node_modules/@nartallax/cardboard-dom/ts/src/parts/projected_tree_state.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/utils.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/base_tag.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/classname.ts","node_modules/@nartallax/cardboard-dom/ts/src/node_binding.ts","node_modules/@nartallax/cardboard-dom/ts/src/parts/async_mutation_watcher.ts","node_modules/@nartallax/cardboard-dom/ts/src/parts/sync_mutation_watcher.ts","node_modules/@nartallax/cardboard-dom/ts/src/box_dom_binding/bind_box_to_dom.ts","node_modules/@nartallax/cardboard-dom/ts/src/box_dom_binding/local_storage_box.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/html_tag.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/svg_tag.ts","node_modules/@nartallax/cardboard-dom/ts/src/functions/wait_document_loaded.ts","node_modules/@nartallax/cardboard/ts/src/dependency_lists/base_dependency_list.ts","node_modules/@nartallax/cardboard/ts/src/dependency_lists/multiple_dependency_list.ts","node_modules/@nartallax/cardboard/ts/src/dependency_lists/single_dependency_list.ts","node_modules/@nartallax/cardboard/ts/src/boxes/abstract/base_box.ts","node_modules/@nartallax/cardboard/ts/src/array_contexts/map_array_elements.ts","node_modules/@nartallax/cardboard/ts/src/boxes/abstract/first_subscriber_handling_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/abstract/downstream_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/abstract/single_downstream_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/map_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/prop_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/array_context_controlled_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/array_item_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/calc_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/value_box.ts","node_modules/@nartallax/cardboard/ts/src/boxes/const_box.ts","node_modules/@nartallax/cardboard/ts/src/common.ts","node_modules/@nartallax/cardboard/ts/src/subscriber_list.ts","node_modules/@nartallax/cardboard/ts/src/array_contexts/array_context.ts","node_modules/@nartallax/cardboard/ts/src/array_contexts/const_array_context.ts","node_modules/@nartallax/cardboard/ts/src/update_delivery/update_queue.ts","node_modules/@nartallax/cardboard/ts/src/update_delivery/update.ts","node_modules/@parcel/runtime-js/lib/runtime-e01c4e50cce3ccdc.js","node_modules/@parcel/runtime-js/lib/runtime-54bf06e8ec412fef.js","node_modules/@parcel/runtime-js/lib/runtime-683c0e2d0474456b.js","node_modules/@parcel/runtime-js/lib/helpers/browser/css-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/runtime-173381b535797f2a.js","node_modules/@parcel/runtime-js/lib/runtime-befb9650e0009f5e.js","node_modules/@parcel/runtime-js/lib/runtime-77f616517955dfd0.js","node_modules/@parcel/runtime-js/lib/runtime-69d1c4b82fa62fe6.js","node_modules/@parcel/runtime-js/lib/runtime-57d6b855d40ab9dc.js","node_modules/@parcel/runtime-js/lib/runtime-1a5c102968912ae8.js","node_modules/@parcel/runtime-js/lib/runtime-77457c502ed7f2ea.js","node_modules/@parcel/runtime-js/lib/runtime-516a090d2db55615.js","node_modules/@parcel/runtime-js/lib/runtime-9f973b9bb2677a7f.js","node_modules/@parcel/runtime-js/lib/runtime-26de76fcd13cbf0c.js","src/website/main.ts","src/website/controls/main_page.ts","src/website/controls/sketch_block.ts","src/common/wait_dom_event.ts","src/website/controls/countdown_timer.ts","src/website/controls/countdown_timer.module.scss","src/website/controls/sketch_page.ts","src/website/controls/sketch_info_button.ts","src/website/controls/sketch_info_button.module.scss","src/website/controls/sketch_page.module.scss","src/website/controls/sketch_block.module.scss","src/website/content_tags.ts","node_modules/@parcel/runtime-js/lib/runtime-d78be45e413a5b46.js","node_modules/@parcel/runtime-js/lib/runtime-d8e9cbe67a1fa4b3.js","node_modules/@parcel/runtime-js/lib/runtime-9f1e01cfc9edef71.js","node_modules/@parcel/runtime-js/lib/runtime-48385555df8bdc97.js","node_modules/@parcel/runtime-js/lib/runtime-8cf8cc442a488924.js","node_modules/@parcel/runtime-js/lib/runtime-5ea03262d142643d.js","node_modules/@parcel/runtime-js/lib/runtime-814f38ed86a0cc93.js","node_modules/@parcel/runtime-js/lib/runtime-60340786b44020c5.js","node_modules/@parcel/runtime-js/lib/runtime-0fcb6f4a622d46c0.js","node_modules/@parcel/runtime-js/lib/runtime-e88c6d3f9fad55f1.js","src/website/sketches.ts","src/common/get_title_box.ts","src/common/location_hash_box.ts","src/website/routes.ts","src/website/controls/main_page.module.scss","src/website/router.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import {RBox, isWBox} from \"@nartallax/cardboard\"\nimport {DomBoxOptionsBase} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {Binder} from \"src/parts/binder\"\n\nconst NoValueKnown = Symbol(\"dom-value-link-no-value-known\")\n\n/** Some wrapper around DOM value that can bind box to the value */\nexport abstract class DomValueLink<T, R = unknown, O extends DomBoxOptionsBase = DomBoxOptionsBase> {\n\tprotected abstract updateDomValue(value: T): void\n\tprotected abstract parseDomValue(domValue: R): T\n\tprotected abstract getRawDomValue(): R\n\tprotected subscribeToDomValue(): void {\n\t\t// nothing by default; there's no way to subscribe to some of the DOM values\n\t\t// subclasses are supposed to set up event listeners that call this.updateBoxValueBound\n\t\t// (bound = can be used without call context; was .bind(this)-ed)\n\t}\n\tprotected unsubscribeFromDomValue(): void {\n\t\t// nothing by default\n\t}\n\n\tprivate readonly subscribeDomBound: () => void\n\tprivate readonly unsubscribeDomBound: () => void\n\tprivate readonly tryUpdateDomValueBound: (value: T) => void\n\tprotected readonly updateBoxValueBound: () => void\n\tprivate lastKnownRawDomValue: R | typeof NoValueKnown = NoValueKnown\n\n\tconstructor(readonly box: RBox<T>, readonly options: O) {\n\t\tthis.subscribeDomBound = this.subscribeToDomValue.bind(this)\n\t\tthis.unsubscribeDomBound = this.unsubscribeFromDomValue.bind(this)\n\t\tthis.tryUpdateDomValueBound = this.tryUpdateDomValue.bind(this)\n\t\tthis.updateBoxValueBound = this.updateBoxValue.bind(this)\n\t}\n\n\tprivate canPushUpdates(): boolean {\n\t\treturn this.subscribeToDomValue !== DomValueLink.prototype.subscribeToDomValue && isWBox(this.box)\n\t}\n\n\tprotected updateBoxValue(): void {\n\t\tif(!isWBox(this.box)){\n\t\t\treturn\n\t\t}\n\n\t\tconst rawValue = this.getRawDomValue()\n\t\tif(this.lastKnownRawDomValue === rawValue){\n\t\t\treturn\n\t\t}\n\t\tthis.lastKnownRawDomValue = rawValue\n\t\tthis.box.set(this.parseDomValue(rawValue))\n\t}\n\n\tprivate tryUpdateDomValue(value: T): void {\n\t\tconst rawDomValue = this.getRawDomValue()\n\t\tconst preferBoxValue = this.options.preferBoxValue || !isWBox(this.box)\n\t\tif(rawDomValue !== this.lastKnownRawDomValue && !preferBoxValue){\n\t\t\treturn // we don't actually update anything here. we expect box value to be updated in other handler\n\t\t}\n\n\t\tthis.updateDomValue(value)\n\t\tthis.lastKnownRawDomValue = this.getRawDomValue()\n\t}\n\n\tbind(binder: Binder): void {\n\t\tif(this.canPushUpdates()){\n\t\t\tbinder.onInserted(this.updateBoxValueBound)\n\t\t\tbinder.onInserted(this.subscribeDomBound)\n\t\t\tbinder.onRemoved(this.unsubscribeDomBound)\n\t\t}\n\n\t\tif(binder.isInDom){\n\t\t\tthis.subscribeToDomValue()\n\t\t}\n\n\t\tif(this.options.preferBoxValue || !isWBox(this.box)){\n\t\t\tbinder.watchAndRun(this.box, this.tryUpdateDomValueBound)\n\t\t} else {\n\t\t\tbinder.watch(this.box, this.tryUpdateDomValueBound)\n\t\t\tthis.updateBoxValue()\n\t\t}\n\t}\n\n\tunbind(binder: Binder): void {\n\t\tif(this.canPushUpdates()){\n\t\t\tbinder.offInserted(this.updateBoxValueBound)\n\t\t\tbinder.offInserted(this.subscribeDomBound)\n\t\t\tbinder.offRemoved(this.unsubscribeDomBound)\n\t\t\tif(binder.isInDom){\n\t\t\t\tthis.unsubscribeFromDomValue()\n\t\t\t}\n\t\t}\n\t\tbinder.unwatch(this.tryUpdateDomValueBound)\n\t}\n\n}","import {RBox, WBox, box, isWBox} from \"@nartallax/cardboard\"\nimport {DomBoxOptionsBase, bindBoxToDomValue} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {DomValueLink} from \"src/box_dom_binding/dom_value_link\"\n\nexport type CssVariableBoxOptions = DomBoxOptionsBase & {\n\treadonly type: \"cssVariable\"\n\treadonly name: string\n\treadonly element?: HTMLElement\n}\n\nexport class CssVariableBoxLink<T> extends DomValueLink<T, string, CssVariableBoxOptions> {\n\n\tconstructor(private readonly node: Node, box: RBox<T>, options: CssVariableBoxOptions) {\n\t\tif(isWBox(box)){\n\t\t\t// never try to put anything in this box\n\t\t\tbox = box.map(x => x)\n\t\t}\n\t\tsuper(box, options)\n\t}\n\n\tprivate get element(): HTMLElement {\n\t\treturn this.options.element ?? (this.node instanceof HTMLElement ? this.node : null) ?? document.body\n\t}\n\n\tprotected getRawDomValue(): string {\n\t\treturn (this.options.element ?? document.body).style.getPropertyValue(this.options.name)\n\t}\n\n\tprotected updateDomValue(value: T): void {\n\t\tconst name = this.options.name\n\n\t\tif(value === null || value === undefined || value === \"\" || (typeof(value) !== \"string\" && typeof(value) !== \"number\")){\n\t\t\tthis.element.style.removeProperty(name)\n\t\t} else {\n\t\t\tthis.element.style.setProperty(name, value + \"\")\n\t\t}\n\t}\n\n\tprotected parseDomValue(): T {\n\t\tthrow new Error(\"There's no way to move value of CSS variable into box, because it could break types: CSS variable is always string, but box may be of different type. If you need to do that - do that explicitly by using element.style.getPropertyValue(name)\")\n\t}\n\n}\n\n/** Creates a writable box that is linked to CSS variable on a particular element.\n * Keep in mind that name should start with --\n * If value of the variable is non-empty string, or number - the variable will take this value;\n * otherwise, variable will be deleted. */\nexport function cssVariableBox<T>(node: Node, name: string, value: T, options?: Omit<CssVariableBoxOptions, \"type\" | \"name\">): WBox<T> {\n\tconst result = box(value)\n\tbindBoxToDomValue(node, result, {...(options || {}), name, type: \"cssVariable\"})\n\treturn result\n}","export class CheckRepeater {\n\n\tprivate startTime = 0\n\tprivate isRunning = false\n\n\tconstructor(private readonly timeoutMs: number, private readonly check: () => boolean) {}\n\n\tprivate runCheckAndRequest(): void {\n\t\tconst fn = () => {\n\t\t\ttry {\n\t\t\t\tif(this.check() || Date.now() - this.startTime > this.timeoutMs){\n\t\t\t\t\tthis.isRunning = false\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t} catch(e){\n\t\t\t\tthis.isRunning = false\n\t\t\t\tthrow e\n\t\t\t}\n\t\t\trequestFrame(fn)\n\t\t}\n\n\t\tthis.isRunning = true\n\t\tfn()\n\t}\n\n\trun(): void {\n\t\tthis.startTime = Date.now()\n\t\tif(!this.isRunning){\n\t\t\tthis.runCheckAndRequest()\n\t\t}\n\t}\n\n}\n\nconst requestFrame: (callback: () => void) => unknown = requestAnimationFrame as any ?? ((callback: () => void) => setTimeout(callback, 1000 / 60) as unknown)","import {CheckRepeater} from \"src/parts/check_repeater\"\n\nclass HistoryUpdateWatcher {\n\n\tprivate readonly handlers = new Set<() => void>()\n\tprivate lastKnownLocation = \"\"\n\tprivate isPatched = false\n\tprivate repeater = new CheckRepeater(1000, this.tryCallHandlers.bind(this))\n\n\tsubscribe(handler: () => void) {\n\t\tthis.handlers.add(handler)\n\t\tif(!this.isPatched){\n\t\t\tthis.isPatched = true\n\t\t\tthis.patch()\n\t\t}\n\t}\n\n\tunsubscribe(handler: () => void): void {\n\t\tthis.handlers.delete(handler)\n\t}\n\n\tprivate patch(): void {\n\t\tthis.lastKnownLocation = window.location + \"\"\n\n\t\tconst proto = History.prototype as any\n\n\t\tfor(const key in proto){\n\t\t\tlet original: any\n\t\t\ttry {\n\t\t\t\toriginal = proto[key]\n\t\t\t} catch(e){\n\t\t\t\t// could happen in case of props\n\t\t\t\t// thing is, methods could also be defined as props\n\t\t\t\t// so I don't want to miss anything\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif(typeof(original) !== \"function\"){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\t\tconst self = this\n\t\t\tconst patched = function(this: any, ...args: any[]): any {\n\t\t\t\tconst result = original.apply(this, args)\n\t\t\t\t/* this is kinda bad\n\t\t\t\t* but some of the history methods don't change location synchronously,\n\t\t\t\t* and there's no way to get it anywhere else.\n\t\t\t\t*\n\t\t\t\t* I was thinking about maintaining history stack by myself,\n\t\t\t\t* but that won't cover all of the cases (like some of the history added before patch) */\n\t\t\t\tself.repeater.run()\n\t\t\t\treturn result\n\t\t\t}\n\t\t\tproto[key] = patched\n\t\t}\n\t}\n\n\tprivate tryCallHandlers(): boolean {\n\t\tconst currentLocation = window.location + \"\"\n\t\tif(currentLocation === this.lastKnownLocation){\n\t\t\treturn false\n\t\t}\n\t\tthis.lastKnownLocation = currentLocation\n\t\tfor(const handler of this.handlers){\n\t\t\thandler()\n\t\t}\n\t\treturn true\n\t}\n\n}\n\nexport const historyUpdateWatcher = new HistoryUpdateWatcher()","import {WBox, box} from \"@nartallax/cardboard\"\nimport {DomBoxOptionsBase, bindBoxToDomValue} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {DomValueLink} from \"src/box_dom_binding/dom_value_link\"\nimport {historyUpdateWatcher} from \"src/monkeypatching/history_monkeypatching\"\n\nexport type UrlOptions = DomBoxOptionsBase & {\n\treadonly type: \"url\"\n\treadonly path?: boolean\n\treadonly search?: boolean\n\treadonly hash?: boolean\n\treadonly history?: \"replace\" | \"push\"\n}\n\nexport class UrlBoxDomLink extends DomValueLink<string, string, UrlOptions> {\n\n\tprotected getRawDomValue(): string {\n\t\treturn window.location + \"\"\n\t}\n\n\tprotected parseDomValue(raw: string): string {\n\t\tconst url = new URL(raw)\n\n\t\tlet result = \"\"\n\t\tif(this.options.path){\n\t\t\tresult += url.pathname\n\t\t}\n\t\tif(this.options.search){\n\t\t\tresult += url.search\n\t\t}\n\t\tif(this.options.hash){\n\t\t\tresult += url.hash\n\t\t}\n\n\t\treturn result\n\t}\n\n\tprotected updateDomValue(value: string): void {\n\t\tconst url = new URL(value, window.location + \"\")\n\n\t\t// we won't overwrite existing search/path if this is not explicitly enabled\n\t\t// even if user puts something that resembles search/path\n\t\tif(!this.options.search){\n\t\t\turl.search = window.location.search\n\t\t}\n\t\tif(!this.options.path){\n\t\t\turl.pathname = window.location.pathname\n\t\t}\n\t\tif(!this.options.hash){\n\t\t\turl.hash = window.location.hash\n\t\t}\n\n\t\tif(url + \"\" === window.location + \"\"){\n\t\t\treturn\n\t\t}\n\n\t\tif((this.options.history ?? \"replace\") === \"replace\"){\n\t\t\twindow.history.replaceState(null, \"\", url)\n\t\t} else {\n\t\t\twindow.history.pushState(null, \"\", url)\n\t\t}\n\t}\n\n\tprotected subscribeToDomValue(): void {\n\t\tconst handler = this.updateBoxValueBound\n\n\t\thistoryUpdateWatcher.subscribe(handler)\n\n\t\tif(this.options.hash){\n\t\t\t// setting url through window.location.hash = \"#123\" won't trigger history api\n\t\t\twindow.addEventListener(\"hashchange\", handler)\n\t\t}\n\t}\n\n\tprotected unsubscribeFromDomValue(): void {\n\t\tconst handler = this.updateBoxValueBound\n\n\t\thistoryUpdateWatcher.unsubscribe(handler)\n\n\t\tif(this.options.hash){\n\t\t\twindow.removeEventListener(\"hashchange\", handler)\n\t\t}\n\t}\n\n}\n\n/** Create a writable box linked to some part of page URL.\n * History API is used to manipulate the URL.\n *\n * If some part of the URL is present in the page, but not enabled in the box options - it will stay as-is when URL is updated. */\nexport function urlBox(node: Node, options: Omit<UrlOptions, \"type\" | \"preferOriginalValue\">): WBox<string> {\n\tconst result = box(\"\")\n\tbindBoxToDomValue(node, result, {...options, type: \"url\"})\n\treturn result\n}","import {BoxChangeHandler, BoxUpdateMeta, RBox} from \"@nartallax/cardboard\"\nimport {DomBoxOptionsBase} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {DomValueLink} from \"src/box_dom_binding/dom_value_link\"\n\nconst noValue = Symbol(\"cardboard-dom-binder-no-value\")\ntype NoValue = typeof noValue\n\ninterface WatchedBox<T = unknown>{\n\treadonly box: RBox<T>\n\thandler: BoxChangeHandler<T>\n\treadonly handlerWrap: BoxChangeHandler<T>\n\tlastKnownValue: T | NoValue\n}\n\n// for tests\nexport let mismatchedNodesErrorCount = 0\n\n/** Binder is a way to access various lifecycle events of DOM nodes\n * Through that it can help with subscription to various stuff like boxes */\nexport class Binder {\n\tprivate beforeInsertedHandlers: null | (() => void)[] = null\n\tprivate afterInsertedHandlers: null | (() => void)[] = null\n\tprivate removedHandlers: null | (() => void)[] = null\n\tprivate watchedBoxes: null | WatchedBox[] = null\n\t// those are here only for unsubscribing\n\tprivate domValueLinks: null | DomValueLink<unknown>[] = null\n\tisInDom: boolean\n\tprivate isExpectingInsertion = false\n\n\tconstructor(readonly node: Node) {\n\t\tthis.isInDom = node.isConnected\n\t}\n\n\tonInserted(handler: () => void, before?: boolean): void {\n\t\tif(before){\n\t\t\t(this.beforeInsertedHandlers ||= []).push(handler)\n\t\t} else {\n\t\t\t(this.afterInsertedHandlers ||= []).push(handler)\n\t\t}\n\t}\n\n\tonRemoved(handler: () => void): void {\n\t\t(this.removedHandlers ||= []).push(handler)\n\t}\n\n\toffInserted(handler: () => void, before?: boolean): void {\n\t\tif(before){\n\t\t\tthis.beforeInsertedHandlers = dropItemFromArray(this.beforeInsertedHandlers, handler)\n\t\t} else {\n\t\t\tthis.afterInsertedHandlers = dropItemFromArray(this.afterInsertedHandlers, handler)\n\t\t}\n\t}\n\n\toffRemoved(handler: () => void): void {\n\t\tthis.removedHandlers = dropItemFromArray(this.removedHandlers, handler)\n\t}\n\n\tnotifyBeforeInserted(): void {\n\t\tif(this.isInDom){\n\t\t\treturn\n\t\t}\n\t\t// console.log(\"beforeInserted\", this.node)\n\t\tthis.isInDom = true\n\t\tthis.isExpectingInsertion = true\n\t\tconst boxes = this.watchedBoxes\n\t\tif(boxes){\n\t\t\tfor(let i = 0; i < boxes.length; i++){\n\t\t\t\tconst boxWrap = boxes[i]!\n\t\t\t\tconst value = boxWrap.box.get()\n\t\t\t\tboxWrap.box.subscribe(boxWrap.handlerWrap)\n\t\t\t\tif(boxWrap.lastKnownValue !== value){\n\t\t\t\t\tthis.invokeBoxHandler(value, boxWrap, undefined)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfireAll(this.beforeInsertedHandlers)\n\t}\n\n\tnotifyAfterInserted(): void {\n\t\tif(!this.isExpectingInsertion){\n\t\t\treturn\n\t\t}\n\t\tthis.isExpectingInsertion = false\n\t\t// console.log(\"afterinserted\", this.node)\n\t\tfireAll(this.afterInsertedHandlers)\n\t}\n\n\tnotifyAfterRemoved(): void {\n\t\tif(!this.isInDom){\n\t\t\treturn\n\t\t}\n\t\tthis.isInDom = false\n\t\tthis.isExpectingInsertion = false // in case of some weird tree manipulations\n\t\t// console.log(\"removed\", this.node)\n\t\tconst boxes = this.watchedBoxes\n\t\tif(boxes){\n\t\t\tfor(let i = 0; i < boxes.length; i++){\n\t\t\t\tconst box = boxes[i]!\n\t\t\t\tbox.box.unsubscribe(box.handlerWrap)\n\t\t\t}\n\t\t}\n\n\t\tfireAll(this.removedHandlers)\n\t}\n\n\tnotifyAttachmentState(shouldBeAttached: boolean): void {\n\t\tif(this.isInDom !== shouldBeAttached){\n\t\t\tconsole.error(`A node was ${shouldBeAttached ? \"inserted into\" : \"removed from\"} DOM tree using unexpected method or property. This could result in memory leaks and/or inconsistent state. Please investigate and report an error.`, this.node)\n\t\t\tmismatchedNodesErrorCount++\n\n\t\t\t// this really should be done synchronously\n\t\t\tif(shouldBeAttached){\n\t\t\t\tthis.notifyBeforeInserted()\n\t\t\t} else {\n\t\t\t\tthis.notifyAfterRemoved()\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate invokeBoxHandler<T>(value: T, box: WatchedBox<T>, meta: BoxUpdateMeta | undefined): void {\n\t\tbox.handler(value, box.box, meta)\n\t\tbox.lastKnownValue = value\n\t}\n\n\tprivate subscribe<T>(box: RBox<T>, handler: BoxChangeHandler<T>, assumeRunning?: boolean): WatchedBox<T> {\n\t\tconst boxWrap: WatchedBox<T> = {\n\t\t\tbox,\n\t\t\thandler,\n\t\t\tlastKnownValue: assumeRunning ? box.get() : noValue,\n\t\t\t// wonder if creating a handler wrapper is more performant than storing lastKnownValue and handler in map\n\t\t\thandlerWrap: (v, _, meta) => this.invokeBoxHandler(v, boxWrap, meta)\n\t\t}\n\t\tif(this.isInDom){\n\t\t\tboxWrap.box.subscribe(boxWrap.handlerWrap)\n\t\t}\n\t\t(this.watchedBoxes ||= []).push(boxWrap as WatchedBox)\n\t\treturn boxWrap\n\t}\n\n\twatch<T>(box: RBox<T>, handler: BoxChangeHandler<T>, assumeRunning?: boolean): void {\n\t\tthis.subscribe(box, handler, assumeRunning)\n\t}\n\n\twatchAndRun<T>(box: RBox<T>, handler: BoxChangeHandler<T>): void {\n\t\tconst boxWrap = this.subscribe(box, handler)\n\t\tthis.invokeBoxHandler(box.get(), boxWrap, undefined)\n\t}\n\n\tunwatch<T>(handler: (value: T) => void): void {\n\t\tconst filteredBoxes = this.watchedBoxes?.filter(boxWrap => {\n\t\t\tif(boxWrap.handler === handler){\n\t\t\t\tboxWrap.box.unsubscribe(boxWrap.handlerWrap)\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t})\n\t\tthis.watchedBoxes = !filteredBoxes || filteredBoxes.length < 0 ? null : filteredBoxes\n\t}\n\n\taddDomValueLink<T>(link: DomValueLink<T>): void {\n\t\t(this.domValueLinks ||= []).push(link as DomValueLink<unknown>)\n\t\tlink.bind(this)\n\t}\n\n\tremoveDomValueLink(options: DomBoxOptionsBase): void {\n\t\tif(!this.domValueLinks){\n\t\t\treturn\n\t\t}\n\n\t\tconst links = this.domValueLinks.filter(link => {\n\t\t\tif(link.options === options){\n\t\t\t\tlink.unbind(this)\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t})\n\n\t\tthis.domValueLinks = links.length === 0 ? null : links\n\t}\n\n}\n\n// yeah, not very efficient\n// though in real applications removal of something from watch list is not a frequent operation\n// so, whatever\nfunction dropItemFromArray<T>(arr: T[] | null, item: T): T[] | null {\n\tif(!arr || (arr.length === 1 && arr[0] === item)){\n\t\treturn null\n\t}\n\tconst result = [] as T[]\n\tfor(let i = 0; i < arr.length; i++){\n\t\tconst el = arr[i]!\n\t\tif(el !== item){\n\t\t\tresult.push(el)\n\t\t}\n\t}\n\treturn result\n}\n\nfunction fireAll(handlers: (() => void)[] | null): void {\n\tif(!handlers){\n\t\treturn\n\t}\n\tfor(let i = 0; i < handlers.length; i++){\n\t\thandlers[i]!()\n\t}\n}","/** Monkeypatch DOM methods and properties to synchronously call handlers on insert and remove\n * Exists because MutationObserver is asynchronous, and there's no hope for synchronous version in sight\n *\n * afterRemoveOrInsert is like that because insertion can remove node from DOM if inserting into detached node\n *\n * beforeInsert and afterRemoveOrInsert are called when node potentially could be inserted or removed,\n * and do not guarantee that they actually are.\n * In some cases they'd be wrong; additional checking is required.\n * (also weird stuff could happen in replace-methods and such)\n *\n * Will call handlers only for top-level inserted/removed nodes (i.e. won't iterate their children to call handlers)\n * Won't call beforeInsert in case of nodes created on-fly when HTML text is changed\n * (by innerHTML, outerHTML, setHTML(), and other methods that accept strings in place of nodes) */\nexport function monkeyPatchDomForInsertRemove(beforeInsert: (node: Node, parent: Node) => void, afterRemoveOrInsert: (node: Node) => void): void {\n\n\tknownPatchedFunctions = new Set()\n\n\tconst beforeInsertIfNode = (x: unknown, parent: Node) => {\n\t\tif(x instanceof Node){\n\t\t\tbeforeInsert(x, parent)\n\t\t}\n\t}\n\n\tconst onNodeListAttaching = (original: any) => function(this: Node, ...args: unknown[]): void {\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tbeforeInsertIfNode(args[i]!, this)\n\t\t}\n\t\tconst result = original.apply(this, args)\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tconst child = args[i]\n\t\t\tif(child instanceof Node){\n\t\t\t\tafterRemoveOrInsert(child)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tconst onSingleNodeInsert = (original: any) => function(this: Node, ...args: any[]): any {\n\t\tbeforeInsert(args[0]!, this)\n\t\tconst result = original.apply(this, args)\n\t\tafterRemoveOrInsert(args[0]!)\n\t\treturn result\n\t}\n\n\tmonkeyPatchMethod(\"insertBefore\", onSingleNodeInsert)\n\tmonkeyPatchMethod(\"after\", onSingleNodeInsert)\n\tmonkeyPatchMethod(\"before\", onSingleNodeInsert)\n\tmonkeyPatchMethod(\"appendChild\", onSingleNodeInsert)\n\tmonkeyPatchMethod(\"append\", onNodeListAttaching)\n\tmonkeyPatchMethod(\"prepend\", onNodeListAttaching)\n\tmonkeyPatchMethod(\"insertAdjacentElement\", original => function(this: Node, ...args: any[]) {\n\t\tbeforeInsert(args[1]!, this)\n\t\tconst result = original.apply(this, args)\n\t\tafterRemoveOrInsert(args[1]!)\n\t\treturn result\n\t})\n\t// there's also insertAdjacentText and insertAdjacentHTML\n\t// but for purposes of this library I don't need to do anything about them\n\n\tmonkeyPatchMethodAfter(\"removeChild\", afterRemoveOrInsert)\n\tmonkeyPatchMethodAfter(\"remove\", function(this: Element) {\n\t\tafterRemoveOrInsert(this)\n\t})\n\n\tmonkeyPatchMethod(\"replaceChild\", original => function(this: Node, ...args: Node[]) {\n\t\tbeforeInsert(args[0]!, this)\n\t\tconst result = original.apply(this, args)\n\t\tafterRemoveOrInsert(args[1]!)\n\t\tafterRemoveOrInsert(args[0]!)\n\t\treturn result\n\t})\n\n\tmonkeyPatchMethod(\"replaceChildren\", original => function(this: Element, ...args: any[]): any {\n\t\tconst oldChildren = copyArrayLike(this.childNodes)\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tbeforeInsertIfNode(args[i], this)\n\t\t}\n\t\tconst result = original.apply(this, args)\n\t\tfor(let i = 0; i < oldChildren.length; i++){\n\t\t\tafterRemoveOrInsert(oldChildren[i]!)\n\t\t}\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tconst arg = args[i]!\n\t\t\tif(arg instanceof Node){\n\t\t\t\tafterRemoveOrInsert(arg)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t})\n\n\tmonkeyPatchMethod(\"replaceWith\", original => function(this: Element, ...args: any[]): any {\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tbeforeInsertIfNode(args[i], this)\n\t\t}\n\t\tconst result = original.apply(this, args)\n\t\tafterRemoveOrInsert(this)\n\t\tfor(let i = 0; i < args.length; i++){\n\t\t\tconst arg = args[i]!\n\t\t\tif(arg instanceof Node){\n\t\t\t\tafterRemoveOrInsert(arg)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t})\n\n\tmonkeyPatchMethod(\"setHTML\", original => function(this: Element, ...args: any[]): any {\n\t\tconst oldChildren = copyArrayLike(this.childNodes)\n\t\tconst result = original.apply(this, args)\n\t\tfor(let i = 0; i < oldChildren.length; i++){\n\t\t\tafterRemoveOrInsert(oldChildren[i]!)\n\t\t}\n\t\treturn result\n\t})\n\n\tmonkeyPatchSetter(\"innerHTML\", original => function(this: Element, ...args: any[]) {\n\t\tconst oldChildren = copyArrayLike(this.childNodes)\n\t\t// here we can't call beforeInsert, because there are no elements before insert, they are created in process\n\t\t// but for use-case of this library it's fine\n\t\t// it will never need freshly-created elements anyway, because no handles can exist for them yet\n\t\t// (the same goes for other html-changing methods and props)\n\t\tconst result = original.apply(this, args as any)\n\t\tfor(let i = 0; i < oldChildren.length; i++){\n\t\t\tafterRemoveOrInsert(oldChildren[i]!)\n\t\t}\n\t\treturn result\n\t})\n\n\tmonkeyPatchSetter(\"outerHTML\", original => function(this: Element, ...args: any[]) {\n\t\tconst result = original.apply(this, args as any)\n\t\tafterRemoveOrInsert(this)\n\t\treturn result\n\t})\n\n\tmonkeyPatchSetter(\"textContent\", original => function(this: Element, ...args: any[]) {\n\t\tconst oldChildren = copyArrayLike(this.childNodes)\n\t\tconst result = original.apply(this, args as any)\n\t\tfor(let i = 0; i < oldChildren.length; i++){\n\t\t\tafterRemoveOrInsert(oldChildren[i]!)\n\t\t}\n\t\treturn result\n\t})\n\n\tknownPatchedFunctions = null\n\n}\n\n/** Those are all classes we potentially may want to patch\n * this file is organized that way because I'm afraid that some browsers will define some methods/properties in non-standard way\n * for now it's mostly in the past, but a nice robustness touch anyway */\nconst patchableClasses = [Node, Element, HTMLElement, SVGElement]\n\nlet knownPatchedFunctions: Set<any> | null = null\n\nfunction copyArrayLike<T>(src: ArrayLike<T>): T[] {\n\tconst result: T[] = new Array(src.length)\n\tfor(let i = 0; i < src.length; i++){\n\t\tresult[i] = src[i]!\n\t}\n\treturn result\n}\n\nfunction monkeyPatchMethodAfter(name: string, patch: (...args: any) => void): void {\n\tmonkeyPatchMethod(name, original => function(this: any, ...args: any[]): any {\n\t\tconst result = original.apply(this, args)\n\t\tpatch.apply(this, args as any)\n\t\treturn result\n\t})\n}\n\nfunction monkeyPatchMethod(\n\tname: string, makePatch: (original: any) => any\n): void {\n\tfor(const cls of patchableClasses){\n\t\tconst original = (cls.prototype as any)[name]\n\t\tif(typeof(original) !== \"function\" || knownPatchedFunctions?.has(original)){\n\t\t\tcontinue\n\t\t}\n\t\ttry {\n\t\t\tconst patchedMethod = makePatch(original)\n\t\t\tknownPatchedFunctions?.add(patchedMethod);\n\t\t\t// for testing purposes\n\t\t\t(patchedMethod as any).originalNonPatchedMethod = original;\n\t\t\t(cls.prototype as any)[name] = patchedMethod\n\t\t} catch(e){\n\t\t\tconsole.error(\"Failed to monkeypatch \" + name + \" method on \" + cls.name + \": \" + e)\n\t\t}\n\t}\n\n}\n\nfunction monkeyPatchSetter(name: string, makePatch: (original: any) => any): void {\n\tfor(const cls of patchableClasses){\n\t\ttry {\n\t\t\tconst originalProp = Object.getOwnPropertyDescriptor(cls.prototype, name)\n\t\t\tif(!originalProp || typeof(originalProp.set) !== \"function\" || knownPatchedFunctions?.has(originalProp.set)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst patchedSetter = makePatch(originalProp.set)\n\t\t\tknownPatchedFunctions?.add(patchedSetter)\n\t\t\tObject.defineProperty(cls.prototype, name, {\n\t\t\t\t...originalProp,\n\t\t\t\tset: patchedSetter\n\t\t\t})\n\t\t} catch(e){\n\t\t\tconsole.error(\"Failed to monkeypatch \" + name + \" property on \" + cls.name + \": \" + e)\n\t\t}\n\t}\n}","/** This class holds expected tree structure after all insert-handlers are invoked\n * We can't use just DOM tree for this purpose, because we need to run handlers before it is modified\n * And sometimes it leads to removal of children, and it can get complicated, resulting in some handlers not being invoked */\nexport class ProjectedTreeState {\n\n\tprivate readonly nodesInTree: Set<Node> = new Set()\n\tprivate ongoingInsertOperationsCount = 0\n\n\tstartInsertOperation(node: Node): void {\n\t\tthis.ongoingInsertOperationsCount++\n\t\tthis.markNodeInserted(node)\n\t}\n\n\tendInsertOperation(): void {\n\t\tthis.ongoingInsertOperationsCount--\n\t\tif(this.ongoingInsertOperationsCount === 0){\n\t\t\tthis.nodesInTree.clear()\n\t\t}\n\t}\n\n\tmarkNodeInserted(node: Node): void {\n\t\t// no early-exit here\n\t\t// previous operation could remove part of subtree, so we need to put it back\n\t\tthis.nodesInTree.add(node)\n\t\tfor(let i = 0; i < node.childNodes.length; i++){\n\t\t\tthis.markNodeInserted(node.childNodes[i]!)\n\t\t}\n\t}\n\n\tmarkNodeRemoved(node: Node): void {\n\t\t// again, no early-exit here, for same reason as insert\n\t\tthis.nodesInTree.delete(node)\n\n\t\tfor(let i = 0; i < node.childNodes.length; i++){\n\t\t\tthis.markNodeRemoved(node.childNodes[i]!)\n\t\t}\n\t}\n\n\tisInserted(node: Node): boolean {\n\t\treturn node.isConnected || this.nodesInTree.has(node)\n\t}\n\n}","export type Maybe<E> = E | null | undefined\nexport type MaybeArray<E> = E | readonly E[]\n\n// why is this not in default typings...?\nexport function isArray<T>(a: MaybeArray<T>): a is readonly T[] {\n\treturn Array.isArray(a)\n}","import {BoxChangeHandler, BoxUpdateMeta, MRBox, RBox, Unboxed, constBoxWrap, isConstBox, isRBox, unbox} from \"@nartallax/cardboard\"\nimport {ClassName, bindClassname} from \"src/functions/classname\"\nimport {Maybe, MaybeArray, isArray} from \"src/functions/utils\"\nimport {getBinder} from \"src/node_binding\"\nimport {Binder} from \"src/parts/binder\"\n\ntype NoLeadingOn<T extends `on${string}`> = T extends `on${infer X}` ? Uncapitalize<X> : never\ntype WithLeadingOn<T extends string> = `on${Capitalize<T>}`\ntype EventHandlers<ThisType = unknown> = {\n\treadonly [k in WithLeadingOn<keyof GlobalEventHandlersEventMap>]?: (this: ThisType, evt: GlobalEventHandlersEventMap[NoLeadingOn<k>]) => void\n}\n\nexport type UnboxedTuple<D> = D extends readonly [infer X, ...infer Rest]\n\t? readonly [Unboxed<X>, ...UnboxedTuple<Rest>]\n\t: D extends []\n\t\t? []\n\t\t: D extends readonly MRBox<unknown>[]\n\t\t\t? readonly Unboxed<D[number]>[]\n\t\t\t: never\n\nexport function removeOnPrefix<T extends WithLeadingOn<keyof GlobalEventHandlersEventMap>>(x: T): NoLeadingOn<T> {\n\treturn x.charAt(2).toLowerCase() + x.substring(3) as NoLeadingOn<T>\n}\n\n\ntype CustomEventHandlers<ThisType = unknown> = {\n\treadonly beforeInserted?: (element: ThisType) => void\n\treadonly afterInserted?: (element: ThisType) => void\n\treadonly onRemoved?: (element: ThisType) => void\n}\n\ntype Attributes = {\n\treadonly [attrName: string]: MRBox<string | number | boolean | undefined | null>\n}\n\nexport interface TagDescription<K extends string = string, ThisType = unknown> extends EventHandlers<ThisType>, CustomEventHandlers<ThisType>{\n\treadonly tag?: K\n\treadonly class?: ClassName\n\treadonly attrs?: Attributes\n}\n\ntype NonBoxedSingleChildArrayElement<E> = Maybe<E | string | number | boolean>\nexport type ChildArray<E> = readonly MRBox<MaybeArray<NonBoxedSingleChildArrayElement<E>>>[]\n\nexport function resolveTagCreationArgs<K, E>(a?: K | ChildArray<E>, b?: ChildArray<E>): [K, ChildArray<E> | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a)){\n\t\treturn [{} as K, a]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nexport function populateTag<K extends string, T, E extends Element>(tagBase: Element, description: TagDescription<K, T>, children: ChildArray<E> | undefined): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(\"class\" in description){\n\t\tbinder = bindClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\tif(description.attrs){\n\t\tfor(const k in description.attrs){\n\t\t\tbinder = watchAndRun(binder, tagBase, description.attrs[k]!, v => {\n\t\t\t\tsetAttribute(tagBase, k, v)\n\t\t\t})\n\t\t}\n\t}\n\n\tfor(const k in description){\n\t\tif(k.startsWith(\"on\")){\n\t\t\t// I don't want to construct elaborate solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst handler = description[k as keyof EventHandlers] as any\n\t\t\tif(k === \"beforeInserted\"){\n\t\t\t\t(binder ||= getBinder(tagBase)).onInserted(handler, true)\n\t\t\t} else if(k === \"afterInserted\"){\n\t\t\t\t(binder ||= getBinder(tagBase)).onInserted(handler, false)\n\t\t\t} else if(k === \"onRemoved\"){\n\t\t\t\t(binder ||= getBinder(tagBase)).onRemoved(handler)\n\t\t\t} else {\n\t\t\t\tconst evtName = removeOnPrefix(k as WithLeadingOn<keyof GlobalEventHandlersEventMap>)\n\t\t\t\ttagBase.addEventListener(evtName, handler, {passive: true, capture: false})\n\t\t\t}\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst updateFn = (_: any, box: RBox<MaybeArray<NonBoxedSingleChildArrayElement<E>>> | undefined, meta: BoxUpdateMeta | undefined) => updateChildren<E>(tagBase, children, box, meta)\n\n\t\tfor(const child of children){\n\t\t\tif(isRBox(child)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch(child, updateFn, true)\n\t\t\t}\n\t\t}\n\t\tupdateFn(null, undefined, undefined)\n\t}\n\n\treturn binder\n}\n\n// function findChildStartIndex<E>(children: ChildArray<E>, updatedBox: RBox<MaybeArray<NonBoxedSingleChildArrayElement<E>>>): number {\n// \tlet index = 0\n// \tfor(let i = 0; i < children.length; i++){\n// \t\tconst childBox = children[i]!\n// \t\tif(childBox === updatedBox){\n// \t\t\treturn index\n// \t\t}\n// \t\tconst child = unbox(children[i]!)\n// \t\tif(isArray(child)){\n// \t\t\tindex += child.length\n// \t\t} else if(!isEmptyChild(child)){\n// \t\t\tindex++\n// \t\t}\n// \t}\n\n// \tthrow new Error(\"The child box is not element of child array\")\n// }\n\nfunction updateChildren<E extends Element>(parent: Node, children: ChildArray<E>, updatedBox: RBox<MaybeArray<NonBoxedSingleChildArrayElement<E>>> | undefined, meta: BoxUpdateMeta | undefined): void {\n\tif(updatedBox){\n\t\tswitch(meta?.type){\n\t\t\t// we could go on, but other optimizations are quite complex (and more rare)\n\t\t\t// that is, if there will be good cases - I'll add them, but now it's not worth it\n\t\t\tcase \"array_item_update\":{\n\t\t\t\tconst oldValue = meta.oldValue\n\t\t\t\tconst newValue = (updatedBox.get() as NonBoxedSingleChildArrayElement<E>[])[meta.index]!\n\t\t\t\t// Element and not Node here because text nodes should still be updated by parent element\n\t\t\t\tif(oldValue instanceof Element && newValue instanceof Element){\n\t\t\t\t\treturn // it's fully handled alredy\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\n\tlet index = 0\n\tfor(const wrappedChild of children){\n\t\tconst child = unbox(wrappedChild)\n\t\tif(isArray(child)){\n\t\t\tfor(let i = 0; i < child.length; i++){\n\t\t\t\tindex = updateChildAt(parent, child[i]!, index)\n\t\t\t}\n\t\t} else {\n\t\t\tindex = updateChildAt(parent, child, index)\n\t\t}\n\t}\n\n\twhile(parent.childNodes.length > index){\n\t\t// Q: why last child instead of `index`-th?\n\t\t// A: I have a feeling that it's more performant, to pop the last one\n\t\t// no confirmation though\n\t\tparent.removeChild(parent.childNodes[parent.childNodes.length - 1]!)\n\t}\n}\n\nfunction isEmptyChild<E>(child: NonBoxedSingleChildArrayElement<E>): boolean {\n\treturn child === null || child === undefined || child === true || child === false\n}\n\nfunction updateChildAt<E extends Element>(parent: Node, child: NonBoxedSingleChildArrayElement<E>, index: number): number {\n\tif(isEmptyChild(child)){\n\t\treturn index\n\t}\n\n\tlet childNode: Node\n\tif(child instanceof Node){\n\t\tchildNode = child\n\t} else {\n\t\tconst childText = child + \"\"\n\t\tconst existingChildNode = parent.childNodes[index]\n\t\tif(existingChildNode instanceof Text){\n\t\t\texistingChildNode.textContent = childText\n\t\t\treturn index + 1\n\t\t}\n\t\tchildNode = document.createTextNode(childText)\n\t}\n\n\t// why do I have to cast this...? TS is weird here\n\tif(parent.childNodes[index] as Node | undefined === childNode){\n\t\treturn index + 1\n\t}\n\tif(parent.childNodes.length <= index){\n\t\tparent.appendChild(childNode)\n\t} else {\n\t\tparent.insertBefore(childNode, parent.childNodes[index]!)\n\t}\n\treturn index + 1\n}\n\nfunction setAttribute(tagBase: Element, attrName: string, value: Attributes[string]): void {\n\tif(value === false || value === undefined){\n\t\ttagBase.removeAttribute(attrName)\n\t} else if(value === true){\n\t\ttagBase.setAttribute(attrName, attrName)\n\t} else {\n\t\ttagBase.setAttribute(attrName, value + \"\")\n\t}\n}\n\nexport interface BoxHandlerBindingOptions {\n\treadonly dontCallImmediately?: boolean\n}\n\nexport function bindBoxWithHandler<T>(el: Node, box: MRBox<T>, handler: (value: T) => void, opts?: BoxHandlerBindingOptions): void {\n\t(opts?.dontCallImmediately ? watch : watchAndRun)(null, el, box, handler)\n}\n\nexport function unbindBoxWithHandler<T>(el: Node, handler: (value: T) => void): void {\n\tgetBinder(el).unwatch(handler)\n}\n\nfunction watch<T>(binder: Binder | null, node: Node, value: MRBox<T>, handler: (value: T) => void): Binder | null {\n\tif(!isRBox(value) || isConstBox(value)){\n\t\treturn binder\n\t}\n\n\t(binder ||= getBinder(node)).watch(value, handler)\n\treturn binder\n}\n\n// watchAndRun cannot be substituted with just doing the actions and calling watch() with same box and node\n// because watchAndRun will also notify binder about last used value\n// this helps to avoid some weird situations and double-running of the same code\nexport function watchAndRun<T>(binder: Binder | null, node: Node, value: MRBox<T>, handler: BoxChangeHandler<T>): Binder | null {\n\tif(!isRBox(value) || isConstBox(value)){\n\t\thandler(unbox(value), constBoxWrap(value), undefined)\n\t\treturn binder\n\t}\n\n\t(binder ||= getBinder(node)).watchAndRun(value, handler)\n\treturn binder\n}\n\ntype OnMountOptions = {\n\t/** If true, will invoke handler before node is in DOM, not after\n\t * DOM manipulations should be avoided if this option is enabled,\n\t * because it may lead to unexpected behaviour */\n\treadonly beforeInserted?: boolean\n\t/** What to do if the node is already in DOM at the time of `onMount()` call?\n\t * \"throw\" (default) - throw an error. Because most of the time both calling or not calling the handler is unexpected.\n\t * \"nothing\" - don't call the handler\n\t * \"call\" - call the handler */\n\treadonly ifInDom?: \"throw\" | \"nothing\" | \"call\"\n}\n\n/** This function will attach handler to an element, to be called when element is inserted into the DOM.\n * Handler can then return another function, which will be executed when element is removed from the DOM. */\nexport function onMount(el: Element, handler: (() => void) | (() => () => void), options?: OnMountOptions): void {\n\tconst binder = getBinder(el)\n\n\tconst onInserted = () => {\n\t\tconst result = handler()\n\t\tif(typeof(result) === \"function\"){\n\t\t\tconst removeHandler = () => {\n\t\t\t\ttry {\n\t\t\t\t\tresult()\n\t\t\t\t} finally {\n\t\t\t\t\tbinder.offRemoved(removeHandler)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbinder.onRemoved(removeHandler)\n\t\t}\n\t}\n\n\tif(binder.isInDom){\n\t\tswitch(options?.ifInDom ?? \"throw\"){\n\t\t\tcase \"throw\": throw new Error(\"Node is already in DOM, that's unexpected\")\n\t\t\tcase \"call\": onInserted(); break\n\t\t}\n\t}\n\tbinder.onInserted(onInserted, options?.beforeInserted)\n}","import {Binder} from \"src/parts/binder\"\nimport {MRBox, isRBox, unbox} from \"@nartallax/cardboard\"\nimport {getBinder} from \"src/node_binding\"\n\ntype MbArrayRecursive<T> = T | readonly MbArrayRecursive<T>[]\ntype ClassNamePart = MRBox<string | null | undefined> | Record<string, MRBox<boolean | undefined>>\nexport type ClassName = MbArrayRecursive<ClassNamePart>\n\nfunction flattenRecursive<T>(value: MbArrayRecursive<T>, result: T[] = []): T[] {\n\tif(Array.isArray(value)){\n\t\tfor(const item of value){\n\t\t\tflattenRecursive(item, result)\n\t\t}\n\t} else {\n\t\tresult.push(value as T)\n\t}\n\treturn result\n}\n\n/** Assemble classname from parts, subscribing to all the boxes, and call the callback */\nexport function bindClassname(binder: Binder | null, node: Node, className: ClassName, callback: (className: string) => void): Binder | null {\n\n\tconst arr = flattenRecursive(className)\n\tfor(const part of arr){\n\t\tif(isRBox(part)){\n\t\t\t(binder ||= getBinder(node)).watch(part, makeClassnameAndCallTheCallback, true)\n\t\t} else if(part && typeof(part) === \"object\"){\n\t\t\tfor(const key in part){\n\t\t\t\tconst bool = part[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback, true)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const part of arr){\n\t\t\tif(part && typeof(part) === \"object\" && !isRBox(part)){\n\t\t\t\tfor(const classname in part){\n\t\t\t\t\tif(unbox(part[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(part)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\treturn binder\n}","import {Binder} from \"src/parts/binder\"\nimport {AsyncMutationWatcher} from \"src/parts/async_mutation_watcher\"\nimport {SyncMutationWatcher} from \"src/parts/sync_mutation_watcher\"\nimport {MRBox} from \"@nartallax/cardboard\"\nimport {BoxHandlerBindingOptions, bindBoxWithHandler, unbindBoxWithHandler} from \"src/functions/base_tag\"\nimport {DomBoxBindingOptions, bindBoxToDomValue, unbindBoxToDom} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {MaybeArray, isArray} from \"src/functions/utils\"\n\nconst binders = new WeakMap<Node, Binder>()\nconst asyncWatcher = new AsyncMutationWatcher(binders)\nconst syncWatcher = new SyncMutationWatcher(binders)\n\n/** This function allows to stop debug observer from working\n * Debug observer only exists to warn you about improper DOM manipulations;\n * if there are none, it's safe to turn off to reclaim some performance. */\nexport const shutdownDebugObserver = () => asyncWatcher.shutdown()\n\n/** Initialize DOM bindings.\n *\n * This function must be called before any DOM manipulations, otherwise things can go wrong.\n * It won't do harm to call it more than once, if you're uncertain if you did that already or not. */\nexport const initializeCardboardDom = async(): Promise<void> => {\n\t// this function is async for futureproofing\n\tasyncWatcher.init()\n\tsyncWatcher.init()\n\t/* Explaination about this function:\n\tv8 (and maybe other engines, untested), when calling a method, will resolve implementation first, and then arguments\n\tthis is fine 99.9% of the time, but that will lead to unexpected results if the argument is a call and it changes the method\n\tIn other words,\n\n\t\tlet button = patchAppendAndMakeButton()\n\t\tdocument.body.append(button)\n\n\twill call patched method, but\n\n\t\tdocument.body.append(patchAppendAndMakeButton())\n\n\twill call original one.\n\tTo avoid this weird effect, this init function exists. */\n}\n\nexport const getBinder = (node: Node): Binder => {\n\tif(!syncWatcher.isInitialized()){\n\t\tthrow new Error(\"Cardboard DOM is not initialized! You need to call initializeCardboardDom() first.\")\n\t}\n\tlet binder = binders.get(node)\n\tif(!binder){\n\t\tbinder = new Binder(node)\n\t\tbinders.set(node, binder)\n\t}\n\treturn binder\n}\n\n/** This function is a way to subscribe to arbitrary box without making memory leak\n * Subscriptions will only be called when the component is in the DOM\n * (with the only exception being first immediate call, which will happen regardless of mount state) */\nexport function bindBox<T>(node: Node, box: MaybeArray<MRBox<T>>, handler: (value: T) => void, opts?: BoxHandlerBindingOptions): void\n/** This function is a way to link arbitrary box to some of well-known DOM values,\n * like URL parts or local storage values\n *\n * In case there's API for receiving updates for the value and the box is wbox,\n * the box will receive updates from DOM.\n * Otherwise only the DOM value will be updated by box's value. */\nexport function bindBox<T>(node: Node, box: MaybeArray<MRBox<T>>, options: DomBoxBindingOptions<T>): void\nexport function bindBox<T>(node: Node, box: MaybeArray<MRBox<T>>, a: DomBoxBindingOptions<T> | ((value: T) => void), b?: BoxHandlerBindingOptions): void {\n\tfor(const bx of isArray(box) ? box : [box]){\n\t\tif(typeof(a) === \"function\"){\n\t\t\tbindBoxWithHandler(node, bx, a, b)\n\t\t} else {\n\t\t\tbindBoxToDomValue(node, bx, a)\n\t\t}\n\t}\n}\n\nexport function unbindBox<T>(node: Node, handler: (value: T) => void): void\nexport function unbindBox<T>(node: Node, options: DomBoxBindingOptions<T>): void\nexport function unbindBox<T>(node: Node, a: DomBoxBindingOptions<T> | ((value: T) => void)): void {\n\tif(typeof(a) === \"function\"){\n\t\tunbindBoxWithHandler(node, a)\n\t} else {\n\t\tunbindBoxToDom(node, a)\n\t}\n}","import {Binder} from \"src/parts/binder\"\n\n/** A wrap around MutationObserver\n * exists to check after monkeypatched DOM nodes\n * (we should emit error if observer's state is not consistent with monkeypatched state) */\nexport class AsyncMutationWatcher {\n\tprivate observer: MutationObserver | null = null\n\n\tconstructor(private readonly binders: WeakMap<Node, Binder>) {}\n\n\tinit(): void {\n\t\tif(!this.observer && typeof(MutationObserver) !== \"undefined\"){\n\t\t\tthis.observer = new MutationObserver(this.doWithRecords.bind(this))\n\t\t\tthis.observer.observe(document.body, {childList: true, subtree: true})\n\t\t}\n\t}\n\n\tshutdown(): void {\n\t\tif(this.observer){\n\t\t\tthis.observer.disconnect()\n\t\t\tthis.observer = null\n\t\t}\n\t}\n\n\tprivate collectEligibleNodesFromArray(nodes: Node[]): Set<Node> {\n\t\tconst result = new Set<Node>()\n\t\tfor(let i = 0; i < nodes.length; i++){\n\t\t\tthis.collectEligibleNodes(nodes[i]!, result)\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate collectEligibleNodes(node: Node, result: Set<Node>): void {\n\t\tif(this.binders.has(node)){\n\t\t\tresult.add(node)\n\t\t}\n\t\tconst children = node.childNodes\n\t\tfor(let i = 0; i < children.length; i++){\n\t\t\tthis.collectEligibleNodes(children[i]!, result)\n\t\t}\n\t}\n\n\tprivate doWithRecords(records: MutationRecord[]): void {\n\t\tconst addedNodesArr = [] as Node[]\n\t\tconst removedNodesArr = [] as Node[]\n\t\tfor(let i = 0; i < records.length; i++){\n\t\t\tconst record = records[i]!\n\t\t\tfor(let j = 0; j < record.addedNodes.length; j++){\n\t\t\t\taddedNodesArr.push(record.addedNodes[j]!)\n\t\t\t}\n\t\t\tfor(let j = 0; j < record.removedNodes.length; j++){\n\t\t\t\tremovedNodesArr.push(record.removedNodes[j]!)\n\t\t\t}\n\t\t}\n\n\t\tconst addedNodes = this.collectEligibleNodesFromArray(addedNodesArr)\n\t\tconst removedNodes = this.collectEligibleNodesFromArray(removedNodesArr)\n\n\t\tfor(const node of addedNodes){\n\t\t\tif(removedNodes.has(node)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.binders.get(node)!.notifyAttachmentState(true)\n\t\t}\n\n\t\tfor(const node of removedNodes){\n\t\t\tif(addedNodes.has(node)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.binders.get(node)!.notifyAttachmentState(false)\n\t\t}\n\t}\n}","import {Binder} from \"src/parts/binder\"\nimport {monkeyPatchDomForInsertRemove} from \"src/monkeypatching/dom_monkeypatching\"\nimport {ProjectedTreeState} from \"src/parts/projected_tree_state\"\n\nexport class SyncMutationWatcher {\n\n\tprivate isInit = false\n\tprivate readonly projectedTreeState = new ProjectedTreeState()\n\n\tconstructor(readonly binders: WeakMap<Node, Binder>) {}\n\n\tisInitialized(): boolean {\n\t\treturn this.isInit\n\t}\n\n\tinit(): void {\n\t\tif(!this.isInit){\n\t\t\tthis.isInit = true\n\t\t\tmonkeyPatchDomForInsertRemove(\n\t\t\t\tthis.beforeInserted.bind(this),\n\t\t\t\tthis.afterRemovedOrInserted.bind(this)\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate collectBinders(node: Node, result: Binder[] = []): Binder[] {\n\t\tconst binder = this.binders.get(node)\n\t\tif(binder){\n\t\t\tresult.push(binder)\n\t\t}\n\t\tfor(let i = 0; i < node.childNodes.length; i++){\n\t\t\tthis.collectBinders(node.childNodes[i]!, result)\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate beforeInserted(node: Node, parent: Node): void {\n\t\tif(!this.projectedTreeState.isInserted(parent)){\n\t\t\treturn\n\t\t}\n\n\t\tthis.projectedTreeState.startInsertOperation(node)\n\t\t// console.log(\"startInsertOperation\", node)\n\t\ttry {\n\t\t\tconst binders = this.collectBinders(node)\n\t\t\tfor(let i = 0; (i < binders.length); i++){\n\t\t\t\tconst binder = binders[i]!\n\t\t\t\tif(this.projectedTreeState.isInserted(binder.node)){\n\t\t\t\t\tbinder.notifyBeforeInserted()\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.projectedTreeState.endInsertOperation()\n\t\t}\n\t}\n\n\tprivate afterRemovedOrInserted(node: Node): void {\n\t\tif(!node.parentNode){\n\t\t\t// we can't rely on .isConnected here\n\t\t\t// because even if it is inserted, it may be not connected\n\t\t\t// because parent is not in the DOM yet\n\t\t\t// so, to see intent - if the node is removed or inserted somewhere - we can check .parentNode\n\t\t\tthis.projectedTreeState.markNodeRemoved(node)\n\t\t}\n\n\t\tconst binders = this.collectBinders(node)\n\t\tfor(let i = 0; i < binders.length; i++){\n\t\t\tconst binder = binders[i]!\n\t\t\tif(binder.node.isConnected){\n\t\t\t\tbinder.notifyAfterInserted()\n\t\t\t} else {\n\t\t\t\t// console.log([...(this.projectedTreeState as any).nodesInTree])\n\t\t\t\tif(this.projectedTreeState.isInserted(binder.node)){\n\t\t\t\t\tcontinue // we'll call notify on this node after its parent is fully inserted\n\t\t\t\t}\n\t\t\t\tbinder.notifyAfterRemoved()\n\t\t\t}\n\t\t}\n\t}\n\n}","import {MRBox, RBox, constBoxWrap} from \"@nartallax/cardboard\"\nimport {CssVariableBoxLink, CssVariableBoxOptions} from \"src/box_dom_binding/css_variable_box\"\nimport {DomValueLink} from \"src/box_dom_binding/dom_value_link\"\nimport {LocalStorageBoxOptions, LocalStorageDomLink} from \"src/box_dom_binding/local_storage_box\"\nimport {UrlBoxDomLink, UrlOptions} from \"src/box_dom_binding/url_box\"\nimport {getBinder} from \"src/node_binding\"\n\nexport type DomBoxOptionsBase = {\n\t/** This flag is used when resolving conflicts between DOM value and box value\n\t * like, \"we have new box value and new DOM value, what should happen?\"\n\t * If the flag is false (default) - that means box value will be overwritten by DOM value\n\t * If the flag is true - DOM value will be overwritten\n\t * ...or you can just pass an RBox, which cannot be overwritten and will always have preference */\n\treadonly preferBoxValue?: boolean\n}\n\nexport type DomBoxBindingOptions<T> = (LocalStorageBoxOptions<T> | CssVariableBoxOptions | (string extends T ? UrlOptions : never))\n\nexport function bindBoxToDomValue<T>(node: Node, box: MRBox<T>, options: DomBoxBindingOptions<T>): void {\n\tconst wrappedBox = constBoxWrap(box)\n\tconst binder = getBinder(node)\n\tlet link: DomValueLink<T>\n\tswitch(options.type){\n\t\tcase \"localStorage\": link = new LocalStorageDomLink(wrappedBox, options); break\n\t\tcase \"cssVariable\": link = new CssVariableBoxLink(node, wrappedBox, options); break\n\t\tcase \"url\": link = new UrlBoxDomLink(wrappedBox as RBox<string>, options) as unknown as DomValueLink<T>; break\n\t}\n\tbinder.addDomValueLink(link)\n}\n\nexport function unbindBoxToDom<T>(node: Node, options: DomBoxBindingOptions<T>): void {\n\tgetBinder(node).removeDomValueLink(options)\n}","import {WBox, box} from \"@nartallax/cardboard\"\nimport {DomBoxOptionsBase, bindBoxToDomValue} from \"src/box_dom_binding/bind_box_to_dom\"\nimport {DomValueLink} from \"src/box_dom_binding/dom_value_link\"\n\nexport interface LocalStorageBoxOptions<T> extends DomBoxOptionsBase {\n\treadonly type: \"localStorage\"\n\treadonly key: string\n\treadonly parse: (x: string | null) => T\n\treadonly serialize: (x: T) => string | null\n}\n\nexport class LocalStorageDomLink<T> extends DomValueLink<T, string | null, LocalStorageBoxOptions<T>> {\n\n\tprotected getRawDomValue(): string | null {\n\t\treturn localStorage.getItem(this.options.key)\n\t}\n\n\tprotected updateDomValue(value: T): void {\n\t\tconst key = this.options.key\n\t\tconst serialized = this.options.serialize(value)\n\t\tif(serialized === null){\n\t\t\tlocalStorage.removeItem(key)\n\t\t} else {\n\t\t\tlocalStorage.setItem(key, serialized)\n\t\t}\n\t}\n\n\tprotected parseDomValue(raw: string | null): T {\n\t\treturn this.options.parse(raw)\n\t}\n\n}\n\n/** Create a writable box that is linked to a value in localStorage.\n * initialValue is only used when a key is not present in the localStorage.\n *\n * Value is JSON-serialized for storage. */\nexport function localStorageBox<T>(node: Node, key: string, initialValue: T): WBox<T>\n/** Create a writable box that is linked to a value in localStorage.\n * initialValue is only used when a key is not present in the localStorage.\n *\n * If you chose to pass options - you must pass custom serializer.\n * It is done for the case when preferBoxValue is false, and the value in the local storage is absent;\n * so you must do something about `null` as parser input.\n *\n * This also gives you an opportunity to delete value from local storage by returning `null` from serializer. */\nexport function localStorageBox<T>(node: Node, key: string, initialValue: T, options: Omit<LocalStorageBoxOptions<T>, \"type\" | \"key\">): WBox<T>\nexport function localStorageBox<T>(node: Node, key: string, initialValue: T, options?: Omit<LocalStorageBoxOptions<T>, \"type\" | \"key\">): WBox<T> {\n\tconst result = box(initialValue)\n\tbindBoxToDomValue(node, result, {\n\t\tparse: value => JSON.parse(value + \"\"),\n\t\tserialize: value => JSON.stringify(value),\n\t\tpreferBoxValue: localStorage.getItem(key) === null,\n\t\t...(options || {}),\n\t\tkey,\n\t\ttype: \"localStorage\"\n\t})\n\treturn result\n}","import {MRBox} from \"@nartallax/cardboard\"\nimport {ChildArray, TagDescription, populateTag, resolveTagCreationArgs, watchAndRun} from \"src/functions/base_tag\"\n\ntype IfEquals<X, Y, A, B> =\n    (<T>() => T extends X ? 1 : 2) extends\n    (<T>() => T extends Y ? 1 : 2) ? A : B\ntype WritableKeysOf<T> = {\n\t[P in keyof T]: IfEquals<{[Q in P]: T[P]}, {-readonly [Q in P]: T[P]}, P, never>\n}[keyof T]\ntype WritablePart<T> = Pick<T, WritableKeysOf<T>>\ntype WritableStyles = WritablePart<CSSStyleDeclaration>\n\ntype IsAnyString<X, IfTrue, IfFalse> = string extends X ? IfTrue : IfFalse\ntype StyleValue<K extends keyof WritableStyles> = IsAnyString<CSSStyleDeclaration[K], string | number, CSSStyleDeclaration[K]> | null | undefined\ntype StyleValues = {\n\treadonly [k in keyof WritableStyles]?: MRBox<StyleValue<k>>\n}\n\ninterface HTMLTagDescriptionBase {\n\treadonly style?: StyleValues\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends HTMLTagDescriptionBase, TagDescription<K, HTMLElementTagNameMap[K]>{}\n\ntype HTMLChild = HTMLElement | SVGElement\nexport type HTMLChildArray = ChildArray<HTMLChild>\n\n/** Create an HTMLElement according to the description. */\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: HTMLChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: HTMLChildArray): HTMLElementTagNameMap[K]\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | HTMLChildArray, b?: HTMLChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveTagCreationArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tag || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst styleValue = description.style[k]\n\t\t\tbinder = watchAndRun(binder, tagBase, styleValue, v => {\n\t\t\t\tif(v === undefined || v === null){\n\t\t\t\t\ttagBase.style.removeProperty(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.style[k] = v as string // ew\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}","import {ChildArray, TagDescription, populateTag, resolveTagCreationArgs} from \"src/functions/base_tag\"\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\nexport type SVGChildArray = ChildArray<SVGElement>\n\n/** Create an SVGElement according to the description. */\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: SVGChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: SVGChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | SVGChildArray, b?: SVGChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveTagCreationArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tag || \"g\")\n\n\tif(description.tag === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}","/** Make a promise that is resolved when the document is in \"interactive\" state or further */\nexport function waitDocumentLoaded(): Promise<void> {\n\treturn new Promise(ok => {\n\t\tconst check = () => {\n\t\t\tif(document.readyState === \"interactive\" || document.readyState === \"complete\"){\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", check, false)\n\t\t\t\tok()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\tif(check()){\n\t\t\treturn\n\t\t}\n\n\t\tdocument.addEventListener(\"readystatechange\", check, false)\n\t})\n}","import type {BoxInternal, BoxUpdateMeta, CalculatableBox} from \"src/internal\"\n\nexport abstract class BaseDependencyList {\n\n\tabstract updateKnownDependencyValues(): void\n\n\tcalculate<T>(owner: CalculatableBox<T>, changeSourceBox: BoxInternal<unknown> | undefined, meta: BoxUpdateMeta | undefined): void {\n\t\tconst startingRevision = owner.revision\n\t\tconst value = owner.calculate(changeSourceBox, meta)\n\t\tif(owner.revision === startingRevision){\n\t\t\tif(meta?.type === \"recalc_on_get\" && meta.owner === owner){\n\t\t\t\t// meta \"recalc_on_get\" is related to owner box, and can be propagated\n\t\t\t\towner.set(value, changeSourceBox, meta)\n\t\t\t} else {\n\t\t\t\t// all other metas are related to source box, and should not be propagated\n\t\t\t\t// because then subscribers will receive meta for wrong box\n\t\t\t\towner.set(value, changeSourceBox)\n\t\t\t}\n\t\t}\n\n\t\tthis.updateKnownDependencyValues()\n\t}\n}","import {BaseDependencyList, DependencyList, BoxInternal, UpstreamSubscriber, isRBox, unbox, isWBox, RBox} from \"src/internal\"\n\nexport class MultipleDependencyList extends BaseDependencyList implements DependencyList {\n\tprivate readonly boxMap: Map<BoxInternal<unknown>, unknown> = new Map()\n\n\tconstructor(private readonly rawDependencies: readonly (unknown | BoxInternal<unknown>)[]) {\n\t\tsuper()\n\t\tfor(const mbbox of rawDependencies){\n\t\t\tif(isRBox(mbbox)){\n\t\t\t\tthis.boxMap.set(mbbox as BoxInternal<unknown>, mbbox.get())\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateKnownDependencyValues(): void {\n\t\tfor(const box of this.boxMap.keys()){\n\t\t\tthis.boxMap.set(box, box.get())\n\t\t}\n\t}\n\n\tgetDependencyValues(): unknown[] {\n\t\tconst result: unknown[] = new Array(this.rawDependencies.length)\n\t\tfor(let i = 0; i < this.rawDependencies.length; i++){\n\t\t\tresult[i] = unbox(this.rawDependencies[i])\n\t\t}\n\t\treturn result\n\t}\n\n\tsubscribeToDependencies(owner: UpstreamSubscriber): void {\n\t\tfor(const dependency of this.boxMap.keys()){\n\t\t\tdependency.subscribe(owner)\n\t\t}\n\t}\n\n\tunsubscribeFromDependencies(owner: UpstreamSubscriber): void {\n\t\tfor(const dependency of this.boxMap.keys()){\n\t\t\tdependency.unsubscribe(owner)\n\t\t}\n\t}\n\n\tdidDependencyListChange(): boolean {\n\t\tfor(const [box, value] of this.boxMap){\n\t\t\tif(box.get() !== value){\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\tsetDependencyValues(values: unknown[]): void {\n\t\tfor(let i = 0; i < this.rawDependencies.length; i++){\n\t\t\tconst dep = this.rawDependencies[i]!\n\t\t\tconst value = values[i]!\n\t\t\tif(isWBox(dep)){\n\t\t\t\tdep.set(value)\n\t\t\t} else {\n\t\t\t\tconst currentValue = unbox(dep)\n\t\t\t\tif(currentValue !== value){\n\t\t\t\t\tthrow new Error(\"Cannot update value of readonly dependency \" + dep)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tisDependency(box: RBox<unknown>): boolean {\n\t\treturn this.boxMap.has(box as BoxInternal<unknown>)\n\t}\n\n}","import {DependencyList, BoxInternal, UpstreamSubscriber, BaseDependencyList, unbox, isRBox, isWBox, RBox} from \"src/internal\"\n\n/** A dependency list for cases when you have only one dependency */\nexport class SingleDependencyList<T> extends BaseDependencyList implements DependencyList {\n\tprivate lastKnownDependencyValue: T\n\n\tconstructor(\n\t\treadonly dependency: T | BoxInternal<T>) {\n\t\tsuper()\n\t\tthis.lastKnownDependencyValue = unbox(dependency)\n\t}\n\n\tupdateKnownDependencyValues(): void {\n\t\tthis.lastKnownDependencyValue = unbox(this.dependency)\n\t}\n\n\tsubscribeToDependencies(owner: UpstreamSubscriber): void {\n\t\tif(isRBox(this.dependency)){\n\t\t\tthis.dependency.subscribe(owner)\n\t\t}\n\t}\n\n\tunsubscribeFromDependencies(owner: UpstreamSubscriber): void {\n\t\tif(isRBox(this.dependency)){\n\t\t\tthis.dependency.unsubscribe(owner)\n\t\t}\n\t}\n\n\tdidDependencyListChange(): boolean {\n\t\treturn this.lastKnownDependencyValue !== unbox(this.dependency)\n\t}\n\n\tgetDependencyValues(): unknown[] {\n\t\treturn [unbox(this.dependency)]\n\t}\n\n\tsetDependencyValues(values: unknown[]): void {\n\t\tif(isWBox(this.dependency)){\n\t\t\tthis.dependency.set(values[0]! as T)\n\t\t} else {\n\t\t\tconst currentValue = unbox(this.dependency)\n\t\t\tif(currentValue !== values[0]){\n\t\t\t\tthrow new Error(\"Cannot update value of readonly dependency \" + this.dependency)\n\t\t\t}\n\t\t}\n\t}\n\n\tisDependency(box: RBox<unknown>): boolean {\n\t\treturn box === this.dependency\n\t}\n\n}","import type {BoxChangeHandler, RBox, BoxInternal, UpstreamSubscriber, WBox, BoxUpdateMeta, ArrayItemWBox} from \"src/internal\"\nimport {ArrayContextImpl, MapRBox, MapWBox, PropRBox, PropWBox, isWBox, mapArrayElements, SubscriberList} from \"src/internal\"\n\nexport const NoValue = Symbol(\"AbsentBoxValue\")\n\nexport abstract class BaseBox<T> implements BoxInternal<T> {\n\tvalue: T | typeof NoValue = NoValue\n\tprivate readonly subscriberList = new SubscriberList<T, this>(this)\n\n\thaveSubscribers(): boolean {\n\t\treturn this.subscriberList.haveSubscribers()\n\t}\n\n\t/** Update the value of the box, calling the subscribers.\n\t *\n\t * @param changeSource the box that caused the change. Won't be notified of the change happening. */\n\tset(newValue: T, changeSource?: BoxInternal<unknown> | UpstreamSubscriber, updateMeta?: BoxUpdateMeta): void {\n\t\tif(this.value === newValue){\n\t\t\treturn\n\t\t}\n\n\t\tthis.value = newValue\n\t\tthis.notifyOnValueChange(newValue, changeSource, updateMeta)\n\t}\n\n\tget(): T {\n\t\tif(this.value === NoValue){\n\t\t\tthrow new Error(\"This box is disposed; no value can be get\")\n\t\t}\n\t\treturn this.value\n\t}\n\n\t/** When a box is disposed, it is no longer possible to get or set a value to this box\n\t *\n\t * Use case is situation when some upstream becomes invalid;\n\t * that means setting or getting value of this box is an error\n\t * because it is no longer updated or is able to propagate value to his own upstream\n\t * in this case, every downstream box should also became invalid */\n\tdispose(): void {\n\t\tthis.value = NoValue\n\t\tthis.subscriberList.dispose()\n\t}\n\n\tsubscribe(handler: UpstreamSubscriber | BoxChangeHandler<T>): void {\n\t\tthis.subscriberList.subscribe(handler, this.get())\n\t}\n\n\tunsubscribe(handler: UpstreamSubscriber | BoxChangeHandler<T>): void {\n\t\tthis.subscriberList.unsubscribe(handler)\n\t}\n\n\tprotected notifyOnValueChange(value: T, changeSource: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tthis.subscriberList.callSubscribers(value, changeSource, updateMeta)\n\t}\n\n\tmap<R>(mapper: (value: T, meta: BoxUpdateMeta | undefined) => R): RBox<R>\n\tmap<R>(mapper: (value: T, meta: BoxUpdateMeta | undefined) => R, reverseMapper: (value: R, meta: BoxUpdateMeta | undefined) => T): WBox<R>\n\tmap<R>(mapper: (value: T, meta: BoxUpdateMeta | undefined) => R, reverseMapper?: (value: R, meta: BoxUpdateMeta | undefined) => T): RBox<R> {\n\t\tif(!reverseMapper){\n\t\t\treturn new MapRBox(this, mapper, throwOnReverseMapping)\n\t\t} else {\n\t\t\treturn new MapWBox(this, mapper, reverseMapper)\n\t\t}\n\t}\n\n\tprop<K extends keyof T>(this: RBox<T>, propName: K): RBox<T[K]>\n\tprop<K extends keyof T>(this: WBox<T>, propName: K): WBox<T[K]>\n\tprop<K extends keyof T>(propName: K): WBox<T[K]> | RBox<T[K]> {\n\t\treturn isWBox(this) ? new PropWBox(this, propName) : new PropRBox(this, propName)\n\t}\n\n\tgetArrayContext<E, K>(this: BaseBox<readonly E[]>, getKey: (item: E, index: number) => K): ArrayContextImpl<E, K, null> {\n\t\treturn new ArrayContextImpl(this, getKey, getNull)\n\t}\n\n\tmapArrayElements<E, R>(this: BaseBox<readonly E[]>, mapper: (item: E, index: number) => R): RBox<R[]>\n\tmapArrayElements<E, R>(this: BaseBox<readonly E[]>, mapper: (item: E, index: number) => R, reverseMapper: (item: R, index: number) => E): WBox<R[]>\n\tmapArrayElements<E, R>(this: BaseBox<readonly E[]>, mapper: (item: E, index: number) => R, reverseMapper?: (item: R, index: number) => E): WBox<R[]> | RBox<R[]> {\n\t\treturn mapArrayElements(this, mapper, reverseMapper)\n\t}\n\n\tmapArray<E, K, R>(this: BaseBox<readonly E[]>, getKey: (item: E, index: number) => K, mapBox: (box: ArrayItemWBox<E>, index: number) => R): RBox<readonly R[]> {\n\t\treturn new ArrayContextImpl(this, getKey, mapBox).getValueArrayBox()\n\t}\n\n\tsetProp<K extends keyof T>(propName: K, propValue: T[K]): void {\n\t\tconst oldValue = this.get()\n\t\tif(oldValue[propName] === propValue){\n\t\t\treturn\n\t\t}\n\t\tthis.set({...oldValue, [propName]: propValue}, undefined, {type: \"property_update\", propName})\n\t}\n\n\tsetElementAtIndex<E>(this: BaseBox<readonly E[]>, index: number, value: E): void {\n\t\tconst oldValue = this.get()\n\t\tif(oldValue[index] === value){\n\t\t\treturn\n\t\t}\n\t\tconst oldElementValue = oldValue[index]\n\t\tconst newValue = [...oldValue]\n\t\tnewValue[index] = value\n\t\tthis.set(newValue, undefined, {type: \"array_item_update\", index, oldValue: oldElementValue})\n\t}\n\n\tinsertElementsAtIndex<E>(this: BaseBox<readonly E[]>, index: number, values: readonly E[]): void {\n\t\tif(values.length === 0){\n\t\t\treturn\n\t\t}\n\n\t\tconst oldValue = this.get()\n\t\tthis.checkInsertIndex(oldValue, index)\n\t\tconst newValue = [...oldValue.slice(0, index), ...values, ...oldValue.slice(index)]\n\t\tthis.set(newValue, undefined, {type: \"array_items_insert\", index, count: values.length})\n\t}\n\n\tinsertElementAtIndex<E>(this: BaseBox<readonly E[]>, index: number, value: E): void {\n\t\tthis.insertElementsAtIndex(index, [value])\n\t}\n\n\tappendElement<E>(this: WBox<readonly E[]>, value: E): void {\n\t\tthis.insertElementsAtIndex(this.get().length, [value])\n\t}\n\n\tappendElements<E>(this: WBox<readonly E[]>, values: readonly E[]): void {\n\t\tthis.insertElementsAtIndex(this.get().length, values)\n\t}\n\n\tprependElement<E>(this: WBox<readonly E[]>, value: E): void {\n\t\tthis.insertElementsAtIndex(0, [value])\n\t}\n\n\tprependElements<E>(this: WBox<readonly E[]>, values: readonly E[]): void {\n\t\tthis.insertElementsAtIndex(0, values)\n\t}\n\n\tprivate checkInsertIndex(elements: readonly unknown[], index: number): void {\n\t\tif(index < 0){\n\t\t\tthrow new Error(`Cannot insert anything in negative index (passed index = ${index})`)\n\t\t}\n\n\t\tif(index > elements.length){\n\t\t\tthrow new Error(`Cannot insert anything in index beyond array length (passed index = ${index}, array length = ${elements.length}); this will create sparse array, which is bad in multiple ways and should always be avoided.`)\n\t\t}\n\t}\n\n\tdeleteElementsAtIndex<E>(this: BaseBox<readonly E[]>, index: number, count: number): void {\n\t\tif(count < 1){\n\t\t\treturn\n\t\t}\n\n\t\tconst oldValue = this.get()\n\t\tthis.checkDeleteIndex(oldValue, index)\n\n\t\tcount = Math.min(count, oldValue.length - index)\n\t\tif(count < 1){\n\t\t\t// yes, we are double-checking\n\t\t\t// previous check is useful for the case of user passing zero, and helps us to avoid calling .get()\n\t\t\t// which can be costly, depending on type of the box\n\t\t\treturn\n\t\t}\n\n\t\tconst deletedPairs: {index: number, value: unknown}[] = []\n\t\tfor(let offset = 0; offset < count; offset++){\n\t\t\tconst itemIndex = index + offset\n\t\t\tconst itemValue = oldValue[itemIndex]\n\t\t\tdeletedPairs.push({value: itemValue, index: itemIndex})\n\t\t}\n\n\t\tconst newValue = [...oldValue.slice(0, index), ...oldValue.slice(index + count)]\n\t\tthis.set(newValue, undefined, {type: \"array_items_delete\", indexValuePairs: deletedPairs})\n\t}\n\n\tdeleteElementAtIndex<E>(this: BaseBox<readonly E[]>, index: number): void {\n\t\tthis.deleteElementsAtIndex(index, 1)\n\t}\n\n\tprivate checkDeleteIndex(elements: readonly unknown[], index: number): void {\n\t\tif(index < 0){\n\t\t\tthrow new Error(`Cannot delete element at negative index (passed index = ${index})`)\n\t\t}\n\n\t\tif(index > elements.length - 1){\n\t\t\tthrow new Error(`Cannot delete anything starting from beyond array length (passed index = ${index}, array length = ${elements.length})`)\n\t\t}\n\t}\n\n\tdeleteElements<E>(this: BaseBox<readonly E[]>, predicate: (item: E, index: number) => boolean): void {\n\t\tthis.deleteElementsInternal(predicate, false)\n\t}\n\n\tdeleteElement<E>(this: BaseBox<readonly E[]>, predicate: (item: E, index: number) => boolean): void {\n\t\tthis.deleteElementsInternal(predicate, true)\n\t}\n\n\tprivate deleteElementsInternal<E>(this: BaseBox<readonly E[]>, predicate: (item: E, index: number) => boolean, stopAfterFirst: boolean): void {\n\t\tconst oldValue = this.get()\n\t\tconst deletedPairs: {index: number, value: unknown}[] = []\n\t\tconst newValue: E[] = []\n\t\tfor(let i = 0; i < oldValue.length; i++){\n\t\t\tconst itemValue = oldValue[i]!\n\t\t\tif(predicate(itemValue, i)){\n\t\t\t\tnewValue.push(itemValue)\n\t\t\t} else {\n\t\t\t\tdeletedPairs.push({value: itemValue, index: i})\n\t\t\t\tif(stopAfterFirst){\n\t\t\t\t\tnewValue.push(...oldValue.slice(i + 1))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(deletedPairs.length === 0){\n\t\t\tif(stopAfterFirst){\n\t\t\t\tthrow new Error(\"Expected to find exactly one element to delete, but found none (predicate = \" + predicate + \")\")\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tthis.set(newValue, undefined, {type: \"array_items_delete\", indexValuePairs: deletedPairs})\n\t}\n\n\tdeleteAllElements<E>(this: BaseBox<readonly E[]>): void {\n\t\tthis.set([], undefined, {type: \"array_items_delete_all\"})\n\t}\n\n}\n\nconst throwOnReverseMapping = () => {\n\tthrow new Error(\"This box does not support reverse-mapping\")\n}\n\nconst getNull = () => null","import {BoxInternal, RBox, WBox} from \"src/types\"\n\nexport function mapArrayElements<E, R>(upstream: BoxInternal<readonly E[]>, mapper: (item: E, index: number) => R, reverseMapper?: (item: R, index: number) => E): RBox<R[]> | WBox<R[]> {\n\tconst forwardCache = new Map<E, R>()\n\tconst backwardCache: Map<R, E> | null = !reverseMapper ? null : new Map()\n\n\tconst forwardMap = (upstreamValues: readonly E[]) => {\n\t\tconst outdatedUpstreamItems = new Set(forwardCache.keys())\n\t\tconst result = upstreamValues.map((upstreamItem, index) => {\n\t\t\toutdatedUpstreamItems.delete(upstreamItem)\n\t\t\tlet downstreamItem = forwardCache.get(upstreamItem)\n\t\t\tif(!downstreamItem){\n\t\t\t\tdownstreamItem = mapper(upstreamItem, index)\n\t\t\t\tforwardCache.set(upstreamItem, downstreamItem)\n\t\t\t\tif(backwardCache){\n\t\t\t\t\tbackwardCache.set(downstreamItem, upstreamItem)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn downstreamItem\n\t\t})\n\t\tif(backwardCache){\n\t\t\tfor(const outdatedItem of outdatedUpstreamItems){\n\t\t\t\tbackwardCache.delete(forwardCache.get(outdatedItem)!)\n\t\t\t}\n\t\t}\n\t\tfor(const outdatedItem of outdatedUpstreamItems){\n\t\t\tforwardCache.delete(outdatedItem)\n\t\t}\n\t\treturn result\n\t}\n\n\tif(!backwardCache || !reverseMapper){\n\t\treturn upstream.map(forwardMap)\n\t}\n\n\tconst backwardMap = (downstreamValues: R[]) => {\n\t\tconst outdatedDownstreamItems = new Set(backwardCache.keys())\n\t\tconst result = downstreamValues.map((downstreamItem, index) => {\n\t\t\toutdatedDownstreamItems.delete(downstreamItem)\n\t\t\tlet upstreamItem = backwardCache.get(downstreamItem)\n\t\t\tif(!upstreamItem){\n\t\t\t\tupstreamItem = reverseMapper(downstreamItem, index)\n\t\t\t\tforwardCache.set(upstreamItem, downstreamItem)\n\t\t\t\tbackwardCache.set(downstreamItem, upstreamItem)\n\t\t\t}\n\t\t\treturn upstreamItem\n\t\t})\n\t\tfor(const outdatedItem of outdatedDownstreamItems){\n\t\t\tforwardCache.delete(backwardCache.get(outdatedItem)!)\n\t\t\tbackwardCache.delete(outdatedItem)\n\t\t}\n\t\treturn result\n\t}\n\treturn upstream.map(forwardMap, backwardMap)\n}\n\n","import {BaseBox, BoxChangeHandler, UpstreamSubscriber} from \"src/internal\"\n\n/** A box that invokes its handlers on first subscriber subscribing/last subscriber unsubscribing */\nexport abstract class FirstSubscriberHandlingBox<T> extends BaseBox<T> {\n\tprotected abstract onFirstSubscriber(): void\n\tprotected abstract onLastUnsubscriber(): void\n\n\toverride subscribe(handler: UpstreamSubscriber | BoxChangeHandler<T>): void {\n\t\tif(!this.haveSubscribers()){\n\t\t\tthis.onFirstSubscriber()\n\t\t}\n\t\tsuper.subscribe(handler)\n\t}\n\n\toverride unsubscribe(handler: UpstreamSubscriber | BoxChangeHandler<T>): void {\n\t\tconst hadSubs = this.haveSubscribers()\n\t\tsuper.unsubscribe(handler)\n\t\t// hadSubs check here because we could already have none subscribers\n\t\t// and we shouldn't invoke handler in this case\n\t\t// this is, of course, an user error, but we don't check for that\n\t\tif(hadSubs && !this.haveSubscribers()){\n\t\t\tthis.onLastUnsubscriber()\n\t\t}\n\t}\n\n}","import {DependencyList, FirstSubscriberHandlingBox, BoxInternal, NoValue, CalculatableBox, BoxUpdateMeta, UpstreamSubscriber} from \"src/internal\"\n\n/** DownstreamBox is a box that is derived from some other box (or several)\n * Those base boxes are called upstream; so this box is downstream box related to the upstream boxes\n *\n * Various downstream boxes can form a network of values, propagated through internal subscribers */\nexport abstract class DownstreamBox<T> extends FirstSubscriberHandlingBox<T> implements CalculatableBox<T> {\n\n\t/** Calculate value of this box based on its internal calculation logic */\n\tabstract calculate(changeSourceBox: BoxInternal<unknown> | undefined, meta: BoxUpdateMeta | undefined): T\n\n\t/** A revision is a counter that is incremented each time the value of the box is changed.\n\t *\n\t * It is very tempting to use revision number to check if value is changed or not.\n\t * However, it can go wrong when value does not change until you explicitly check.\n\t * For example, consider calcBox that depends on another calcBox\n\t * When there is no subscribers, upstream calcBox will never change, regardless of its own upstreams\n\t * And if downstream calcbox only relying on upstream calcbox's revision number to check if it is was changed,\n\t * there will be false negatives, because in this case it is required to check dependencies of upstream calcbox more thorough.\n\t *\n\t * And also value can change back and forth within one calculation, and revision will still be incremented;\n\t * that's why if you rely on revision to check if the value changed you'll get some false-positives.\n\t *\n\t * You can try to use revision to prevent calls of subscribers with outdated value;\n\t * hovewer, it will also have bugs related to early-drops of things that should not be dropped,\n\t * in cases of array contexts (there's a test for that) and partial updates */\n\trevision = 0\n\tforcedShouldRecalculate = false\n\n\tconstructor(readonly dependencyList: DependencyList) {\n\t\tsuper()\n\t}\n\n\t/** Calculate the value, calling the calculation function, and set it to this box.\n\t * This method should be called as handler of internal subscription calls\n\t *\n\t * @param changeSourceBox the box that caused this value to be recalculated. Won't receive update about result. */\n\tprotected calculateAndUpdate(changeSourceBox: BoxInternal<unknown> | undefined, meta: BoxUpdateMeta | undefined): void {\n\t\tthis.forcedShouldRecalculate = false\n\t\tthis.dependencyList.calculate(this, changeSourceBox, meta)\n\t}\n\n\tprotected notifyOnValueChange(value: T, changeSource: UpstreamSubscriber | BoxInternal<unknown> | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tthis.revision++\n\t\tsuper.notifyOnValueChange(value, changeSource, updateMeta)\n\t}\n\n\tonUpstreamChange(upstream: BoxInternal<unknown>, meta: BoxUpdateMeta | undefined): void {\n\t\tthis.calculateAndUpdate(upstream, meta)\n\t}\n\n\tprotected shouldRecalculate(): boolean {\n\t\tif(this.forcedShouldRecalculate){\n\t\t\treturn true\n\t\t}\n\n\t\tif(this.value === NoValue){\n\t\t\t// we should never show absent value to outside world\n\t\t\t// also NoValue = disposed, and being disposed means that next recalculation will throw\n\t\t\t// and that's a good thing, because it will notify user of error in his code\n\t\t\treturn true\n\t\t}\n\n\t\tif(this.haveSubscribers()){\n\t\t\t// if we have subscribers - we are subscribed to our dependencies\n\t\t\t// that means we recalculate each time a dependency is changed\n\t\t\t// and that means our value is up-to-date and we don't need to recalculate\n\t\t\t// (if we just had first subscriber - we maybe should recalculate, because we didn't have a subscriber before and didn't recalculate since then)\n\t\t\treturn false\n\t\t}\n\n\t\t// this is a little bit bad, because if we have a big \"network\" of calcboxes noone subscribed to,\n\t\t// then each .get() to calcbox will trigger a chain checks for each box in network\n\t\t// which could happen on first render of an app UI, for example\n\t\t// nothing really can be done with it without introducing \"non-update\" bugs\n\t\tif(!this.dependencyList.didDependencyListChange()){\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t}\n\n\trecalculateIfShould(changeSourceBox?: BoxInternal<unknown>, meta?: BoxUpdateMeta): void {\n\t\tif(this.shouldRecalculate()){\n\t\t\tthis.calculateAndUpdate(changeSourceBox, meta)\n\t\t}\n\t}\n\n\toverride set(newValue: T, changeSource?: UpstreamSubscriber | BoxInternal<unknown> | undefined, updateMeta?: BoxUpdateMeta | undefined): void {\n\t\tif(!this.haveSubscribers() && this.shouldRecalculate()){\n\t\t\t// if the box doesn't have any subscribers - it could have outdated value\n\t\t\t// and then on .set() new value may coinside with outdated value\n\t\t\t// which will lead to non-delivery of some updates, if they should be delivered\n\t\t\t// so it's safer to assume that something is changed\n\t\t\t// (we could recalculate, but that's also not great, because it will be called each .set())\n\t\t\tthis.value = NoValue\n\t\t}\n\n\t\treturn super.set(newValue, changeSource, updateMeta)\n\t}\n\n\toverride get(): T {\n\t\tthis.recalculateIfShould(undefined, {type: \"recalc_on_get\", owner: this})\n\t\treturn super.get()\n\t}\n\n\tprotected override onFirstSubscriber(): void {\n\t\tthis.dependencyList.subscribeToDependencies(this)\n\t\tif(this.shouldRecalculate()){\n\t\t\t// something may change while we wasn't subscribed to our dependencies\n\t\t\t// that's why we should recalculate - so our value is actual\n\t\t\tthis.calculateAndUpdate(undefined, undefined)\n\t\t}\n\t}\n\n\tprotected override onLastUnsubscriber(): void {\n\t\tthis.dependencyList.unsubscribeFromDependencies(this)\n\t}\n\n}","import {DownstreamBox, BoxInternal, SingleDependencyList, UpstreamSubscriber, BoxUpdateMeta} from \"src/internal\"\n\n/** A downstream box that has only one upstream */\nexport abstract class SingleDownstreamBox<T, U> extends DownstreamBox<T> {\n\n\tprotected abstract makeDownstreamValue(upstreamValue: U, meta: BoxUpdateMeta | undefined): T\n\tprotected abstract updateUpstreamWith(downstreamValue: T, meta: BoxUpdateMeta | undefined): void\n\n\tconstructor(protected readonly upstream: BoxInternal<U>) {\n\t\tsuper(new SingleDependencyList(upstream))\n\t}\n\n\toverride calculate(_: BoxInternal<unknown> | undefined, meta: BoxUpdateMeta | undefined): T {\n\t\treturn this.makeDownstreamValue(this.upstream.get(), meta)\n\t}\n\n\tprotected override notifyOnValueChange(value: T, changeSource: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tif(changeSource !== this.upstream){\n\t\t\tthis.updateUpstreamWith(value, updateMeta)\n\t\t}\n\t\tsuper.notifyOnValueChange(value, changeSource, updateMeta)\n\t}\n\n\tprotected override calculateAndUpdate(changeSourceBox: BoxInternal<unknown> | undefined, meta: BoxUpdateMeta | undefined): void {\n\t\tif(!changeSourceBox){\n\t\t\t// the only case when we don't have a source box and need to recalculate\n\t\t\t// is when we detect that our value is out of date and needs to be updated\n\t\t\t// and this way our update is triggered by upstream box, in a way, because it was changed\n\t\t\t// we kinda should do it in DownstreamBox, but we cannot, because of its more dynamic nature\n\t\t\t// (that's one of the reasons why only box that can have multiple upstreams is readonly box)\n\t\t\tchangeSourceBox = this.upstream\n\t\t}\n\n\t\tsuper.calculateAndUpdate(changeSourceBox, meta)\n\t}\n}","import {anythingToString, SingleDownstreamBox, BoxInternal, BoxUpdateMeta} from \"src/internal\"\n\nexport abstract class MapBox<T, U> extends SingleDownstreamBox<T, U> {\n\n\tconstructor(\n\t\tupstream: BoxInternal<U>,\n\t\tprotected readonly makeDownstreamValue: (value: U, meta: BoxUpdateMeta | undefined) => T,\n\t\tprotected readonly makeUpstreamValue: (value: T, meta: BoxUpdateMeta | undefined) => U) {\n\t\tsuper(upstream)\n\t}\n\n\ttoString(): string {\n\t\treturn `MapBox(${anythingToString(this.value)})`\n\t}\n\n\tprotected updateUpstreamWith(downstreamValue: T, meta: BoxUpdateMeta | undefined): void {\n\t\tthis.upstream.set(this.makeUpstreamValue(downstreamValue, meta), this)\n\t}\n\n}\n\nexport class MapRBox<T, U> extends MapBox<T, U> {}\nexport class MapWBox<T, U> extends MapBox<T, U> {}","import {anythingToString, SingleDownstreamBox, BoxInternal} from \"src/internal\"\n\nexport abstract class PropBox<U, K extends keyof U> extends SingleDownstreamBox<U[K], U> {\n\n\tconstructor(\n\t\tupstream: BoxInternal<U>,\n\t\treadonly propName: K\n\t) {\n\t\tsuper(upstream)\n\t}\n\n\ttoString(): string {\n\t\treturn `PropBox(${anythingToString(this.value)})`\n\t}\n\n\tprotected override makeDownstreamValue(upstreamValue: U): U[K] {\n\t\treturn upstreamValue[this.propName]\n\t}\n\n\tprotected override updateUpstreamWith(downstreamValue: U[K]): void {\n\t\tconst value: U = {\n\t\t\t...this.upstream.get(),\n\t\t\t[this.propName]: downstreamValue\n\t\t}\n\t\tthis.upstream.set(value, this, {type: \"property_update\", propName: this.propName})\n\t}\n\n}\n\n// there are two classes to distinguish between rbox and wbox in runtime\n// we could always return PropWBox, as each wbox is also a rbox, but that will only protect us on type level\n// that is, in such case isWBox(calcBox(() => ({a:5})).prop(\"a\")) will be true, which is unacceptable\nexport class PropRBox<U, K extends keyof U> extends PropBox<U, K> {}\nexport class PropWBox<U, K extends keyof U> extends PropBox<U, K> {}","import {anythingToString, ArrayContextImpl, NoValue, FirstSubscriberHandlingBox} from \"src/internal\"\n\n/** Some box that is managed by array context */\nexport class ArrayContextControlledBox<T> extends FirstSubscriberHandlingBox<T> {\n\n\tconstructor(protected readonly arrayContext: ArrayContextImpl<any, any, any>, value: T) {\n\t\tsuper()\n\t\tthis.value = value\n\t}\n\n\ttoString(): string {\n\t\treturn `ArrayContextControlledBox(${anythingToString(this.value)})`\n\t}\n\n\tdispose(): void {\n\t\tif(this.haveSubscribers()){\n\t\t\tthis.arrayContext.onDownstreamUnsubscription()\n\t\t}\n\t\tsuper.dispose()\n\t}\n\n\tprotected onFirstSubscriber(): void {\n\t\tif(this.value !== NoValue){\n\t\t\tthis.arrayContext.onDownstreamSubscription()\n\t\t}\n\t}\n\n\tprotected onLastUnsubscriber(): void {\n\t\tif(this.value !== NoValue){\n\t\t\tthis.arrayContext.onDownstreamUnsubscription()\n\t\t}\n\t}\n\n\tcheckIfStillAttached(): void {\n\t\tif(!this.arrayContext.isItemBoxAttached(this)){\n\t\t\tthrow new Error(\"This array-linked box \" + this + \" is no longer attached to its upstream. Element it was attached to was removed from upstream, or was absent in some time in the past.\")\n\t\t}\n\t}\n\n\toverride get(): T {\n\t\tif(this.arrayContext.isItemBoxAttached(this)){\n\t\t\tthis.arrayContext.tryUpdate()\n\t\t}\n\t\tthis.checkIfStillAttached()\n\t\treturn super.get()\n\t}\n\n}","import {anythingToString, ArrayContextImpl, BoxInternal, UpstreamSubscriber, BoxUpdateMeta, ArrayItemWBox, ArrayContextControlledBox} from \"src/internal\"\n\n/** A box that contains an array item */\nexport abstract class ArrayItemBox<T, K> extends ArrayContextControlledBox<T> implements ArrayItemWBox<T> {\n\n\tconstructor(arrayContext: ArrayContextImpl<T, any, any>, value: T, public index: number, public key: K) {\n\t\tsuper(arrayContext, value)\n\t}\n\n\toverride toString(): string {\n\t\treturn `ArrayItemBox(${anythingToString(this.key)}, ${anythingToString(this.value)})`\n\t}\n\n\toverride set(newValue: T, changeSourceBox?: BoxInternal<unknown> | UpstreamSubscriber): void {\n\t\tthis.checkIfStillAttached()\n\t\tsuper.set(newValue, changeSourceBox)\n\t}\n\n\tprotected override notifyOnValueChange(value: T, changeSource: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tif(changeSource !== this.arrayContext){\n\t\t\tthis.arrayContext.onDownstreamChange(this, value)\n\t\t}\n\t\tsuper.notifyOnValueChange(value, changeSource, updateMeta)\n\t}\n\n\tdeleteArrayElement(): void {\n\t\tthis.checkIfStillAttached()\n\t\tthis.arrayContext.upstream.deleteElementAtIndex(this.index)\n\t}\n\n}\n\nexport class ArrayItemRBoxImpl<T, K> extends ArrayItemBox<T, K> {}\nexport class ArrayItemWBoxImpl<T, K> extends ArrayItemBox<T, K> {}","import {anythingToString, MultipleDependencyList, RBox, BoxInternal, DownstreamBox, SingleDependencyList, Unboxed, MRBox, BoxUpdateMeta, UpstreamSubscriber, WBox} from \"src/internal\"\n\ntype DependencyBoxValues<D> = D extends readonly [infer X, ...infer Rest]\n\t? readonly [Unboxed<X>, ...DependencyBoxValues<Rest>]\n\t: D extends []\n\t\t? readonly []\n\t\t: D extends readonly MRBox<unknown>[]\n\t\t\t? readonly Unboxed<D[number]>[]\n\t\t\t: never\n\nexport function calcBox<T, const D extends readonly MRBox<unknown>[]>(dependencies: D, calcFunction: (...dependencyValues: DependencyBoxValues<D>) => T): RBox<T>\n// generics on this overload are a bit weird\n// they are like that because that's the only way to infer result value of the function as tuple by default\n// (and not an array)\nexport function calcBox<T, const D extends readonly MRBox<unknown>[], const R extends (boxValue: T, ...dependencyValues: DependencyBoxValues<D>) => DependencyBoxValues<D>>(dependencies: D, calcFunction: (...dependencyValues: DependencyBoxValues<D>) => T, reverseCalcFunction: R): WBox<T>\n/** Make new calc box, readonly box that calculates its value based on passed function */\nexport function calcBox<T, const D extends readonly MRBox<unknown>[], const V extends DependencyBoxValues<D>>(dependencies: D, calcFunction: (...dependencyValues: V) => T, reverseCalcFunction?: (boxValue: T, ...dependencyValues: V) => V): RBox<T> {\n\t// in theory, here we could check if any of the dependencies are actually non-const boxes\n\t// and if not - then we could create a const box\n\t// but that's a rare case, and also calling calcFunction right now will break contract - it should be called later\n\t// maybe later, when I'd justify having const box that lazily calculates its value once\n\treturn new CalcBox(\n\t\tdependencies as unknown as readonly (unknown | BoxInternal<unknown>)[],\n\t\tcalcFunction as unknown as (...args: unknown[]) => T,\n\t\treverseCalcFunction as unknown as (value: T, ...args: unknown[]) => unknown[]\n\t)\n}\n\nexport class CalcBox<T> extends DownstreamBox<T> {\n\n\tconstructor(dependencies: readonly (unknown | BoxInternal<unknown>)[], readonly calculateFn: (...args: unknown[]) => T, readonly reverseCalculateFn: ((value: T, ...args: unknown[]) => unknown[]) | undefined) {\n\t\tsuper(dependencies.length === 1 ? new SingleDependencyList(dependencies[0]!) : new MultipleDependencyList(dependencies))\n\t}\n\n\ttoString(): string {\n\t\treturn `CalcBox(${anythingToString(this.value)})`\n\t}\n\n\toverride calculate(): T {\n\t\tconst values = this.dependencyList.getDependencyValues()\n\t\treturn this.calculateFn(...values)\n\t}\n\n\tprotected override notifyOnValueChange(value: T, changeSource: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tconst isChangeFromDependency = this.dependencyList.isDependency(changeSource)\n\t\tconst isChangeRecalcOnGet = !changeSource && updateMeta?.type === \"recalc_on_get\"\n\t\tconst canUpdateUpstream = !!this.reverseCalculateFn\n\t\tconst shouldUpdateUpstream = canUpdateUpstream && !isChangeFromDependency && !isChangeRecalcOnGet\n\n\t\tif(shouldUpdateUpstream){\n\t\t\tthis.updateUpstream(value)\n\t\t}\n\n\t\tsuper.notifyOnValueChange(value, changeSource, updateMeta)\n\t}\n\n\tprivate updateUpstream(newValue: T): void {\n\t\tconst depValues = this.dependencyList.getDependencyValues()\n\t\tconst newDepValues = this.reverseCalculateFn!(newValue, ...depValues)\n\t\tthis.dependencyList.setDependencyValues(newDepValues)\n\t}\n}","import {anythingToString, BaseBox, WBox} from \"src/internal\"\n\n/** Make new basic writable box */\nexport const box = <T>(value: T): WBox<T> => {\n\treturn new ValueBox(value)\n}\n\nexport class ValueBox<T> extends BaseBox<T> {\n\tconstructor(value: T) {\n\t\tsuper()\n\t\tthis.value = value\n\t}\n\n\ttoString(): string {\n\t\treturn `ValueBox(${anythingToString(this.value)})`\n\t}\n}","import {ConstArrayContext, anythingToString, ArrayContext, RBox, WBox, BoxInternal, NoValue, ArrayItemWBox, BoxUpdateMeta} from \"src/internal\"\n\n/** Make a new constant box, a readonly box which value never changes\n *\n * It exists mostly for convenience, to avoid writing two variants of code -\n * one for plain values and one for boxes */\nexport const constBox = <T>(value: T): RBox<T> => {\n\treturn new ConstBoxImpl(value)\n}\n\nexport class ConstBoxImpl<T> implements BoxInternal<T>, ArrayItemWBox<T> {\n\treadonly isConstBox!: true\n\n\tconstructor(readonly value: T | typeof NoValue) {\n\t\tif(value === NoValue){\n\t\t\tthrow new Error(\"ConstBox must always have a value\")\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn `ConstBox(${anythingToString(this.value)})`\n\t}\n\n\tget(): T {\n\t\treturn this.value as T\n\t}\n\n\tsubscribe(): void {\n\t\t// nothing. handler will never be called anyway\n\t}\n\n\tunsubscribe(): void {\n\t\t// nothing. we don't do anything on subscription and might as well do nothing on unsubscription\n\t}\n\n\thaveSubscribers(): boolean {\n\t\treturn false\n\t}\n\n\tmap<R>(mapper: (value: T, meta: BoxUpdateMeta | undefined) => R) {\n\t\treturn new ConstBoxImpl(mapper(this.value as T, undefined))\n\t}\n\n\tprop<K extends keyof T>(propName: K): WBox<T[K]> {\n\t\treturn new ConstBoxImpl((this.value as T)[propName])\n\t}\n\n\tgetArrayContext<E, K>(this: ConstBoxImpl<readonly E[]>, getKey: (item: E, index: number) => K): ArrayContext<E, K, ConstBoxImpl<E>> {\n\t\treturn new ConstArrayContext<E, K>(this, getKey)\n\t}\n\n\tmapArrayElements<E, R>(this: WBox<E[]>, mapper: (item: E, index: number) => R): RBox<R[]>\n\tmapArrayElements<E, R>(this: WBox<E[]>, mapper: (item: E, index: number) => R, reverseMapper: (item: R, index: number) => E): WBox<R[]>\n\tmapArrayElements<E, R>(this: ConstBoxImpl<E[]>, mapper: (item: E, index: number) => R): RBox<R[]> | WBox<R[]> {\n\t\treturn new ConstBoxImpl((this.value as E[]).map((item, index) => mapper(item, index)))\n\t}\n\n\tmapArray<E, K, R>(this: ConstBoxImpl<readonly E[]>, getKey: (item: E, index: number) => K, mapBox: (box: ArrayItemWBox<E>, index: number) => R): RBox<readonly R[]> {\n\t\tconst valueMap = new Map<K, R>()\n\t\treturn new ConstBoxImpl((this.value as E[]).map((sourceValue, i) => {\n\t\t\tconst key = getKey(sourceValue, i)\n\t\t\tif(valueMap.has(key)){\n\t\t\t\treturn valueMap.get(key)!\n\t\t\t}\n\n\t\t\tconst resultValue = mapBox(new ConstBoxImpl(sourceValue), i)\n\t\t\tvalueMap.set(key, resultValue)\n\t\t\treturn resultValue\n\t\t}))\n\t}\n\n\tset(): void {\n\t\tthrowOnChange()\n\t}\n\n\tsetProp(): void {\n\t\tthrowOnChange()\n\t}\n\n\tsetElementAtIndex(): void {\n\t\tthrowOnChange()\n\t}\n\n\tinsertElementsAtIndex(): void {\n\t\tthrowOnChange()\n\t}\n\n\tinsertElementAtIndex(): void {\n\t\tthrowOnChange()\n\t}\n\n\tappendElement(): void {\n\t\tthrowOnChange()\n\t}\n\n\tappendElements(): void {\n\t\tthrowOnChange()\n\t}\n\n\tprependElement(): void {\n\t\tthrowOnChange()\n\t}\n\n\tprependElements(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteElementsAtIndex(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteElementAtIndex(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteElements(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteElement(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteAllElements(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdeleteArrayElement(): void {\n\t\tthrowOnChange()\n\t}\n\n\tdispose(): void {\n\t\tthrowOnChange()\n\t}\n}\n\nfunction throwOnChange(): never {\n\tthrow new Error(\"You can't change anything about value of const box\")\n}\n\n// ew. but we should do it to not diverge from typings\n(ConstBoxImpl.prototype as any).isConstBox = true","import {ConstBoxImpl, constBox, WBox, RBox, Boxed, Unboxed, ValueBox, PropWBox, ArrayItemWBoxImpl, MapWBox, BaseBox, ArrayItemWBox, updateQueue, ConstBox, MRBox} from \"src/internal\"\n\n/** Wrap a value in a const box, if the value is not a box; otherwise return that box as is */\nexport function constBoxWrap<T>(boxOrValue: RBox<T>): RBox<T>\nexport function constBoxWrap<T>(boxOrValue: T): Boxed<T>\nexport function constBoxWrap<T>(boxOrValue: T): Boxed<T> {\n\treturn (isRBox(boxOrValue) ? boxOrValue : constBox(boxOrValue)) as Boxed<T>\n}\n\n/** If the value is a box - returns the value stored inside; otherwise returns passed value */\nexport function unbox<T>(boxOrValue: RBox<T>): T\nexport function unbox<T>(boxOrValue: MRBox<T>): T\nexport function unbox<T>(boxOrValue: T): Unboxed<T> {\n\treturn (isRBox(boxOrValue) ? boxOrValue.get() : boxOrValue) as Unboxed<T>\n}\n\n/** Checks if the value is a box.\n *\n * Note that every box supplied by this library is an RBox;\n * every WBox is an RBox, every const box is an RBox, etc */\nexport function isRBox<T>(value: RBox<T>): value is RBox<T>\nexport function isRBox<T>(value: MRBox<T>): value is RBox<T>\nexport function isRBox(value: unknown): value is RBox<unknown>\nexport function isRBox(value: unknown): value is RBox<unknown> {\n\treturn value instanceof BaseBox || isConstBox(value)\n}\n\n/** Checks if the value is a writable box */\nexport function isWBox<T>(value: WBox<T>): value is WBox<T>\nexport function isWBox<T>(value: RBox<T>): value is WBox<T>\nexport function isWBox<T>(value: MRBox<T>): value is WBox<T>\nexport function isWBox(value: unknown): value is WBox<unknown>\nexport function isWBox(value: unknown): value is WBox<unknown> {\n\treturn value instanceof ValueBox || value instanceof MapWBox || value instanceof PropWBox || value instanceof ArrayItemWBoxImpl\n}\n\n/** Checks if the value is a constant box.\n *\n * Constant box is a readonly box that will never change its value.\n * This allows sometimes to skip subscribing to this box alltogether and save some performance. */\nexport function isConstBox<T>(value: MRBox<T>): value is ConstBox<T>\nexport function isConstBox<T>(value: RBox<T>): value is ConstBox<T>\nexport function isConstBox(value: unknown): value is ConstBox<unknown>\nexport function isConstBox(value: unknown): value is ConstBox<unknown> {\n\treturn value instanceof ConstBoxImpl\n}\n\nexport function isArrayItemWBox<T>(value: RBox<T>): value is ArrayItemWBox<T>\nexport function isArrayItemWBox<T>(value: MRBox<T>): value is ArrayItemWBox<T>\nexport function isArrayItemWBox(value: unknown): value is ArrayItemWBox<unknown>\nexport function isArrayItemWBox(value: unknown): value is ArrayItemWBox<unknown> {\n\treturn value instanceof ArrayItemWBoxImpl\n}\n\nexport function anythingToString(x: unknown): string {\n\tif(typeof(x) === \"symbol\"){\n\t\treturn x.toString()\n\t} else {\n\t\treturn JSON.stringify(x)\n\t}\n}\n\n/** Stops subscribers from being called until the callback is completed.\n * Updates are delivered to subscribers after that.\n * Can be used in cases when you need to do updates to several unrelated boxes and need to make sure that no extra work is done */\nexport const withBoxUpdatesPaused = <T>(callback: () => T): T => updateQueue.withUpdatesPaused(callback)","import {updateQueue, type BoxChangeHandler, type BoxInternal, type UpstreamSubscriber, BoxUpdateMeta, PropBox, Subscription, Update} from \"src/internal\"\n\n/** Class that manages list of active subscribers to some box */\nexport class SubscriberList<T, O extends BoxInternal<T>> {\n\tprivate subscriptions: Map<BoxChangeHandler<T> | UpstreamSubscriber, Subscription<T>> | null = null\n\t// propboxes are in separate collection to avoid calling all of them if meta tells us that we can skip some\n\tprivate propBoxInternalSubscriptions: Map<unknown, Subscription<T>[]> | null = null\n\n\tconstructor(private readonly owner: O) {}\n\n\thaveSubscribers(): boolean {\n\t\treturn !!(this.subscriptions || this.propBoxInternalSubscriptions)\n\t}\n\n\tcallSubscribers(value: T, changeSourceBox: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tthis.notifyPropSubscribers(value, changeSourceBox, updateMeta)\n\t\tthis.notifySubscribers(value, changeSourceBox, updateMeta)\n\t\tupdateQueue.run()\n\t}\n\n\tprivate notifySubscribers(value: T, changeSourceBox?: BoxInternal<unknown> | UpstreamSubscriber, updateMeta?: BoxUpdateMeta): void {\n\t\tif(!this.subscriptions){\n\t\t\treturn\n\t\t}\n\n\t\tfor(const subscription of this.subscriptions.values()){\n\t\t\tif(subscription.receiver === changeSourceBox){\n\t\t\t\t// that box already knows what value of this box should be\n\t\t\t\t// even if there's an update already in queue - it's not a big deal\n\t\t\t\t// downstream box will get fresh value each time anyway, instead of using value from update\n\t\t\t\tsubscription.lastKnownValue = value\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tupdateQueue.enqueueUpdate(new Update(subscription, value, updateMeta))\n\t\t}\n\t}\n\n\tprivate notifyPropSubscribers(value: T, changeSourceBox: BoxInternal<unknown> | UpstreamSubscriber | undefined, updateMeta: BoxUpdateMeta | undefined): void {\n\t\tif(!this.propBoxInternalSubscriptions){\n\t\t\treturn\n\t\t}\n\n\t\tif(updateMeta && updateMeta.type === \"property_update\"){\n\t\t\tconst propSubscriptionArray = this.propBoxInternalSubscriptions.get(updateMeta.propName)\n\t\t\tif(propSubscriptionArray){\n\t\t\t\tthis.notifyPropSubscriptionArray(value, propSubscriptionArray, changeSourceBox, updateMeta)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tfor(const propSubscriptionArray of this.propBoxInternalSubscriptions.values()){\n\t\t\tthis.notifyPropSubscriptionArray(value, propSubscriptionArray, changeSourceBox, updateMeta)\n\t\t}\n\t}\n\n\tprivate notifyPropSubscriptionArray(value: T, arr: Subscription<T>[], changeSourceBox?: BoxInternal<unknown> | UpstreamSubscriber, updateMeta?: BoxUpdateMeta): void {\n\t\tfor(let i = 0; i < arr.length; i++){\n\t\t\tconst subscription = arr[i]!\n\t\t\tif(subscription.receiver === changeSourceBox){\n\t\t\t\tsubscription.lastKnownValue = value\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tupdateQueue.enqueueUpdate(new Update(subscription, value, updateMeta))\n\t\t}\n\t}\n\n\tsubscribe(handler: BoxChangeHandler<T> | UpstreamSubscriber, lastKnownValue: T): void {\n\t\tconst sub: Subscription<T> = {lastKnownValue, receiver: handler, provider: this.owner}\n\t\tif(handler instanceof PropBox){\n\t\t\tconst map: typeof this.propBoxInternalSubscriptions = this.propBoxInternalSubscriptions ||= new Map()\n\n\t\t\tlet arr = map.get(handler.propName)\n\t\t\tif(!arr){\n\t\t\t\tarr = [sub]\n\t\t\t\tmap.set(handler.propName, arr)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tfor(let i = 0; i < arr.length; i++){\n\t\t\t\tif(arr[i]!.receiver === handler){\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tarr.push(sub)\n\t\t\treturn\n\t\t}\n\n\t\tconst map: typeof this.subscriptions = this.subscriptions ||= new Map()\n\t\tif(map.has(handler)){\n\t\t\t/** It's important to avoid creating new subscription objects if there are old ones\n\t\t\t * Because update queue may hold reference to old object to update lastKnownValue\n\t\t\t * and if new object is created for same handler/downstream, this update will be lost, which is bad */\n\t\t\treturn\n\t\t}\n\t\tmap.set(handler, sub)\n\t}\n\n\tunsubscribe(handler: BoxChangeHandler<T> | UpstreamSubscriber): void {\n\t\tif(handler instanceof PropBox){\n\t\t\tif(!this.propBoxInternalSubscriptions){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet arr = this.propBoxInternalSubscriptions.get(handler.propName)\n\t\t\tif(!arr){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet sub: Subscription<T> | null = null\n\n\t\t\tarr = arr.filter(x => {\n\t\t\t\tif(x.receiver === handler){\n\t\t\t\t\tsub = x\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t})\n\n\t\t\tif(sub){\n\t\t\t\tupdateQueue.deleteUpdate(sub)\n\t\t\t}\n\n\t\t\tif(arr.length === 0){\n\t\t\t\tthis.propBoxInternalSubscriptions.delete(handler.propName)\n\t\t\t\tif(this.propBoxInternalSubscriptions.size === 0){\n\t\t\t\t\tthis.propBoxInternalSubscriptions = null\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.propBoxInternalSubscriptions.set(handler.propName, arr)\n\t\t\t}\n\t\t}\n\n\t\tif(!this.subscriptions){\n\t\t\treturn\n\t\t}\n\n\t\tthis.subscriptions.delete(handler)\n\t\tif(this.subscriptions.size === 0){\n\t\t\tthis.subscriptions = null\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif(this.subscriptions){\n\t\t\tfor(const downstream of this.subscriptions.keys()){\n\t\t\t\tif(typeof(downstream) !== \"function\"){\n\t\t\t\t\tdownstream.dispose()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}","import {isWBox, ArrayItemBox, UpstreamSubscriber, BoxInternal, ArrayItemRBoxImpl, ArrayItemWBoxImpl, ArrayContext, BoxUpdateMeta, ArrayContextControlledBox, RBox} from \"src/internal\"\n\ninterface BoxWithValue<E, K, V> {\n\treadonly box: ArrayItemBox<E, K>\n\treadonly value: V\n}\n\n/** This class controls a set of boxes that contain items of some array box\n * Links upstream array box with downstream item boxes\n *\n * In theory, we could live without this class,\n * but this means item boxes will need to perform a lot of checking every update\n * which is undesirable, because it's a performance hit */\nexport class ArrayContextImpl<E, K, V> implements UpstreamSubscriber, ArrayContext<E, K, ArrayItemBox<E, K>> {\n\tprivate readonly pairs = new Map<K, BoxWithValue<E, K, V>>()\n\tprivate childSubCount = 0\n\tprivate lastKnownUpstreamValue: readonly E[] | null = null\n\tprivate mappedValueBox: ArrayContextControlledBox<readonly V[]> | null = null\n\n\tconstructor(readonly upstream: BoxInternal<readonly E[]>, private readonly getKey: (element: E, index: number) => K, private readonly getValue: (element: ArrayItemBox<E, K>, index: number) => V) {\n\t}\n\n\ttryUpdate(skipSubCountCheck?: boolean): void {\n\t\tif(!skipSubCountCheck && this.childSubCount > 0){\n\t\t\t// the same logic as in calcbox - if we are being subscribed to, then we are subscribed to upstream\n\t\t\t// that means our value is up-to-date\n\t\t\treturn\n\t\t}\n\n\t\tconst upstreamArray = this.upstream.get()\n\t\tif(upstreamArray === this.lastKnownUpstreamValue){\n\t\t\treturn\n\t\t}\n\n\t\tthis.onUpstreamChange(this.upstream, undefined, upstreamArray)\n\t}\n\n\tprivate makeChildBox(item: E, index: number, key: K): BoxWithValue<E, K, V> {\n\t\tconst box = !isWBox(this.upstream)\n\t\t\t? new ArrayItemRBoxImpl<E, K>(this, item, index, key)\n\t\t\t: new ArrayItemWBoxImpl<E, K>(this, item, index, key)\n\t\tconst pair = {box, value: null as unknown as V}\n\t\tthis.pairs.set(key, pair)\n\t\tpair.value = this.getValue(box, index)\n\t\treturn pair\n\t}\n\n\tonUpstreamChange(_: BoxInternal<unknown>, meta: BoxUpdateMeta | undefined, upstreamArray?: readonly E[]): void {\n\t\tupstreamArray ??= this.upstream.get()\n\t\tthis.lastKnownUpstreamValue = upstreamArray\n\t\tlet newMeta: BoxUpdateMeta | undefined = undefined\n\t\tlet shouldUpdateValues = true\n\n\t\tswitch(meta?.type){\n\n\t\t\tcase \"array_item_update\": {\n\t\t\t\tconst item = upstreamArray[meta.index]!\n\t\t\t\tconst key = this.getKey(item, meta.index)\n\t\t\t\tconst pair = this.pairs.get(key)\n\t\t\t\tif(!pair){\n\t\t\t\t\tconst oldKey = this.getKey(meta.oldValue as E, meta.index)\n\t\t\t\t\tconst oldPair = this.pairs.get(oldKey)\n\t\t\t\t\tif(!oldPair){\n\t\t\t\t\t\tthrow new Error(\"Array element is not found by key \" + oldKey)\n\t\t\t\t\t}\n\t\t\t\t\tthis.pairs.delete(oldKey)\n\t\t\t\t\tthis.makeChildBox(item, meta.index, key)\n\t\t\t\t\tnewMeta = {type: \"array_item_update\", index: meta.index, oldValue: oldPair.value}\n\t\t\t\t} else {\n\t\t\t\t\tpair.box.set(item, this)\n\t\t\t\t\tshouldUpdateValues = false\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase \"array_items_insert\": {\n\t\t\t\tconst newValuesArray: V[] = new Array(meta.count)\n\n\t\t\t\tfor(const {box} of this.pairs.values()){\n\t\t\t\t\tif(box.index >= meta.index){\n\t\t\t\t\t\tbox.index += meta.count\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(let offset = 0; offset < meta.count; offset++){\n\t\t\t\t\tconst index = meta.index + offset\n\t\t\t\t\tconst item = upstreamArray[index]!\n\t\t\t\t\tconst key = this.getKey(item, index)\n\t\t\t\t\tif(this.pairs.get(key)){\n\t\t\t\t\t\tthrow new Error(\"Duplicate key: \" + key)\n\t\t\t\t\t}\n\t\t\t\t\tconst pair = this.makeChildBox(item, index, key)\n\t\t\t\t\tnewValuesArray[offset] = pair.value\n\t\t\t\t}\n\t\t\t\tnewMeta = {type: \"array_items_insert\", count: meta.count, index: meta.index}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase \"array_items_delete\": {\n\t\t\t\tconst newIndexValuePairs: {index: number, value: unknown}[] = new Array(meta.indexValuePairs.length)\n\t\t\t\tfor(let i = 0; i < meta.indexValuePairs.length; i++){\n\t\t\t\t\tconst {index, value} = meta.indexValuePairs[i]!\n\t\t\t\t\tconst key = this.getKey(value as E, index)\n\t\t\t\t\tconst pair = this.pairs.get(key)\n\t\t\t\t\tif(!pair){\n\t\t\t\t\t\tthrow new Error(\"Tried to delete item at key \" + key + \", but there's no item for that key.\")\n\t\t\t\t\t}\n\t\t\t\t\tpair.box.dispose()\n\t\t\t\t\tthis.pairs.delete(key)\n\t\t\t\t\tnewIndexValuePairs[i] = {index, value: pair.value}\n\t\t\t\t}\n\n\t\t\t\t// \"smart\" update of only boxes that has indexes shifted would be hard here\n\t\t\t\t// so let's just update all the indexes\n\t\t\t\tthis.updateAllIndex(upstreamArray)\n\n\t\t\t\tnewMeta = {type: \"array_items_delete\", indexValuePairs: newIndexValuePairs}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase \"array_items_delete_all\": {\n\n\t\t\t\tfor(const pair of this.pairs.values()){\n\t\t\t\t\tpair.box.dispose()\n\t\t\t\t}\n\t\t\t\tthis.pairs.clear()\n\t\t\t\tnewMeta = {type: \"array_items_delete_all\"}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tconst outdatedKeys = new Set(this.pairs.keys())\n\t\t\t\tfor(let index = 0; index < upstreamArray.length; index++){\n\t\t\t\t\tconst item = upstreamArray[index]!\n\t\t\t\t\tconst key = this.getKey(item, index)\n\t\t\t\t\tconst pair = this.pairs.get(key)\n\t\t\t\t\tif(pair){\n\t\t\t\t\t\tif(!outdatedKeys.has(key)){\n\t\t\t\t\t\t\tthrow new Error(\"Constraint violated, key is not unique: \" + key)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpair.box.set(item, this)\n\t\t\t\t\t\tpair.box.index = index\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.makeChildBox(item, index, key)\n\t\t\t\t\t}\n\n\t\t\t\t\toutdatedKeys.delete(key)\n\t\t\t\t}\n\n\t\t\t\tfor(const key of outdatedKeys){\n\t\t\t\t\tconst pair = this.pairs.get(key)!\n\t\t\t\t\tpair.box.dispose()\n\t\t\t\t\tthis.pairs.delete(key)\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif(this.mappedValueBox !== null && shouldUpdateValues){\n\t\t\tthis.mappedValueBox.set(this.makeValuesArray(), this, newMeta)\n\t\t}\n\t}\n\n\tprivate updateAllIndex(upstreamArray: readonly E[]): void {\n\t\tfor(let i = 0; i < upstreamArray.length; i++){\n\t\t\tconst item = upstreamArray[i]!\n\t\t\tconst key = this.getKey(item, i)\n\t\t\tconst pair = this.pairs.get(key)\n\t\t\tif(!pair){\n\t\t\t\tcontinue // whatever, we'll create them on next update call\n\t\t\t}\n\t\t\tpair.box.index = i\n\t\t}\n\t}\n\n\tonDownstreamChange(downstreamBox: ArrayItemBox<E, K>, value: E): void {\n\t\tconst newKey = this.getKey(value, downstreamBox.index)\n\t\tif(newKey !== downstreamBox.key){\n\t\t\t/* changing keys within one box is not allowed\n\t\t\tsure, we can handle it... within this context;\n\t\t\tbut there could be more than one context for an array box,\n\t\t\tand that other context won't be updated, which will increase confusion.\n\n\t\t\tthat is, the only way for other contexts to handle the change is to disconnect the box (and create another)\n\t\t\tthat means, for the sake of consistency, that we should also disconnect this box\n\t\t\twhich is just confusing, because setting value of a box disconnects it...? what?\n\n\t\t\tchange of key through direct .setElementAtIndex or whatever it's called is still allowed\n\t\t\tbecause this won't lead to such confusion\n\n\t\t\talso changing a key like that is generally confusing idea, not sure why anyone would do that */\n\t\t\tthrow new Error(\"Array item box changed key, which is not allowed; was: \" + downstreamBox.key + \", now \" + newKey)\n\t\t}\n\n\t\tconst oldUpstreamValue = this.upstream.get()\n\t\tif(this.childSubCount < 1){\n\t\t\t// if we wasn't subscribed - there's a chance that upstream box changed unpredictably\n\t\t\t// that includes index changes\n\t\t\t// so, if we are gonna rely on index - we should update it\n\t\t\tthis.tryUpdate()\n\t\t\tdownstreamBox.checkIfStillAttached()\n\t\t}\n\n\t\tconst newUpstreamValue: E[] = [...oldUpstreamValue]\n\t\tconst oldElementValue = newUpstreamValue[downstreamBox.index]\n\t\tnewUpstreamValue[downstreamBox.index] = value\n\t\tthis.lastKnownUpstreamValue = newUpstreamValue\n\t\tthis.upstream.set(newUpstreamValue, this, {type: \"array_item_update\", index: downstreamBox.index, oldValue: oldElementValue})\n\t}\n\n\tonDownstreamSubscription(): void {\n\t\tthis.childSubCount++\n\t\tif(this.childSubCount === 1){\n\t\t\tthis.tryUpdate(true)\n\t\t\tthis.upstream.subscribe(this)\n\t\t}\n\t}\n\n\tonDownstreamUnsubscription(): void {\n\t\tthis.childSubCount--\n\t\tif(this.childSubCount === 0){\n\t\t\tthis.unsubscribeFromUpstream()\n\t\t}\n\t}\n\n\tprivate unsubscribeFromUpstream(): void {\n\t\tthis.upstream.unsubscribe(this)\n\t}\n\n\tgetBoxes(): ArrayItemBox<E, K>[] {\n\t\tthis.tryUpdate()\n\t\tconst upstreamValue = this.upstream.get()\n\t\tconst result: ArrayItemBox<E, K>[] = new Array(upstreamValue.length)\n\t\tfor(let i = 0; i < upstreamValue.length; i++){\n\t\t\tconst oldValue = upstreamValue[i]!\n\t\t\tconst key = this.getKey(oldValue, i)\n\t\t\tconst pair = this.pairs.get(key)\n\t\t\tif(!pair){\n\t\t\t\t// should realistically never happen\n\t\t\t\tthrow new Error(\"Cannot get array item box list: no downstream box for key \" + key)\n\t\t\t}\n\t\t\tresult[i] = pair.box\n\t\t}\n\t\treturn result\n\t}\n\n\tgetBoxForKey(key: K): ArrayItemBox<E, K> {\n\t\tthis.tryUpdate()\n\t\tconst pair = this.pairs.get(key)\n\t\tif(!pair){\n\t\t\tthrow new Error(\"No box for key \" + key)\n\t\t}\n\t\treturn pair.box\n\t}\n\n\tisItemBoxAttached(itemBox: RBox<unknown>): boolean {\n\t\treturn itemBox instanceof ArrayItemBox\n\t\t\t? this.pairs.get(itemBox.key)?.box === itemBox\n\t\t\t: this.mappedValueBox === itemBox\n\t}\n\n\tdispose(): void {\n\t\tthis.lastKnownUpstreamValue = null // to trigger update next time\n\t\tfor(const pair of this.pairs.values()){\n\t\t\tpair.box.dispose()\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn `ArrayContext(${this.getKey})`\n\t}\n\n\tgetValueArrayBox(): ArrayContextControlledBox<readonly V[]> {\n\t\tif(!this.mappedValueBox){\n\t\t\tthis.mappedValueBox = new ArrayContextControlledBox<readonly V[]>(this, this.makeValuesArray())\n\t\t}\n\t\treturn this.mappedValueBox\n\t}\n\n\tprivate makeValuesArray(): readonly V[] {\n\t\tthis.tryUpdate()\n\t\tif(!this.lastKnownUpstreamValue){\n\t\t\t// should not happen\n\t\t\tthrow new Error(\"Array context update failed: no known upstream value (wtf?)\")\n\t\t}\n\t\tconst values: V[] = new Array(this.pairs.size)\n\t\tfor(let i = 0; i < this.lastKnownUpstreamValue.length; i++){\n\t\t\t// oof. wonder if there's a better way\n\t\t\tvalues[i] = this.pairs.get(this.getKey(this.lastKnownUpstreamValue[i]!, i))!.value\n\t\t}\n\t\treturn values\n\t}\n\n}","import {ConstBoxImpl, ArrayContext} from \"src/internal\"\n\nexport class ConstArrayContext<E, K> implements ArrayContext<E, K, ConstBoxImpl<E>> {\n\n\tprivate boxMap: Map<K, ConstBoxImpl<E>> | null = null\n\tprivate boxArray: ConstBoxImpl<E>[] | null = null\n\n\tconstructor(private readonly upstream: ConstBoxImpl<readonly E[]>, private readonly getKey: (item: E, index: number) => K) {}\n\n\tgetBoxForKey(key: K): ConstBoxImpl<E> {\n\t\tif(!this.boxMap){\n\t\t\tthis.boxMap = new Map()\n\t\t\tconst upstreamArray = this.upstream.get()\n\t\t\tfor(let i = 0; i < upstreamArray.length; i++){\n\t\t\t\tconst item = upstreamArray[i]!\n\t\t\t\tconst key = this.getKey(item, i)\n\t\t\t\tif(this.boxMap.has(key)){\n\t\t\t\t\tthrow new Error(\"Duplicate array key: \" + key)\n\t\t\t\t}\n\t\t\t\tthis.boxMap.set(key, new ConstBoxImpl(item))\n\t\t\t}\n\t\t}\n\n\t\tconst box = this.boxMap.get(key)\n\t\tif(!box){\n\t\t\tthrow new Error(\"No box for key \" + key)\n\t\t}\n\n\t\treturn box\n\t}\n\n\tgetBoxes(): ConstBoxImpl<E>[] {\n\t\tif(!this.boxArray){\n\t\t\tconst upstreamArray = this.upstream.get()\n\t\t\tthis.boxArray = upstreamArray.map(item => new ConstBoxImpl(item))\n\t\t}\n\t\treturn [...this.boxArray]\n\t}\n\n}","import {Subscription, UpdateReceiver, MapBox, Update, CalcBox} from \"src/internal\"\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype NTuple<X, T> = X extends `${infer _}${infer B}` ? [T, ...NTuple<B, T>] : []\ntype SubQueue<T> = Map<Subscription<T>, Update<T>>\n\nclass UpdateQueue {\n\tprivate readonly subQueues = new Array(3).fill(null).map(() => new Map()) as NTuple<\"124\", SubQueue<unknown>>\n\tprivate isRunning = false\n\tprivate pauseLevel = 0\n\n\tprivate getSubQueue<T>(receiver: UpdateReceiver<T>): SubQueue<T> {\n\t\t// this exact ordering of update distribution is dictated by the need to avoid showing inconsistent state to user callbacks\n\t\tif(typeof(receiver) === \"function\"){\n\t\t\treturn this.subQueues[2] as SubQueue<T>\n\t\t} else if(receiver instanceof CalcBox || receiver instanceof MapBox){\n\t\t\treturn this.subQueues[1] as SubQueue<T>\n\t\t} else {\n\t\t\treturn this.subQueues[0] as SubQueue<T>\n\t\t}\n\t}\n\n\twithUpdatesPaused<T>(callback: () => T): T {\n\t\tthis.pauseLevel++\n\t\ttry {\n\t\t\treturn callback()\n\t\t} finally {\n\t\t\tthis.pauseLevel--\n\t\t\tthis.run()\n\t\t}\n\t}\n\n\tenqueueUpdate<T>(update: Update<T>): void {\n\t\tconst subQueue = this.getSubQueue(update.subscription.receiver)\n\t\tconst oldUpdate = subQueue.get(update.subscription)\n\t\tif(oldUpdate){\n\t\t\t// we cannot have two updates queued at the same time, because it doesn't make sense to in general\n\t\t\t// so, when we queue next update, previous update is lost\n\t\t\t// that means that we MUST do full update, because if both of the updates are partial - some meaning is lost\n\t\t\t// and that's why we are clearing meta here\n\t\t\tupdate.meta = undefined\n\t\t}\n\t\tif(update.value === update.subscription.lastKnownValue){\n\t\t\tsubQueue.delete(update.subscription)\n\t\t} else {\n\t\t\tsubQueue.set(update.subscription, update)\n\t\t}\n\t}\n\n\tdeleteUpdate<T>(subscription: Subscription<T>): void {\n\t\tthis.getSubQueue(subscription.receiver).delete(subscription)\n\t}\n\n\trun(): void {\n\t\tif(this.isRunning || this.pauseLevel > 0){\n\t\t\treturn\n\t\t}\n\t\tthis.isRunning = true\n\t\ttry {\n\t\t\tthis.runInternal()\n\t\t} finally {\n\t\t\tthis.isRunning = false\n\t\t}\n\t}\n\n\tprivate runInternal(): void {\n\t\twhile(true){\n\t\t\tfor(let i = 0; i < this.subQueues.length; i++){\n\t\t\t\tconst subQueue = this.subQueues[i]!\n\t\t\t\tconst update = subQueue.values().next().value as Update<unknown> | undefined\n\t\t\t\tif(!update){\n\t\t\t\t\tif(i === this.subQueues.length - 1){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tsubQueue.delete(update.subscription)\n\t\t\t\tupdate.deliver()\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport const updateQueue = new UpdateQueue()","import {CalcBox, anythingToString, Subscription, BoxUpdateMeta, MapBox} from \"src/internal\"\n\n/** Update is a single act of notifying a subscriber about change\n *\n * This class holds information about one update, to be executed when the time is right. */\nexport class Update<T> {\n\tconstructor(\n\t\treadonly subscription: Subscription<T>,\n\t\treadonly value: T,\n\t\tpublic meta: BoxUpdateMeta | undefined\n\t) {\n\t\tif(subscription.receiver instanceof CalcBox || subscription.receiver instanceof MapBox){\n\t\t\t/** We deliver updates to those boxes with the flag to enforce proper recalculation order;\n\t\t\t * if we deliver updates in order of receiving, there could be situation when some calcBox gets update before its upstream\n\t\t\t * and therefore should be recalculated again later;\n\t\t\t * also it can be confusing to user, because inconsistent state could be observed then */\n\t\t\tsubscription.receiver.forcedShouldRecalculate = true\n\t\t}\n\t\t// console.log(\"created \" + this)\n\t}\n\n\tdeliver(): void {\n\t\t// console.log(\"delivering \" + this)\n\t\tthis.subscription.lastKnownValue = this.value\n\t\tconst receiver = this.subscription.receiver\n\t\tif(receiver instanceof CalcBox || receiver instanceof MapBox){\n\t\t\tif(receiver.forcedShouldRecalculate){\n\t\t\t\t// it could be called before us, if there are other boxes depending on this calcbox\n\t\t\t\treceiver.recalculateIfShould(this.subscription.provider, this.meta)\n\t\t\t}\n\t\t} else if(typeof(receiver) === \"function\"){\n\t\t\treceiver(this.value, this.subscription.provider, this.meta)\n\t\t} else {\n\t\t\treceiver.onUpstreamChange(this.subscription.provider, this.meta)\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn `Update(${anythingToString(this.value)}, from ${this.subscription.provider} to ${this.subscription.receiver}${!this.meta ? \"\" : \", \" + JSON.stringify(this.meta)})`\n\t}\n}","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1Mamc\"))]).then(() => parcelRequire('hppz9'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fVQbG\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1XIBz\"))]).then(() => parcelRequire('1KmVa'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7kKo2\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"lebhK\"))]).then(() => parcelRequire('aFKcI'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same link element twice (e.g. if it was already in the HTML)\n    var existingLinks = document.getElementsByTagName('link');\n\n    if ([].concat(existingLinks).some(function isCurrentBundle(link) {\n      return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n    })) {\n      resolve();\n      return;\n    }\n\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = bundle;\n\n    link.onerror = function (e) {\n      link.onerror = link.onload = null;\n      link.remove();\n      reject(e);\n    };\n\n    link.onload = function () {\n      link.onerror = link.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(link);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fVQbG\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"euz4T\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bqwwZ\"))]).then(() => parcelRequire('jfwrQ'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k7EvP\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"lWyzW\"))]).then(() => parcelRequire('jfUgO'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"7LJwX\"))]).then(() => parcelRequire('8K2HD'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"4gSIb\"))).then(() => parcelRequire('TmoKT'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iiMn1\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"7K5yw\"))]).then(() => parcelRequire('aADgs'));","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bQr1K\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6ABmY\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"7gO40\"))]).then(() => parcelRequire('baWBU'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4qjKV\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"4734B\"))]).then(() => parcelRequire('94vB5'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gcG39\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"eRSsx\"))]).then(() => parcelRequire('jCDUf'));","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gcG39\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1VwGi\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"inafc\"))]).then(() => parcelRequire('9JVPX'));","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bOWbs\\\":\\\"index.0365fc16.js\\\",\\\"dfdLN\\\":\\\"thumb.895f5cc7.png\\\",\\\"aCsz7\\\":\\\"thumb.77a5726d.png\\\",\\\"j4vlb\\\":\\\"thumb.33c39890.png\\\",\\\"fprpQ\\\":\\\"thumb.c40fe0b7.png\\\",\\\"kBiy4\\\":\\\"thumb.49fbc4f8.png\\\",\\\"k0jLu\\\":\\\"thumb.49fbc4f8.png\\\",\\\"f8sbq\\\":\\\"thumb.da797b04.png\\\",\\\"h4Iq5\\\":\\\"thumb.2fa4c89d.png\\\",\\\"avd87\\\":\\\"thumb.2f679df3.png\\\",\\\"8314W\\\":\\\"default_thumbnail.11ebbe69.png\\\",\\\"1Mamc\\\":\\\"digger.a65e09ee.js\\\",\\\"1VwGi\\\":\\\"digger.3c0c882a.js\\\",\\\"1XIBz\\\":\\\"falling_cubes.fb667eb7.js\\\",\\\"9I2D8\\\":\\\"orange_square.cef03ba2.png\\\",\\\"fVQbG\\\":\\\"falling_cubes.fac62332.js\\\",\\\"lebhK\\\":\\\"timer.7625787a.js\\\",\\\"7kKo2\\\":\\\"timer.7e662a0d.css\\\",\\\"bqwwZ\\\":\\\"squaremix_3d.4c30230c.js\\\",\\\"6fzAl\\\":\\\"pine_forest.bc33757d.png\\\",\\\"euz4T\\\":\\\"squaremix_3d.5214cf99.css\\\",\\\"lWyzW\\\":\\\"star_travel.8f858de4.js\\\",\\\"k7EvP\\\":\\\"star_travel.0db4ef9f.css\\\",\\\"7LJwX\\\":\\\"planets.00d61749.js\\\",\\\"4gSIb\\\":\\\"particle_toy.1276d486.js\\\",\\\"7K5yw\\\":\\\"wave_function_collapse.54910ad0.js\\\",\\\"iiMn1\\\":\\\"wave_function_collapse.cb58976a.css\\\",\\\"7gO40\\\":\\\"ribcage_converter.00360728.js\\\",\\\"4734B\\\":\\\"factorio_pixelart.2bf3f3de.js\\\",\\\"4qjKV\\\":\\\"factorio_pixelart.2347219f.css\\\",\\\"eRSsx\\\":\\\"zen_blockbreaker.b77dd434.js\\\",\\\"gcG39\\\":\\\"zen_blockbreaker.682a1ff3.css\\\",\\\"inafc\\\":\\\"random_rhombus_tilings.6730e67d.js\\\",\\\"d9iEL\\\":\\\"rhombus_randomiser.7fadbe9c.wasm\\\",\\\"6ABmY\\\":\\\"ribcage_converter.ff57643c.css\\\",\\\"bQr1K\\\":\\\"index.0bc1fa92.css\\\"}\"));","import {initializeCardboardDom, waitDocumentLoaded} from \"@nartallax/cardboard-dom\"\nimport {router} from \"website/routes\"\n// https://github.com/parcel-bundler/parcel/issues/8716\n// this really should be included in index.html\nimport * as css from \"./style/global.module.scss\"\n\nasync function main(): Promise<void> {\n\tawait waitDocumentLoaded()\n\tawait initializeCardboardDom()\n\tvoid css\n\tconst appRoot = document.getElementById(\"app\")\n\tif(!appRoot){\n\t\tthrow new Error(\"No app root!\")\n\t}\n\trouter.startAt(appRoot)\n}\n\nvoid main()","import {tag} from \"@nartallax/cardboard-dom\"\nimport {SketchBlock} from \"website/controls/sketch_block\"\nimport {sketchDescriptions} from \"website/sketches\"\nimport * as css from \"./main_page.module.scss\"\n\nexport function MainPage(): HTMLElement {\n\treturn tag({class: css.sketchesContainer},\n\t\tObject.values(sketchDescriptions)\n\t\t\t.filter(sketch => !sketch.hidden)\n\t\t\t.map(sketch => SketchBlock(sketch))\n\t)\n}","import {tag} from \"@nartallax/cardboard-dom\"\nimport {waitDOMEvent} from \"common/wait_dom_event\"\nimport {CountdownTimer} from \"website/controls/countdown_timer\"\nimport {noSketchInfoOnSketchPageArgName} from \"website/controls/sketch_page\"\nimport {router, sketchRouteById} from \"website/routes\"\nimport {SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_block.module.scss\"\n\nexport function SketchBlock(sketch: SketchDescription): HTMLElement {\n\n\tconst imgContainer = tag({class: css.imgContainer}, [\n\t\ttag({tag: \"img\", attrs: {src: sketch.thumbnail, alt: sketch.description}})\n\t])\n\n\tconst root = tag({\n\t\tclass: css.sketch,\n\t\tonClick: () => router.goTo(sketchRouteById(sketch.id))\n\t}, [\n\t\timgContainer,\n\t\ttag({class: css.sketchTitle}, [sketch.name])\n\t])\n\n\tlet timer: Timer | null = null\n\troot.addEventListener(\"mouseenter\", () => {\n\t\tif(timer){\n\t\t\treturn\n\t\t}\n\t\ttimer = runSketchTimer(sketch, imgContainer, 1500)\n\t}, {passive: true})\n\n\troot.addEventListener(\"mouseleave\", () => {\n\t\ttimer?.stop()\n\t\ttimer = null\n\t}, {passive: true})\n\n\treturn root\n}\n\ninterface Timer {\n\tstop(): void\n}\n\nfunction runSketchTimer(sketch: SketchDescription, container: HTMLElement, time: number): Timer {\n\tlet stopped = false\n\tlet timerEl: HTMLElement | null = null\n\tlet sketchFrame: HTMLIFrameElement | null = null\n\n\tfunction cleanup() {\n\t\ttimerEl?.remove()\n\t\tsketchFrame?.remove()\n\t}\n\n\t(async() => {\n\t\ttimerEl = tag({\n\t\t\tclass: css.timerBackground,\n\t\t\tstyle: {animationDuration: ((time / 4) / 1000) + \"s\"}\n\t\t}, [\n\t\t\tCountdownTimer(time)\n\t\t])\n\t\tcontainer.appendChild(timerEl)\n\n\t\tawait sleep(time / 2)\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\n\t\tconst url = router.formRouteURL(sketchRouteById(sketch.id), {[noSketchInfoOnSketchPageArgName]: true})\n\t\tsketchFrame = tag({\n\t\t\ttag: \"iframe\",\n\t\t\tclass: css.sketchPreview,\n\t\t\tattrs: {src: url}\n\t\t})\n\t\tcontainer.appendChild(sketchFrame)\n\t\tawait Promise.all([\n\t\t\tsleep(time / 2),\n\t\t\twaitDOMEvent(sketchFrame, \"load\")\n\t\t])\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\n\t\tsketchFrame.classList.add(css.completed ?? \"\")\n\t\t// timerEl?.remove()\n\t})()\n\n\treturn {stop: () => {\n\t\tstopped = true\n\t\tcleanup()\n\t}}\n}\n\nfunction sleep(ms: number): Promise<void> {\n\treturn new Promise(ok => setTimeout(ok, ms))\n}","type DOMEventEmitter<K, E> = {\n\taddEventListener(name: K, handler: (e: E) => void): void\n}\n\ntype DOMEventEmitterWithError<K, E> = DOMEventEmitter<K, E> & {\n\taddEventListener(name: \"error\", handler: (e: ErrorEvent) => void): void\n}\n\nexport function waitDOMEvent<K, E, I extends DOMEventEmitterWithError<K, E>>(obj: I, name: K): Promise<E> {\n\treturn new Promise((ok, bad) => {\n\t\tobj.addEventListener(\"error\", err => bad(new Error(err.message)))\n\t\tobj.addEventListener(name, e => ok(e))\n\t})\n}","import {svgTag} from \"@nartallax/cardboard-dom\"\nimport * as css from \"./countdown_timer.module.scss\"\n\nexport function CountdownTimer(time: number): SVGElement {\n\tconst size = 50\n\tconst stroke = 5\n\tconst radius = (size / 2) - stroke\n\tconst len = 2 * Math.PI * radius\n\n\tconst root = svgTag({\n\t\ttag: \"svg\",\n\t\tattrs: {width: size, height: size, viewBox: `${-size / 2} ${-size / 2} ${size} ${size}`},\n\t\tclass: css.countdown\n\t}, [\n\t\tsvgTag({tag: \"circle\", attrs: {r: radius, \"stroke-width\": stroke}}),\n\t\tsvgTag({tag: \"circle\",\n\t\t\tattrs: {\n\t\t\t\tr: radius,\n\t\t\t\t\"stroke-width\": stroke,\n\t\t\t\t\"stroke-dasharray\": len,\n\t\t\t\t\"stroke-dashoffset\": -len + \"px\",\n\t\t\t\t\"animation-duration\": (time / 1000) + \"s\"\n\t\t\t}})\n\t])\n\n\treturn root\n}","@import \"/src/website/style/common\";\n\n.countdown {\n\topacity: 0.5;\n\n\tcircle {\n\t\tfill: none;\n\n\t\t&:first-child {\n\t\t\tstroke: $font-color;\n\t\t}\n\n\t\t&:last-child {\n\t\t\tstroke: $foreground-secondary-color;\n\t\t\tanimation: arc 1s linear;\n\t\t\trotate: -90deg;\n\t\t}\n\t}\n}\n\n@keyframes arc {\n\t0% { stroke-dashoffset: 0px }\n}","import {tag} from \"@nartallax/cardboard-dom\"\nimport {SketchInfoButton} from \"website/controls/sketch_info_button\"\nimport {router} from \"website/routes\"\nimport {SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_page.module.scss\"\n\nexport const noSketchInfoOnSketchPageArgName = \"no_sketch_info\"\n\nexport function SketchPage(sketch: SketchDescription): HTMLElement {\n\tconst root = tag({class: css.sketchRoot})\n\n\tconst noSketchInfo = router.getArgument(noSketchInfoOnSketchPageArgName);\n\n\t(async() => {\n\t\ttry {\n\t\t\tconst code = await sketch.code()\n\t\t\tcode.main(root, {isPreview: !!noSketchInfo})\n\t\t} catch(e){\n\t\t\tconsole.error(e)\n\t\t\troot.textContent = \"Failed to load sketch.\"\n\t\t}\n\t})()\n\n\t// TODO: two roots? wtf\n\treturn tag({class: css.sketchRoot}, [\n\t\troot,\n\t\tnoSketchInfo ? null : SketchInfoButton(sketch)\n\t])\n}","import {tag} from \"@nartallax/cardboard-dom\"\nimport {ContentReference, SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_info_button.module.scss\"\n\nconst td = (x: number) => x < 10 ? \"0\" + x : \"\" + x\n\nconst formatDate = (date: Date) => `${date.getFullYear()}.${td(date.getMonth() + 1)}.${td(date.getDate())}`\n\nfunction renderContentRefList(title: string, items: ContentReference[]): HTMLElement {\n\tconst line = tag({class: \"sketch-info-line\"}, [`${title}:`])\n\titems.forEach(item => {\n\t\tlet subline: HTMLElement\n\t\tconst text = item.description ?? item.url ?? \"???\"\n\t\tif(item.url){\n\t\t\tsubline = tag({tag: \"a\", attrs: {href: item.url, target: \"_blank\", rel: \"noopener noreferrer\"}}, [text])\n\t\t} else {\n\t\t\tsubline = tag([text])\n\t\t}\n\t\tsubline.className = css.sketchInfoSubline ?? \"\"\n\t\tline.appendChild(subline)\n\t})\n\treturn line\n}\n\nconst getPosStyle = (_pos: SketchDescription[\"infoButtonPosition\"], margin: string) => {\n\tconst pos = _pos ?? \"topLeft\"\n\tconst posIsTop = pos === \"topLeft\" || pos === \"topRight\"\n\tconst posIsLeft = pos === \"topLeft\" || pos === \"bottomLeft\"\n\treturn {\n\t\ttop: posIsTop ? margin : undefined,\n\t\tbottom: posIsTop ? undefined : margin,\n\t\tleft: posIsLeft ? margin : undefined,\n\t\tright: posIsLeft ? undefined : margin\n\t}\n}\n\nexport function SketchInfoButton(d: SketchDescription): HTMLElement {\n\tconst button = tag({\n\t\tclass: css.sketchInfoButton,\n\t\tstyle: getPosStyle(d.infoButtonPosition, \"0.5rem\")\n\t}, [\"i\"])\n\tbutton.addEventListener(\"click\", () => {\n\t\tconst block = tag({\n\t\t\tclass: css.sketchInfoBlock,\n\t\t\tstyle: getPosStyle(d.infoButtonPosition, \"0px\")\n\t\t})\n\n\t\tblock.appendChild(tag([d.name]))\n\t\tblock.appendChild(tag([d.description]))\n\t\tblock.appendChild(tag({tag: \"hr\"}))\n\t\tblock.appendChild(tag([`Created at: ${formatDate(d.date)}`]))\n\t\t// TODO: links here\n\t\tblock.appendChild(tag([`Tags: ${d.tags.map(tag => tag.name).join(\", \")}`]))\n\n\t\tif(d.inspiration){\n\t\t\tblock.appendChild(renderContentRefList(\"Inspired with\", d.inspiration))\n\t\t}\n\n\t\tif(d.usedContent){\n\t\t\tblock.appendChild(renderContentRefList(\"Used content\", d.usedContent))\n\t\t}\n\n\t\tblock.appendChild(tag({tag: \"hr\"}))\n\t\tblock.appendChild(tag({tag: \"button\", onClick: () => block.remove()}, [\"Close\"]))\n\n\t\tbutton.after(block)\n\t})\n\tdocument.body.appendChild(button)\n\treturn button\n}","@import \"/src/website/style/vars\";\n@import \"/src/website/style/common\";\n\n.sketchInfoButton {\n\tborder-radius: 100%;\n\tborder: 3px solid #fff;\n\topacity: 0.75;\n\tposition: absolute;\n\tcursor: pointer;\n\ttransition: 0.25s;\n\twidth: 2rem;\n    height: 2rem;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.25rem;\n    color: $font-color;\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n\n}\n\n.sketchInfoBlock {\n\t@extend .foreground-block;\n\n\tposition: absolute;\n\tcolor: $font-color;\n\tpadding: 0.5em;\n\tfont-weight: normal;\n\tborder-width: 0 2px 2px 0;\n\tline-height: 1.5em;\n\tmax-width: 30rem;\n\n\ta {\n\t\t@extend .text-stroke;\n\n\t\tcolor: $font-color;\n\t\ttext-decoration: none;\n\t}\n\n\thr {\n\t\theight: 0;\n\t\tborder-bottom: 2px solid $font-color;\n\t}\n\n\tbutton {\n\t\t@extend .text-stroke;\n\n\t\tbackground-color: $foreground-secondary-color;\n\t\tcolor: $font-color;\n\t\tborder: 0;\n\t\tfont-size: inherit;\n\t\tpadding: 0.35em 1.25em 0.25em 1.25em;\n\t\tcursor: pointer;\n\t}\n}\n\n.sketchInfoSubline {\n\tmargin-left: 0.5em;\n\tdisplay: block;\n}",".sketchPage {\n\twidth: 100vw;\n\theight: 100vh;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.sketchRoot {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\toverflow: hidden;\n}","@import \"/src/website/style/common\";\n@import \"/src/website/style/vars\";\n\n.sketch {\n\t@extend .foreground-block;\n\tpadding: 0.35rem;\n\tmargin: 0.5rem;\n\tcursor: pointer;\n\n\ttransform: scale(1.0);\n\ttransition: 0.25s;\n\tz-index: 0;\n\n\t&:hover {\n\t\ttransform: scale(1.15);\n\t\tz-index: 1;\n\t}\n\n}\n\n.sketchTitle {\n\t@extend .text-stroke;\n\n\tmargin-left: 5px;\n}\n\n.imgContainer {\n\n\twidth: 300px;\n\theight: 200px;\n\tposition: relative;\n\tborder: 5px solid $foreground-primary-color;\n\n\t> img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t}\n}\n\n.timerBackground {\n\tposition: absolute;\n\tbackground: rgba(0, 0, 0, 0.5);\n\twidth: 100%;\n\theight: 100%;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\tanimation: timerBackgroundColor 1s ease-out;\n}\n\n@keyframes timerBackgroundColor {\n\t0% { background: rgba(0, 0, 0, 0); }\n\t100% { background: rgba(0, 0, 0, 0.5); }\n}\n\n.sketchPreview {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tborder: 0;\n\tz-index: -1;\n\n\t&.completed {\n\t\tz-index: 1;\n\t}\n\n\tpointer-events: none;\n}","export interface ContentTag {\n\treadonly id: ContentTagId\n\treadonly name: string\n\treadonly description: string\n}\n\nconst _tags = {\n\tsimulation: {\n\t\tname: \"Simulation\",\n\t\tdescription: \"Simplified recreation of real life patterns, regularities and effects.\"\n\t},\n\tart: {\n\t\tname: \"Art\",\n\t\tdescription: \"By my definition art is something that is created with purpose of evoking emotions.\"\n\t},\n\tthreejs: {\n\t\tname: \"THREE.js\",\n\t\tdescription: \"Visual composition that uses THREE.js to render.\"\n\t},\n\toimojs: {\n\t\tname: \"Oimo.js\",\n\t\tdescription: \"Physical simulation using Oimo.js engine.\"\n\t},\n\tmatterjs: {\n\t\tname: \"Matter.js\",\n\t\tdescription: \"Physical simulation using Matter.js engine.\"\n\t},\n\ttool: {\n\t\tname: \"Tool\",\n\t\tdescription: \"A thing that helps achieving some goals.\"\n\t},\n\tcss: {\n\t\tname: \"CSS\",\n\t\tdescription: \"Advanced techniques of using CSS.\"\n\t},\n\twebgl: {\n\t\tname: \"WebGL\",\n\t\tdescription: \"Usage of WebGL.\"\n\t},\n\tsvg: {\n\t\tname: \"SVG\",\n\t\tdescription: \"Usage of SVG.\"\n\t},\n\tevolution: {\n\t\tname: \"Evolution\",\n\t\tdescription: \"Demonstration of evolution.\"\n\t},\n\tgame: {\n\t\tname: \"Game\",\n\t\tdescription: \"Interactive piece of enternainment.\"\n\t}\n}\n\nexport const contentTags = (() => {\n\tconst res: Record<string, ContentTag> = {}\n\tfor(const id in _tags){\n\t\tres[id] = {..._tags[id as ContentTagId], id: id as ContentTagId}\n\t}\n\treturn res as {readonly [id in ContentTagId]: ContentTag}\n})()\n\nexport type ContentTagId = keyof typeof _tags","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dfdLN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aCsz7\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"j4vlb\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fprpQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kBiy4\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k0jLu\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"f8sbq\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"h4Iq5\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"avd87\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8314W\")).toString();","import {ContentTag, contentTags} from \"website/content_tags\"\nimport fallingCubesThumb from \"sketches/falling_cubes/thumb.png\"\nimport starTravelThumb from \"sketches/star_travel/thumb.png\"\nimport timerThumb from \"sketches/timer/thumb.png\"\nimport squaremix3dThumb from \"sketches/squaremix_3d/thumb.png\"\nimport planetsThumb from \"sketches/planets/thumb.png\"\nimport particleToyThumb from \"sketches/particle_toy/thumb.png\"\nimport waveFunctionCollapseThumb from \"sketches/wave_function_collapse/thumb.png\"\nimport zenBlockbreakerThumb from \"sketches/zen_blockbreaker/thumb.png\"\nimport randomRhombusTilingsThumb from \"sketches/random_rhombus_tilings/thumb.png\"\nimport notImplementedThumb from \"./default_thumbnail.png\"\n\nexport interface SketchDescription {\n\treadonly id: SketchId\n\treadonly name: string\n\treadonly description: string\n\treadonly date: Date\n\treadonly tags: readonly ContentTag[]\n\treadonly inspiration?: ContentReference[]\n\treadonly usedContent?: ContentReference[]\n\tcode(): Promise<SketchObject>\n\treadonly hidden?: boolean\n\treadonly thumbnail: string\n\treadonly infoButtonPosition?: \"topLeft\" | \"topRight\" | \"bottomLeft\" | \"bottomRight\"\n}\n\ninterface SketchParams {\n\tisPreview: boolean\n}\n\ninterface SketchObject {\n\tmain(root: HTMLElement, params: SketchParams): void\n}\n\nexport interface ContentReference {\n\treadonly description?: string\n\treadonly url?: string\n}\n\nconst _sketches = {\n\tdigger: {\n\t\tname: \"Digger\",\n\t\tdescription: \"Game about excavation of useful minerals.\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Old DOS game\",\n\t\t\turl: \"https://www.youtube.com/watch?v=l0yQfyJlqdA\"\n\t\t}],\n\t\tdate: new Date(2022, 7, 9),\n\t\ttags: [contentTags.game, contentTags.svg],\n\t\thidden: true,\n\t\tcode: () => import(\"sketches/digger/digger\"),\n\t\tthumbnail: notImplementedThumb\n\t},\n\n\tfalling_cubes: {\n\t\tname: \"Falling cubes\",\n\t\tdescription: \"Animation of falling cubes\",\n\t\tinspiration: [{\n\t\t\tdescription: \"A gif without clear source\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 27),\n\t\ttags: [contentTags.threejs, contentTags.oimojs],\n\t\tcode: () => import(\"sketches/falling_cubes/falling_cubes\"),\n\t\tthumbnail: fallingCubesThumb\n\t},\n\n\ttimer: {\n\t\tname: \"Timer\",\n\t\tdescription: \"Time counter with some settings\",\n\t\tinspiration: [{\n\t\t\tdescription: \"A question from chat\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 27),\n\t\ttags: [contentTags.tool],\n\t\tcode: () => import(\"sketches/timer/timer\"),\n\t\tthumbnail: timerThumb\n\t},\n\n\tsquaremix_3d: {\n\t\tname: \"Square mix\",\n\t\tdescription: \"3D-mixing animation of an image\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Some video without clear source\"\n\t\t}],\n\t\tusedContent: [{\n\t\t\tdescription: \"Photo by Jonny Gios\",\n\t\t\turl: \"https://unsplash.com/photos/B78XB_9xe6E\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 25),\n\t\ttags: [contentTags.threejs],\n\t\tcode: () => import(\"sketches/squaremix_3d/squaremix_3d\"),\n\t\tthumbnail: squaremix3dThumb\n\t},\n\n\tstar_travel: {\n\t\tname: \"Star travel\",\n\t\tdescription: \"Flight through the galaxy!\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Old Windows screensaver\",\n\t\t\turl: \"https://www.youtube.com/watch?v=teFHZRpH5Pw\"\n\t\t}],\n\t\tdate: new Date(2021, 8, 18),\n\t\ttags: [contentTags.art, contentTags.svg, contentTags.css],\n\t\tcode: () => import(\"sketches/star_travel/star_travel\"),\n\t\tthumbnail: starTravelThumb\n\t},\n\n\tplanets: {\n\t\tname: \"Planets\",\n\t\tdescription: \"Stellar gravity simulation (not up to scale)\",\n\t\tdate: new Date(2022, 11, 27),\n\t\ttags: [contentTags.simulation, contentTags.svg],\n\t\tcode: () => import(\"sketches/planets/planets\"),\n\t\tthumbnail: planetsThumb\n\t},\n\n\tparticle_toy: {\n\t\tname: \"Particle toy\",\n\t\tdescription: \"Millions of particles processed by GPU\",\n\t\tdate: new Date(2023, 0, 28),\n\t\ttags: [contentTags.simulation, contentTags.webgl],\n\t\tcode: () => import(\"sketches/particle_toy/particle_toy\"),\n\t\tthumbnail: particleToyThumb,\n\t\thidden: true\n\t},\n\n\twave_function_collapse: {\n\t\tname: \"Wave function collapse\",\n\t\tdescription: \"Implementation of wave function collapse algoritm\",\n\t\tdate: new Date(2023, 3, 1),\n\t\ttags: [contentTags.tool],\n\t\tcode: () => import(\"sketches/wave_function_collapse/wave_function_collapse\"),\n\t\tthumbnail: waveFunctionCollapseThumb,\n\t\tinspiration: [{\n\t\t\tdescription: \"Youtube video about this code\",\n\t\t\turl: \"https://github.com/avihuxp/WaveFunctionCollapse\"\n\t\t}]\n\t},\n\n\tribcage_converter: {\n\t\tname: \"RC converter\",\n\t\tdescription: \"A tool that can convert some TS type definitions into RC structure definitions\",\n\t\tdate: new Date(2023, 4, 8),\n\t\ttags: [contentTags.tool],\n\t\tcode: () => import(\"sketches/ribcage_converter/ribcage_converter\"),\n\t\tthumbnail: notImplementedThumb,\n\t\tinfoButtonPosition: \"topRight\" as const,\n\t\thidden: true\n\t},\n\n\tfactorio_pixelart: {\n\t\tname: \"Factorio Pixelart converter\",\n\t\tdescription: \"A tool that can convert an image to factorio blueprint\",\n\t\tdate: new Date(2023, 5, 23),\n\t\ttags: [contentTags.tool],\n\t\tcode: () => import(\"sketches/factorio_pixelart/factorio_pixelart\"),\n\t\tthumbnail: notImplementedThumb,\n\t\thidden: true\n\t},\n\n\tzen_blockbreaker: {\n\t\tname: \"Zen blockbreaker\",\n\t\tdescription: \"Simulation of infinite self-playing game of ping-pong against a shapeshifting wall.\",\n\t\tdate: new Date(2024, 1, 2),\n\t\ttags: [contentTags.art, contentTags.matterjs, contentTags.svg],\n\t\tcode: () => import(\"sketches/zen_blockbreaker/zen_blockbreaker\"),\n\t\tthumbnail: zenBlockbreakerThumb,\n\t\tinspiration: [{\n\t\t\tdescription: \"A video without clear source found somewhere on the internet\"\n\t\t}]\n\t},\n\n\trandom_rhombus_tilings: {\n\t\tname: \"Random rhombus tilings\",\n\t\tdescription: \"Generator of tile patterns that uses rhombuses.\",\n\t\tdate: new Date(2024, 1, 6),\n\t\ttags: [contentTags.svg],\n\t\tcode: () => import(\"sketches/random_rhombus_tilings/random_rhombus_tilings\"),\n\t\tthumbnail: randomRhombusTilingsThumb,\n\t\tinspiration: [{\n\t\t\tdescription: \"Youtube video about this type of tilings. Was curious if it really will converge to a circle when generated as described in the video.\",\n\t\t\turl: \"https://www.youtube.com/watch?v=c6J_bd9seMg\"\n\t\t}]\n\t}\n} satisfies Record<string, Omit<SketchDescription, \"id\">>\n\nexport const sketchDescriptions = (() => {\n\tconst res: Record<string, SketchDescription> = {}\n\tfor(const id in _sketches){\n\t\tres[id] = {..._sketches[id as SketchId], id: id as SketchId}\n\t}\n\treturn res as {readonly [id in SketchId]: SketchDescription}\n})()\n\nexport type SketchId = keyof typeof _sketches","import {box, WBox} from \"@nartallax/cardboard\"\n\nlet titleBox: WBox<string> | null = null\n\nexport function getTitleBox(): WBox<string> {\n\tif(!titleBox){\n\t\ttitleBox = box(document.title)\n\n\t\ttitleBox.subscribe(value => document.title = value)\n\t}\n\n\treturn titleBox\n}","import {box, WBox} from \"@nartallax/cardboard\"\n\nlet locationHashBox: WBox<string> | null = null\n\nexport function getLocationHashBox(): WBox<string> {\n\tif(!locationHashBox){\n\t\tconst b = locationHashBox = box(fixHash(window.location.hash))\n\n\t\twindow.addEventListener(\"hashchange\", () => b.set(fixHash(window.location.hash)))\n\t\tb.subscribe(value => {\n\t\t\tif(value === \"\"){\n\t\t\t\tif(window.location.hash && typeof(history) !== \"undefined\"){\n\t\t\t\t\t// removes this annoying \"#\"\n\t\t\t\t\thistory.pushState(\"\", document.title, window.location.pathname + window.location.search)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst hash = \"#\" + value\n\t\t\t// not sure if this check is actually making any difference\n\t\t\tif(window.location.hash !== hash){\n\t\t\t\twindow.location.hash = hash\n\t\t\t}\n\t\t})\n\t}\n\n\treturn locationHashBox\n}\n\nfunction fixHash(rawHash: string): string {\n\treturn rawHash.replace(/^#/, \"\")\n}","import {MainPage} from \"website/controls/main_page\"\nimport {SketchPage} from \"website/controls/sketch_page\"\nimport {RouteDescription, Router} from \"website/router\"\nimport {sketchDescriptions, SketchId} from \"website/sketches\"\n\nexport function sketchRouteById(id: SketchId): `sketch/${SketchId}` {\n\treturn `sketch/${id}`\n}\n\nconst sketchRoutes = (() => {\n\tconst res: Record<string, RouteDescription> = {}\n\tfor(const id in sketchDescriptions){\n\t\tconst sketch = sketchDescriptions[id as SketchId]\n\t\tres[sketchRouteById(id as SketchId)] = {\n\t\t\trender: () => SketchPage(sketch),\n\t\t\ttitle: sketch.name\n\t\t}\n\t}\n\treturn res as {readonly [route in ReturnType<typeof sketchRouteById>]: RouteDescription}\n})()\n\nconst staticRoutes = {\n\t\"\": {\n\t\ttitle: \"Nartallax's personal website\",\n\t\trender: MainPage\n\t}\n}\n\nexport const routes = {\n\t...sketchRoutes,\n\t...staticRoutes\n}\n\nexport const router = new Router<keyof typeof routes>(routes, \"\")",".sketchesContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: flex-start;\n\tjustify-content: center;\n\tmargin: 1.5rem;\n}","import {getTitleBox} from \"common/get_title_box\"\nimport {getLocationHashBox} from \"common/location_hash_box\"\n\nexport type RouteDescription = {\n\ttitle: string\n\trender(): Element\n}\n\nexport type RouteMap<R extends string> = {readonly [route in R]: RouteDescription}\n\ntype RouteArgumentValue = string | true\ntype RouteArgs = Record<string, RouteArgumentValue>\n\nexport class Router<R extends string> {\n\n\tprivate readonly hashBox = getLocationHashBox()\n\tprivate readonly titleBox = getTitleBox()\n\tprivate root: Element | null = null\n\tprivate currentArgs: RouteArgs = {}\n\tprivate currentRoute: R\n\n\tconstructor(private readonly routes: RouteMap<R>, private readonly defaultRoute: R) {\n\t\tthis.currentRoute = defaultRoute\n\t}\n\n\tstartAt(root: Element): void {\n\t\tif(this.root){\n\t\t\tthrow new Error(\"Router already started\")\n\t\t}\n\t\tthis.root = root\n\t\tthis.hashBox.subscribe(() => this.checkHash())\n\t\tthis.checkHash(true)\n\t}\n\n\tformRouteURL(route: R, args?: RouteArgs): string {\n\t\tconst base = (window.location + \"\").replace(/#.*?$/, \"\")\n\t\tconst hash = this.formHash(route, args ?? {})\n\t\treturn !hash ? base : base + \"#\" + hash\n\t}\n\n\tgoTo(route: R, args?: RouteArgs): void {\n\t\tthis.hashBox.set(this.formHash(route, args ?? {}))\n\t}\n\n\tgetArgument(name: string): RouteArgumentValue | undefined {\n\t\treturn this.currentArgs[name]\n\t}\n\n\tsetArgument(name: string, value: RouteArgumentValue | undefined): void {\n\t\tconst newArgs = {...this.currentArgs}\n\t\tif(value === undefined){\n\t\t\tdelete newArgs[name]\n\t\t} else {\n\t\t\tnewArgs[name] = value\n\t\t}\n\t\tthis.hashBox.set(this.formHash(this.currentRoute, newArgs))\n\t}\n\n\tprivate checkHash(alwaysRender = false): void {\n\t\tconst [route, args] = this.parseHash(this.hashBox.get())\n\t\tif(route === this.currentRoute && !alwaysRender){\n\t\t\treturn // just a change in arguments, no reason to panic\n\t\t}\n\n\t\tconst description = this.routes[route]\n\t\tif(!description){\n\t\t\tthis.hashBox.set(this.defaultRoute)\n\t\t\treturn\n\t\t}\n\n\t\tthis.currentRoute = route\n\t\tthis.currentArgs = args\n\t\treturn this.renderRoute(description)\n\t}\n\n\tprivate parseHash(hash: string): [R, RouteArgs] {\n\t\tconst args: RouteArgs = {}\n\t\tconst [routePart, argsPart] = hash.split(\"?\")\n\t\tif(argsPart){\n\t\t\tfor(const kv of argsPart.split(\"&\")){\n\t\t\t\tconst [k, v] = kv.split(\"=\").map(part => decodeURIComponent(part))\n\t\t\t\tif(!k){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\targs[k] = v ?? true\n\t\t\t}\n\t\t}\n\n\t\treturn [routePart as R, args]\n\t}\n\n\tprivate formHash(route: R, args: RouteArgs): string {\n\t\tlet result: string = route\n\t\tlet first = true\n\t\tfor(const [k, v] of Object.entries(args)){\n\t\t\tresult += first ? ((first = false), \"?\") : \"&\"\n\t\t\tresult += encodeURIComponent(k)\n\t\t\tif(v !== true){\n\t\t\t\tresult += \"=\" + encodeURIComponent(v + \"\")\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate renderRoute(description: RouteDescription): void {\n\t\tconst {title, render} = description\n\t\tif(!this.root){\n\t\t\tthrow new Error(\"Router not started\")\n\t\t}\n\n\t\twhile(this.root.firstChild){\n\t\t\tthis.root.firstChild.remove()\n\t\t}\n\t\tthis.root.appendChild(render())\n\t\tthis.titleBox.set(title)\n\t}\n\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$56ecb70de8c62ae9$var$r","Symbol","$56ecb70de8c62ae9$var$l","subscribeToDomValue","unsubscribeFromDomValue","constructor","e","t","this","box","options","lastKnownRawDomValue","subscribeDomBound","bind","unsubscribeDomBound","tryUpdateDomValueBound","tryUpdateDomValue","updateBoxValueBound","updateBoxValue","canPushUpdates","prototype","$9H5KT","isWBox","getRawDomValue","set","parseDomValue","o","preferBoxValue","updateDomValue","onInserted","onRemoved","isInDom","watchAndRun","watch","unbind","offInserted","offRemoved","unwatch","$56ecb70de8c62ae9$var$a","map","super","node","element","HTMLElement","document","body","style","getPropertyValue","name","removeProperty","setProperty","$56ecb70de8c62ae9$var$h","timeoutMs","check","startTime","isRunning","runCheckAndRequest","Date","now","e1","$56ecb70de8c62ae9$var$u","run","requestAnimationFrame","setTimeout","$56ecb70de8c62ae9$var$c","subscribe","handlers","add","isPatched","patch","unsubscribe","delete","lastKnownLocation","window","location","History","n","s","apply","repeater","tryCallHandlers","Set","$56ecb70de8c62ae9$var$f","URL","path","pathname","search","hash","history","replaceState","pushState","addEventListener","removeEventListener","$56ecb70de8c62ae9$var$m","$56ecb70de8c62ae9$var$y","beforeInsertedHandlers","afterInsertedHandlers","removedHandlers","watchedBoxes","domValueLinks","isExpectingInsertion","isConnected","push","$56ecb70de8c62ae9$var$w","notifyBeforeInserted","get","handlerWrap","lastKnownValue","invokeBoxHandler","$56ecb70de8c62ae9$var$g","notifyAfterInserted","notifyAfterRemoved","notifyAttachmentState","console","error","handler","filter","addDomValueLink","removeDomValueLink","$56ecb70de8c62ae9$var$x","Node","Element","SVGElement","$56ecb70de8c62ae9$var$I","$56ecb70de8c62ae9$var$v","Array","$56ecb70de8c62ae9$var$D","$56ecb70de8c62ae9$var$V","has","originalNonPatchedMethod","t1","$56ecb70de8c62ae9$var$B","getOwnPropertyDescriptor","defineProperty","$56ecb70de8c62ae9$var$N","startInsertOperation","ongoingInsertOperationsCount","markNodeInserted","endInsertOperation","nodesInTree","clear","childNodes","markNodeRemoved","isInserted","$56ecb70de8c62ae9$var$R","isArray","$56ecb70de8c62ae9$var$k","$56ecb70de8c62ae9$var$$","r","n1","isRBox","$56ecb70de8c62ae9$var$P","l","s1","i1","unbox","join","class","classList","value","attrs","$56ecb70de8c62ae9$var$A","removeAttribute","setAttribute","n2","startsWith","o1","charAt","toLowerCase","substring","passive","capture","t2","type","oldValue","index","$56ecb70de8c62ae9$var$S","removeChild","Text","textContent","createTextNode","appendChild","insertBefore","isConstBox","constBoxWrap","$56ecb70de8c62ae9$export$1e848a9e87980bd5","ifInDom","beforeInserted","$56ecb70de8c62ae9$var$L","WeakMap","$56ecb70de8c62ae9$var$C","binders","observer","init","MutationObserver","doWithRecords","observe","childList","subtree","shutdown","disconnect","collectEligibleNodesFromArray","collectEligibleNodes","addedNodes","e2","removedNodes","e3","e4","$56ecb70de8c62ae9$var$E","isInit","projectedTreeState","isInitialized","afterRemovedOrInserted","collectBinders","parentNode","$56ecb70de8c62ae9$export$45d2dafb95487308","async","$56ecb70de8c62ae9$export$45f69fe3f857b94d","dontCallImmediately","$56ecb70de8c62ae9$var$K","$56ecb70de8c62ae9$var$W","localStorage","getItem","key","serialize","removeItem","setItem","parse","$56ecb70de8c62ae9$export$2b067c6666111485","createElement","tag","$56ecb70de8c62ae9$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$56ecb70de8c62ae9$export$7003262fc833c023","Promise","readyState","$70ec98150aeca14c$var$e","calculate","revision","owner","updateKnownDependencyValues","$70ec98150aeca14c$var$t","rawDependencies","boxMap","Map","$70ec98150aeca14c$export$74473745afe6cecc","getDependencyValues","$70ec98150aeca14c$export$c1d3dacf4f169228","subscribeToDependencies","unsubscribeFromDependencies","didDependencyListChange","setDependencyValues","$70ec98150aeca14c$export$323bbb183502380a","isDependency","$70ec98150aeca14c$var$s","dependency","lastKnownDependencyValue","$70ec98150aeca14c$var$i","$70ec98150aeca14c$var$r","haveSubscribers","subscriberList","notifyOnValueChange","dispose","callSubscribers","$70ec98150aeca14c$var$c","$70ec98150aeca14c$var$p","$70ec98150aeca14c$var$n","prop","$70ec98150aeca14c$var$y","$70ec98150aeca14c$var$b","getArrayContext","$70ec98150aeca14c$var$M","$70ec98150aeca14c$var$a","mapArrayElements","a","mapArray","getValueArrayBox","setProp","propName","setElementAtIndex","insertElementsAtIndex","checkInsertIndex","slice","count","insertElementAtIndex","appendElement","appendElements","prependElement","prependElements","deleteElementsAtIndex","checkDeleteIndex","Math","min","r1","indexValuePairs","deleteElementAtIndex","deleteElements","deleteElementsInternal","deleteElement","deleteAllElements","$70ec98150aeca14c$var$L","$70ec98150aeca14c$var$l","onFirstSubscriber","onLastUnsubscriber","$70ec98150aeca14c$var$o","dependencyList","forcedShouldRecalculate","calculateAndUpdate","onUpstreamChange","shouldRecalculate","recalculateIfShould","$70ec98150aeca14c$var$u","upstream","makeDownstreamValue","updateUpstreamWith","$70ec98150aeca14c$var$h","makeUpstreamValue","toString","$70ec98150aeca14c$var$_","$70ec98150aeca14c$var$d","$70ec98150aeca14c$var$x","arrayContext","onDownstreamUnsubscription","onDownstreamSubscription","checkIfStillAttached","isItemBoxAttached","tryUpdate","$70ec98150aeca14c$var$f","onDownstreamChange","deleteArrayElement","$70ec98150aeca14c$var$m","$70ec98150aeca14c$var$g","$70ec98150aeca14c$var$v","calculateFn","reverseCalculateFn","updateUpstream","$70ec98150aeca14c$export$827f4ee28efc37","$70ec98150aeca14c$var$A","$70ec98150aeca14c$var$E","$70ec98150aeca14c$var$P","$70ec98150aeca14c$var$C","$70ec98150aeca14c$export$e49fa8373069a746","$70ec98150aeca14c$export$5fa8b3233b7d11bd","$70ec98150aeca14c$export$d7e21a92df188992","JSON","stringify","subscriptions","propBoxInternalSubscriptions","notifyPropSubscribers","notifySubscribers","$70ec98150aeca14c$var$N","values","receiver","enqueueUpdate","$70ec98150aeca14c$var$F","notifyPropSubscriptionArray","provider","deleteUpdate","size","getKey","getValue","childSubCount","lastKnownUpstreamValue","mappedValueBox","makeChildBox","r2","a1","s2","i2","r3","a2","updateAllIndex","e5","e6","i3","r4","n3","makeValuesArray","unsubscribeFromUpstream","getBoxes","getBoxForKey","boxArray","getSubQueue","subQueues","withUpdatesPaused","pauseLevel","subscription","meta","runInternal","next","deliver","fill","module","exports","all","import","parcelRequire","resolve","then","url","$lovBw","bundle","reject","existingLinks","getElementsByTagName","concat","some","link","href","rel","indexOf","onerror","onload","remove","$f9345ad2c034f768$var$cachedBundles","$f9345ad2c034f768$var$cachedPreloads","$f9345ad2c034f768$var$cachedPrefetches","$f9345ad2c034f768$var$getCache","loader","cache","arguments","catch","register","$7sHgZ","$391ab960b5de8fc4$export$9d1bf630f3954f4c","obj","ok","bad","err","message","$45b32a36a8bb979b$export$5a0af15366b01c51","time","len","PI","svgTag","width","height","viewBox","$251d3f1e864a093c$var$td","x","$251d3f1e864a093c$var$renderContentRefList","title","items","line","forEach","item","subline","text","description","target","className","$251d3f1e864a093c$var$getPosStyle","_pos","margin","pos","posIsTop","posIsLeft","top","undefined","bottom","left","right","$251d3f1e864a093c$export$e96b0cc86697ef4f","d","button","infoButtonPosition","block","date","getFullYear","getMonth","getDate","tags","inspiration","usedContent","onClick","after","$6dbf32604ddb433c$export$250edc47c8b9bcda","$fdc73c545616147a$export$eb15f45eafa2a838","$fdc73c545616147a$export$1b7a87d0522895ac","sketch","root","noSketchInfo","$687723d5a963eec5$export$5375cda95f0b0eb4","getArgument","code","main","isPreview","$50612ea8d7db7099$export$e60e6cc176320a45","$50612ea8d7db7099$export$ae3eb07ef96eb9d8","$50612ea8d7db7099$export$ec6bc36c360d4313","$7f82397446221d45$export$f17c5c5bd65f8652","imgContainer","src","thumbnail","alt","goTo","$687723d5a963eec5$export$ec4993ac24624814","timer","container","stopped","timerEl","sketchFrame","cleanup","animationDuration","$7f82397446221d45$var$sleep","formRouteURL","stop","$7f82397446221d45$var$runSketchTimer","ms","$cc3d98a157040476$var$_tags","simulation","art","threejs","oimojs","matterjs","tool","css","webgl","svg","evolution","game","$cc3d98a157040476$export$47082abbc0af17a1","res","$1925b7f41a90027c$exports","$8e643948a580f526$exports","$3032e6c47096a6bf$exports","$d698a4afa57f054f$exports","$49afd947a06dd17a$exports","$cc0a8e81d041484e$exports","$1b7533ecd4ea9b23$exports","$538b3f73da84bd37$exports","$347a29d820e9ef6f$exports","$bc85951f2b6a236c$exports","$84f20594402ef630$var$_sketches","digger","hidden","$parcel$interopDefault","falling_cubes","squaremix_3d","star_travel","planets","particle_toy","wave_function_collapse","ribcage_converter","factorio_pixelart","zen_blockbreaker","random_rhombus_tilings","$84f20594402ef630$export$da62565e78407c06","$7ba39f8f74bb16db$var$titleBox","$2ba5277830cf9310$var$locationHashBox","$2ba5277830cf9310$export$24f7ae8818cce0ab","b","$2ba5277830cf9310$var$fixHash","rawHash","replace","$687723d5a963eec5$export$66b32f6f30eb4b4","render","routes","defaultRoute","hashBox","titleBox","currentArgs","currentRoute","startAt","checkHash","route","args","base","formHash","setArgument","newArgs","alwaysRender","parseHash","renderRoute","routePart","argsPart","split","kv","k","v","part","decodeURIComponent","result","first","entries","encodeURIComponent","firstChild","waitDocumentLoaded","initializeCardboardDom","appRoot","getElementById","$f026dfee1ec1271b$var$main"],"version":3,"file":"index.0365fc16.js.map"}