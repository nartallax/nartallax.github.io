{"mappings":"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","sources":["src/sketches/star_travel/star_travel.ts","src/sketches/star_travel/star_travel.module.scss","src/sketches/star_travel/wobbly_circle.ts","src/common/cycled_request_animation_frame.ts","src/common/queue.ts","src/common/classname.ts","src/common/tag.ts","src/sketches/star_travel/bezier_smoothed_closed_path.ts","src/sketches/star_travel/nebula_generator.ts"],"sourcesContent":["import {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {Queue} from \"common/queue\"\nimport {svgTag} from \"common/tag\"\nimport {generateRandomNebula} from \"./nebula_generator\"\nimport * as css from \"./star_travel.module.scss\"\n\nexport function main(root: HTMLElement): void {\n\tconst controller = new StarTravelController({\n\t\tcolors: [\"#ddd\", \"#B2BBFF\", \"#9EA6FF\", \"#A3E4FF\", \"#8CC7FF\", \"#B596FF\"],\n\t\tcount: 100,\n\t\ttravelTime: 2500,\n\t\ttravelTimeDeviation: 0.2\n\t})\n\troot.appendChild(controller.root)\n\tcontroller.start()\n}\n\ninterface StarTravelOpts {\n\tcolors: string[]\n\tcount: number\n\ttravelTime: number\n\ttravelTimeDeviation: number\n}\n\ninterface Star {\n\tdiesAt: number\n\tel: SVGElement\n}\n\n\nclass StarTravelController {\n\n\treadonly root: SVGSVGElement\n\tprivate readonly stars = new Queue<Star>()\n\tprivate width = 0\n\tprivate height = 0\n\tprivate starFlightRadius = 0\n\n\tconstructor(private readonly opts: StarTravelOpts) {\n\t\tthis.root = svgTag({tagName: \"svg\", attrs: {x: \"0\", y: \"0\"}, class: css.startravelSvg})\n\t}\n\n\tprivate init(): void {\n\t\tthis.stars.clear()\n\t\tconst w = this.width = this.root.clientWidth\n\t\tconst h = this.height = this.root.clientHeight\n\t\tthis.starFlightRadius = Math.sqrt(Math.pow(this.width / 2, 2) + Math.pow(this.height / 2, 2))\n\t\tthis.root.setAttribute(\"width\", w + \"\")\n\t\tthis.root.setAttribute(\"height\", h + \"\")\n\t\tthis.root.setAttribute(\"viewBox\", `0 0 ${w} ${h}`)\n\n\t\tthis.root.innerHTML = \"\"\n\t\tthis.root.appendChild(this.generateBackground())\n\t}\n\n\tprivate removeOldStars() {\n\t\tconst now = Date.now()\n\t\twhile(this.stars.head && this.stars.head.diesAt < now){\n\t\t\tconst star = this.stars.dequeue()\n\t\t\tstar.el.remove()\n\t\t}\n\t}\n\n\tprivate addNewStars(count = this.opts.count - this.stars.length) {\n\t\tconst offsetPerStar = 1 / count\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tthis.addStar(offsetPerStar * i)\n\t\t}\n\t}\n\n\tprivate addStar(animationProgress = 0): void {\n\t\tconst direction = Math.random() * 360\n\t\t// let travelTime = this.opts.travelTime * (1 + ((Math.random() - 0.5) * this.opts.travelTimeDeviation));\n\t\tconst travelTime = this.opts.travelTime\n\t\tconst speed = this.starFlightRadius / travelTime\n\t\tconst trackLength = speed * 350\n\t\tconst trackWidth = (Math.random() + 0.5) * 10\n\t\tconst color = this.opts.colors[Math.floor(Math.random() * this.opts.colors.length)]\n\n\t\tconst offsetDistance = ((((this.width + this.height) / 2) * 0.2) * (Math.random() + 0.15))\n\t\tconst timeOffset = animationProgress * travelTime\n\n\t\tconst star: Star = {\n\t\t\tdiesAt: Date.now() + travelTime - timeOffset,\n\t\t\tel: svgTag({\n\t\t\t\ttagName: \"g\",\n\t\t\t\tclass: css.startravelStar,\n\t\t\t\tattrs: {\n\t\t\t\t\ttransform: `translate(${this.width / 2}, ${this.height / 2}) rotate(${direction}) translate(${offsetDistance}, 0)`\n\t\t\t\t}\n\t\t\t}, [svgTag({\n\t\t\t\ttagName: \"g\",\n\t\t\t\tattrs: {\n\t\t\t\t\tstyle: `animation-duration: ${travelTime / 1000}s;animation-delay: ${-timeOffset / 1000}s`\n\t\t\t\t}\n\t\t\t}, [\n\t\t\t\tsvgTag({\n\t\t\t\t\ttagName: \"path\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\td: `M ${-trackLength} 0 L 0 ${trackWidth / 2} A ${trackWidth / 2} ${trackWidth / 2} 0 0 0 0 ${-trackWidth / 2} z`,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tsvgTag({\n\t\t\t\t\ttagName: \"circle\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tcx: 0,\n\t\t\t\t\t\tcy: 0,\n\t\t\t\t\t\tr: trackWidth / 3,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t\t)]\n\t\t\t)\n\t\t}\n\n\t\tthis.stars.enqueue(star)\n\t\tthis.root.appendChild(star.el)\n\t}\n\n\tstart() {\n\t\tthis.init()\n\t\tcycledRequestAnimationFrame(timePassed => {\n\t\t\tif(timePassed > 1000 || this.root.clientWidth !== this.width || this.root.clientHeight !== this.height){\n\t\t\t\tthis.init()\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// void this.removeOldStars, void this.addNewStars\n\t\t\tthis.removeOldStars()\n\t\t\tthis.addNewStars()\n\t\t})\n\t}\n\n\tprivate generateBackground(): SVGElement {\n\t\tconst nebulae = [] as SVGElement[]\n\t\tfor(let i = 0; i < 2; i++){\n\t\t\tconst nebula = generateRandomNebula(Math.min(this.width + this.height) / 3)\n\t\t\tnebulae.push(nebula)\n\t\t\tconst dx = (Math.random() - 0.5) * (this.width / 3)\n\t\t\tconst dy = (Math.random() - 0.5) * (this.height / 3)\n\t\t\tnebula.setAttribute(\"transform\", `translate(${(this.width / 2) + dx}, ${(this.height / 2) + dy})`)\n\t\t}\n\t\treturn svgTag({tagName: \"g\", class: css.startravelBackground}, nebulae)\n\t}\n\n}","@keyframes startravel-starfly {\n\t0% { \n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 0;\n\t}\n\t50% {\n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 1;\n\t}\n\t100% { \n\t\ttransform: scale(5) translate(100%, 0);\n\t\topacity: 1;\n\t}\n}\n\n@keyframes startravel-rotate-bg {\n\tfrom { \n\t\ttransform: translate(50%, 50%) rotate(0deg) translate(-50%, -50%);\n\t}\n\tto { \n\t\ttransform: translate(50%, 50%) rotate(360deg) translate(-50%, -50%);\n\t}\n}\n\n.startravelSvg {\n\tposition: relative;\n\tbackground: #000;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.startravelStar > g {\n\tanimation: startravel-starfly 1s cubic-bezier(1,0,1,0);\n\tanimation-fill-mode: forwards;\n}\n\n.startravelStar circle {\n\tfilter: brightness(200%);\n}\n\n.startravelBackground {\n\tanimation: startravel-rotate-bg 250s linear infinite;\n}","export interface Point {\n\tx: number\n\ty: number\n}\n\nexport interface WobblyCircleParams {\n\tradius: number\n\tvertexCount: number\n\twobbliness: number\n}\n\nexport function generateWobblyCirclePoints(params: WobblyCircleParams): Point[] {\n\tconst vertex = [] as Point[]\n\n\t// generating random circle-like points\n\tlet currentDistance = params.radius\n\tconst degStep = (Math.PI * 2) / params.vertexCount\n\tfor(let i = 0; i < params.vertexCount; i++){\n\t\tconst deg = (i * degStep)\n\t\tcurrentDistance += (currentDistance < params.radius ? 1 : -1) * params.radius * params.wobbliness * 0.25\n\t\tcurrentDistance += (Math.random() - 0.5) * params.radius * params.wobbliness\n\t\tvertex.push({\n\t\t\tx: Math.cos(deg) * currentDistance,\n\t\t\t// минус здесь - потому что в svg ось y направлена вниз\n\t\t\t// а мне привычнее, когда радианы идут по часовой стрелке при увеличении\n\t\t\ty: -Math.sin(deg) * currentDistance\n\t\t})\n\t}\n\n\treturn vertex\n}\n\n","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function */\nexport function cycledRequestAnimationFrame(handler: (delta: number) => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {svgTag} from \"common/tag\"\nimport {Point} from \"sketches/star_travel/wobbly_circle\"\n\n/** Имея массив точек, сделать из него сглаженный path  */\nexport function makeBezierSmoothedClosePath(vertex: Point[], smoothness: number): SVGPathElement {\n\tfunction getBezierAt(i: number, firstPoint: boolean): Point {\n\t\tconst cur = vertex[(i + vertex.length) % vertex.length]!\n\t\tconst prev = vertex[(i + vertex.length - 1) % vertex.length]!\n\t\tconst next = vertex[(i + 1) % vertex.length]!\n\t\treturn calcBezierPoint(cur, prev, next, firstPoint, smoothness)\n\t}\n\n\t// transforming points to svg path string, generating bezier points in process\n\tlet pathStr = `M ${vertex[vertex.length - 1]!.x} ${vertex[vertex.length - 1]!.y}`\n\tfor(let i = 0; i < vertex.length; i++){\n\t\tconst cur = vertex[i]!\n\t\tconst prevBezier = getBezierAt(i - 1, true)\n\t\tconst curBezier = getBezierAt(i, false)\n\t\tpathStr += `C ${prevBezier.x} ${prevBezier.y}, ${curBezier.x} ${curBezier.y}, ${cur.x} ${cur.y}`\n\t}\n\n\treturn svgTag({tagName: \"path\", attrs: {d: pathStr}})\n}\n\nfunction calcBezierPoint(cur: Point, prev: Point, next: Point, firstPoint: boolean, smoothness: number): Point {\n\t// нам нужно, чтобы точка безье была на линии, параллельной линии prev -> next, проходящей через cur\n\t// поэтому мы двигаем одну из точек (prev, next) на расстояние от cur до другой из них\n\tconst a = firstPoint ? prev : next\n\tconst b = firstPoint ? next : prev\n\tlet dx = cur.x - a.x\n\tlet dy = cur.y - a.y\n\tconst result = {x: b.x + dx, y: b.y + dy}\n\t// после такого сдвига новая точка действительно лежит на этой линии, но она получается слишком далеко\n\t// поэтому мы её двигаем ближе к cur\n\tdx = cur.x - result.x\n\tdy = cur.y - result.y\n\tresult.x = cur.x - (dx * smoothness)\n\tresult.y = cur.y - (dy * smoothness)\n\treturn result\n}","import {svgTag} from \"common/tag\"\nimport {makeBezierSmoothedClosePath} from \"./bezier_smoothed_closed_path\"\nimport {generateWobblyCirclePoints} from \"./wobbly_circle\"\n\ninterface Color {\n\tr: number\n\tg: number\n\tb: number\n}\n\nconst filterName = \"random-nebula-blur\"\n\nfunction twoHex(x: number): string {\n\treturn (x < 16 ? \"0\" : \"\") + x.toString(16)\n}\n\nfunction twoHexOneBased(x: number): string {\n\treturn twoHex(Math.floor(Math.min(1, x) * 255))\n}\n\nfunction generateColorMults(totalMultAmount = 1): Color {\n\tlet r = Math.random()\n\t// зеленый всегда должен быть на нуле\n\t// иначе при применении градиента начинает даваться йобу глубина цвета\n\t// и появляются \"лесенки\"\n\t// и ваще зеленый не смотрится в космосе\n\tlet g = 0 // Math.random();\n\tlet b = Math.random() * 0.5\n\tconst normalizer = totalMultAmount / (r + g + b)\n\tr *= normalizer\n\tg *= normalizer\n\tb *= normalizer\n\treturn {r, g, b}\n}\n\nfunction makeColorStr(mults: Color, power: number): string {\n\t// return `#${twoHexOneBased(mults.r * power)}${twoHexOneBased(mults.g * power)}${twoHexOneBased(mults.b * power)}`\n\tvoid twoHexOneBased\n\treturn `rgba(${mults.r}, ${mults.g}, ${mults.b}, ${power})`\n}\n\nexport function generateRandomNebula(radius: number): SVGElement {\n\tconst vertex = generateWobblyCirclePoints({\n\t\tradius: radius,\n\t\tvertexCount: 15,\n\t\twobbliness: 0.9\n\t})\n\n\tconst smoothness = 0.2\n\tlet intensity = 0.2\n\tconst colorMult = generateColorMults(255)\n\n\tconst circles: SVGElement[] = []\n\tfor(let i = 0; i < 15; i++){\n\t\tconst path = makeBezierSmoothedClosePath(vertex, smoothness)\n\t\t// path.setAttribute(\"filter\", `url(#${filterName})`)\n\t\tpath.setAttribute(\"fill\", makeColorStr(colorMult, intensity))\n\t\tpath.setAttribute(\"fill-opacity\", intensity.toFixed(2))\n\t\tcircles.push(path)\n\n\t\tintensity += 0.05\n\t\tvertex.forEach(vertex => {\n\t\t\tvertex.x /= 1.15\n\t\t\tvertex.y /= 1.15\n\t\t})\n\t}\n\n\treturn svgTag({tagName: \"g\"}, [\n\t\tsvgTag({tagName: \"filter\",\n\t\t\tattrs: {\n\t\t\t\tid: filterName\n\t\t\t}}, [\n\t\t\tsvgTag({\n\t\t\t\ttagName: \"feGaussianBlur\",\n\t\t\t\tattrs: {\n\t\t\t\t\tin: \"SourceGraphic\",\n\t\t\t\t\tstdDeviation: \"15\"\n\t\t\t\t}\n\t\t\t})\n\t\t]),\n\t\tsvgTag({\n\t\t\ttagName: \"g\",\n\t\t\tattrs: {\n\t\t\t\tfilter: `url(#${filterName})`\n\t\t\t}\n\t\t}, circles)\n\t])\n}"],"names":["$6A5Hp","parcelRequire","controller","$ad08eec3e5b7b8ba$var$StarTravelController","colors","travelTime","travelTimeDeviation","root","appendChild","start","constructor","opts","this","Queue","width","height","starFlightRadius","$aCP3q","svgTag","tagName","attrs","x","y","class","$5mUU2","startravelSvg","init","stars","clear","w","clientWidth","h","clientHeight","Math","sqrt","pow","setAttribute","innerHTML","generateBackground","removeOldStars","now","Date","head","diesAt","dequeue","el","remove","addNewStars","count","length","offsetPerStar","i","addStar","animationProgress","direction","random","trackLength","trackWidth","color","floor","offsetDistance","timeOffset","star","startravelStar","transform","style","d","fill","cx","cy","r","enqueue","$5DUDw","cycledRequestAnimationFrame","timePassed","nebulae","nebula","$f6lcZ","generateRandomNebula","min","push","dx","dy","startravelBackground","$3e8b258f448bc1f2$export$279cefaa126c9ca2","$3e8b258f448bc1f2$export$c84ea88972675b","$3e8b258f448bc1f2$export$3250ca2bbee7d90c","$3e8b258f448bc1f2$export$132cdb902872b111","$3e8b258f448bc1f2$export$756cdbf8a4a74372","$6d5408446ab836f7$export$22c1218281d54f73","params","vertex","currentDistance","radius","degStep","PI","vertexCount","deg","wobbliness","cos","sin","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","stopped","prevCallTime","wrappedHandler","time","delta","requestAnimationFrame","$d86dd992f2068262$export$3dc07afe418952bc","len","headNode","value","tailNode","oldTail","prev","Error","result","undefined","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","binder","node","parts","callback","arr","Array","isArray","item","$hsvBG","isRBox","$hIDiW","getBinder","watch","makeClassnameAndCallTheCallback","key","bool","classname","unbox","classname1","join","$4c0fbf616468c6ce$var$resolveArgs","a","b","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","text","textContent","on","evtName","addEventListener","passive","capture","k","v","removeAttribute","vv","setChildren","childTags","filter","parent","newChildren","childTag","childNodes","insertBefore","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","classList","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$22ccbd76036f7d57$export$d77b7e82a9cc293e","smoothness","getBezierAt","firstPoint","cur","next","$22ccbd76036f7d57$var$calcBezierPoint","pathStr","prevBezier","curBezier","$8345261d26a3b178$var$filterName","$8345261d26a3b178$export$dd54aaf74a2bf32b","$5sXTG","generateWobblyCirclePoints","intensity","colorMult","totalMultAmount","g","normalizer","$8345261d26a3b178$var$generateColorMults","circles","path","$bddrq","makeBezierSmoothedClosePath","power","mults","toFixed","forEach","id","in","stdDeviation"],"version":3,"file":"star_travel.d6c08d49.js.map"}