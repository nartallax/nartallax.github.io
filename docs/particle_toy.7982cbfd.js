function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var r=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequirebf86;r.register("TmoKT",(function(t,n){e(t.exports,"main",(()=>u));var o=r("5DUDw"),i=r("d4DhX"),a=r("3ekh2"),s=r("hf9LN"),d=r("5udHq"),c=r("dbJCa");function u(e){const t=document.createElement("canvas"),r=e.getBoundingClientRect();t.setAttribute("width",r.width+""),t.setAttribute("height",r.height+""),t.style.cssText="position: absolute; top: 0; bottom: 0; left: 0; right: 0;",e.appendChild(t);const n=t.getContext("webgl2"),u=function(e,t){const r=new Array(t).fill(0).map(((e,t)=>t)),n=e.createBuffer();if(!n)throw new Error("Cannot create webgl buffer");return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,new Uint32Array(r),e.STATIC_DRAW),n}(n,a.particlesCount),m=function(e){const t=e.createBuffer();if(!t)throw new Error("Cannot create webgl buffer");return e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),e.STATIC_DRAW),t}(n),x={x:r.width,y:r.height},E=new(0,a.DataTexturePair)(n,f((()=>l(Math.random()*x.x,x.x)))),y=new(0,a.DataTexturePair)(n,f((()=>l(Math.random()*x.y,x.y)))),T=new(0,a.DataTexturePair)(n,f((()=>l(100*(Math.random()-.5),5e3)))),h=new(0,a.DataTexturePair)(n,f((()=>l(100*(Math.random()-.5),5e3)))),g=new(0,d.DataShader)(n),A=new(0,d.DrawShader)(n);c.sprays[0]={...c.zeroSpray,x:x.x/4,y:x.y/2,direction:Math.PI/4,intensity:a.particlesCount/1e4,power:100,spread:Math.PI/16},c.sprays[1]={...c.zeroSpray,x:x.x*(3/4),y:x.y/2,direction:Math.PI*(3/4),intensity:a.particlesCount/2e3,power:50,spread:Math.PI/16};const R=[E,y,T,h];g.use(),n.uniform2f(g.screenSize,x.x,x.y),n.uniform1i(g.positionX,0),n.uniform1i(g.positionY,1),n.uniform1i(g.speedX,2),n.uniform1i(g.speedY,3),n.uniform1f(g.gravity,9.8),n.uniform1f(g.bounce,.5),(0,c.uploadSprays)(n,g);const S=i.GlUtils.makeBindVAO(n);n.bindBuffer(n.ARRAY_BUFFER,m),n.enableVertexAttribArray(g.vertex),n.vertexAttribPointer(g.vertex,2,n.FLOAT,!1,0,0);const _=[E,y];A.use(),n.uniform2f(A.screenSize,x.x,x.y),n.uniform1i(A.positionX,0),n.uniform1i(A.positionY,1);const v=i.GlUtils.makeBindVAO(n);n.bindBuffer(n.ARRAY_BUFFER,u),n.enableVertexAttribArray(A.id),n.vertexAttribIPointer(A.id,1,n.UNSIGNED_INT,0,0);let I=0;const F=new(0,s.FpsCounter);(0,o.cycledRequestAnimationFrame)((e=>{e>250||function(e){F.recordFrame(e);const t=I,o=t+Math.floor(c.particlesMovedPerSecond);I=o,I>=a.particlesCount&&(I=0),function(e,t){try{const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),t()}finally{e.bindFramebuffer(e.FRAMEBUFFER,null)}}(n,(()=>{g.use(),n.viewport(0,0,a.dataTextureSize,a.dataTextureSize),n.uniform1f(g.deltaTime,e),n.uniform1ui(g.firstMovedParticleIndex,t),n.uniform1ui(g.lastMovedParticleIndex,o),p(n,R),function(e,t){const r=[];for(let n=0;n<t.length;n++){const o=t[n];e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.TEXTURE_2D,o.receivingTexture,0),r.push(e.COLOR_ATTACHMENT0+n)}e.drawBuffers(r)}(n,R),n.bindVertexArray(S),n.drawArrays(n.TRIANGLES,0,6)}));for(const e of R)e.swap();A.use(),n.bindFramebuffer(n.FRAMEBUFFER,null),n.viewport(0,0,r.width,r.height),p(n,_),n.bindVertexArray(v),n.drawArrays(n.POINTS,0,a.particlesCount)}(e/1e3)}))}function f(e){const t=new Array(a.dataTextureSize*a.dataTextureSize).fill(0).map(((t,r)=>e(r)));return new Uint32Array(t)}function p(e,t){for(let r=0;r<t.length;r++){const n=t[r];e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,n.texture)}}function l(e,t){return Math.floor(e/t*2147483647)+2147483647}})),r.register("5DUDw",(function(t,r){function n(e){let t=!1,r=0;const n=o=>{if(t)return;const i=o-r;r=o,requestAnimationFrame(n),e(i)};return requestAnimationFrame(n),()=>t=!0}e(t.exports,"cycledRequestAnimationFrame",(()=>n))})),r.register("d4DhX",(function(t,r){let n;e(t.exports,"GlUtils",(()=>n)),function(e){function t(e,t,r){let n=null;try{if(n=e.createShader("vertex"===t?e.VERTEX_SHADER:e.FRAGMENT_SHADER),!n)throw new Error("No shader is created of type "+t);e.shaderSource(n,r),e.compileShader(n);const o=e.getShaderParameter(n,e.COMPILE_STATUS),i=e.getShaderInfoLog(n);if(!o)throw console.log(r),new Error("Failed to compile shader of type "+t+": "+i);return i&&console.warn("WebGL "+t+" shader compile log: ",i),n}catch(t){throw e.deleteShader(n),t}}e.getGlContext=function(e){const t=e.getContext("webgl2");if(!t)throw new Error("No webgl2 available.");return t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.disable(t.SCISSOR_TEST),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.STENCIL_TEST),t},e.makeShader=t,e.makeProgram=function(e,r,n){let o=null,i=null,a=null;try{if(o=t(e,"fragment",n),i=t(e,"vertex",r),a=e.createProgram(),!a)throw new Error("No webgl program was created.");e.attachShader(a,o),e.attachShader(a,i),e.linkProgram(a);const s=e.getProgramParameter(a,e.LINK_STATUS),d=e.getProgramInfoLog(a);if(!s)throw new Error("Failed to link program: "+d);return d&&console.warn("WebGL program log: ",d),{program:a,shaders:[o,i]}}catch(t){throw o&&e.deleteShader(o),i&&e.deleteShader(i),a&&e.deleteProgram(a),t}},e.setViewportSizeByCanvas=function(e,t){const r=t.clientWidth*window.devicePixelRatio,n=t.clientHeight*window.devicePixelRatio;return t.width=r,t.height=n,e.viewport(0,0,r,n),{width:r,height:n}},e.loadTexture=function(e,t){return new Promise(((r,n)=>{const o=new Image;o.onload=()=>{try{const t=function(e){const t=e.createTexture();if(!t)throw new Error("No texture was created.");return e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),t}(e);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,o),e.generateMipmap(e.TEXTURE_2D),r(t)}catch(e){n(e)}},o.onerror=()=>n(new Error("Failed to load texture: "+t)),o.src=t}))};const r=[0,0,1,0,1,1,0,1],n=[0,1,2,0,2,3];function o(e,t){const r=e.createBuffer();if(!r)throw new Error("Buffer was not created.");return e.bindBuffer(t,r),r}e.makeSquareVertexBuffer=function(e){const t=o(e,e.ARRAY_BUFFER);return e.bufferData(e.ARRAY_BUFFER,new Float32Array(r),e.STATIC_DRAW),t},e.makeSquareIndexBuffer=function(e){const t=o(e,e.ELEMENT_ARRAY_BUFFER);return e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(n),e.STATIC_DRAW),t},e.makeBindBuffer=o,e.makeBindVAO=function(e){const t=e.createVertexArray();if(!t)throw new Error("VAO was not created.");return e.bindVertexArray(t),t}}(n||(n={}))})),r.register("3ekh2",(function(t,r){e(t.exports,"particlesCount",(()=>n)),e(t.exports,"dataTextureSize",(()=>o)),e(t.exports,"DataTexturePair",(()=>a));const n=128e3,o=2**Math.ceil(Math.log2(Math.ceil(Math.sqrt(n))));function i(e,t){const r=e.createTexture();if(!r)throw new Error("No texture was created");return e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,e.R32UI,o,o,0,e.RED_INTEGER,e.UNSIGNED_INT,t,0),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),r}class a{aIsActive=!0;constructor(e,t){this.a=i(e,t),this.b=i(e,t)}get texture(){return this.aIsActive?this.a:this.b}get receivingTexture(){return this.aIsActive?this.b:this.a}swap(){this.aIsActive=!this.aIsActive}}})),r.register("hf9LN",(function(t,r){e(t.exports,"FpsCounter",(()=>n));class n{constructor(e=3){this.reportFreq=e,this.count=0,this.time=0}recordFrame(e){for(this.time+=e,this.count++;this.time>this.reportFreq;)this.time-=this.reportFreq,console.log("FPS: "+this.count/this.reportFreq),this.count=0}}})),r.register("5udHq",(function(n,o){e(n.exports,"DrawShader",(()=>m)),e(n.exports,"DataShader",(()=>x));var i=r("aAGU0"),a=r("6daLX"),s=r("72NEL"),d=r("5W6s1"),c=r("8qbFu"),u=r("d4DhX"),f=r("3ekh2");function p(e){return`#version 300 es\n#define DATA_TEXTURE_SIZE ${f.dataTextureSize}.0\n`+t(i)+"\n"+e}class l{constructor(e,t,r){this.gl=e;const{program:n,shaders:o}=u.GlUtils.makeProgram(e,p(t),p(r));this.program=n,this.shaders=o}use(){this.gl.useProgram(this.program)}delete(){this.gl.deleteProgram(this.program);for(const e of this.shaders)this.gl.deleteShader(e)}}class m extends l{constructor(e){super(e,t(s),t(a)),this.positionX=e.getUniformLocation(this.program,"positionX"),this.positionY=e.getUniformLocation(this.program,"positionY"),this.id=e.getAttribLocation(this.program,"id"),this.screenSize=e.getUniformLocation(this.program,"screenSize")}}class x extends l{constructor(e){super(e,t(d),t(c)),this.screenSize=e.getUniformLocation(this.program,"screenSize"),this.positionX=e.getUniformLocation(this.program,"positionX"),this.positionY=e.getUniformLocation(this.program,"positionY"),this.speedX=e.getUniformLocation(this.program,"speedX"),this.speedY=e.getUniformLocation(this.program,"speedY"),this.deltaTime=e.getUniformLocation(this.program,"deltaTime"),this.vertex=e.getAttribLocation(this.program,"vertex"),this.firstMovedParticleIndex=e.getUniformLocation(this.program,"firstMovedParticleIndex"),this.lastMovedParticleIndex=e.getUniformLocation(this.program,"lastMovedParticleIndex"),this.gravity=e.getUniformLocation(this.program,"gravity"),this.bounce=e.getUniformLocation(this.program,"bounce"),this.sprayX=e.getUniformLocation(this.program,"sprayX"),this.sprayY=e.getUniformLocation(this.program,"sprayY"),this.sprayDirection=e.getUniformLocation(this.program,"sprayDirection"),this.sprayPower=e.getUniformLocation(this.program,"sprayPower"),this.spraySpread=e.getUniformLocation(this.program,"spraySpread"),this.sprayIntensity=e.getUniformLocation(this.program,"sprayIntensity")}}})),r.register("aAGU0",(function(e,t){e.exports="precision mediump float;\nprecision mediump usampler2D;\n#define GLSLIFY 1\n\n#define SPEED_RANGE 5000.0\n#define INT_RANGEU 0x7fffffffu\n#define INT_RANGEF float(INT_RANGEU)\n\nfloat decodeFloat(uint value, float range){\n  return (float(value) / INT_RANGEF) * range;\n}\n\nuint encodeFloat(float value, float range){\n  return uint(((value / range) * INT_RANGEF) + INT_RANGEF);\n}\n\nuvec2 getUintPairByCoords(usampler2D texX, usampler2D texY, vec2 coords){\n  return uvec2(uint(texture(texX, coords).x), uint(texture(texY, coords).x));\n}\n\nuvec2 getUintPairByIndex(usampler2D texX, usampler2D texY, uint index){\n  float findex = float(index);\n  float y = floor(findex / DATA_TEXTURE_SIZE);\n  float x = mod(findex, DATA_TEXTURE_SIZE);\n  vec2 texcoord = (vec2(x, y) + 0.5) / DATA_TEXTURE_SIZE;\n  return uvec2(texture(texX, texcoord).x, texture(texY, texcoord).x);\n}\n\n#define getFloatPairByCoords(texX, texY, coords, range) (((vec2(texture(texX, coords).x, texture(texY, coords).x) - INT_RANGEF) / INT_RANGEF) * range)\n#define getFloatPairByIndex(texX, texY, index, range) (((vec2(getUintPairByIndex(texX, texY, index)) - INT_RANGEF) / INT_RANGEF) * range)\n\nvec4 absCoordsIntoScreenCoords(vec2 coords, vec2 screenSize){\n  return vec4(((coords / screenSize) * 2.0) - 1.0, 0, 1);\n}\n\nuint fragCoordToIndex(vec2 fragCoord){\n  return uint(fragCoord.x) + uint(fragCoord.y * DATA_TEXTURE_SIZE);\n}\n\n#define randomUint(seed) ((((seed * 505339u) % 299099u) * 982231u) % 116833u) * 683201u\n#define randomFloatFromUint(seed) normalizeRandomUint(randomUint(seed))\n#define normalizeRandomUint(value) float(value % 0xffffffu) / float(0xffffffu)"})),r.register("6daLX",(function(e,t){e.exports="#define GLSLIFY 1\nout vec4 outColor;\n\nvoid main() {\n\toutColor = vec4(1, 1, 1, 1);\n}"})),r.register("72NEL",(function(e,t){e.exports="#define GLSLIFY 1\nuniform usampler2D positionX;\nuniform usampler2D positionY;\nuniform vec2 screenSize;\nin uint id;\n\nvoid main(){\n  vec2 absCoords = getFloatPairByIndex(positionX, positionY, id, screenSize);\n  vec4 screenCoords = absCoordsIntoScreenCoords(absCoords, screenSize);\n\tgl_Position = screenCoords;\n  gl_PointSize = 1.0;\n}\n"})),r.register("5W6s1",(function(e,t){e.exports="#define GLSLIFY 1\nin vec4 vertex;\nvoid main() {\n\tgl_Position = vertex;\n}"})),r.register("8qbFu",(function(e,t){e.exports="#define GLSLIFY 1\nuniform vec2 screenSize;\nuniform float deltaTime;\n\nuniform uint firstMovedParticleIndex;\nuniform uint lastMovedParticleIndex;\n\nuniform float gravity;\nuniform float bounce;\nuniform vec4 sprayX;\nuniform vec4 sprayY;\nuniform vec4 sprayDirection;\nuniform vec4 sprayPower;\nuniform vec4 spraySpread;\nuniform uvec4 sprayIntensity;\n\nuniform usampler2D positionX;\nuniform usampler2D positionY;\nuniform usampler2D speedX;\nuniform usampler2D speedY;\n\nlayout(location = 0) out uint outPosX;\nlayout(location = 1) out uint outPosY;\nlayout(location = 2) out uint outSpeedX;\nlayout(location = 3) out uint outSpeedY;\n\n#define moveBySpray(pos, spd, index, sprayIndex) moveBySprayFn(pos, spd, index, vec2(sprayX[sprayIndex], sprayY[sprayIndex]), sprayDirection[sprayIndex], sprayPower[sprayIndex], spraySpread[sprayIndex])\n\nvoid moveBySprayFn(inout vec2 position, inout vec2 speed, uint index, vec2 sprayPosition, float direction, float power, float spread){\n\tposition = sprayPosition;\n\tuint rnd = randomUint(index);\n\tdirection += spread * (normalizeRandomUint(rnd) - 0.5);\n\tpower += (power / 3.0) * (normalizeRandomUint(rnd * 134u) - 0.5);\n\tspeed = vec2(cos(direction) * power, sin(direction) * power);\n}\n\nvoid main(){\n\tvec2 texcoord = gl_FragCoord.xy / DATA_TEXTURE_SIZE;\n\tuint index = fragCoordToIndex(gl_FragCoord.xy);\n\n\tvec2 position = getFloatPairByCoords(positionX, positionY, texcoord, screenSize);\n\tvec2 speed = getFloatPairByCoords(speedX, speedY, texcoord, SPEED_RANGE);\n\n\tuint sprayOffset = index - firstMovedParticleIndex;\n\tif(sprayOffset >= 0u){\n\t\tif(sprayOffset < sprayIntensity[0]){\n\t\t\tmoveBySpray(position, speed, index, 0);\n\t\t} else {\n\t\t\tsprayOffset -= sprayIntensity[0];\n\t\t\tif(sprayOffset < sprayIntensity[1]){\n\t\t\t\tmoveBySpray(position, speed, index, 1);\n\t\t\t} else {\n\t\t\t\tsprayOffset -= sprayIntensity[1];\n\t\t\t\tif(sprayOffset < sprayIntensity[2]){\n\t\t\t\t\tmoveBySpray(position, speed, index, 2);\n\t\t\t\t} else {\n\t\t\t\t\tsprayOffset -= sprayIntensity[2];\n\t\t\t\t\tif(sprayOffset < sprayIntensity[3]){\n\t\t\t\t\t\tmoveBySpray(position, speed, index, 3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tposition = position + (speed * deltaTime);\n\tif(position.x < 0.0){\n\t\tposition.x = 0.01;\n\t\tspeed.x = -speed.x * bounce;\n\t} else if(position.x > screenSize.x){\n\t\tposition.x = screenSize.x - 0.01;\n\t\tspeed.x = -speed.x * bounce;\n\t}\n\tif(position.y < 0.0){\n\t\tposition.y = 0.01;\n\t\tspeed.y = -speed.y * bounce;\n\t} else if(position.y > screenSize.y){\n\t\tposition.y = screenSize.y - 0.01;\n\t\tspeed.y = -speed.y * bounce;\n\t}\n\n\tspeed.y -= gravity * deltaTime;\n\t\n\toutPosX = encodeFloat(position.x, screenSize.x);\n    outPosY = encodeFloat(position.y, screenSize.y);\n    outSpeedX = encodeFloat(speed.x, SPEED_RANGE);\n    outSpeedY = encodeFloat(speed.y, SPEED_RANGE);\n}"})),r.register("dbJCa",(function(t,r){e(t.exports,"zeroSpray",(()=>n)),e(t.exports,"sprays",(()=>o)),e(t.exports,"particlesMovedPerSecond",(()=>a)),e(t.exports,"uploadSprays",(()=>s));const n={x:0,y:0,direction:0,power:0,spread:0,intensity:0},o=[{...n},{...n},{...n},{...n}];function i(e,t,r){e.uniform4f(t,o[0][r],o[1][r],o[2][r],o[3][r])}let a=0;function s(e,t){a=o.filter((e=>0!==e.x&&0!==e.y)).map((e=>e.intensity)).reduce(((e,t)=>e+t),0),i(e,t.sprayX,"x"),i(e,t.sprayY,"y"),i(e,t.sprayDirection,"direction"),i(e,t.sprayPower,"power"),i(e,t.spraySpread,"spread"),function(e,t,r){e.uniform4ui(t,o[0][r],o[1][r],o[2][r],o[3][r])}(e,t.sprayIntensity,"intensity")}}));
//# sourceMappingURL=particle_toy.7982cbfd.js.map
