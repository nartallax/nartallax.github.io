{"mappings":"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","sources":["src/sketches/zen_blockbreaker/zen_blockbreaker.ts","src/common/color_utils.ts","src/common/cycled_request_animation_frame.ts","src/common/tag.ts","src/common/classname.ts","src/lib/matterjs/matter.js","src/sketches/zen_blockbreaker/bottom_bar.ts","src/common/slider/slider.ts","src/common/input_utils.ts","src/common/slider/slider.module.scss","src/sketches/zen_blockbreaker/bottom_bar.module.scss"],"sourcesContent":["import {color3ComponentsToNumber, colorNumberTo3Components, hslToRgb, rgbNumberToColorString, rgbToHsl} from \"common/color_utils\"\nimport {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {tag} from \"common/tag\"\nimport * as Matter from \"lib/matterjs/matter\"\nimport {makeBottomBar} from \"sketches/zen_blockbreaker/bottom_bar\"\n\nconst blockColors = [0x000000, 0x53bc01, 0xffeb03, 0xffa801, 0xf93a1d, 0xe21a5f, 0x572c62, 0xa1ccd3, 0x006898]\nconst ballColors = blockColors.map(color => {\n\tconst hsl = colorNumberTo3Components(rgbToHsl(color))\n\thsl[1] = Math.min(255, hsl[1] * 1.25)\n\thsl[2] = Math.min(255, hsl[2] * 1.25)\n\treturn hslToRgb(color3ComponentsToNumber(hsl))\n})\n\nexport function main(container: HTMLElement): void {\n\tconst initialTicksPerFrame = 3\n\tconst speedMult = 0.5 / initialTicksPerFrame\n\tconst sideCount = 4\n\n\tconst wrap = document.createElement(\"div\")\n\twrap.style.cssText = \"width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: space-between\"\n\tcontainer.appendChild(wrap)\n\n\tconst bottomBar = makeBottomBar({\n\t\tinitialSpeed: initialTicksPerFrame,\n\t\tcolors: blockColors,\n\t\tonSpeedChange: speed => blockbreaker.setTicksPerFrame(speed)\n\t})\n\tbottomBar.onStatsUpdate(new Map(new Array(sideCount).fill(null).map((_, i) => [i + 1, 0])))\n\twrap.appendChild(bottomBar.root)\n\n\tconst rect = container.getBoundingClientRect()\n\tconst bottomBarHeight = bottomBar.root.getBoundingClientRect().height\n\tconst width = rect.width\n\tconst height = rect.height - bottomBarHeight\n\tconst screenSpacePx = width * height\n\tconst blockSizePx = Math.floor(Math.sqrt(screenSpacePx) / 25)\n\n\tconst blockbreaker: ZenBlockbreaker = new ZenBlockbreaker({\n\t\tticksPerFrame: initialTicksPerFrame,\n\t\tballSpeed: speedMult * ((height + width) / blockSizePx),\n\t\t// TODO: think about something more interesting here. fill the whole screen with the board..?\n\t\t// also block size may be related to DPI\n\t\tblockSizePx,\n\t\theight: Math.floor(height / blockSizePx),\n\t\twidth: Math.floor(width / blockSizePx),\n\t\tsideCount,\n\t\tonStatsChange: () => bottomBar.onStatsUpdate(blockbreaker.stats)\n\t})\n\n\tbottomBar.root.before(blockbreaker.root)\n\tbottomBar.onStatsUpdate(blockbreaker.stats)\n\n\tblockbreaker.run()\n}\n\ninterface Params {\n\treadonly ticksPerFrame: number\n\treadonly blockSizePx: number\n\treadonly width: number // blocks\n\treadonly height: number // blocks\n\treadonly ballSpeed: number // blocks per second\n\treadonly sideCount: number\n\tonStatsChange(): void\n}\n\n/** Multiplier of matter.js scale\n * matter.js starts to work weird if numbers are small\n * so we multiply those numbers by this value */\nconst matterMul = 100\n\nclass ZenBlockbreaker {\n\treadonly root: HTMLElement\n\tprivate readonly matter: Matter.Engine\n\tprivate readonly render: Matter.Render\n\tprivate ticksPerFrame: number\n\treadonly stats = new Map<number, number>()\n\n\tconstructor(private readonly params: Params) {\n\t\tthis.root = tag()\n\n\t\tthis.ticksPerFrame = params.ticksPerFrame\n\t\tthis.matter = Matter.Engine.create({\n\t\t\tgravity: {x: 0, y: 0},\n\t\t\tenableSleeping: true\n\t\t})\n\n\t\tthis.makeWalls()\n\t\tthis.makeBlocks()\n\t\tthis.makeBalls()\n\n\t\tthis.render = Matter.Render.create({\n\t\t\telement: this.root,\n\t\t\tengine: this.matter,\n\t\t\toptions: {\n\t\t\t\twidth: this.params.width * this.params.blockSizePx,\n\t\t\t\theight: this.params.height * this.params.blockSizePx,\n\t\t\t\twireframes: false\n\t\t\t}\n\t\t})\n\t\tMatter.Render.lookAt(this.render, {\n\t\t\tmin: {x: 0, y: 0},\n\t\t\tmax: {x: this.params.width * matterMul, y: this.params.height * matterMul}\n\t\t})\n\n\t\tMatter.Events.on(this.matter, \"collisionEnd\", (e: Matter.IEventCollision<Matter.Engine>) => {\n\t\t\tfor(const pair of e.pairs){\n\t\t\t\tthis.processCollision(pair)\n\t\t\t}\n\t\t})\n\t}\n\n\tsetTicksPerFrame(ticksPerFrame: number): void {\n\t\tthis.ticksPerFrame = ticksPerFrame\n\t}\n\n\tprivate makeBlocks(): void {\n\t\tconst cx = this.params.width / 2\n\t\tconst cy = this.params.height / 2\n\t\tfor(let x = 0; x < this.params.width; x++){\n\t\t\tfor(let y = 0; y < this.params.height; y++){\n\t\t\t\tconst bx = x + 0.5\n\t\t\t\tconst by = y + 0.5\n\t\t\t\tconst angle = Math.atan2(by - cy, bx - cx)\n\n\t\t\t\tlet part = angle / (Math.PI * 2)\n\t\t\t\twhile(part < 0){\n\t\t\t\t\tpart++\n\t\t\t\t}\n\t\t\t\tpart *= this.params.sideCount\n\t\t\t\tpart = Math.floor(part)\n\n\t\t\t\tconst color = part + 1\n\t\t\t\tthis.makeBlock(bx, by, color)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate makeBalls(): void {\n\t\tconst partSector = (Math.PI * 2) / this.params.sideCount\n\t\tfor(let part = 0; part < this.params.sideCount; part++){\n\t\t\tconst angle = (part + 0.5) * partSector\n\t\t\tconst sin = Math.sin(angle)\n\t\t\tconst cos = Math.cos(angle)\n\t\t\tconst distanceToHWall = Math.abs(Math.abs(cos) < 0.01 ? this.params.height / 2 : (this.params.width / 2) / cos)\n\t\t\tconst distanceToWWall = Math.abs(Math.abs(sin) < 0.01 ? this.params.width / 2 : (this.params.height / 2) / sin)\n\t\t\tconst distanceToWall = Math.min(distanceToHWall, distanceToWWall)\n\t\t\tconst distanceToBall = Math.abs(distanceToWall / 2)\n\t\t\tconst x = (distanceToBall * cos) + this.params.width / 2\n\t\t\tconst y = (distanceToBall * sin) + this.params.height / 2\n\t\t\tthis.makeBall(x, y, part + 1)\n\t\t}\n\t}\n\n\tprivate processCollision(collision: Matter.Pair): void {\n\t\tconst ballAndColor = this.getBallFromCollision(collision)\n\t\tif(!ballAndColor){\n\t\t\t// what?\n\t\t\treturn\n\t\t}\n\n\t\tconst [ball, ballColor] = ballAndColor\n\t\tconst velocityAngle = Math.atan2(ball.velocity.y, ball.velocity.x)\n\t\t// if we don't do this - ball will gradually lose speed, which is bad\n\t\t// yes, everything has restitution = 1 and friction = 0\n\t\t// but the very nature of incremental simulations is lossy, no way around this\n\t\tthis.setBallSpeed(ball, velocityAngle)\n\n\t\tconst blockAndColor = this.getBlockFromCollision(collision)\n\t\tif(!blockAndColor){\n\t\t\t// wall?\n\t\t\treturn\n\t\t}\n\t\tconst [block, blockColor] = blockAndColor\n\t\tthis.setBlockColor(block, blockColor, ballColor)\n\t\tthis.params.onStatsChange()\n\t}\n\n\tprivate setBallSpeed(ball: Matter.Body, angle: number): void {\n\t\tMatter.Body.setVelocity(ball, {\n\t\t\tx: Math.cos(angle) * this.params.ballSpeed,\n\t\t\ty: Math.sin(angle) * this.params.ballSpeed\n\t\t})\n\t}\n\n\tprivate makeBlock(x: number, y: number, color: number): void {\n\t\tconst block = Matter.Bodies.rectangle(x * matterMul, y * matterMul, 1 * matterMul, 1 * matterMul, {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {\n\t\t\t\tfillStyle: \"black\"\n\t\t\t},\n\t\t\tplugin: {\n\t\t\t\tblockColor: 0\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tlabel: `Block at ${x},${y}`,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 0,\n\t\t\t\tmask: 0\n\t\t\t}\n\t\t})\n\n\t\tthis.setBlockColor(block, null, color)\n\n\t\tMatter.Composite.add(this.matter.world, [block])\n\t}\n\n\tprivate setBlockColor(block: Matter.Body, oldColor: number | null, newColor: number): void {\n\t\tif(oldColor !== null){\n\t\t\tthis.stats.set(oldColor, (this.stats.get(oldColor) ?? 0) - 1)\n\t\t}\n\t\tthis.stats.set(newColor, (this.stats.get(newColor) ?? 0) + 1)\n\n\t\tblock.render.fillStyle = rgbNumberToColorString(blockColors[newColor]!)\n\t\tblock.plugin.blockColor = newColor\n\t\tblock.collisionFilter.category = 1 << newColor\n\t\tblock.collisionFilter.mask = 0x8fffffff & (~(1 << newColor))\n\t}\n\n\tprivate getBlockFromCollision(pair: Matter.Pair): [Matter.Body, number] | null {\n\t\tlet color = this.getBlockColor(pair.bodyA)\n\t\tif(color !== null){\n\t\t\treturn [pair.bodyA, color]\n\t\t}\n\t\tcolor = this.getBlockColor(pair.bodyB)\n\t\tif(color !== null){\n\t\t\treturn [pair.bodyB, color]\n\t\t}\n\t\treturn null\n\t}\n\n\tprivate getBlockColor(block: Matter.Body): number | null {\n\t\treturn block.plugin.blockColor ?? null\n\t}\n\n\tprivate makeBall(x: number, y: number, color: number): void {\n\t\tconst ball = Matter.Bodies.circle(x * matterMul, y * matterMul, 0.5 * matterMul, {\n\t\t\tisStatic: false,\n\t\t\trender: {\n\t\t\t\tfillStyle: rgbNumberToColorString(ballColors[color]!)\n\t\t\t},\n\t\t\tplugin: {\n\t\t\t\tballColor: color\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tfriction: 0,\n\t\t\tfrictionAir: 0,\n\t\t\tfrictionStatic: 0,\n\t\t\tlabel: \"Ball \" + color,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 1 << color,\n\t\t\t\tmask: 0x8fffffff & (~(1 << color))\n\t\t\t}\n\t\t})\n\n\t\tconst angle = Math.random() * Math.PI * 2\n\t\tthis.setBallSpeed(ball, angle)\n\n\t\tMatter.Composite.add(this.matter.world, [ball])\n\t}\n\n\tprivate getBallFromCollision(pair: Matter.Pair): [Matter.Body, number] | null {\n\t\tlet color = this.getBallColor(pair.bodyA)\n\t\tif(color !== null){\n\t\t\treturn [pair.bodyA, color]\n\t\t}\n\t\tcolor = this.getBallColor(pair.bodyB)\n\t\tif(color !== null){\n\t\t\treturn [pair.bodyB, color]\n\t\t}\n\t\treturn null\n\t}\n\n\tprivate getBallColor(body: Matter.Body): number | null {\n\t\treturn body.plugin.ballColor ?? null\n\t}\n\n\tprivate makeWalls(): void {\n\t\tconst wallThickness = 10\n\t\tconst wallProps: Matter.IChamferableBodyDefinition = {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {fillStyle: \"black\"},\n\t\t\trestitution: 1,\n\t\t\tlabel: \"wall\"\n\t\t}\n\t\tMatter.Composite.add(this.matter.world, [\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, (-wallThickness / 2) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, ((wallThickness / 2) + this.params.height) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(-wallThickness / 2) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t((wallThickness / 2) + this.params.width) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t)\n\t\t])\n\t}\n\n\trun(): void {\n\t\tMatter.Render.run(this.render)\n\t\tconst stop = cycledRequestAnimationFrame(this.root, delta => {\n\t\t\tdelta /= 1000 // delta in seconds\n\t\t\tif(delta > 0.1){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvoid delta\n\t\t\t\tfor(let i = 0; i < this.ticksPerFrame; i++){\n\t\t\t\t\tMatter.Engine.update(this.matter, delta * 1000)\n\t\t\t\t}\n\t\t\t} catch(e){\n\t\t\t\tstop()\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}, () => {\n\t\t\tMatter.Render.stop(this.render)\n\t\t})\n\t}\n}","function twoHex(x: number): string {\n\treturn (x > 0xf ? \"\" : \"0\") + x.toString(16)\n}\n\nexport function colorNumberTo3Components(color: number): [r: number, g: number, b: number] {\n\tconst r = (color >> 16) & 0xff,\n\t\tg = (color >> 8) & 0xff,\n\t\tb = (color >> 0) & 0xff\n\treturn [r, g, b]\n}\n\nexport function color3ComponentsToNumber(components: [r: number, g: number, b: number]): number {\n\tconst [r, g, b] = components\n\treturn (r << 16) | (g << 8) | b\n}\n\nexport function rgbToHsl(color: number): number {\n\tlet [r, g, b] = colorNumberTo3Components(color)\n\t// Make r, g, and b fractions of 1\n\tr /= 255\n\tg /= 255\n\tb /= 255\n\n\t// Find greatest and smallest channel values\n\tconst cmin = Math.min(r, g, b),\n\t\tcmax = Math.max(r, g, b),\n\t\tdelta = cmax - cmin\n\tlet h = 0,\n\t\ts = 0,\n\t\tl = 0\n\n\t// Calculate hue\n\t// No difference\n\tif(delta === 0){\n\t\th = 0\n\t} else if(cmax === r){\n\t\t// Red is max\n\t\th = ((g - b) / delta) % 6\n\t} else if(cmax === g){\n\t\t// Green is max\n\t\th = (b - r) / delta + 2\n\t} else {\n\t\t// Blue is max\n\t\th = (r - g) / delta + 4\n\t}\n\n\th = Math.round(h * 60)\n\n\t// Make negative hues positive behind 360°\n\tif(h < 0){\n\t\th += 360\n\t}\n\n\t// Calculate lightness\n\tl = (cmax + cmin) / 2\n\n\t// Calculate saturation\n\ts = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n\t// Multiply l and s by 100\n\ts = +(s * 100).toFixed(1)\n\tl = +(l * 100).toFixed(1)\n\n\treturn color3ComponentsToNumber([(h / 360) * 256, (s / 100) * 256, (l / 100) * 256])\n}\n\nexport function hslToRgb(hsl: number): number {\n\tlet [h, s, l] = colorNumberTo3Components(hsl)\n\th /= 255\n\ts /= 255\n\tl /= 255\n\tlet r: number, g: number, b: number\n\n\tif(s === 0){\n\t\tr = g = b = l // achromatic\n\t} else {\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tr = hueToRgb(p, q, h + 1 / 3)\n\t\tg = hueToRgb(p, q, h)\n\t\tb = hueToRgb(p, q, h - 1 / 3)\n\t}\n\n\treturn color3ComponentsToNumber([Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)])\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n\tif(t < 0){\n\t\tt += 1\n\t}\n\tif(t > 1){\n\t\tt -= 1\n\t}\n\tif(t < 1 / 6){\n\t\treturn p + (q - p) * 6 * t\n\t}\n\tif(t < 1 / 2){\n\t\treturn q\n\t}\n\tif(t < 2 / 3){\n\t\treturn p + (q - p) * (2 / 3 - t) * 6\n\t}\n\treturn p\n}\n\nexport function rgbNumberToColorString(rgb: number): string {\n\tconst b = rgb & 0xff\n\trgb >>= 8\n\tconst g = rgb & 0xff\n\trgb >>= 8\n\tconst r = rgb & 0xff\n\n\treturn \"#\" + twoHex(r) + twoHex(g) + twoHex(b)\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function\n * Unmounting root also stops it */\nexport function cycledRequestAnimationFrame(root: HTMLElement | SVGElement, handler: (delta: number) => void, onStop?: () => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\tonStop?.()\n\t\t\treturn\n\t\t}\n\t\tif(!root.isConnected){\n\t\t\tonStop?.()\n\t\t\tstopped = true\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","/* !\nThis is alpha-something build of matter.js with some alterations\nthose alterations are related to bugfixes and optimizations\noriginal license below\n\n * matter-js 0.18.0-alpha+0eeceb5 by @liabru\n * Experimental pre-release build.\n *   http://brm.io/matter-js/\n * License MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === \"object\" && typeof module === \"object\"){\n\t\tmodule.exports = factory()\n\t} else if(typeof define === \"function\" && define.amd){\n\t\tdefine(\"Matter\", [], factory)\n\t} else if(typeof exports === \"object\"){\n\t\texports[\"Matter\"] = factory()\n\t} else {\n\t\troot[\"Matter\"] = factory()\n\t}\n})(this, function() {\n\treturn /** ****/ (function(modules) { // webpackBootstrap\n\t\t/** ****/ \t// The module cache\n\t\t/** ****/ \tvar installedModules = {}\n\t\t/** ****/\n\t\t/** ****/ \t// The require function\n\t\t/** ****/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Check if module is in cache\n\t\t\t/** ****/ \t\tif(installedModules[moduleId]){\n\t\t\t\t/** ****/ \t\t\treturn installedModules[moduleId].exports\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/** ****/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t\t/** ****/ \t\t\ti: moduleId,\n\t\t\t\t/** ****/ \t\t\tl: false,\n\t\t\t\t/** ****/ \t\t\texports: {}\n\t\t\t\t/** ****/}\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Execute the module function\n\t\t\t/** ****/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__)\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Flag the module as loaded\n\t\t\t/** ****/ \t\tmodule.l = true\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Return the exports of the module\n\t\t\t/** ****/ \t\treturn module.exports\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// expose the modules object (__webpack_modules__)\n\t\t/** ****/ \t__webpack_require__.m = modules\n\t\t/** ****/\n\t\t/** ****/ \t// expose the module cache\n\t\t/** ****/ \t__webpack_require__.c = installedModules\n\t\t/** ****/\n\t\t/** ****/ \t// define getter function for harmony exports\n\t\t/** ****/ \t__webpack_require__.d = function(exports, name, getter) {\n\t\t\t/** ****/ \t\tif(!__webpack_require__.o(exports, name)){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, name, {enumerable: true, get: getter})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// define __esModule on exports\n\t\t/** ****/ \t__webpack_require__.r = function(exports) {\n\t\t\t/** ****/ \t\tif(typeof Symbol !== \"undefined\" && Symbol.toStringTag){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, {value: \"Module\"})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\tObject.defineProperty(exports, \"__esModule\", {value: true})\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// create a fake namespace object\n\t\t/** ****/ \t// mode & 1: value is a module id, require it\n\t\t/** ****/ \t// mode & 2: merge all properties of value into the ns\n\t\t/** ****/ \t// mode & 4: return value when already ns object\n\t\t/** ****/ \t// mode & 8|1: behave like require\n\t\t/** ****/ \t__webpack_require__.t = function(value, mode) {\n\t\t\t/** ****/ \t\tif(mode & 1){\n\t\t\t\tvalue = __webpack_require__(value)\n\t\t\t}\n\t\t\t/** ****/ \t\tif(mode & 8){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tif((mode & 4) && typeof value === \"object\" && value && value.__esModule){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tvar ns = Object.create(null)\n\t\t\t/** ****/ \t\t__webpack_require__.r(ns)\n\t\t\t/** ****/ \t\tObject.defineProperty(ns, \"default\", {enumerable: true, value: value})\n\t\t\t/** ****/ \t\tif(mode & 2 && typeof value !== \"string\"){\n\t\t\t\tfor(var key in value){\n\t\t\t\t\t__webpack_require__.d(ns, key, function(key) {\n\t\t\t\t\t\treturn value[key]\n\t\t\t\t\t}.bind(null, key))\n\t\t\t\t}\n\t\t\t}\n\t\t\t/** ****/ \t\treturn ns\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t\t/** ****/ \t__webpack_require__.n = function(module) {\n\t\t\t/** ****/ \t\tvar getter = module && module.__esModule\n\t\t\t/** ****/ \t\t\t? function getDefault() {\n\t\t\t\t\treturn module[\"default\"]\n\t\t\t\t}\n\t\t\t/** ****/ \t\t\t: function getModuleExports() {\n\t\t\t\t\treturn module\n\t\t\t\t}\n\t\t\t/** ****/ \t\t__webpack_require__.d(getter, \"a\", getter)\n\t\t\t/** ****/ \t\treturn getter\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// Object.prototype.hasOwnProperty.call\n\t\t/** ****/ \t__webpack_require__.o = function(object, property) {\n\t\t\treturn Object.prototype.hasOwnProperty.call(object, property)\n\t\t}\n\t\t/** ****/\n\t\t/** ****/ \t// __webpack_public_path__\n\t\t/** ****/ \t__webpack_require__.p = \"\"\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// Load entry module and return exports\n\t\t/** ****/ \treturn __webpack_require__(__webpack_require__.s = 21)\n\t\t/** ****/ })\n\t/** **********************************************************************/\n\t/** ****/ ([\n\t\t/* 0 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\n\t\t\tvar Common = {}\n\n\t\t\tmodule.exports = Common;\n\n\t\t\t(function() {\n\n\t\t\t\tCommon._nextId = 0\n\t\t\t\tCommon._seed = 0\n\t\t\t\tCommon._nowStartTime = +(new Date())\n\t\t\t\tCommon._warnedOnce = {}\n\t\t\t\tCommon._decomp = null\n\n\t\t\t\t/**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n\t\t\t\tCommon.extend = function(obj, deep) {\n\t\t\t\t\tvar argsStart,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tdeepClone\n\n\t\t\t\t\tif(typeof deep === \"boolean\"){\n\t\t\t\t\t\targsStart = 2\n\t\t\t\t\t\tdeepClone = deep\n\t\t\t\t\t} else {\n\t\t\t\t\t\targsStart = 1\n\t\t\t\t\t\tdeepClone = true\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = argsStart; i < arguments.length; i++){\n\t\t\t\t\t\tvar source = arguments[i]\n\n\t\t\t\t\t\tif(source){\n\t\t\t\t\t\t\tfor(var prop in source){\n\t\t\t\t\t\t\t\tif(deepClone && source[prop] && source[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\tif(!obj[prop] || obj[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\t\tobj[prop] = obj[prop] || {}\n\t\t\t\t\t\t\t\t\t\tCommon.extend(obj[prop], deepClone, source[prop])\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n\t\t\t\tCommon.clone = function(obj, deep) {\n\t\t\t\t\treturn Common.extend({}, deep, obj)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n\t\t\t\tCommon.keys = function(obj) {\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\treturn Object.keys(obj)\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tvar keys = []\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tkeys.push(key)\n\t\t\t\t\t}\n\t\t\t\t\treturn keys\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n\t\t\t\tCommon.values = function(obj) {\n\t\t\t\t\tvar values = []\n\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\tvar keys = Object.keys(obj)\n\t\t\t\t\t\tfor(var i = 0; i < keys.length; i++){\n\t\t\t\t\t\t\tvalues.push(obj[keys[i]])\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn values\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tvalues.push(obj[key])\n\t\t\t\t\t}\n\t\t\t\t\treturn values\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n\t\t\t\tCommon.get = function(obj, path, begin, end) {\n\t\t\t\t\tpath = path.split(\".\").slice(begin, end)\n\n\t\t\t\t\tfor(var i = 0; i < path.length; i += 1){\n\t\t\t\t\t\tobj = obj[path[i]]\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n\t\t\t\tCommon.set = function(obj, path, val, begin, end) {\n\t\t\t\t\tvar parts = path.split(\".\").slice(begin, end)\n\t\t\t\t\tCommon.get(obj, path, 0, -1)[parts[parts.length - 1]] = val\n\t\t\t\t\treturn val\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n\t\t\t\tCommon.shuffle = function(array) {\n\t\t\t\t\tfor(var i = array.length - 1; i > 0; i--){\n\t\t\t\t\t\tvar j = Math.floor(Common.random() * (i + 1))\n\t\t\t\t\t\tvar temp = array[i]\n\t\t\t\t\t\tarray[i] = array[j]\n\t\t\t\t\t\tarray[j] = temp\n\t\t\t\t\t}\n\t\t\t\t\treturn array\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n\t\t\t\tCommon.choose = function(choices) {\n\t\t\t\t\treturn choices[Math.floor(Common.random() * choices.length)]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n\t\t\t\tCommon.isElement = function(obj) {\n\t\t\t\t\tif(typeof HTMLElement !== \"undefined\"){\n\t\t\t\t\t\treturn obj instanceof HTMLElement\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!(obj && obj.nodeType && obj.nodeName)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n\t\t\t\tCommon.isArray = function(obj) {\n\t\t\t\t\treturn Object.prototype.toString.call(obj) === \"[object Array]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n\t\t\t\tCommon.isFunction = function(obj) {\n\t\t\t\t\treturn typeof obj === \"function\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n\t\t\t\tCommon.isPlainObject = function(obj) {\n\t\t\t\t\treturn typeof obj === \"object\" && obj.constructor === Object\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n\t\t\t\tCommon.isString = function(obj) {\n\t\t\t\t\treturn toString.call(obj) === \"[object String]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n\t\t\t\tCommon.clamp = function(value, min, max) {\n\t\t\t\t\tif(value < min){\n\t\t\t\t\t\treturn min\n\t\t\t\t\t}\n\t\t\t\t\tif(value > max){\n\t\t\t\t\t\treturn max\n\t\t\t\t\t}\n\t\t\t\t\treturn value\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n\t\t\t\tCommon.sign = function(value) {\n\t\t\t\t\treturn value < 0 ? -1 : 1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n\t\t\t\tCommon.now = function() {\n\t\t\t\t\tif(typeof window !== \"undefined\" && window.performance){\n\t\t\t\t\t\tif(window.performance.now){\n\t\t\t\t\t\t\treturn window.performance.now()\n\t\t\t\t\t\t} else if(window.performance.webkitNow){\n\t\t\t\t\t\t\treturn window.performance.webkitNow()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Date.now){\n\t\t\t\t\t\treturn Date.now()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (new Date()) - Common._nowStartTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n\t\t\t\tCommon.random = function(min, max) {\n\t\t\t\t\tmin = (typeof min !== \"undefined\") ? min : 0\n\t\t\t\t\tmax = (typeof max !== \"undefined\") ? max : 1\n\t\t\t\t\treturn min + _seededRandom() * (max - min)\n\t\t\t\t}\n\n\t\t\t\tvar _seededRandom = function() {\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Linear_congruential_generator\n\t\t\t\t\tCommon._seed = (Common._seed * 9301 + 49297) % 233280\n\t\t\t\t\treturn Common._seed / 233280\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n\t\t\t\tCommon.colorToNumber = function(colorString) {\n\t\t\t\t\tcolorString = colorString.replace(\"#\", \"\")\n\n\t\t\t\t\tif(colorString.length == 3){\n\t\t\t\t\t\tcolorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn parseInt(colorString, 16)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n\t\t\t\tCommon.logLevel = 1\n\n\t\t\t\t/**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.log = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.log.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.info = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 2){\n\t\t\t\t\t\tconsole.info.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warn = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.warn.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warnOnce = function() {\n\t\t\t\t\tvar message = Array.prototype.slice.call(arguments).join(\" \")\n\n\t\t\t\t\tif(!Common._warnedOnce[message]){\n\t\t\t\t\t\tCommon.warn(message)\n\t\t\t\t\t\tCommon._warnedOnce[message] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n\t\t\t\tCommon.deprecated = function(obj, prop, warning) {\n\t\t\t\t\tobj[prop] = Common.chain(function() {\n\t\t\t\t\t\tCommon.warnOnce(\"🔅 deprecated 🔅\", warning)\n\t\t\t\t\t}, obj[prop])\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n\t\t\t\tCommon.nextId = function() {\n\t\t\t\t\treturn Common._nextId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n\t\t\t\tCommon.indexOf = function(haystack, needle) {\n\t\t\t\t\tif(haystack.indexOf){\n\t\t\t\t\t\treturn haystack.indexOf(needle)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < haystack.length; i++){\n\t\t\t\t\t\tif(haystack[i] === needle){\n\t\t\t\t\t\t\treturn i\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n\t\t\t\tCommon.map = function(list, func) {\n\t\t\t\t\tif(list.map){\n\t\t\t\t\t\treturn list.map(func)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mapped = []\n\n\t\t\t\t\tfor(var i = 0; i < list.length; i += 1){\n\t\t\t\t\t\tmapped.push(func(list[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\treturn mapped\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n\t\t\t\tCommon.topologicalSort = function(graph) {\n\t\t\t\t\t// https://github.com/mgechev/javascript-algorithms\n\t\t\t\t\t// Copyright (c) Minko Gechev (MIT license)\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar result = [],\n\t\t\t\t\t\tvisited = [],\n\t\t\t\t\t\ttemp = []\n\n\t\t\t\t\tfor(var node in graph){\n\t\t\t\t\t\tif(!visited[node] && !temp[node]){\n\t\t\t\t\t\t\tCommon._topologicalSort(node, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\tCommon._topologicalSort = function(node, visited, temp, graph, result) {\n\t\t\t\t\tvar neighbors = graph[node] || []\n\t\t\t\t\ttemp[node] = true\n\n\t\t\t\t\tfor(var i = 0; i < neighbors.length; i += 1){\n\t\t\t\t\t\tvar neighbor = neighbors[i]\n\n\t\t\t\t\t\tif(temp[neighbor]){\n\t\t\t\t\t\t\t// skip circular dependencies\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!visited[neighbor]){\n\t\t\t\t\t\t\tCommon._topologicalSort(neighbor, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttemp[node] = false\n\t\t\t\t\tvisited[node] = true\n\n\t\t\t\t\tresult.push(node)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n\t\t\t\tCommon.chain = function() {\n\t\t\t\t\tvar funcs = []\n\n\t\t\t\t\tfor(var i = 0; i < arguments.length; i += 1){\n\t\t\t\t\t\tvar func = arguments[i]\n\n\t\t\t\t\t\tif(func._chained){\n\t\t\t\t\t\t\t// flatten already chained functions\n\t\t\t\t\t\t\tfuncs.push.apply(funcs, func._chained)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfuncs.push(func)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar chain = function() {\n\t\t\t\t\t\t// https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n\t\t\t\t\t\tvar lastResult,\n\t\t\t\t\t\t\targs = new Array(arguments.length)\n\n\t\t\t\t\t\tfor(var i = 0, l = arguments.length; i < l; i++){\n\t\t\t\t\t\t\targs[i] = arguments[i]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(i = 0; i < funcs.length; i += 1){\n\t\t\t\t\t\t\tvar result = funcs[i].apply(lastResult, args)\n\n\t\t\t\t\t\t\tif(typeof result !== \"undefined\"){\n\t\t\t\t\t\t\t\tlastResult = result\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastResult\n\t\t\t\t\t}\n\n\t\t\t\t\tchain._chained = funcs\n\n\t\t\t\t\treturn chain\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathBefore = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tCommon.get(base, path)\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathAfter = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tCommon.get(base, path),\n\t\t\t\t\t\tfunc\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n\t\t\t\tCommon.setDecomp = function(decomp) {\n\t\t\t\t\tCommon._decomp = decomp\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n\t\t\t\tCommon.getDecomp = function() {\n\t\t\t\t\t// get user provided decomp if set\n\t\t\t\t\tvar decomp = Common._decomp\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// otherwise from window global\n\t\t\t\t\t\tif(!decomp && typeof window !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = window.decomp\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise from node global\n\t\t\t\t\t\tif(!decomp && typeof global !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = global.decomp\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e){\n\t\t\t\t\t\t// decomp not available\n\t\t\t\t\t\tdecomp = null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn decomp\n\t\t\t\t}\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 1 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\n\t\t\tvar Bounds = {}\n\n\t\t\tmodule.exports = Bounds;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n\t\t\t\tBounds.create = function(vertices) {\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: 0, y: 0},\n\t\t\t\t\t\tmax: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(vertices){\n\t\t\t\t\t\tBounds.update(bounds, vertices)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bounds\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n\t\t\t\tBounds.update = function(bounds, vertices, velocity) {\n\t\t\t\t\tbounds.min.x = Infinity\n\t\t\t\t\tbounds.max.x = -Infinity\n\t\t\t\t\tbounds.min.y = Infinity\n\t\t\t\t\tbounds.max.y = -Infinity\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar vertex = vertices[i]\n\t\t\t\t\t\tif(vertex.x > bounds.max.x){\n\t\t\t\t\t\t\tbounds.max.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.x < bounds.min.x){\n\t\t\t\t\t\t\tbounds.min.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y > bounds.max.y){\n\t\t\t\t\t\t\tbounds.max.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y < bounds.min.y){\n\t\t\t\t\t\t\tbounds.min.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(velocity){\n\t\t\t\t\t\tif(velocity.x > 0){\n\t\t\t\t\t\t\tbounds.max.x += velocity.x\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.x += velocity.x\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(velocity.y > 0){\n\t\t\t\t\t\t\tbounds.max.y += velocity.y\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.y += velocity.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n\t\t\t\tBounds.contains = function(bounds, point) {\n\t\t\t\t\treturn point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n\t\t\t\tBounds.overlaps = function(boundsA, boundsB) {\n\t\t\t\t\treturn (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n\t\t\t\tBounds.translate = function(bounds, vector) {\n\t\t\t\t\tbounds.min.x += vector.x\n\t\t\t\t\tbounds.max.x += vector.x\n\t\t\t\t\tbounds.min.y += vector.y\n\t\t\t\t\tbounds.max.y += vector.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n\t\t\t\tBounds.shift = function(bounds, position) {\n\t\t\t\t\tvar deltaX = bounds.max.x - bounds.min.x,\n\t\t\t\t\t\tdeltaY = bounds.max.y - bounds.min.y\n\n\t\t\t\t\tbounds.min.x = position.x\n\t\t\t\t\tbounds.max.x = position.x + deltaX\n\t\t\t\t\tbounds.min.y = position.y\n\t\t\t\t\tbounds.max.y = position.y + deltaY\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 2 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n\t\t\t// TUDDO: consider params for reusing vector objects\n\n\t\t\tvar Vector = {}\n\n\t\t\tmodule.exports = Vector;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n\t\t\t\tVector.create = function(x, y) {\n\t\t\t\t\treturn {x: x || 0, y: y || 0}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n\t\t\t\tVector.clone = function(vector) {\n\t\t\t\t\treturn {x: vector.x, y: vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n\t\t\t\tVector.magnitude = function(vector) {\n\t\t\t\t\treturn Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n\t\t\t\tVector.magnitudeSquared = function(vector) {\n\t\t\t\t\treturn (vector.x * vector.x) + (vector.y * vector.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n\t\t\t\tVector.rotate = function(vector, angle, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = vector.x * cos - vector.y * sin\n\t\t\t\t\toutput.y = vector.x * sin + vector.y * cos\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n\t\t\t\tVector.rotateAbout = function(vector, angle, point, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin)\n\t\t\t\t\toutput.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos)\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n\t\t\t\tVector.normalise = function(vector) {\n\t\t\t\t\tvar magnitude = Vector.magnitude(vector)\n\t\t\t\t\tif(magnitude === 0){\n\t\t\t\t\t\treturn {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\treturn {x: vector.x / magnitude, y: vector.y / magnitude}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n\t\t\t\tVector.dot = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n\t\t\t\tVector.cross = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n\t\t\t\tVector.cross3 = function(vectorA, vectorB, vectorC) {\n\t\t\t\t\treturn (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n\t\t\t\tVector.add = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x + vectorB.x\n\t\t\t\t\toutput.y = vectorA.y + vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n\t\t\t\tVector.sub = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x - vectorB.x\n\t\t\t\t\toutput.y = vectorA.y - vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n\t\t\t\tVector.mult = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x * scalar, y: vector.y * scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n\t\t\t\tVector.div = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x / scalar, y: vector.y / scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n\t\t\t\tVector.perp = function(vector, negate) {\n\t\t\t\t\tnegate = negate === true ? -1 : 1\n\t\t\t\t\treturn {x: negate * -vector.y, y: negate * vector.x}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n\t\t\t\tVector.neg = function(vector) {\n\t\t\t\t\treturn {x: -vector.x, y: -vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n\t\t\t\tVector.angle = function(vectorA, vectorB) {\n\t\t\t\t\treturn Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n\t\t\t\tVector._temp = [\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create()\n\t\t\t\t]\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 3 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\n\t\t\tvar Vertices = {}\n\n\t\t\tmodule.exports = Vertices\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n\t\t\t\tVertices.create = function(points, body) {\n\t\t\t\t\tvar vertices = []\n\n\t\t\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\t\t\tvar point = points[i],\n\t\t\t\t\t\t\tvertex = {\n\t\t\t\t\t\t\t\tx: point.x,\n\t\t\t\t\t\t\t\ty: point.y,\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tbody: body,\n\t\t\t\t\t\t\t\tisInternal: false\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertices.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.fromPath = function(path, body) {\n\t\t\t\t\tvar pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n\t\t\t\t\t\tpoints = []\n\n\t\t\t\t\tpath.replace(pathPattern, function(match, x, y) {\n\t\t\t\t\t\tpoints.push({x: parseFloat(x), y: parseFloat(y)})\n\t\t\t\t\t})\n\n\t\t\t\t\treturn Vertices.create(points, body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n\t\t\t\tVertices.centre = function(vertices) {\n\t\t\t\t\tvar area = Vertices.area(vertices, true),\n\t\t\t\t\t\tcentre = {x: 0, y: 0},\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\ttemp,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tj = (i + 1) % vertices.length\n\t\t\t\t\t\tcross = Vector.cross(vertices[i], vertices[j])\n\t\t\t\t\t\ttemp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross)\n\t\t\t\t\t\tcentre = Vector.add(centre, temp)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(centre, 6 * area)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n\t\t\t\tVertices.mean = function(vertices) {\n\t\t\t\t\tvar average = {x: 0, y: 0}\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\taverage.x += vertices[i].x\n\t\t\t\t\t\taverage.y += vertices[i].y\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(average, vertices.length)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n\t\t\t\tVertices.area = function(vertices, signed) {\n\t\t\t\t\tvar area = 0,\n\t\t\t\t\t\tj = vertices.length - 1\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tarea += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y)\n\t\t\t\t\t\tj = i\n\t\t\t\t\t}\n\n\t\t\t\t\tif(signed){\n\t\t\t\t\t\treturn area / 2\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.abs(area) / 2\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n\t\t\t\tVertices.inertia = function(vertices, mass) {\n\t\t\t\t\tvar numerator = 0,\n\t\t\t\t\t\tdenominator = 0,\n\t\t\t\t\t\tv = vertices,\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find the polygon's moment of inertia, using second moment of area\n\t\t\t\t\t// from equations at http://www.physicsforums.com/showthread.php?t=25293\n\t\t\t\t\tfor(var n = 0; n < v.length; n++){\n\t\t\t\t\t\tj = (n + 1) % v.length\n\t\t\t\t\t\tcross = Math.abs(Vector.cross(v[j], v[n]))\n\t\t\t\t\t\tnumerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]))\n\t\t\t\t\t\tdenominator += cross\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (mass / 6) * (numerator / denominator)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n\t\t\t\tVertices.translate = function(vertices, vector, scalar) {\n\t\t\t\t\tscalar = typeof scalar !== \"undefined\" ? scalar : 1\n\n\t\t\t\t\tvar verticesLength = vertices.length,\n\t\t\t\t\t\ttranslateX = vector.x * scalar,\n\t\t\t\t\t\ttranslateY = vector.y * scalar,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertices[i].x += translateX\n\t\t\t\t\t\tvertices[i].y += translateY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n\t\t\t\tVertices.rotate = function(vertices, angle, point) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle),\n\t\t\t\t\t\tpointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\tdx,\n\t\t\t\t\t\tdy,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdx = vertex.x - pointX\n\t\t\t\t\t\tdy = vertex.y - pointY\n\t\t\t\t\t\tvertex.x = pointX + (dx * cos - dy * sin)\n\t\t\t\t\t\tvertex.y = pointY + (dx * sin + dy * cos)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n\t\t\t\tVertices.contains = function(vertices, point) {\n\t\t\t\t\tvar pointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex = vertices[verticesLength - 1],\n\t\t\t\t\t\tnextVertex\n\n\t\t\t\t\tfor(var i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tnextVertex = vertices[i]\n\n\t\t\t\t\t\tif((pointX - vertex.x) * (nextVertex.y - vertex.y)\n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertex = nextVertex\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n\t\t\t\tVertices.scale = function(vertices, scaleX, scaleY, point) {\n\t\t\t\t\tif(scaleX === 1 && scaleY === 1){\n\t\t\t\t\t\treturn vertices\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint = point || Vertices.centre(vertices)\n\n\t\t\t\t\tvar vertex,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdelta = Vector.sub(vertex, point)\n\t\t\t\t\t\tvertices[i].x = point.x + delta.x * scaleX\n\t\t\t\t\t\tvertices[i].y = point.y + delta.y * scaleY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n\t\t\t\tVertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n\t\t\t\t\tif(typeof radius === \"number\"){\n\t\t\t\t\t\tradius = [radius]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tradius = radius || [8]\n\t\t\t\t\t}\n\n\t\t\t\t\t// quality defaults to -1, which is auto\n\t\t\t\t\tquality = (typeof quality !== \"undefined\") ? quality : -1\n\t\t\t\t\tqualityMin = qualityMin || 2\n\t\t\t\t\tqualityMax = qualityMax || 14\n\n\t\t\t\t\tvar newVertices = []\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n\t\t\t\t\t\t\tvertex = vertices[i],\n\t\t\t\t\t\t\tnextVertex = vertices[(i + 1) % vertices.length],\n\t\t\t\t\t\t\tcurrentRadius = radius[i < radius.length ? i : radius.length - 1]\n\n\t\t\t\t\t\tif(currentRadius === 0){\n\t\t\t\t\t\t\tnewVertices.push(vertex)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar prevNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: vertex.y - prevVertex.y,\n\t\t\t\t\t\t\ty: prevVertex.x - vertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar nextNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: nextVertex.y - vertex.y,\n\t\t\t\t\t\t\ty: vertex.x - nextVertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n\t\t\t\t\t\t\tradiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n\t\t\t\t\t\t\tmidNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n\t\t\t\t\t\t\tscaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius))\n\n\t\t\t\t\t\tvar precision = quality\n\n\t\t\t\t\t\tif(quality === -1){\n\t\t\t\t\t\t\t// automatically decide precision\n\t\t\t\t\t\t\tprecision = Math.pow(currentRadius, 0.32) * 1.75\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprecision = Common.clamp(precision, qualityMin, qualityMax)\n\n\t\t\t\t\t\t// use an even value for precision, more likely to reduce axes by using symmetry\n\t\t\t\t\t\tif(precision % 2 === 1){\n\t\t\t\t\t\t\tprecision += 1\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n\t\t\t\t\t\t\ttheta = alpha / precision\n\n\t\t\t\t\t\tfor(var j = 0; j < precision; j++){\n\t\t\t\t\t\t\tnewVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newVertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.clockwiseSort = function(vertices) {\n\t\t\t\t\tvar centre = Vertices.mean(vertices)\n\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\treturn Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n\t\t\t\tVertices.isConvex = function(vertices) {\n\t\t\t\t\t// http://paulbourke.net/geometry/polygonmesh/\n\t\t\t\t\t// Copyright (c) Paul Bourke (use permitted)\n\n\t\t\t\t\tvar flag = 0,\n\t\t\t\t\t\tn = vertices.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tz\n\n\t\t\t\t\tif(n < 3){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < n; i++){\n\t\t\t\t\t\tj = (i + 1) % n\n\t\t\t\t\t\tk = (i + 2) % n\n\t\t\t\t\t\tz = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y)\n\t\t\t\t\t\tz -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x)\n\n\t\t\t\t\t\tif(z < 0){\n\t\t\t\t\t\t\tflag |= 1\n\t\t\t\t\t\t} else if(z > 0){\n\t\t\t\t\t\t\tflag |= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(flag === 3){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flag !== 0){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n\t\t\t\tVertices.hull = function(vertices) {\n\t\t\t\t\t// http://geomalgorithms.com/a10-_hull-1.html\n\n\t\t\t\t\tvar upper = [],\n\t\t\t\t\t\tlower = [],\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// sort vertices on x-axis (y-axis for ties)\n\t\t\t\t\tvertices = vertices.slice(0)\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\tvar dx = vertexA.x - vertexB.x\n\t\t\t\t\t\treturn dx !== 0 ? dx : vertexA.y - vertexB.y\n\t\t\t\t\t})\n\n\t\t\t\t\t// build lower hull\n\t\t\t\t\tfor(i = 0; i < vertices.length; i += 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tlower.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlower.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// build upper hull\n\t\t\t\t\tfor(i = vertices.length - 1; i >= 0; i -= 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tupper.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tupper.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// concatenation of the lower and upper hulls gives the convex hull\n\t\t\t\t\t// omit last points because they are repeated at the beginning of the other list\n\t\t\t\t\tupper.pop()\n\t\t\t\t\tlower.pop()\n\n\t\t\t\t\treturn upper.concat(lower)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 4 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\n\t\t\tvar Events = {}\n\n\t\t\tmodule.exports = Events\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.on = function(object, eventNames, callback) {\n\t\t\t\t\tvar names = eventNames.split(\" \"),\n\t\t\t\t\t\tname\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\tobject.events = object.events || {}\n\t\t\t\t\t\tobject.events[name] = object.events[name] || []\n\t\t\t\t\t\tobject.events[name].push(callback)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn callback\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.off = function(object, eventNames, callback) {\n\t\t\t\t\tif(!eventNames){\n\t\t\t\t\t\tobject.events = {}\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle Events.off(object, callback)\n\t\t\t\t\tif(typeof eventNames === \"function\"){\n\t\t\t\t\t\tcallback = eventNames\n\t\t\t\t\t\teventNames = Common.keys(object.events).join(\" \")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar names = eventNames.split(\" \")\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tvar callbacks = object.events[names[i]],\n\t\t\t\t\t\t\tnewCallbacks = []\n\n\t\t\t\t\t\tif(callback && callbacks){\n\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\tif(callbacks[j] !== callback){\n\t\t\t\t\t\t\t\t\tnewCallbacks.push(callbacks[j])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject.events[names[i]] = newCallbacks\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n\t\t\t\tEvents.trigger = function(object, eventNames, event) {\n\t\t\t\t\tvar names,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tcallbacks,\n\t\t\t\t\t\teventClone\n\n\t\t\t\t\tvar events = object.events\n\n\t\t\t\t\tif(events && Common.keys(events).length > 0){\n\t\t\t\t\t\tif(!event){\n\t\t\t\t\t\t\tevent = {}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnames = eventNames.split(\" \")\n\n\t\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\t\tcallbacks = events[name]\n\n\t\t\t\t\t\t\tif(callbacks){\n\t\t\t\t\t\t\t\teventClone = Common.clone(event, false)\n\t\t\t\t\t\t\t\teventClone.name = name\n\t\t\t\t\t\t\t\teventClone.source = object\n\n\t\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\t\tcallbacks[j].apply(object, [eventClone])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 5 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n*\n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\n\t\t\tvar Composite = {}\n\n\t\t\tmodule.exports = Composite\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n\t\t\t\tComposite.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"composite\",\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\tisModified: false,\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tconstraints: [],\n\t\t\t\t\t\tcomposites: [],\n\t\t\t\t\t\tlabel: \"Composite\",\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tcache: {\n\t\t\t\t\t\t\tallBodies: null,\n\t\t\t\t\t\t\tallConstraints: null,\n\t\t\t\t\t\t\tallComposites: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n\t\t\t\tComposite.setModified = function(composite, isModified, updateParents, updateChildren) {\n\t\t\t\t\tcomposite.isModified = isModified\n\n\t\t\t\t\tif(isModified && composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = null\n\t\t\t\t\t\tcomposite.cache.allConstraints = null\n\t\t\t\t\t\tcomposite.cache.allComposites = null\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateParents && composite.parent){\n\t\t\t\t\t\tComposite.setModified(composite.parent, isModified, updateParents, updateChildren)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateChildren){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tvar childComposite = composite.composites[i]\n\t\t\t\t\t\t\tComposite.setModified(childComposite, isModified, updateParents, updateChildren)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n\t\t\t\tComposite.add = function(composite, object) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeAdd\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\t// skip adding compound parts\n\t\t\t\t\t\t\t\tif(obj.parent !== obj){\n\t\t\t\t\t\t\t\t\tCommon.warn(\"Composite.add: skipped adding a compound body part (you must add its parent instead)\")\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tComposite.addBody(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.addComposite(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterAdd\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n\t\t\t\tComposite.remove = function(composite, object, deep) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeRemove\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\tComposite.removeBody(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.removeComposite(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterRemove\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n\t\t\t\tComposite.addComposite = function(compositeA, compositeB) {\n\t\t\t\t\tcompositeA.composites.push(compositeB)\n\t\t\t\t\tcompositeB.parent = compositeA\n\t\t\t\t\tComposite.setModified(compositeA, true, true, false)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n\t\t\t\tComposite.removeComposite = function(compositeA, compositeB, deep) {\n\t\t\t\t\tvar position = Common.indexOf(compositeA.composites, compositeB)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeCompositeAt(compositeA, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < compositeA.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeComposite(compositeA.composites[i], compositeB, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n\t\t\t\tComposite.removeCompositeAt = function(composite, position) {\n\t\t\t\t\tcomposite.composites.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n\t\t\t\tComposite.addBody = function(composite, body) {\n\t\t\t\t\tcomposite.bodies.push(body)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBody = function(composite, body, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.bodies, body)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeBodyAt(composite, position)\n\n\t\t\t\t\t\t// remove sleeping to allow pair removal\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeBody(composite.composites[i], body, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBodyAt = function(composite, position) {\n\t\t\t\t\tcomposite.bodies.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n\t\t\t\tComposite.addConstraint = function(composite, constraint) {\n\t\t\t\t\tcomposite.constraints.push(constraint)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraint = function(composite, constraint, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.constraints, constraint)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeConstraintAt(composite, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeConstraint(composite.composites[i], constraint, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraintAt = function(composite, position) {\n\t\t\t\t\tcomposite.constraints.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n\t\t\t\tComposite.clear = function(composite, keepStatic, deep) {\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.clear(composite.composites[i], keepStatic, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(keepStatic){\n\t\t\t\t\t\tcomposite.bodies = composite.bodies.filter(function(body) {\n\t\t\t\t\t\t\treturn body.isStatic\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomposite.bodies.length = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.constraints.length = 0\n\t\t\t\t\tcomposite.composites.length = 0\n\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n\t\t\t\tComposite.allBodies = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allBodies){\n\t\t\t\t\t\treturn composite.cache.allBodies\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bodies = [].concat(composite.bodies)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tbodies = bodies.concat(Composite.allBodies(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = bodies\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bodies\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n\t\t\t\tComposite.allConstraints = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allConstraints){\n\t\t\t\t\t\treturn composite.cache.allConstraints\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraints = [].concat(composite.constraints)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tconstraints = constraints.concat(Composite.allConstraints(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allConstraints = constraints\n\t\t\t\t\t}\n\n\t\t\t\t\treturn constraints\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n\t\t\t\tComposite.allComposites = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allComposites){\n\t\t\t\t\t\treturn composite.cache.allComposites\n\t\t\t\t\t}\n\n\t\t\t\t\tvar composites = [].concat(composite.composites)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tcomposites = composites.concat(Composite.allComposites(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allComposites = composites\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composites\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n\t\t\t\tComposite.get = function(composite, id, type) {\n\t\t\t\t\tvar objects,\n\t\t\t\t\t\tobject\n\n\t\t\t\t\tswitch(type){\n\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\tobjects = Composite.allBodies(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\tobjects = Composite.allConstraints(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\tobjects = Composite.allComposites(composite).concat(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!objects){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = objects.filter(function(object) {\n\t\t\t\t\t\treturn object.id.toString() === id.toString()\n\t\t\t\t\t})\n\n\t\t\t\t\treturn object.length === 0 ? null : object[0]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n\t\t\t\tComposite.move = function(compositeA, objects, compositeB) {\n\t\t\t\t\tComposite.remove(compositeA, objects)\n\t\t\t\t\tComposite.add(compositeB, objects)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n\t\t\t\tComposite.rebase = function(composite) {\n\t\t\t\t\tvar objects = Composite.allBodies(composite)\n\t\t\t\t\t\t.concat(Composite.allConstraints(composite))\n\t\t\t\t\t\t.concat(Composite.allComposites(composite))\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tobjects[i].id = Common.nextId()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.translate = function(composite, translation, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tBody.translate(bodies[i], translation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.rotate = function(composite, rotation, point, recursive) {\n\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\tbodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.rotate(body, rotation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.scale = function(composite, scaleX, scaleY, point, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + dx * scaleX,\n\t\t\t\t\t\t\ty: point.y + dy * scaleY\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.scale(body, scaleX, scaleY)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n\t\t\t\tComposite.bounds = function(composite) {\n\t\t\t\t\tvar bodies = Composite.allBodies(composite),\n\t\t\t\t\t\tvertices = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\tvertices.push(body.bounds.min, body.bounds.max)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bounds.create(vertices)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n\t\t\t\t/**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 6 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\n\t\t\tvar Body = {}\n\n\t\t\tmodule.exports = Body\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Render = __webpack_require__(16)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11);\n\n\t\t\t(function() {\n\n\t\t\t\tBody._inertiaScale = 4\n\t\t\t\tBody._nextCollidingGroupId = 1\n\t\t\t\tBody._nextNonCollidingGroupId = -1\n\t\t\t\tBody._nextCategory = 0x0001\n\n\t\t\t\t/**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n\t\t\t\tBody.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"body\",\n\t\t\t\t\t\tlabel: \"Body\",\n\t\t\t\t\t\tparts: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L 40 0 L 40 40 L 0 40\"),\n\t\t\t\t\t\tposition: {x: 0, y: 0},\n\t\t\t\t\t\tforce: {x: 0, y: 0},\n\t\t\t\t\t\ttorque: 0,\n\t\t\t\t\t\tpositionImpulse: {x: 0, y: 0},\n\t\t\t\t\t\tconstraintImpulse: {x: 0, y: 0, angle: 0},\n\t\t\t\t\t\ttotalContacts: 0,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tangularSpeed: 0,\n\t\t\t\t\t\tvelocity: {x: 0, y: 0},\n\t\t\t\t\t\tangularVelocity: 0,\n\t\t\t\t\t\tisSensor: false,\n\t\t\t\t\t\tisStatic: false,\n\t\t\t\t\t\tisSleeping: false,\n\t\t\t\t\t\tmotion: 0,\n\t\t\t\t\t\tsleepThreshold: 60,\n\t\t\t\t\t\tdensity: 0.001,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tfriction: 0.1,\n\t\t\t\t\t\tfrictionStatic: 0.5,\n\t\t\t\t\t\tfrictionAir: 0.01,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tslop: 0.05,\n\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tstrokeStyle: null,\n\t\t\t\t\t\t\tfillStyle: null,\n\t\t\t\t\t\t\tlineWidth: null,\n\t\t\t\t\t\t\tsprite: {\n\t\t\t\t\t\t\t\txScale: 1,\n\t\t\t\t\t\t\t\tyScale: 1,\n\t\t\t\t\t\t\t\txOffset: 0,\n\t\t\t\t\t\t\t\tyOffset: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevents: null,\n\t\t\t\t\t\tbounds: null,\n\t\t\t\t\t\tchamfer: null,\n\t\t\t\t\t\tcircleRadius: 0,\n\t\t\t\t\t\tpositionPrev: null,\n\t\t\t\t\t\tanglePrev: 0,\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\taxes: null,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\t_original: null\n\t\t\t\t\t}\n\n\t\t\t\t\tvar body = Common.extend(defaults, options)\n\n\t\t\t\t\t_initProperties(body, options)\n\n\t\t\t\t\treturn body\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n\t\t\t\tBody.nextGroup = function(isNonColliding) {\n\t\t\t\t\tif(isNonColliding){\n\t\t\t\t\t\treturn Body._nextNonCollidingGroupId--\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body._nextCollidingGroupId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n\t\t\t\tBody.nextCategory = function() {\n\t\t\t\t\tBody._nextCategory = Body._nextCategory << 1\n\t\t\t\t\treturn Body._nextCategory\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n\t\t\t\tvar _initProperties = function(body, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\t// init required properties (order is important)\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\tbounds: body.bounds || Bounds.create(body.vertices),\n\t\t\t\t\t\tpositionPrev: body.positionPrev || Vector.clone(body.position),\n\t\t\t\t\t\tanglePrev: body.anglePrev || body.angle,\n\t\t\t\t\t\tvertices: body.vertices,\n\t\t\t\t\t\tparts: body.parts || [body],\n\t\t\t\t\t\tisStatic: body.isStatic,\n\t\t\t\t\t\tisSleeping: body.isSleeping,\n\t\t\t\t\t\tparent: body.parent || body\n\t\t\t\t\t})\n\n\t\t\t\t\tVertices.rotate(body.vertices, body.angle, body.position)\n\t\t\t\t\tAxes.rotate(body.axes, body.angle)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\n\t\t\t\t\t// allow options to override the automatically calculated properties\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\taxes: options.axes || body.axes,\n\t\t\t\t\t\tarea: options.area || body.area,\n\t\t\t\t\t\tmass: options.mass || body.mass,\n\t\t\t\t\t\tinertia: options.inertia || body.inertia\n\t\t\t\t\t})\n\n\t\t\t\t\t// render properties\n\t\t\t\t\tvar defaultFillStyle = (body.isStatic ? \"#14151f\" : Common.choose([\"#f19648\", \"#f5d259\", \"#f55a3c\", \"#063e7b\", \"#ececd1\"])),\n\t\t\t\t\t\tdefaultStrokeStyle = body.isStatic ? \"#555\" : \"#ccc\",\n\t\t\t\t\t\tdefaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0\n\t\t\t\t\tbody.render.fillStyle = body.render.fillStyle || defaultFillStyle\n\t\t\t\t\tbody.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle\n\t\t\t\t\tbody.render.lineWidth = body.render.lineWidth || defaultLineWidth\n\t\t\t\t\tbody.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x)\n\t\t\t\t\tbody.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n\t\t\t\tBody.set = function(body, settings, value) {\n\t\t\t\t\tvar property\n\n\t\t\t\t\tif(typeof settings === \"string\"){\n\t\t\t\t\t\tproperty = settings\n\t\t\t\t\t\tsettings = {}\n\t\t\t\t\t\tsettings[property] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(property in settings){\n\t\t\t\t\t\tif(!Object.prototype.hasOwnProperty.call(settings, property)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = settings[property]\n\t\t\t\t\t\tswitch(property){\n\n\t\t\t\t\t\t\tcase \"isStatic\":\n\t\t\t\t\t\t\t\tBody.setStatic(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"isSleeping\":\n\t\t\t\t\t\t\t\tSleeping.set(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mass\":\n\t\t\t\t\t\t\t\tBody.setMass(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"density\":\n\t\t\t\t\t\t\t\tBody.setDensity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"inertia\":\n\t\t\t\t\t\t\t\tBody.setInertia(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"vertices\":\n\t\t\t\t\t\t\t\tBody.setVertices(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"position\":\n\t\t\t\t\t\t\t\tBody.setPosition(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angle\":\n\t\t\t\t\t\t\t\tBody.setAngle(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"velocity\":\n\t\t\t\t\t\t\t\tBody.setVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angularVelocity\":\n\t\t\t\t\t\t\t\tBody.setAngularVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"parts\":\n\t\t\t\t\t\t\t\tBody.setParts(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"centre\":\n\t\t\t\t\t\t\t\tBody.setCentre(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbody[property] = value\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n\t\t\t\tBody.setStatic = function(body, isStatic) {\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.isStatic = isStatic\n\n\t\t\t\t\t\tif(isStatic){\n\t\t\t\t\t\t\tpart._original = {\n\t\t\t\t\t\t\t\trestitution: part.restitution,\n\t\t\t\t\t\t\t\tfriction: part.friction,\n\t\t\t\t\t\t\t\tmass: part.mass,\n\t\t\t\t\t\t\t\tinertia: part.inertia,\n\t\t\t\t\t\t\t\tdensity: part.density,\n\t\t\t\t\t\t\t\tinverseMass: part.inverseMass,\n\t\t\t\t\t\t\t\tinverseInertia: part.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpart.restitution = 0\n\t\t\t\t\t\t\tpart.friction = 1\n\t\t\t\t\t\t\tpart.mass = part.inertia = part.density = Infinity\n\t\t\t\t\t\t\tpart.inverseMass = part.inverseInertia = 0\n\n\t\t\t\t\t\t\tpart.positionPrev.x = part.position.x\n\t\t\t\t\t\t\tpart.positionPrev.y = part.position.y\n\t\t\t\t\t\t\tpart.anglePrev = part.angle\n\t\t\t\t\t\t\tpart.angularVelocity = 0\n\t\t\t\t\t\t\tpart.speed = 0\n\t\t\t\t\t\t\tpart.angularSpeed = 0\n\t\t\t\t\t\t\tpart.motion = 0\n\t\t\t\t\t\t} else if(part._original){\n\t\t\t\t\t\t\tpart.restitution = part._original.restitution\n\t\t\t\t\t\t\tpart.friction = part._original.friction\n\t\t\t\t\t\t\tpart.mass = part._original.mass\n\t\t\t\t\t\t\tpart.inertia = part._original.inertia\n\t\t\t\t\t\t\tpart.density = part._original.density\n\t\t\t\t\t\t\tpart.inverseMass = part._original.inverseMass\n\t\t\t\t\t\t\tpart.inverseInertia = part._original.inverseInertia\n\n\t\t\t\t\t\t\tpart._original = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n\t\t\t\tBody.setMass = function(body, mass) {\n\t\t\t\t\tvar moment = body.inertia / (body.mass / 6)\n\t\t\t\t\tbody.inertia = moment * (mass / 6)\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\n\t\t\t\t\tbody.mass = mass\n\t\t\t\t\tbody.inverseMass = 1 / body.mass\n\t\t\t\t\tbody.density = body.mass / body.area\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n\t\t\t\tBody.setDensity = function(body, density) {\n\t\t\t\t\tBody.setMass(body, density * body.area)\n\t\t\t\t\tbody.density = density\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the moment of inertia (i.e. second moment of area) of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n\t\t\t\tBody.setInertia = function(body, inertia) {\n\t\t\t\t\tbody.inertia = inertia\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n\t\t\t\tBody.setVertices = function(body, vertices) {\n\t\t\t\t\t// change vertices\n\t\t\t\t\tif(vertices[0].body === body){\n\t\t\t\t\t\tbody.vertices = vertices\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.vertices = Vertices.create(vertices, body)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update properties\n\t\t\t\t\tbody.axes = Axes.fromVertices(body.vertices)\n\t\t\t\t\tbody.area = Vertices.area(body.vertices)\n\t\t\t\t\tBody.setMass(body, body.density * body.area)\n\n\t\t\t\t\t// orient vertices around the centre of mass at origin (0, 0)\n\t\t\t\t\tvar centre = Vertices.centre(body.vertices)\n\t\t\t\t\tVertices.translate(body.vertices, centre, -1)\n\n\t\t\t\t\t// update inertia while vertices are at origin (0, 0)\n\t\t\t\t\tBody.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass))\n\n\t\t\t\t\t// update geometry\n\t\t\t\t\tVertices.translate(body.vertices, body.position)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n\t\t\t\tBody.setParts = function(body, parts, autoHull) {\n\t\t\t\t\tvar i\n\n\t\t\t\t\t// add all the parts, ensuring that the first part is always the parent body\n\t\t\t\t\tparts = parts.slice(0)\n\t\t\t\t\tbody.parts.length = 0\n\t\t\t\t\tbody.parts.push(body)\n\t\t\t\t\tbody.parent = body\n\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tvar part = parts[i]\n\t\t\t\t\t\tif(part !== body){\n\t\t\t\t\t\t\tpart.parent = body\n\t\t\t\t\t\t\tbody.parts.push(part)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(body.parts.length === 1){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tautoHull = typeof autoHull !== \"undefined\" ? autoHull : true\n\n\t\t\t\t\t// find the convex hull of all parts to set on the parent body\n\t\t\t\t\tif(autoHull){\n\t\t\t\t\t\tvar vertices = []\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvertices = vertices.concat(parts[i].vertices)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tVertices.clockwiseSort(vertices)\n\n\t\t\t\t\t\tvar hull = Vertices.hull(vertices),\n\t\t\t\t\t\t\thullCentre = Vertices.centre(hull)\n\n\t\t\t\t\t\tBody.setVertices(body, hull)\n\t\t\t\t\t\tVertices.translate(body.vertices, hullCentre)\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tvar total = Body._totalProperties(body)\n\n\t\t\t\t\tbody.area = total.area\n\t\t\t\t\tbody.parent = body\n\t\t\t\t\tbody.position.x = total.centre.x\n\t\t\t\t\tbody.position.y = total.centre.y\n\t\t\t\t\tbody.positionPrev.x = total.centre.x\n\t\t\t\t\tbody.positionPrev.y = total.centre.y\n\n\t\t\t\t\tBody.setMass(body, total.mass)\n\t\t\t\t\tBody.setInertia(body, total.inertia)\n\t\t\t\t\tBody.setPosition(body, total.centre)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set the centre of mass of the body.\n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n\t\t\t\tBody.setCentre = function(body, centre, relative) {\n\t\t\t\t\tif(!relative){\n\t\t\t\t\t\tbody.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x)\n\t\t\t\t\t\tbody.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y)\n\t\t\t\t\t\tbody.position.x = centre.x\n\t\t\t\t\t\tbody.position.y = centre.y\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.positionPrev.x += centre.x\n\t\t\t\t\t\tbody.positionPrev.y += centre.y\n\t\t\t\t\t\tbody.position.x += centre.x\n\t\t\t\t\t\tbody.position.y += centre.y\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n\t\t\t\tBody.setPosition = function(body, position) {\n\t\t\t\t\tvar delta = Vector.sub(position, body.position)\n\t\t\t\t\tbody.positionPrev.x += delta.x\n\t\t\t\t\tbody.positionPrev.y += delta.y\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.position.x += delta.x\n\t\t\t\t\t\tpart.position.y += delta.y\n\t\t\t\t\t\tVertices.translate(part.vertices, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n\t\t\t\tBody.setAngle = function(body, angle) {\n\t\t\t\t\tvar delta = angle - body.angle\n\t\t\t\t\tbody.anglePrev += delta\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.angle += delta\n\t\t\t\t\t\tVertices.rotate(part.vertices, delta, body.position)\n\t\t\t\t\t\tAxes.rotate(part.axes, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tVector.rotateAbout(part.position, delta, body.position, part.position)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n\t\t\t\tBody.setVelocity = function(body, velocity) {\n\t\t\t\t\tbody.positionPrev.x = body.position.x - velocity.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y - velocity.y\n\t\t\t\t\tbody.velocity.x = velocity.x\n\t\t\t\t\tbody.velocity.y = velocity.y\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n\t\t\t\tBody.setAngularVelocity = function(body, velocity) {\n\t\t\t\t\tbody.anglePrev = body.angle - velocity\n\t\t\t\t\tbody.angularVelocity = velocity\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n\t\t\t\tBody.translate = function(body, translation) {\n\t\t\t\t\tBody.setPosition(body, Vector.add(body.position, translation))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.rotate = function(body, rotation, point) {\n\t\t\t\t\tif(!point){\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.scale = function(body, scaleX, scaleY, point) {\n\t\t\t\t\tvar totalArea = 0,\n\t\t\t\t\t\ttotalInertia = 0\n\n\t\t\t\t\tpoint = point || body.position\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\t// scale vertices\n\t\t\t\t\t\tVertices.scale(part.vertices, scaleX, scaleY, point)\n\n\t\t\t\t\t\t// update properties\n\t\t\t\t\t\tpart.axes = Axes.fromVertices(part.vertices)\n\t\t\t\t\t\tpart.area = Vertices.area(part.vertices)\n\t\t\t\t\t\tBody.setMass(part, body.density * part.area)\n\n\t\t\t\t\t\t// update inertia (requires vertices to be at origin)\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: -part.position.x, y: -part.position.y})\n\t\t\t\t\t\tBody.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass))\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: part.position.x, y: part.position.y})\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\ttotalArea += part.area\n\t\t\t\t\t\t\ttotalInertia += part.inertia\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// scale position\n\t\t\t\t\t\tpart.position.x = point.x + (part.position.x - point.x) * scaleX\n\t\t\t\t\t\tpart.position.y = point.y + (part.position.y - point.y) * scaleY\n\n\t\t\t\t\t\t// update bounds\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle parent body\n\t\t\t\t\tif(body.parts.length > 1){\n\t\t\t\t\t\tbody.area = totalArea\n\n\t\t\t\t\t\tif(!body.isStatic){\n\t\t\t\t\t\t\tBody.setMass(body, body.density * totalArea)\n\t\t\t\t\t\t\tBody.setInertia(body, totalInertia)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle circles\n\t\t\t\t\tif(body.circleRadius){\n\t\t\t\t\t\tif(scaleX === scaleY){\n\t\t\t\t\t\t\tbody.circleRadius *= scaleX\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// body is no longer a circle\n\t\t\t\t\t\t\tbody.circleRadius = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n\t\t\t\tBody.update = function(body, deltaTime, timeScale, correction) {\n\t\t\t\t\tvar deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2)\n\n\t\t\t\t\t// from the previous step\n\t\t\t\t\tvar frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n\t\t\t\t\t\tvelocityPrevX = body.position.x - body.positionPrev.x,\n\t\t\t\t\t\tvelocityPrevY = body.position.y - body.positionPrev.y\n\n\t\t\t\t\t// update velocity with Verlet integration\n\t\t\t\t\tbody.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared\n\t\t\t\t\tbody.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared\n\n\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y\n\t\t\t\t\tbody.position.x += body.velocity.x\n\t\t\t\t\tbody.position.y += body.velocity.y\n\n\t\t\t\t\t// update angular velocity with Verlet integration\n\t\t\t\t\tbody.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared\n\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\tbody.angle += body.angularVelocity\n\n\t\t\t\t\t// track speed and acceleration\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\n\t\t\t\t\t// transform the body geometry\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\tVertices.translate(part.vertices, body.velocity)\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tpart.position.x += body.velocity.x\n\t\t\t\t\t\t\tpart.position.y += body.velocity.y\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.angularVelocity !== 0){\n\t\t\t\t\t\t\tVertices.rotate(part.vertices, body.angularVelocity, body.position)\n\t\t\t\t\t\t\tAxes.rotate(part.axes, body.angularVelocity)\n\t\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, body.angularVelocity, body.position, part.position)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n\t\t\t\tBody.applyForce = function(body, position, force) {\n\t\t\t\t\tbody.force.x += force.x\n\t\t\t\t\tbody.force.y += force.y\n\t\t\t\t\tvar offset = {x: position.x - body.position.x, y: position.y - body.position.y}\n\t\t\t\t\tbody.torque += offset.x * force.y - offset.y * force.x\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n\t\t\t\tBody._totalProperties = function(body) {\n\t\t\t\t\t// from equations at:\n\t\t\t\t\t// https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n\t\t\t\t\t// http://output.to/sideway/default.asp?qno=121100087\n\n\t\t\t\t\tvar properties = {\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\tcentre: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tfor(var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i],\n\t\t\t\t\t\t\tmass = part.mass !== Infinity ? part.mass : 1\n\n\t\t\t\t\t\tproperties.mass += mass\n\t\t\t\t\t\tproperties.area += part.area\n\t\t\t\t\t\tproperties.inertia += part.inertia\n\t\t\t\t\t\tproperties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass))\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.centre = Vector.div(properties.centre, properties.mass)\n\n\t\t\t\t\treturn properties\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n\t\t\t\t/**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n\t\t\t\t/**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n\t\t\t\t/**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 7 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\n\t\t\tvar Sleeping = {}\n\n\t\t\tmodule.exports = Sleeping\n\n\t\t\tvar Events = __webpack_require__(4);\n\n\t\t\t(function() {\n\n\t\t\t\tSleeping._motionWakeThreshold = 0.18 // 0.18 originally\n\t\t\t\tSleeping._motionSleepThreshold = 0.08 // 0.08\n\t\t\t\tSleeping._minBias = 0.9\n\n\t\t\t\t/**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.update = function(bodies, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// update bodies sleeping status\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\t// motion = (body.speed + body.angularSpeed) > 1e-12 ? 1 : 0\n\t\t\t\t\t\t\tmotion = (body.speed * body.speed) * 10000 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = (body.speed * body.speed) * 100 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed\n\n\t\t\t\t\t\t// FIX: originally, if body had force applied - motion is not recalculated\n\t\t\t\t\t\t// this is WRONG, because motion can also be used to wakeup other bodies\n\t\t\t\t\t\t// so I always set motion\n\t\t\t\t\t\tvar minMotion = Math.min(body.motion, motion),\n\t\t\t\t\t\t\tmaxMotion = Math.max(body.motion, motion)\n\n\t\t\t\t\t\t// biased average motion estimation between frames\n\t\t\t\t\t\tbody.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion\n\n\t\t\t\t\t\t// wake up bodies if they have a force applied\n\t\t\t\t\t\tif(body.force.x !== 0 || body.force.y !== 0){\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor){\n\t\t\t\t\t\t\tbody.sleepCounter += 1\n\n\t\t\t\t\t\t\tif(body.sleepCounter >= body.sleepThreshold){\n\t\t\t\t\t\t\t\tSleeping.set(body, true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(body.sleepCounter > 0){\n\t\t\t\t\t\t\tbody.sleepCounter -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.afterCollisions = function(pairs, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tfor(var i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\t// don't wake inactive pairs\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.bodyA.parent,\n\t\t\t\t\t\t\tbodyB = collision.bodyB.parent\n\n\t\t\t\t\t\t// don't wake if at least one body is static\n\t\t\t\t\t\tif((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bodyA.isSleeping || bodyB.isSleeping){\n\t\t\t\t\t\t\tvar sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n\t\t\t\t\t\t\t\tmovingBody = sleepingBody === bodyA ? bodyB : bodyA\n\n\t\t\t\t\t\t\tif(!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor){\n\t\t\t\t\t\t\t\tSleeping.set(sleepingBody, false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n\t\t\t\tSleeping.set = function(body, isSleeping) {\n\t\t\t\t\tvar wasSleeping = body.isSleeping\n\n\t\t\t\t\tif(isSleeping){\n\t\t\t\t\t\tbody.isSleeping = true\n\t\t\t\t\t\tbody.sleepCounter = body.sleepThreshold\n\n\t\t\t\t\t\tbody.positionImpulse.x = 0\n\t\t\t\t\t\tbody.positionImpulse.y = 0\n\n\t\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\t\tbody.positionPrev.y = body.position.y\n\n\t\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\t\tbody.speed = 0\n\t\t\t\t\t\tbody.angularSpeed = 0\n\t\t\t\t\t\tbody.motion = 0\n\n\t\t\t\t\t\tif(!wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepStart\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\n\t\t\t\t\t\tif(wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepEnd\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 8 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\n\t\t\tvar Collision = {}\n\n\t\t\tmodule.exports = Collision\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Pair = __webpack_require__(9);\n\n\t\t\t(function() {\n\t\t\t\tvar _supports = []\n\n\t\t\t\tvar _overlapAB = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\tvar _overlapBA = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n\t\t\t\tCollision.create = function(bodyA, bodyB) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpair: null,\n\t\t\t\t\t\tcollided: false,\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tparentA: bodyA.parent,\n\t\t\t\t\t\tparentB: bodyB.parent,\n\t\t\t\t\t\tdepth: 0,\n\t\t\t\t\t\tnormal: {x: 0, y: 0},\n\t\t\t\t\t\ttangent: {x: 0, y: 0},\n\t\t\t\t\t\tpenetration: {x: 0, y: 0},\n\t\t\t\t\t\tsupports: []\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n\t\t\t\tCollision.collides = function(bodyA, bodyB, pairs) {\n\t\t\t\t\tCollision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes)\n\n\t\t\t\t\tif(_overlapAB.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tCollision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes)\n\n\t\t\t\t\tif(_overlapBA.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t// reuse collision records for gc efficiency\n\t\t\t\t\tvar pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n\t\t\t\t\t\tcollision\n\n\t\t\t\t\tif(!pair){\n\t\t\t\t\t\tcollision = Collision.create(bodyA, bodyB)\n\t\t\t\t\t\tcollision.collided = true\n\t\t\t\t\t\tcollision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB\n\t\t\t\t\t\tcollision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA\n\t\t\t\t\t\tcollision.parentA = collision.bodyA.parent\n\t\t\t\t\t\tcollision.parentB = collision.bodyB.parent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t}\n\n\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar minOverlap\n\n\t\t\t\t\tif(_overlapAB.overlap < _overlapBA.overlap){\n\t\t\t\t\t\tminOverlap = _overlapAB\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminOverlap = _overlapBA\n\t\t\t\t\t}\n\n\t\t\t\t\tvar normal = collision.normal,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tminAxis = minOverlap.axis,\n\t\t\t\t\t\tminAxisX = minAxis.x,\n\t\t\t\t\t\tminAxisY = minAxis.y\n\n\t\t\t\t\t// ensure normal is facing away from bodyA\n\t\t\t\t\tif(minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0){\n\t\t\t\t\t\tnormal.x = minAxisX\n\t\t\t\t\t\tnormal.y = minAxisY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormal.x = -minAxisX\n\t\t\t\t\t\tnormal.y = -minAxisY\n\t\t\t\t\t}\n\n\t\t\t\t\tcollision.tangent.x = -normal.y\n\t\t\t\t\tcollision.tangent.y = normal.x\n\n\t\t\t\t\tcollision.depth = minOverlap.overlap\n\n\t\t\t\t\tcollision.penetration.x = normal.x * collision.depth\n\t\t\t\t\tcollision.penetration.y = normal.y * collision.depth\n\n\t\t\t\t\t// find support points, there is always either exactly one or two\n\t\t\t\t\tvar supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n\t\t\t\t\t\tsupportCount = 0\n\n\t\t\t\t\t// find the supports from bodyB that are inside bodyA\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[0])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[1])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[1]\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the supports from bodyA that are inside bodyB\n\t\t\t\t\tif(supportCount < 2){\n\t\t\t\t\t\tvar supportsA = Collision._findSupports(bodyB, bodyA, normal, -1)\n\n\t\t\t\t\t\tif(Vertices.contains(bodyB.vertices, supportsA[0])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[0]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// account for the edge case of overlapping but no vertex containment\n\t\t\t\t\tif(supportCount === 0){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\t// update supports array size\n\t\t\t\t\tsupports.length = supportCount\n\n\t\t\t\t\treturn collision\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n\t\t\t\tCollision._overlapAxes = function(result, verticesA, verticesB, axes) {\n\t\t\t\t\tvar verticesALength = verticesA.length,\n\t\t\t\t\t\tverticesBLength = verticesB.length,\n\t\t\t\t\t\tverticesAX = verticesA[0].x,\n\t\t\t\t\t\tverticesAY = verticesA[0].y,\n\t\t\t\t\t\tverticesBX = verticesB[0].x,\n\t\t\t\t\t\tverticesBY = verticesB[0].y,\n\t\t\t\t\t\taxesLength = axes.length,\n\t\t\t\t\t\toverlapMin = Number.MAX_VALUE,\n\t\t\t\t\t\toverlapAxisNumber = 0,\n\t\t\t\t\t\toverlap,\n\t\t\t\t\t\toverlapAB,\n\t\t\t\t\t\toverlapBA,\n\t\t\t\t\t\tdot,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < axesLength; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\taxisX = axis.x,\n\t\t\t\t\t\t\taxisY = axis.y,\n\t\t\t\t\t\t\tminA = verticesAX * axisX + verticesAY * axisY,\n\t\t\t\t\t\t\tminB = verticesBX * axisX + verticesBY * axisY,\n\t\t\t\t\t\t\tmaxA = minA,\n\t\t\t\t\t\t\tmaxB = minB\n\n\t\t\t\t\t\tfor(j = 1; j < verticesALength; j += 1){\n\t\t\t\t\t\t\tdot = verticesA[j].x * axisX + verticesA[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxA){\n\t\t\t\t\t\t\t\tmaxA = dot\n\t\t\t\t\t\t\t} else if(dot < minA){\n\t\t\t\t\t\t\t\tminA = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(j = 1; j < verticesBLength; j += 1){\n\t\t\t\t\t\t\tdot = verticesB[j].x * axisX + verticesB[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxB){\n\t\t\t\t\t\t\t\tmaxB = dot\n\t\t\t\t\t\t\t} else if(dot < minB){\n\t\t\t\t\t\t\t\tminB = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlapAB = maxA - minB\n\t\t\t\t\t\toverlapBA = maxB - minA\n\t\t\t\t\t\toverlap = overlapAB < overlapBA ? overlapAB : overlapBA\n\n\t\t\t\t\t\tif(overlap < overlapMin){\n\t\t\t\t\t\t\toverlapMin = overlap\n\t\t\t\t\t\t\toverlapAxisNumber = i\n\n\t\t\t\t\t\t\tif(overlap <= 0){\n\t\t\t\t\t\t\t\t// can not be intersecting\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.axis = axes[overlapAxisNumber]\n\t\t\t\t\tresult.overlap = overlapMin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n\t\t\t\tCollision._projectToAxis = function(projection, vertices, axis) {\n\t\t\t\t\tvar min = vertices[0].x * axis.x + vertices[0].y * axis.y,\n\t\t\t\t\t\tmax = min\n\n\t\t\t\t\tfor(var i = 1; i < vertices.length; i += 1){\n\t\t\t\t\t\tvar dot = vertices[i].x * axis.x + vertices[i].y * axis.y\n\n\t\t\t\t\t\tif(dot > max){\n\t\t\t\t\t\t\tmax = dot\n\t\t\t\t\t\t} else if(dot < min){\n\t\t\t\t\t\t\tmin = dot\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprojection.min = min\n\t\t\t\t\tprojection.max = max\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n\t\t\t\tCollision._findSupports = function(bodyA, bodyB, normal, direction) {\n\t\t\t\t\tvar vertices = bodyB.vertices,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tbodyAPositionX = bodyA.position.x,\n\t\t\t\t\t\tbodyAPositionY = bodyA.position.y,\n\t\t\t\t\t\tnormalX = normal.x * direction,\n\t\t\t\t\t\tnormalY = normal.y * direction,\n\t\t\t\t\t\tnearestDistance = Number.MAX_VALUE,\n\t\t\t\t\t\tvertexA,\n\t\t\t\t\t\tvertexB,\n\t\t\t\t\t\tvertexC,\n\t\t\t\t\t\tdistance,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find deepest vertex relative to the axis\n\t\t\t\t\tfor(j = 0; j < verticesLength; j += 1){\n\t\t\t\t\t\tvertexB = vertices[j]\n\t\t\t\t\t\tdistance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y)\n\n\t\t\t\t\t\t// convex hill-climbing\n\t\t\t\t\t\tif(distance < nearestDistance){\n\t\t\t\t\t\t\tnearestDistance = distance\n\t\t\t\t\t\t\tvertexA = vertexB\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// measure next vertex\n\t\t\t\t\tvertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength]\n\t\t\t\t\tnearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y)\n\n\t\t\t\t\t// compare with previous vertex\n\t\t\t\t\tvertexB = vertices[(vertexA.index + 1) % verticesLength]\n\t\t\t\t\tif(normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance){\n\t\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t\t_supports[1] = vertexB\n\n\t\t\t\t\t\treturn _supports\n\t\t\t\t\t}\n\n\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t_supports[1] = vertexC\n\n\t\t\t\t\treturn _supports\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     *\n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     *\n     * @property bodyA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     *\n     * @property bodyB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     *\n     * @property parentA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     *\n     * @property parentB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * An array of body vertices that represent the support points in the collision.\n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 9 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\n\t\t\tvar Pair = {}\n\n\t\t\tmodule.exports = Pair\n\n\t\t\tvar Contact = __webpack_require__(17);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n\t\t\t\tPair.create = function(collision, timestamp) {\n\t\t\t\t\tvar bodyA = collision.bodyA,\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar pair = {\n\t\t\t\t\t\tid: Pair.id(bodyA, bodyB),\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tcollision: collision,\n\t\t\t\t\t\tcontacts: [],\n\t\t\t\t\t\tactiveContacts: [],\n\t\t\t\t\t\tseparation: 0,\n\t\t\t\t\t\tisActive: true,\n\t\t\t\t\t\tconfirmedActive: true,\n\t\t\t\t\t\tisSensor: bodyA.isSensor || bodyB.isSensor,\n\t\t\t\t\t\ttimeCreated: timestamp,\n\t\t\t\t\t\ttimeUpdated: timestamp,\n\t\t\t\t\t\tinverseMass: 0,\n\t\t\t\t\t\tfriction: 0,\n\t\t\t\t\t\tfrictionStatic: 0,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tslop: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tPair.update(pair, collision, timestamp)\n\n\t\t\t\t\treturn pair\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.update = function(pair, collision, timestamp) {\n\t\t\t\t\tvar contacts = pair.contacts,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tactiveContacts = pair.activeContacts,\n\t\t\t\t\t\tparentA = collision.parentA,\n\t\t\t\t\t\tparentB = collision.parentB,\n\t\t\t\t\t\tparentAVerticesLength = parentA.vertices.length\n\n\t\t\t\t\tpair.isActive = true\n\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\tpair.collision = collision\n\t\t\t\t\tpair.separation = collision.depth\n\t\t\t\t\tpair.inverseMass = parentA.inverseMass + parentB.inverseMass\n\t\t\t\t\tpair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction\n\t\t\t\t\tpair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic\n\t\t\t\t\tpair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution\n\t\t\t\t\tpair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop\n\n\t\t\t\t\tcollision.pair = pair\n\t\t\t\t\tactiveContacts.length = 0\n\n\t\t\t\t\tfor(var i = 0; i < supports.length; i++){\n\t\t\t\t\t\tvar support = supports[i],\n\t\t\t\t\t\t\tcontactId = support.body === parentA ? support.index : parentAVerticesLength + support.index,\n\t\t\t\t\t\t\tcontact = contacts[contactId]\n\n\t\t\t\t\t\tif(contact){\n\t\t\t\t\t\t\tactiveContacts.push(contact)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveContacts.push(contacts[contactId] = Contact.create(support))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.setActive = function(pair, isActive, timestamp) {\n\t\t\t\t\tif(isActive){\n\t\t\t\t\t\tpair.isActive = true\n\t\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpair.isActive = false\n\t\t\t\t\t\tpair.activeContacts.length = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n\t\t\t\tPair.id = function(bodyA, bodyB) {\n\t\t\t\t\tif(bodyA.id < bodyB.id){\n\t\t\t\t\t\treturn \"A\" + bodyA.id + \"B\" + bodyB.id\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn \"A\" + bodyB.id + \"B\" + bodyA.id\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 10 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n\t\t\tvar Constraint = {}\n\n\t\t\tmodule.exports = Constraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tConstraint._warming = 0.4\n\t\t\t\tConstraint._torqueDampen = 1\n\t\t\t\tConstraint._minLength = 0.000001\n\n\t\t\t\t/**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n\t\t\t\tConstraint.create = function(options) {\n\t\t\t\t\tvar constraint = options\n\n\t\t\t\t\t// if bodies defined but no points, use body centre\n\t\t\t\t\tif(constraint.bodyA && !constraint.pointA){\n\t\t\t\t\t\tconstraint.pointA = {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\tif(constraint.bodyB && !constraint.pointB){\n\t\t\t\t\t\tconstraint.pointB = {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// calculate static length using initial world space points\n\t\t\t\t\tvar initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n\t\t\t\t\t\tinitialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n\t\t\t\t\t\tlength = Vector.magnitude(Vector.sub(initialPointA, initialPointB))\n\n\t\t\t\t\tconstraint.length = typeof constraint.length !== \"undefined\" ? constraint.length : length\n\n\t\t\t\t\t// option defaults\n\t\t\t\t\tconstraint.id = constraint.id || Common.nextId()\n\t\t\t\t\tconstraint.label = constraint.label || \"Constraint\"\n\t\t\t\t\tconstraint.type = \"constraint\"\n\t\t\t\t\tconstraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7)\n\t\t\t\t\tconstraint.damping = constraint.damping || 0\n\t\t\t\t\tconstraint.angularStiffness = constraint.angularStiffness || 0\n\t\t\t\t\tconstraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA\n\t\t\t\t\tconstraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB\n\t\t\t\t\tconstraint.plugin = {}\n\n\t\t\t\t\t// render\n\t\t\t\t\tvar render = {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\t\tstrokeStyle: \"#ffffff\",\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\tanchors: true\n\t\t\t\t\t}\n\n\t\t\t\t\tif(constraint.length === 0 && constraint.stiffness > 0.1){\n\t\t\t\t\t\trender.type = \"pin\"\n\t\t\t\t\t\trender.anchors = false\n\t\t\t\t\t} else if(constraint.stiffness < 0.9){\n\t\t\t\t\t\trender.type = \"spring\"\n\t\t\t\t\t}\n\n\t\t\t\t\tconstraint.render = Common.extend(render, constraint.render)\n\n\t\t\t\t\treturn constraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.preSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.position.x += impulse.x\n\t\t\t\t\t\tbody.position.y += impulse.y\n\t\t\t\t\t\tbody.angle += impulse.angle\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solveAll = function(constraints, timeScale) {\n\t\t\t\t\t// Solve fixed constraints first.\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tvar constraint = constraints[i],\n\t\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n\t\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(fixedA || fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Solve free constraints last.\n\t\t\t\t\tfor(i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tconstraint = constraints[i]\n\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic)\n\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(!fixedA && !fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solve = function(constraint, timeScale) {\n\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\tpointA = constraint.pointA,\n\t\t\t\t\t\tpointB = constraint.pointB\n\n\t\t\t\t\tif(!bodyA && !bodyB){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tVector.rotate(pointA, bodyA.angle - constraint.angleA, pointA)\n\t\t\t\t\t\tconstraint.angleA = bodyA.angle\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tVector.rotate(pointB, bodyB.angle - constraint.angleB, pointB)\n\t\t\t\t\t\tconstraint.angleB = bodyB.angle\n\t\t\t\t\t}\n\n\t\t\t\t\tvar pointAWorld = pointA,\n\t\t\t\t\t\tpointBWorld = pointB\n\n\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, pointA)\n\t\t\t\t\t}\n\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, pointB)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar delta = Vector.sub(pointAWorld, pointBWorld),\n\t\t\t\t\t\tcurrentLength = Vector.magnitude(delta)\n\n\t\t\t\t\t// prevent singularity\n\t\t\t\t\tif(currentLength < Constraint._minLength){\n\t\t\t\t\t\tcurrentLength = Constraint._minLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// solve distance constraint with Gauss-Siedel method\n\t\t\t\t\tvar difference = (currentLength - constraint.length) / currentLength,\n\t\t\t\t\t\tstiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n\t\t\t\t\t\tforce = Vector.mult(delta, difference * stiffness),\n\t\t\t\t\t\tmassTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n\t\t\t\t\t\tinertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n\t\t\t\t\t\tresistanceTotal = massTotal + inertiaTotal,\n\t\t\t\t\t\ttorque,\n\t\t\t\t\t\tshare,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tnormalVelocity,\n\t\t\t\t\t\trelativeVelocity\n\n\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\tvar zero = Vector.create()\n\t\t\t\t\t\tnormal = Vector.div(delta, currentLength)\n\n\t\t\t\t\t\trelativeVelocity = Vector.sub(\n\t\t\t\t\t\t\tbodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n\t\t\t\t\t\t\tbodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tnormalVelocity = Vector.dot(normal, relativeVelocity)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tshare = bodyA.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyA.constraintImpulse.x -= force.x * share\n\t\t\t\t\t\tbodyA.constraintImpulse.y -= force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyA.position.x -= force.x * share\n\t\t\t\t\t\tbodyA.position.y -= force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyA.constraintImpulse.angle -= torque\n\t\t\t\t\t\tbodyA.angle -= torque\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tshare = bodyB.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyB.constraintImpulse.x += force.x * share\n\t\t\t\t\t\tbodyB.constraintImpulse.y += force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyB.position.x += force.x * share\n\t\t\t\t\t\tbodyB.position.y += force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyB.constraintImpulse.angle += torque\n\t\t\t\t\t\tbodyB.angle += torque\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.postSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tSleeping.set(body, false)\n\n\t\t\t\t\t\t// update geometry and reset\n\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\tVertices.translate(part.vertices, impulse)\n\n\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\tpart.position.x += impulse.x\n\t\t\t\t\t\t\t\tpart.position.y += impulse.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(impulse.angle !== 0){\n\t\t\t\t\t\t\t\tVertices.rotate(part.vertices, impulse.angle, body.position)\n\t\t\t\t\t\t\t\tAxes.rotate(part.axes, impulse.angle)\n\t\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, impulse.angle, body.position, part.position)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// dampen the cached impulse for warming next step\n\t\t\t\t\t\timpulse.angle *= Constraint._warming\n\t\t\t\t\t\timpulse.x *= Constraint._warming\n\t\t\t\t\t\timpulse.y *= Constraint._warming\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointAWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyA ? constraint.bodyA.position.x : 0)\n                + (constraint.pointA ? constraint.pointA.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyA ? constraint.bodyA.position.y : 0)\n                + (constraint.pointA ? constraint.pointA.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointBWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyB ? constraint.bodyB.position.x : 0)\n                + (constraint.pointB ? constraint.pointB.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyB ? constraint.bodyB.position.y : 0)\n                + (constraint.pointB ? constraint.pointB.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 11 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\n\t\t\tvar Axes = {}\n\n\t\t\tmodule.exports = Axes\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n\t\t\t\tAxes.fromVertices = function(vertices) {\n\t\t\t\t\tvar axes = {}\n\n\t\t\t\t\t// find the unique axes, using edge normal gradients\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar j = (i + 1) % vertices.length,\n\t\t\t\t\t\t\tnormal = Vector.normalise({\n\t\t\t\t\t\t\t\tx: vertices[j].y - vertices[i].y,\n\t\t\t\t\t\t\t\ty: vertices[i].x - vertices[j].x\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tgradient = (normal.y === 0) ? Infinity : (normal.x / normal.y)\n\n\t\t\t\t\t\t// limit precision\n\t\t\t\t\t\tgradient = gradient.toFixed(3).toString()\n\t\t\t\t\t\taxes[gradient] = normal\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.values(axes)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n\t\t\t\tAxes.rotate = function(axes, angle) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle)\n\n\t\t\t\t\tfor(var i = 0; i < axes.length; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\txx\n\t\t\t\t\t\txx = axis.x * cos - axis.y * sin\n\t\t\t\t\t\taxis.y = axis.x * sin + axis.y * cos\n\t\t\t\t\t\taxis.x = xx\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 12 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n\t\t\t// TUDDO: true circle bodies\n\n\t\t\tvar Bodies = {}\n\n\t\t\tmodule.exports = Bodies\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Vector = __webpack_require__(2);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n\t\t\t\tBodies.rectangle = function(x, y, width, height, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar rectangle = {\n\t\t\t\t\t\tlabel: \"Rectangle Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L \" + width + \" 0 L \" + width + \" \" + height + \" L 0 \" + height)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\trectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, rectangle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n\t\t\t\tBodies.trapezoid = function(x, y, width, height, slope, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tslope *= 0.5\n\t\t\t\t\tvar roof = (1 - (slope * 2)) * width\n\n\t\t\t\t\tvar x1 = width * slope,\n\t\t\t\t\t\tx2 = x1 + roof,\n\t\t\t\t\t\tx3 = x2 + x1,\n\t\t\t\t\t\tverticesPath\n\n\t\t\t\t\tif(slope < 0.5){\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x1 + \" \" + (-height) + \" L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar trapezoid = {\n\t\t\t\t\t\tlabel: \"Trapezoid Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(verticesPath)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\ttrapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, trapezoid, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n\t\t\t\tBodies.circle = function(x, y, radius, options, maxSides) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar circle = {\n\t\t\t\t\t\tlabel: \"Circle Body\",\n\t\t\t\t\t\tcircleRadius: radius\n\t\t\t\t\t}\n\n\t\t\t\t\t// approximate circles with polygons until true circles implemented in SAT\n\t\t\t\t\tmaxSides = maxSides || 25\n\t\t\t\t\tvar sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)))\n\n\t\t\t\t\t// optimisation: always use even number of sides (half the number of unique axes)\n\t\t\t\t\tif(sides % 2 === 1){\n\t\t\t\t\t\tsides += 1\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n\t\t\t\tBodies.polygon = function(x, y, sides, radius, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tif(sides < 3){\n\t\t\t\t\t\treturn Bodies.circle(x, y, radius, options)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar theta = 2 * Math.PI / sides,\n\t\t\t\t\t\tpath = \"\",\n\t\t\t\t\t\toffset = theta * 0.5\n\n\t\t\t\t\tfor(var i = 0; i < sides; i += 1){\n\t\t\t\t\t\tvar angle = offset + (i * theta),\n\t\t\t\t\t\t\txx = Math.cos(angle) * radius,\n\t\t\t\t\t\t\tyy = Math.sin(angle) * radius\n\n\t\t\t\t\t\tpath += \"L \" + xx.toFixed(3) + \" \" + yy.toFixed(3) + \" \"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar polygon = {\n\t\t\t\t\t\tlabel: \"Polygon Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(path)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\tpolygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, polygon, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Utility to create a compound body based on set(s) of vertices.\n     *\n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js)\n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     *\n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     *\n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     *\n     * Note that automatic conconcave decomposition results are not always optimal.\n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     *\n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     *\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n\t\t\t\tBodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n\t\t\t\t\tvar decomp = Common.getDecomp(),\n\t\t\t\t\t\tcanDecomp,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tisConvex,\n\t\t\t\t\t\tisConcave,\n\t\t\t\t\t\tvertices,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tv,\n\t\t\t\t\t\tz\n\n\t\t\t\t\t// check decomp is as expected\n\t\t\t\t\tcanDecomp = Boolean(decomp && decomp.quickDecomp)\n\n\t\t\t\t\toptions = options || {}\n\t\t\t\t\tparts = []\n\n\t\t\t\t\tflagInternal = typeof flagInternal !== \"undefined\" ? flagInternal : false\n\t\t\t\t\tremoveCollinear = typeof removeCollinear !== \"undefined\" ? removeCollinear : 0.01\n\t\t\t\t\tminimumArea = typeof minimumArea !== \"undefined\" ? minimumArea : 10\n\t\t\t\t\tremoveDuplicatePoints = typeof removeDuplicatePoints !== \"undefined\" ? removeDuplicatePoints : 0.01\n\n\t\t\t\t\t// ensure vertexSets is an array of arrays\n\t\t\t\t\tif(!Common.isArray(vertexSets[0])){\n\t\t\t\t\t\tvertexSets = [vertexSets]\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(v = 0; v < vertexSets.length; v += 1){\n\t\t\t\t\t\tvertices = vertexSets[v]\n\t\t\t\t\t\tisConvex = Vertices.isConvex(vertices)\n\t\t\t\t\t\tisConcave = !isConvex\n\n\t\t\t\t\t\tif(isConcave && !canDecomp){\n\t\t\t\t\t\t\tCommon.warnOnce(\n\t\t\t\t\t\t\t\t\"Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(isConvex || !canDecomp){\n\t\t\t\t\t\t\tif(isConvex){\n\t\t\t\t\t\t\t\tvertices = Vertices.clockwiseSort(vertices)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// fallback to convex hull when decomposition is not possible\n\t\t\t\t\t\t\t\tvertices = Vertices.hull(vertices)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet centre = Vertices.centre(vertices)\n\t\t\t\t\t\t\tcentre = Vector.create(centre.x + x, centre.y + y)\n\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t// Nartallax: this is fix by me.\n\t\t\t\t\t\t\t\t// if I won't do that, part-bodies of the composite body we are trying to create\n\t\t\t\t\t\t\t\t// will be created relative to composite body center,\n\t\t\t\t\t\t\t\t// which is completely wrong, because that mashes all the parts together.\n\t\t\t\t\t\t\t\t// liabru probably just forgot to update it here, this is not the main path\n\t\t\t\t\t\t\t\t// (but it is for us!)\n\n\t\t\t\t\t\t\t\t// position: {x: x, y: y},\n\t\t\t\t\t\t\t\tposition: centre,\n\t\t\t\t\t\t\t\tvertices: vertices\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// initialise a decomposition\n\t\t\t\t\t\t\tvar concave = vertices.map(function(vertex) {\n\t\t\t\t\t\t\t\treturn [vertex.x, vertex.y]\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// vertices are concave and simple, we can decompose into parts\n\t\t\t\t\t\t\tdecomp.makeCCW(concave)\n\t\t\t\t\t\t\tif(removeCollinear !== false){\n\t\t\t\t\t\t\t\tdecomp.removeCollinearPoints(concave, removeCollinear)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(removeDuplicatePoints !== false && decomp.removeDuplicatePoints){\n\t\t\t\t\t\t\t\tdecomp.removeDuplicatePoints(concave, removeDuplicatePoints)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// use the quick decomposition algorithm (Bayazit)\n\t\t\t\t\t\t\tvar decomposed = decomp.quickDecomp(concave)\n\n\t\t\t\t\t\t\t// for each decomposed chunk\n\t\t\t\t\t\t\tfor(i = 0; i < decomposed.length; i++){\n\t\t\t\t\t\t\t\tvar chunk = decomposed[i]\n\n\t\t\t\t\t\t\t\t// convert vertices into the correct structure\n\t\t\t\t\t\t\t\tvar chunkVertices = chunk.map(function(vertices) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: vertices[0],\n\t\t\t\t\t\t\t\t\t\ty: vertices[1]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t// skip small chunks\n\t\t\t\t\t\t\t\tif(minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea){\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// create a compound part\n\t\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t\tposition: Vertices.centre(chunkVertices),\n\t\t\t\t\t\t\t\t\tvertices: chunkVertices\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// create body parts\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tparts[i] = Body.create(Common.extend(parts[i], options))\n\t\t\t\t\t}\n\n\t\t\t\t\t// flag internal edges (coincident part edges)\n\t\t\t\t\tif(flagInternal){\n\t\t\t\t\t\tvar coincident_max_dist = 5\n\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvar partA = parts[i]\n\n\t\t\t\t\t\t\tfor(j = i + 1; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar partB = parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.overlaps(partA.bounds, partB.bounds)){\n\t\t\t\t\t\t\t\t\tvar pav = partA.vertices,\n\t\t\t\t\t\t\t\t\t\tpbv = partB.vertices\n\n\t\t\t\t\t\t\t\t\t// iterate vertices of both parts\n\t\t\t\t\t\t\t\t\tfor(k = 0; k < partA.vertices.length; k++){\n\t\t\t\t\t\t\t\t\t\tfor(z = 0; z < partB.vertices.length; z++){\n\t\t\t\t\t\t\t\t\t\t\t// find distances between the vertices\n\t\t\t\t\t\t\t\t\t\t\tvar da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n\t\t\t\t\t\t\t\t\t\t\t\tdb = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]))\n\n\t\t\t\t\t\t\t\t\t\t\t// if both vertices are very close, consider the edge concident (internal)\n\t\t\t\t\t\t\t\t\t\t\tif(da < coincident_max_dist && db < coincident_max_dist){\n\t\t\t\t\t\t\t\t\t\t\t\tpav[k].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t\tpbv[z].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(parts.length > 1){\n\t\t\t\t\t\t// create the parent body to be returned, that contains generated compound parts\n\t\t\t\t\t\tbody = Body.create(Common.extend({parts: parts.slice(0)}, options))\n\n\t\t\t\t\t\t// offset such that body.position is at the centre off mass\n\t\t\t\t\t\tBody.setPosition(body, {x: x, y: y})\n\n\t\t\t\t\t\treturn body\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn parts[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 13 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\n\t\t\tvar Mouse = {}\n\n\t\t\tmodule.exports = Mouse\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n\t\t\t\tMouse.create = function(element) {\n\t\t\t\t\tvar mouse = {}\n\n\t\t\t\t\tif(!element){\n\t\t\t\t\t\tCommon.log(\"Mouse.create: element was undefined, defaulting to document.body\", \"warn\")\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.element = element || document.body\n\t\t\t\t\tmouse.absolute = {x: 0, y: 0}\n\t\t\t\t\tmouse.position = {x: 0, y: 0}\n\t\t\t\t\tmouse.mousedownPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.mouseupPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.offset = {x: 0, y: 0}\n\t\t\t\t\tmouse.scale = {x: 1, y: 1}\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t\tmouse.button = -1\n\t\t\t\t\tmouse.pixelRatio = parseInt(mouse.element.getAttribute(\"data-pixel-ratio\"), 10) || 1\n\n\t\t\t\t\tmouse.sourceEvents = {\n\t\t\t\t\t\tmousemove: null,\n\t\t\t\t\t\tmousedown: null,\n\t\t\t\t\t\tmouseup: null,\n\t\t\t\t\t\tmousewheel: null\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousemove = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.sourceEvents.mousemove = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousedown = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.button = event.button\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mousedownPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mousedownPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mousedown = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mouseup = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.button = -1\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mouseupPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mouseupPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mouseup = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousewheel = function(event) {\n\t\t\t\t\t\tmouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail))\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t}\n\n\t\t\t\t\tMouse.setElement(mouse, mouse.element)\n\n\t\t\t\t\treturn mouse\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n\t\t\t\tMouse.setElement = function(mouse, element) {\n\t\t\t\t\tmouse.element = element\n\n\t\t\t\t\telement.addEventListener(\"mousemove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"mousedown\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"mouseup\", mouse.mouseup)\n\n\t\t\t\t\telement.addEventListener(\"mousewheel\", mouse.mousewheel)\n\t\t\t\t\telement.addEventListener(\"DOMMouseScroll\", mouse.mousewheel)\n\n\t\t\t\t\telement.addEventListener(\"touchmove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"touchstart\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"touchend\", mouse.mouseup)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n\t\t\t\tMouse.clearSourceEvents = function(mouse) {\n\t\t\t\t\tmouse.sourceEvents.mousemove = null\n\t\t\t\t\tmouse.sourceEvents.mousedown = null\n\t\t\t\t\tmouse.sourceEvents.mouseup = null\n\t\t\t\t\tmouse.sourceEvents.mousewheel = null\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n\t\t\t\tMouse.setOffset = function(mouse, offset) {\n\t\t\t\t\tmouse.offset.x = offset.x\n\t\t\t\t\tmouse.offset.y = offset.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n\t\t\t\tMouse.setScale = function(mouse, scale) {\n\t\t\t\t\tmouse.scale.x = scale.x\n\t\t\t\t\tmouse.scale.y = scale.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n\t\t\t\tMouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n\t\t\t\t\tvar elementBounds = element.getBoundingClientRect(),\n\t\t\t\t\t\trootNode = (document.documentElement || document.body.parentNode || document.body),\n\t\t\t\t\t\tscrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n\t\t\t\t\t\tscrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n\t\t\t\t\t\ttouches = event.changedTouches,\n\t\t\t\t\t\tx, y\n\n\t\t\t\t\tif(touches){\n\t\t\t\t\t\tx = touches[0].pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = touches[0].pageY - elementBounds.top - scrollY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = event.pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = event.pageY - elementBounds.top - scrollY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n\t\t\t\t\t\ty: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 14 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\n\t\t\tvar Detector = {}\n\n\t\t\tmodule.exports = Detector\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Collision = __webpack_require__(8);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n\t\t\t\tDetector.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tpairs: null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n\t\t\t\tDetector.setBodies = function(detector, bodies) {\n\t\t\t\t\tdetector.bodies = bodies.slice(0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n\t\t\t\tDetector.clear = function(detector) {\n\t\t\t\t\tdetector.bodies = []\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     *\n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n\t\t\t\tDetector.collisions = function(detector) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tpairs = detector.pairs,\n\t\t\t\t\t\tbodies = detector.bodies,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tcanCollide = Detector.canCollide,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tbodies.sort(Detector._compareBoundsX)\n\n\t\t\t\t\tfor(i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tboundsA = bodyA.bounds,\n\t\t\t\t\t\t\tboundXMax = bodyA.bounds.max.x,\n\t\t\t\t\t\t\tboundYMax = bodyA.bounds.max.y,\n\t\t\t\t\t\t\tboundYMin = bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsASingle = partsALength === 1\n\n\t\t\t\t\t\tfor(j = i + 1; j < bodiesLength; j++){\n\t\t\t\t\t\t\tvar bodyB = bodies[j],\n\t\t\t\t\t\t\t\tboundsB = bodyB.bounds\n\n\t\t\t\t\t\t\tif(boundsB.min.x > boundXMax){\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(boundYMax < boundsB.min.y || boundYMin > boundsB.max.y){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar partsBLength = bodyB.parts.length\n\n\t\t\t\t\t\t\tif(partsASingle && partsBLength === 1){\n\t\t\t\t\t\t\t\tvar collision = collides(bodyA, bodyB, pairs)\n\n\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar partsAStart = partsALength > 1 ? 1 : 0,\n\t\t\t\t\t\t\t\t\tpartsBStart = partsBLength > 1 ? 1 : 0\n\n\t\t\t\t\t\t\t\tfor(var k = partsAStart; k < partsALength; k++){\n\t\t\t\t\t\t\t\t\tvar partA = bodyA.parts[k],\n\t\t\t\t\t\t\t\t\t\tboundsA = partA.bounds\n\n\t\t\t\t\t\t\t\t\tfor(var z = partsBStart; z < partsBLength; z++){\n\t\t\t\t\t\t\t\t\t\tvar partB = bodyB.parts[z],\n\t\t\t\t\t\t\t\t\t\t\tboundsB = partB.bounds\n\n\t\t\t\t\t\t\t\t\t\tif(boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y){\n\t\t\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar collision = collides(partA, partB, pairs)\n\n\t\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n\t\t\t\tDetector.canCollide = function(filterA, filterB) {\n\t\t\t\t\tif(filterA.group === filterB.group && filterA.group !== 0){\n\t\t\t\t\t\treturn filterA.group > 0\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n\t\t\t\tDetector._compareBoundsX = function(bodyA, bodyB) {\n\t\t\t\t\treturn bodyA.bounds.min.x - bodyB.bounds.min.x\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     *\n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 15 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\n\t\t\tvar Plugin = {}\n\n\t\t\tmodule.exports = Plugin\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tPlugin._registry = {}\n\n\t\t\t\t/**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n\t\t\t\tPlugin.register = function(plugin) {\n\t\t\t\t\tif(!Plugin.isPlugin(plugin)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"does not implement all required fields.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(plugin.name in Plugin._registry){\n\t\t\t\t\t\tvar registered = Plugin._registry[plugin.name],\n\t\t\t\t\t\t\tpluginVersion = Plugin.versionParse(plugin.version).number,\n\t\t\t\t\t\t\tregisteredVersion = Plugin.versionParse(registered.version).number\n\n\t\t\t\t\t\tif(pluginVersion > registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"was upgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t\t} else if(pluginVersion < registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"can not be downgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t} else if(plugin !== registered){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"is already registered to different plugin object\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t}\n\n\t\t\t\t\treturn plugin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n\t\t\t\tPlugin.resolve = function(dependency) {\n\t\t\t\t\treturn Plugin._registry[Plugin.dependencyParse(dependency).name]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n\t\t\t\tPlugin.toString = function(plugin) {\n\t\t\t\t\treturn typeof plugin === \"string\" ? plugin : (plugin.name || \"anonymous\") + \"@\" + (plugin.version || plugin.range || \"0.0.0\")\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n\t\t\t\tPlugin.isPlugin = function(obj) {\n\t\t\t\t\treturn obj && obj.name && obj.version && obj.install\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isUsed = function(module, name) {\n\t\t\t\t\treturn module.used.indexOf(name) > -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isFor = function(plugin, module) {\n\t\t\t\t\tvar parsed = plugin.for && Plugin.dependencyParse(plugin.for)\n\t\t\t\t\treturn !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n\t\t\t\tPlugin.use = function(module, plugins) {\n\t\t\t\t\tmodule.uses = (module.uses || []).concat(plugins || [])\n\n\t\t\t\t\tif(module.uses.length === 0){\n\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(module), \"does not specify any dependencies to install.\")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar dependencies = Plugin.dependencies(module),\n\t\t\t\t\t\tsortedDependencies = Common.topologicalSort(dependencies),\n\t\t\t\t\t\tstatus = []\n\n\t\t\t\t\tfor(var i = 0; i < sortedDependencies.length; i += 1){\n\t\t\t\t\t\tif(sortedDependencies[i] === module.name){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar plugin = Plugin.resolve(sortedDependencies[i])\n\n\t\t\t\t\t\tif(!plugin){\n\t\t\t\t\t\t\tstatus.push(\"❌ \" + sortedDependencies[i])\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(Plugin.isUsed(module, plugin.name)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!Plugin.isFor(plugin, module)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"is for\", plugin.for, \"but installed on\", Plugin.toString(module) + \".\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin.install){\n\t\t\t\t\t\t\tplugin.install(module)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"does not specify an install function.\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin._warned){\n\t\t\t\t\t\t\tstatus.push(\"🔶 \" + Plugin.toString(plugin))\n\t\t\t\t\t\t\tdelete plugin._warned\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus.push(\"✅ \" + Plugin.toString(plugin))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodule.used.push(plugin.name)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(status.length > 0){\n\t\t\t\t\t\tCommon.info(status.join(\"  \"))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n\t\t\t\tPlugin.dependencies = function(module, tracked) {\n\t\t\t\t\tvar parsedBase = Plugin.dependencyParse(module),\n\t\t\t\t\t\tname = parsedBase.name\n\n\t\t\t\t\ttracked = tracked || {}\n\n\t\t\t\t\tif(name in tracked){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tmodule = Plugin.resolve(module) || module\n\n\t\t\t\t\ttracked[name] = Common.map(module.uses || [], function(dependency) {\n\t\t\t\t\t\tif(Plugin.isPlugin(dependency)){\n\t\t\t\t\t\t\tPlugin.register(dependency)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parsed = Plugin.dependencyParse(dependency),\n\t\t\t\t\t\t\tresolved = Plugin.resolve(dependency)\n\n\t\t\t\t\t\tif(resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(resolved), \"does not satisfy\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsed), \"used by\", Plugin.toString(parsedBase) + \".\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tresolved._warned = true\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t} else if(!resolved){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(dependency), \"used by\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsedBase), \"could not be resolved.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn parsed.name\n\t\t\t\t\t})\n\n\t\t\t\t\tfor(var i = 0; i < tracked[name].length; i += 1){\n\t\t\t\t\t\tPlugin.dependencies(tracked[name][i], tracked)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tracked\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n\t\t\t\tPlugin.dependencyParse = function(dependency) {\n\t\t\t\t\tif(Common.isString(dependency)){\n\t\t\t\t\t\tvar pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/\n\n\t\t\t\t\t\tif(!pattern.test(dependency)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.dependencyParse:\", dependency, \"is not a valid dependency string.\")\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: dependency.split(\"@\")[0],\n\t\t\t\t\t\t\trange: dependency.split(\"@\")[1] || \"*\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: dependency.name,\n\t\t\t\t\t\trange: dependency.range || dependency.version\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n\t\t\t\tPlugin.versionParse = function(range) {\n\t\t\t\t\tvar pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/\n\n\t\t\t\t\tif(!pattern.test(range)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.versionParse:\", range, \"is not a valid version or range.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parts = pattern.exec(range)\n\t\t\t\t\tvar major = Number(parts[4])\n\t\t\t\t\tvar minor = Number(parts[5])\n\t\t\t\t\tvar patch = Number(parts[6])\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisRange: Boolean(parts[1] || parts[2]),\n\t\t\t\t\t\tversion: parts[3],\n\t\t\t\t\t\trange: range,\n\t\t\t\t\t\toperator: parts[1] || parts[2] || \"\",\n\t\t\t\t\t\tmajor: major,\n\t\t\t\t\t\tminor: minor,\n\t\t\t\t\t\tpatch: patch,\n\t\t\t\t\t\tparts: [major, minor, patch],\n\t\t\t\t\t\tprerelease: parts[7],\n\t\t\t\t\t\tnumber: major * 1e8 + minor * 1e4 + patch\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n\t\t\t\tPlugin.versionSatisfies = function(version, range) {\n\t\t\t\t\trange = range || \"*\"\n\n\t\t\t\t\tvar r = Plugin.versionParse(range),\n\t\t\t\t\t\tv = Plugin.versionParse(version)\n\n\t\t\t\t\tif(r.isRange){\n\t\t\t\t\t\tif(r.operator === \"*\" || version === \"*\"){\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">\"){\n\t\t\t\t\t\t\treturn v.number > r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">=\"){\n\t\t\t\t\t\t\treturn v.number >= r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"~\"){\n\t\t\t\t\t\t\treturn v.major === r.major && v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"^\"){\n\t\t\t\t\t\t\tif(r.major > 0){\n\t\t\t\t\t\t\t\treturn v.major === r.major && v.number >= r.number\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(r.minor > 0){\n\t\t\t\t\t\t\t\treturn v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn v.patch === r.patch\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn version === range || version === \"*\"\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 16 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\n\t\t\tvar Render = {}\n\n\t\t\tmodule.exports = Render\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Mouse = __webpack_require__(13);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback) {\n                                      \twindow.setTimeout(function() {\n                                      \t\tcallback(Common.now())\n                                      \t}, 1000 / 60)\n                                      }\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tRender._goodFps = 30\n\t\t\t\tRender._goodDelta = 1000 / 60\n\n\t\t\t\t/**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n\t\t\t\tRender.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tengine: null,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tcanvas: null,\n\t\t\t\t\t\tmouse: null,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\thistorySize: 60,\n\t\t\t\t\t\t\tdelta: 0,\n\t\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\t\tlastTime: 0,\n\t\t\t\t\t\t\tlastTimestamp: 0,\n\t\t\t\t\t\t\tlastElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsedHistory: [],\n\t\t\t\t\t\t\tengineDeltaHistory: [],\n\t\t\t\t\t\t\tengineElapsedHistory: [],\n\t\t\t\t\t\t\telapsedHistory: []\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\twidth: 800,\n\t\t\t\t\t\t\theight: 600,\n\t\t\t\t\t\t\tpixelRatio: 1,\n\t\t\t\t\t\t\tbackground: \"#14151f\",\n\t\t\t\t\t\t\twireframeBackground: \"#14151f\",\n\t\t\t\t\t\t\thasBounds: !!options.bounds,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\twireframes: true,\n\t\t\t\t\t\t\tshowSleeping: true,\n\t\t\t\t\t\t\tshowDebug: false,\n\t\t\t\t\t\t\tshowStats: false,\n\t\t\t\t\t\t\tshowPerformance: false,\n\t\t\t\t\t\t\tshowBounds: false,\n\t\t\t\t\t\t\tshowVelocity: false,\n\t\t\t\t\t\t\tshowCollisions: false,\n\t\t\t\t\t\t\tshowSeparations: false,\n\t\t\t\t\t\t\tshowAxes: false,\n\t\t\t\t\t\t\tshowPositions: false,\n\t\t\t\t\t\t\tshowAngleIndicator: false,\n\t\t\t\t\t\t\tshowIds: false,\n\t\t\t\t\t\t\tshowVertexNumbers: false,\n\t\t\t\t\t\t\tshowConvexHulls: false,\n\t\t\t\t\t\t\tshowInternalEdges: false,\n\t\t\t\t\t\t\tshowMousePosition: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar render = Common.extend(defaults, options)\n\n\t\t\t\t\tif(render.canvas){\n\t\t\t\t\t\trender.canvas.width = render.options.width || render.canvas.width\n\t\t\t\t\t\trender.canvas.height = render.options.height || render.canvas.height\n\t\t\t\t\t}\n\n\t\t\t\t\trender.mouse = options.mouse\n\t\t\t\t\trender.engine = options.engine\n\t\t\t\t\trender.canvas = render.canvas || _createCanvas(render.options.width, render.options.height)\n\t\t\t\t\trender.context = render.canvas.getContext(\"2d\")\n\t\t\t\t\trender.textures = {}\n\n\t\t\t\t\trender.bounds = render.bounds || {\n\t\t\t\t\t\tmin: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmax: {\n\t\t\t\t\t\t\tx: render.canvas.width,\n\t\t\t\t\t\t\ty: render.canvas.height\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\trender.controller = Render\n\t\t\t\t\trender.options.showBroadphase = false\n\n\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\tRender.setPixelRatio(render, render.options.pixelRatio)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Common.isElement(render.element)){\n\t\t\t\t\t\trender.element.appendChild(render.canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn render\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n\t\t\t\tRender.run = function(render) {\n\t\t\t\t\t(function loop(time) {\n\t\t\t\t\t\trender.frameRequestId = _requestAnimationFrame(loop)\n\n\t\t\t\t\t\t_updateTiming(render, time)\n\n\t\t\t\t\t\tRender.world(render, time)\n\n\t\t\t\t\t\tif(render.options.showStats || render.options.showDebug){\n\t\t\t\t\t\t\tRender.stats(render, render.context, time)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(render.options.showPerformance || render.options.showDebug){\n\t\t\t\t\t\t\tRender.performance(render, render.context, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n\t\t\t\tRender.stop = function(render) {\n\t\t\t\t\t_cancelAnimationFrame(render.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n\t\t\t\tRender.setPixelRatio = function(render, pixelRatio) {\n\t\t\t\t\tvar options = render.options,\n\t\t\t\t\t\tcanvas = render.canvas\n\n\t\t\t\t\tif(pixelRatio === \"auto\"){\n\t\t\t\t\t\tpixelRatio = _getPixelRatio(canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.pixelRatio = pixelRatio\n\t\t\t\t\tcanvas.setAttribute(\"data-pixel-ratio\", pixelRatio)\n\t\t\t\t\tcanvas.width = options.width * pixelRatio\n\t\t\t\t\tcanvas.height = options.height * pixelRatio\n\t\t\t\t\tcanvas.style.width = options.width + \"px\"\n\t\t\t\t\tcanvas.style.height = options.height + \"px\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n\t\t\t\tRender.lookAt = function(render, objects, padding, center) {\n\t\t\t\t\tcenter = typeof center !== \"undefined\" ? center : true\n\t\t\t\t\tobjects = Common.isArray(objects) ? objects : [objects]\n\t\t\t\t\tpadding = padding || {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}\n\n\t\t\t\t\t// find bounds of all objects\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: Infinity, y: Infinity},\n\t\t\t\t\t\tmax: {x: -Infinity, y: -Infinity}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i += 1){\n\t\t\t\t\t\tvar object = objects[i],\n\t\t\t\t\t\t\tmin = object.bounds ? object.bounds.min : (object.min || object.position || object),\n\t\t\t\t\t\t\tmax = object.bounds ? object.bounds.max : (object.max || object.position || object)\n\n\t\t\t\t\t\tif(min && max){\n\t\t\t\t\t\t\tif(min.x < bounds.min.x){\n\t\t\t\t\t\t\t\tbounds.min.x = min.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.x > bounds.max.x){\n\t\t\t\t\t\t\t\tbounds.max.x = max.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(min.y < bounds.min.y){\n\t\t\t\t\t\t\t\tbounds.min.y = min.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.y > bounds.max.y){\n\t\t\t\t\t\t\t\tbounds.max.y = max.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find ratios\n\t\t\t\t\tvar width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n\t\t\t\t\t\theight = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n\t\t\t\t\t\tviewHeight = render.canvas.height,\n\t\t\t\t\t\tviewWidth = render.canvas.width,\n\t\t\t\t\t\touterRatio = viewWidth / viewHeight,\n\t\t\t\t\t\tinnerRatio = width / height,\n\t\t\t\t\t\tscaleX = 1,\n\t\t\t\t\t\tscaleY = 1\n\n\t\t\t\t\t// find scale factor\n\t\t\t\t\tif(innerRatio > outerRatio){\n\t\t\t\t\t\tscaleY = innerRatio / outerRatio\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscaleX = outerRatio / innerRatio\n\t\t\t\t\t}\n\n\t\t\t\t\t// enable bounds\n\t\t\t\t\trender.options.hasBounds = true\n\n\t\t\t\t\t// position and size\n\t\t\t\t\trender.bounds.min.x = bounds.min.x\n\t\t\t\t\trender.bounds.max.x = bounds.min.x + width * scaleX\n\t\t\t\t\trender.bounds.min.y = bounds.min.y\n\t\t\t\t\trender.bounds.max.y = bounds.min.y + height * scaleY\n\n\t\t\t\t\t// center\n\t\t\t\t\tif(center){\n\t\t\t\t\t\trender.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t\trender.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t}\n\n\t\t\t\t\t// padding\n\t\t\t\t\trender.bounds.min.x -= padding.x\n\t\t\t\t\trender.bounds.max.x -= padding.x\n\t\t\t\t\trender.bounds.min.y -= padding.y\n\t\t\t\t\trender.bounds.max.y -= padding.y\n\n\t\t\t\t\t// update mouse\n\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.startViewTransform = function(render) {\n\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\trender.context.setTransform(\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleX, 0, 0,\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleY, 0, 0\n\t\t\t\t\t)\n\n\t\t\t\t\trender.context.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.endViewTransform = function(render) {\n\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n\t\t\t\tRender.world = function(render, time) {\n\t\t\t\t\tvar startTime = Common.now(),\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tcanvas = render.canvas,\n\t\t\t\t\t\tcontext = render.context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\ttiming = render.timing\n\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world),\n\t\t\t\t\t\tbackground = options.wireframes ? options.wireframeBackground : options.background,\n\t\t\t\t\t\tbodies = [],\n\t\t\t\t\t\tconstraints = [],\n\t\t\t\t\t\ti\n\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: engine.timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"beforeRender\", event)\n\n\t\t\t\t\t// apply background if it has changed\n\t\t\t\t\tif(render.currentBackground !== background){\n\t\t\t\t\t\t_applyBackground(render, background)\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the canvas with a transparent fill, to allow the canvas background to show\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-in\"\n\t\t\t\t\tcontext.fillStyle = \"transparent\"\n\t\t\t\t\tcontext.fillRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-over\"\n\n\t\t\t\t\t// handle bounds\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// filter out bodies that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allBodies.length; i++){\n\t\t\t\t\t\t\tvar body = allBodies[i]\n\t\t\t\t\t\t\tif(Bounds.overlaps(body.bounds, render.bounds)){\n\t\t\t\t\t\t\t\tbodies.push(body)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// filter out constraints that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allConstraints.length; i++){\n\t\t\t\t\t\t\tvar constraint = allConstraints[i],\n\t\t\t\t\t\t\t\tbodyA = constraint.bodyA,\n\t\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\t\tpointAWorld = constraint.pointA,\n\t\t\t\t\t\t\t\tpointBWorld = constraint.pointB\n\n\t\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld)){\n\t\t\t\t\t\t\t\tconstraints.push(constraint)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the view\n\t\t\t\t\t\tRender.startViewTransform(render)\n\n\t\t\t\t\t\t// update mouse\n\t\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n\t\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraints = allConstraints\n\t\t\t\t\t\tbodies = allBodies\n\n\t\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!options.wireframes || (engine.enableSleeping && options.showSleeping)){\n\t\t\t\t\t\t// fully featured rendering of bodies\n\t\t\t\t\t\tRender.bodies(render, bodies, context)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(options.showConvexHulls){\n\t\t\t\t\t\t\tRender.bodyConvexHulls(render, bodies, context)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// optimised method for wireframes only\n\t\t\t\t\t\tRender.bodyWireframes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showBounds){\n\t\t\t\t\t\tRender.bodyBounds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showAxes || options.showAngleIndicator){\n\t\t\t\t\t\tRender.bodyAxes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showPositions){\n\t\t\t\t\t\tRender.bodyPositions(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVelocity){\n\t\t\t\t\t\tRender.bodyVelocity(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showIds){\n\t\t\t\t\t\tRender.bodyIds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showSeparations){\n\t\t\t\t\t\tRender.separations(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showCollisions){\n\t\t\t\t\t\tRender.collisions(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVertexNumbers){\n\t\t\t\t\t\tRender.vertexNumbers(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showMousePosition){\n\t\t\t\t\t\tRender.mousePosition(render, render.mouse, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tRender.constraints(constraints, context)\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// revert view transforms\n\t\t\t\t\t\tRender.endViewTransform(render)\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"afterRender\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\ttiming.lastElapsed = Common.now() - startTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n\t\t\t\tRender.stats = function(render, context, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbodies = Composite.allBodies(world),\n\t\t\t\t\t\tparts = 0,\n\t\t\t\t\t\twidth = 55,\n\t\t\t\t\t\theight = 44,\n\t\t\t\t\t\tx = 0,\n\t\t\t\t\t\ty = 0\n\n\t\t\t\t\t// count parts\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tparts += bodies[i].parts.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// sections\n\t\t\t\t\tvar sections = {\n\t\t\t\t\t\tPart: parts,\n\t\t\t\t\t\tBody: bodies.length,\n\t\t\t\t\t\tCons: Composite.allConstraints(world).length,\n\t\t\t\t\t\tComp: Composite.allComposites(world).length,\n\t\t\t\t\t\tPair: engine.pairs.list.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(x, y, width * 5.5, height)\n\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"top\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\n\t\t\t\t\t// sections\n\t\t\t\t\tfor(var key in sections){\n\t\t\t\t\t\tvar section = sections[key]\n\t\t\t\t\t\t// label\n\t\t\t\t\t\tcontext.fillStyle = \"#aaa\"\n\t\t\t\t\t\tcontext.fillText(key, x + width, y + 8)\n\n\t\t\t\t\t\t// value\n\t\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\t\tcontext.fillText(section, x + width, y + 26)\n\n\t\t\t\t\t\tx += width\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.performance = function(render, context) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\tdeltaHistory = timing.deltaHistory,\n\t\t\t\t\t\telapsedHistory = timing.elapsedHistory,\n\t\t\t\t\t\ttimestampElapsedHistory = timing.timestampElapsedHistory,\n\t\t\t\t\t\tengineDeltaHistory = timing.engineDeltaHistory,\n\t\t\t\t\t\tengineElapsedHistory = timing.engineElapsedHistory,\n\t\t\t\t\t\tlastEngineDelta = engine.timing.lastDelta\n\n\t\t\t\t\tvar deltaMean = _mean(deltaHistory),\n\t\t\t\t\t\telapsedMean = _mean(elapsedHistory),\n\t\t\t\t\t\tengineDeltaMean = _mean(engineDeltaHistory),\n\t\t\t\t\t\tengineElapsedMean = _mean(engineElapsedHistory),\n\t\t\t\t\t\ttimestampElapsedMean = _mean(timestampElapsedHistory),\n\t\t\t\t\t\trateMean = (timestampElapsedMean / deltaMean) || 0,\n\t\t\t\t\t\tfps = (1000 / deltaMean) || 0\n\n\t\t\t\t\tvar graphHeight = 4,\n\t\t\t\t\t\tgap = 12,\n\t\t\t\t\t\twidth = 60,\n\t\t\t\t\t\theight = 34,\n\t\t\t\t\t\tx = 10,\n\t\t\t\t\t\ty = 69\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(0, 50, gap * 4 + width * 5 + 22, height)\n\n\t\t\t\t\t// show FPS\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x, y, width, graphHeight, deltaHistory.length,\n\t\t\t\t\t\tMath.round(fps) + \" fps\",\n\t\t\t\t\t\tfps / Render._goodFps,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (deltaHistory[i] / deltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine delta\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n\t\t\t\t\t\tlastEngineDelta.toFixed(2) + \" dt\",\n\t\t\t\t\t\tRender._goodDelta / lastEngineDelta,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineDeltaHistory[i] / engineDeltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine update time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n\t\t\t\t\t\tengineElapsedMean.toFixed(2) + \" ut\",\n\t\t\t\t\t\t1 - (engineElapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineElapsedHistory[i] / engineElapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show render time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n\t\t\t\t\t\telapsedMean.toFixed(2) + \" rt\",\n\t\t\t\t\t\t1 - (elapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (elapsedHistory[i] / elapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show effective speed\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length,\n\t\t\t\t\t\trateMean.toFixed(2) + \" x\",\n\t\t\t\t\t\trateMean * rateMean * rateMean,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n\t\t\t\tRender.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.strokeStyle = \"#888\"\n\t\t\t\t\tcontext.fillStyle = \"#444\"\n\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\tcontext.fillRect(x, y + 7, width, 1)\n\n\t\t\t\t\t// chart\n\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\tcontext.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2))\n\t\t\t\t\tfor(var i = 0; i < width; i += 1){\n\t\t\t\t\t\tcontext.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0))\n\t\t\t\t\t}\n\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t// indicator\n\t\t\t\t\tcontext.fillStyle = \"hsl(\" + Common.clamp(25 + 95 * indicator, 0, 120) + \",100%,60%)\"\n\t\t\t\t\tcontext.fillRect(x, y - 7, 4, 4)\n\n\t\t\t\t\t// label\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"middle\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\tcontext.fillText(label, x + width, y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.constraints = function(constraints, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i++){\n\t\t\t\t\t\tvar constraint = constraints[i]\n\n\t\t\t\t\t\tif(!constraint.render.visible || !constraint.pointA || !constraint.pointB){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\n\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\tstart = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstart = constraint.pointA\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.type === \"pin\"){\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tend = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tend = constraint.pointB\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.moveTo(start.x, start.y)\n\n\t\t\t\t\t\t\tif(constraint.render.type === \"spring\"){\n\t\t\t\t\t\t\t\tvar delta = Vector.sub(end, start),\n\t\t\t\t\t\t\t\t\tnormal = Vector.perp(Vector.normalise(delta)),\n\t\t\t\t\t\t\t\t\tcoils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n\t\t\t\t\t\t\t\t\toffset\n\n\t\t\t\t\t\t\t\tfor(var j = 1; j < coils; j += 1){\n\t\t\t\t\t\t\t\t\toffset = j % 2 === 0 ? 1 : -1\n\n\t\t\t\t\t\t\t\t\tc.lineTo(\n\t\t\t\t\t\t\t\t\t\tstart.x + delta.x * (j / coils) + normal.x * offset * 4,\n\t\t\t\t\t\t\t\t\t\tstart.y + delta.y * (j / coils) + normal.y * offset * 4\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(end.x, end.y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.lineWidth){\n\t\t\t\t\t\t\tc.lineWidth = constraint.render.lineWidth\n\t\t\t\t\t\t\tc.strokeStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.anchors){\n\t\t\t\t\t\t\tc.fillStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.arc(end.x, end.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodies = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tshowInternalEdges = options.showInternalEdges || !options.wireframes,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tif(!part.render.visible){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(options.showSleeping && body.isSleeping){\n\t\t\t\t\t\t\t\tc.globalAlpha = 0.5 * part.render.opacity\n\t\t\t\t\t\t\t} else if(part.render.opacity !== 1){\n\t\t\t\t\t\t\t\tc.globalAlpha = part.render.opacity\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(part.render.sprite && part.render.sprite.texture && !options.wireframes){\n\t\t\t\t\t\t\t\t// part sprite\n\t\t\t\t\t\t\t\tvar sprite = part.render.sprite,\n\t\t\t\t\t\t\t\t\ttexture = _getTexture(render, sprite.texture)\n\n\t\t\t\t\t\t\t\tc.translate(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\tc.rotate(part.angle)\n\n\t\t\t\t\t\t\t\tc.drawImage(\n\t\t\t\t\t\t\t\t\ttexture,\n\t\t\t\t\t\t\t\t\ttexture.width * -sprite.xOffset * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * -sprite.yOffset * sprite.yScale,\n\t\t\t\t\t\t\t\t\ttexture.width * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * sprite.yScale\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t// revert translation, hopefully faster than save / restore\n\t\t\t\t\t\t\t\tc.rotate(-part.angle)\n\t\t\t\t\t\t\t\tc.translate(-part.position.x, -part.position.y)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// part polygon\n\t\t\t\t\t\t\t\tif(part.circleRadius){\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\t\t\tfor(var j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!options.wireframes){\n\t\t\t\t\t\t\t\t\tc.fillStyle = part.render.fillStyle\n\n\t\t\t\t\t\t\t\t\tif(part.render.lineWidth){\n\t\t\t\t\t\t\t\t\t\tc.lineWidth = part.render.lineWidth\n\t\t\t\t\t\t\t\t\t\tc.strokeStyle = part.render.strokeStyle\n\t\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.globalAlpha = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyWireframes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tshowInternalEdges = render.options.showInternalEdges,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render all bodies\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\tfor(j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyConvexHulls = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render convex hulls\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible || body.parts.length === 1){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.vertices[0].x, body.vertices[0].y)\n\n\t\t\t\t\t\tfor(j = 1; j < body.vertices.length; j++){\n\t\t\t\t\t\t\tc.lineTo(body.vertices[j].x, body.vertices[j].y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.lineTo(body.vertices[0].x, body.vertices[0].y)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.vertexNumbers = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(k = parts.length > 1 ? 1 : 0; k < parts.length; k++){\n\t\t\t\t\t\t\tvar part = parts[k]\n\t\t\t\t\t\t\tfor(j = 0; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\t\t\t\tc.fillText(i + \"_\" + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.mousePosition = function(render, mouse, context) {\n\t\t\t\t\tvar c = context\n\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\t\t\tc.fillText(mouse.position.x + \"  \" + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyBounds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\t\tfor(var j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\t\tc.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.08)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(0,0,0,0.1)\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyAxes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tparts = body.parts\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(options.showAxes){\n\t\t\t\t\t\t\t// render all axes\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\tvar axis = part.axes[k]\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\t// render a single axis indicator\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo((part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,\n\t\t\t\t\t\t\t\t\t\t(part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"indianred\"\n\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255, 255, 255, 0.4)\"\n\t\t\t\t\t\tc.globalCompositeOperation = \"overlay\"\n\t\t\t\t\t\tc.lineWidth = 2\n\t\t\t\t\t}\n\n\t\t\t\t\tc.stroke()\n\t\t\t\t\tc.globalCompositeOperation = \"source-over\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyPositions = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render current positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"indianred\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"rgba(0,0,0,0.5)\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render previous positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tc.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.fillStyle = \"rgba(255,165,0,0.8)\"\n\t\t\t\t\tc.fill()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyVelocity = function(render, bodies, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.position.x, body.position.y)\n\t\t\t\t\t\tc.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 3\n\t\t\t\t\tc.strokeStyle = \"cornflowerblue\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyIds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tif(!bodies[i].render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\tc.font = \"12px Arial\"\n\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.5)\"\n\t\t\t\t\t\t\tc.fillText(part.id, part.position.x + 10, part.position.y - 10)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.collisions = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision positions\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tfor(j = 0; j < pair.activeContacts.length; j++){\n\t\t\t\t\t\t\tvar contact = pair.activeContacts[j],\n\t\t\t\t\t\t\t\tvertex = contact.vertex\n\t\t\t\t\t\t\tc.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision normals\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\n\t\t\t\t\t\tif(pair.activeContacts.length > 0){\n\t\t\t\t\t\t\tvar normalPosX = pair.activeContacts[0].vertex.x,\n\t\t\t\t\t\t\t\tnormalPosY = pair.activeContacts[0].vertex.y\n\n\t\t\t\t\t\t\tif(pair.activeContacts.length === 2){\n\t\t\t\t\t\t\t\tnormalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2\n\t\t\t\t\t\t\t\tnormalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true){\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(normalPosX, normalPosY)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.separations = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render separations\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\t\tvar k = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyB.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyB.position.x, bodyB.position.y)\n\t\t\t\t\t\tc.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k)\n\n\t\t\t\t\t\tk = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyA.position.x, bodyA.position.y)\n\t\t\t\t\t\tc.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.5)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.inspector = function(inspector, context) {\n\t\t\t\t\tvar engine = inspector.engine,\n\t\t\t\t\t\tselected = inspector.selected,\n\t\t\t\t\t\trender = inspector.render,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbounds\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\t\tcontext.scale(1 / boundsScaleX, 1 / boundsScaleY)\n\t\t\t\t\t\tcontext.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < selected.length; i++){\n\t\t\t\t\t\tvar item = selected[i].data\n\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.9)\"\n\t\t\t\t\t\tcontext.setLineDash([1, 2])\n\n\t\t\t\t\t\tswitch(item.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\n\t\t\t\t\t\t\t\t// render body selections\n\t\t\t\t\t\t\t\tbounds = item.bounds\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n\t\t\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6))\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\tcase \"constraint\":\n\n\t\t\t\t\t\t\t\t// render constraint selections\n\t\t\t\t\t\t\t\tvar point = item.pointA\n\t\t\t\t\t\t\t\tif(item.bodyA){\n\t\t\t\t\t\t\t\t\tpoint = item.pointB\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.arc(point.x, point.y, 10, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.setLineDash([])\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\t// render selection region\n\t\t\t\t\tif(inspector.selectStart !== null){\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.6)\"\n\t\t\t\t\t\tcontext.fillStyle = \"rgba(255,165,0,0.1)\"\n\t\t\t\t\t\tbounds = inspector.selectBounds\n\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y))\n\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\tcontext.stroke()\n\t\t\t\t\t\tcontext.fill()\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tcontext.setTransform(1, 0, 0, 1, 0, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n\t\t\t\tvar _updateTiming = function(render, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\thistorySize = timing.historySize,\n\t\t\t\t\t\ttimestamp = engine.timing.timestamp\n\n\t\t\t\t\ttiming.delta = time - timing.lastTime || Render._goodDelta\n\t\t\t\t\ttiming.lastTime = time\n\n\t\t\t\t\ttiming.timestampElapsed = timestamp - timing.lastTimestamp || 0\n\t\t\t\t\ttiming.lastTimestamp = timestamp\n\n\t\t\t\t\ttiming.deltaHistory.unshift(timing.delta)\n\t\t\t\t\ttiming.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineDeltaHistory.unshift(engine.timing.lastDelta)\n\t\t\t\t\ttiming.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.timestampElapsedHistory.unshift(timing.timestampElapsed)\n\t\t\t\t\ttiming.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineElapsedHistory.unshift(engine.timing.lastElapsed)\n\t\t\t\t\ttiming.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.elapsedHistory.unshift(timing.lastElapsed)\n\t\t\t\t\ttiming.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n\t\t\t\tvar _mean = function(values) {\n\t\t\t\t\tvar result = 0\n\t\t\t\t\tfor(var i = 0; i < values.length; i += 1){\n\t\t\t\t\t\tresult += values[i]\n\t\t\t\t\t}\n\t\t\t\t\treturn (result / values.length) || 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n\t\t\t\tvar _createCanvas = function(width, height) {\n\t\t\t\t\tvar canvas = document.createElement(\"canvas\")\n\t\t\t\t\tcanvas.width = width\n\t\t\t\t\tcanvas.height = height\n\t\t\t\t\tcanvas.oncontextmenu = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\tcanvas.onselectstart = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn canvas\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n\t\t\t\tvar _getPixelRatio = function(canvas) {\n\t\t\t\t\tvar context = canvas.getContext(\"2d\"),\n\t\t\t\t\t\tdevicePixelRatio = window.devicePixelRatio || 1,\n\t\t\t\t\t\tbackingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1\n\n\t\t\t\t\treturn devicePixelRatio / backingStorePixelRatio\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n\t\t\t\tvar _getTexture = function(render, imagePath) {\n\t\t\t\t\tvar image = render.textures[imagePath]\n\n\t\t\t\t\tif(image){\n\t\t\t\t\t\treturn image\n\t\t\t\t\t}\n\n\t\t\t\t\timage = render.textures[imagePath] = new Image()\n\t\t\t\t\timage.src = imagePath\n\n\t\t\t\t\treturn image\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n\t\t\t\tvar _applyBackground = function(render, background) {\n\t\t\t\t\tvar cssBackground = background\n\n\t\t\t\t\tif(/(jpg|gif|png)$/.test(background)){\n\t\t\t\t\t\tcssBackground = \"url(\" + background + \")\"\n\t\t\t\t\t}\n\n\t\t\t\t\trender.canvas.style.background = cssBackground\n\t\t\t\t\trender.canvas.style.backgroundSize = \"contain\"\n\t\t\t\t\trender.currentBackground = background\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @deprecated\n     * @property controller\n     * @type render\n     */\n\n\t\t\t\t/**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n\t\t\t\t/**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t\t/**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n\t\t\t\t/**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n\t\t\t\t/**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n\t\t\t\t/**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable all debug information overlays together.\n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the engine stats info overlay.\n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable performance charts.\n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 17 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\n\t\t\tvar Contact = {}\n\n\t\t\tmodule.exports = Contact;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n\t\t\t\tContact.create = function(vertex) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvertex: vertex,\n\t\t\t\t\t\tnormalImpulse: 0,\n\t\t\t\t\t\ttangentImpulse: 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 18 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\n\t\t\tvar Engine = {}\n\n\t\t\tmodule.exports = Engine\n\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Resolver = __webpack_require__(19)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Pairs = __webpack_require__(20)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n\t\t\t\tEngine.create = function(options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tpositionIterations: 6,\n\t\t\t\t\t\tvelocityIterations: 4,\n\t\t\t\t\t\tconstraintIterations: 2,\n\t\t\t\t\t\tenableSleeping: false,\n\t\t\t\t\t\tevents: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tgravity: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 1,\n\t\t\t\t\t\t\tscale: 0.001\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\ttimestamp: 0,\n\t\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\t\tlastDelta: 0,\n\t\t\t\t\t\t\tlastElapsed: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar engine = Common.extend(defaults, options)\n\n\t\t\t\t\tengine.world = options.world || Composite.create({label: \"World\"})\n\t\t\t\t\tengine.pairs = options.pairs || Pairs.create()\n\t\t\t\t\tengine.detector = options.detector || Detector.create()\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\tengine.grid = {buckets: []}\n\t\t\t\t\tengine.world.gravity = engine.gravity\n\t\t\t\t\tengine.broadphase = engine.grid\n\t\t\t\t\tengine.metrics = {}\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n\t\t\t\tEngine.update = function(engine, delta, correction) {\n\t\t\t\t\tvar startTime = Common.now()\n\n\t\t\t\t\tdelta = delta || 1000 / 60\n\t\t\t\t\tcorrection = correction || 1\n\n\t\t\t\t\tvar world = engine.world,\n\t\t\t\t\t\tdetector = engine.detector,\n\t\t\t\t\t\tpairs = engine.pairs,\n\t\t\t\t\t\ttiming = engine.timing,\n\t\t\t\t\t\ttimestamp = timing.timestamp,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// increment timestamp\n\t\t\t\t\ttiming.timestamp += delta * timing.timeScale\n\t\t\t\t\ttiming.lastDelta = delta * timing.timeScale\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(engine, \"beforeUpdate\", event)\n\n\t\t\t\t\t// get all bodies and all constraints in the world\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world)\n\n\t\t\t\t\t// update the detector bodies if they have changed\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tDetector.setBodies(detector, allBodies)\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset all composite modified flags\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tComposite.setModified(world, false, false, true)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update sleeping if enabled\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.update(allBodies, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// apply gravity to all bodies\n\t\t\t\t\tEngine._bodiesApplyGravity(allBodies, engine.gravity)\n\n\t\t\t\t\t// update all body position and rotation by integration\n\t\t\t\t\tEngine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds)\n\n\t\t\t\t\t// update all constraints (first pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// find all collisions\n\t\t\t\t\tdetector.pairs = engine.pairs\n\t\t\t\t\tvar collisions = Detector.collisions(detector)\n\n\t\t\t\t\t// update collision pairs\n\t\t\t\t\tPairs.update(pairs, collisions, timestamp)\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.afterCollisions(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionStart.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionStart\", {pairs: pairs.collisionStart})\n\t\t\t\t\t}\n\n\t\t\t\t\t// iteratively resolve position between collisions\n\t\t\t\t\tResolver.preSolvePosition(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.positionIterations; i++){\n\t\t\t\t\t\tResolver.solvePosition(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tResolver.postSolvePosition(allBodies)\n\n\t\t\t\t\t// update all constraints (second pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// iteratively resolve velocity between collisions\n\t\t\t\t\tResolver.preSolveVelocity(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.velocityIterations; i++){\n\t\t\t\t\t\tResolver.solveVelocity(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionActive.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionActive\", {pairs: pairs.collisionActive})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(pairs.collisionEnd.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionEnd\", {pairs: pairs.collisionEnd})\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear force buffers\n\t\t\t\t\tEngine._bodiesClearForces(allBodies)\n\n\t\t\t\t\tEvents.trigger(engine, \"afterUpdate\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\tengine.timing.lastElapsed = Common.now() - startTime\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n\t\t\t\tEngine.merge = function(engineA, engineB) {\n\t\t\t\t\tCommon.extend(engineA, engineB)\n\n\t\t\t\t\tif(engineB.world){\n\t\t\t\t\t\tengineA.world = engineB.world\n\n\t\t\t\t\t\tEngine.clear(engineA)\n\n\t\t\t\t\t\tvar bodies = Composite.allBodies(engineA.world)\n\n\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tbody.id = Common.nextId()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n\t\t\t\tEngine.clear = function(engine) {\n\t\t\t\t\tPairs.clear(engine.pairs)\n\t\t\t\t\tDetector.clear(engine.detector)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n\t\t\t\tEngine._bodiesClearForces = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\t// reset force buffers\n\t\t\t\t\t\tbody.force.x = 0\n\t\t\t\t\t\tbody.force.y = 0\n\t\t\t\t\t\tbody.torque = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n\t\t\t\tEngine._bodiesApplyGravity = function(bodies, gravity) {\n\t\t\t\t\tvar gravityScale = typeof gravity.scale !== \"undefined\" ? gravity.scale : 0.001\n\n\t\t\t\t\tif((gravity.x === 0 && gravity.y === 0) || gravityScale === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply gravity\n\t\t\t\t\t\tbody.force.y += body.mass * gravity.y * gravityScale\n\t\t\t\t\t\tbody.force.x += body.mass * gravity.x * gravityScale\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n\t\t\t\tEngine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBody.update(body, deltaTime, timeScale, correction)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n\t\t\t\t/**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n\t\t\t\t/**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n\t\t\t\t/**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 19 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\n\t\t\tvar Resolver = {}\n\n\t\t\tmodule.exports = Resolver\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\tResolver._restingThresh = 4\n\t\t\t\tResolver._restingThreshTangent = 6\n\t\t\t\tResolver._positionDampen = 0.9\n\t\t\t\tResolver._positionWarming = 0.8\n\t\t\t\tResolver._frictionNormalMultiplier = 5\n\n\t\t\t\t/**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolvePosition = function(pairs) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tactiveCount,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find total contacts on each body\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tactiveCount = pair.activeContacts.length\n\t\t\t\t\t\tpair.collision.parentA.totalContacts += activeCount\n\t\t\t\t\t\tpair.collision.parentB.totalContacts += activeCount\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solvePosition = function(pairs, timeScale) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tcontactShare,\n\t\t\t\t\t\tpositionImpulse,\n\t\t\t\t\t\tpositionDampen = Resolver._positionDampen,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find impulses required to resolve penetration\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\n\t\t\t\t\t\t// get current separation between body edges involved in collision\n\t\t\t\t\t\tpair.separation\n                = normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\t\t\t\t\t\tpositionImpulse = (pair.separation - pair.slop) * timeScale\n\n\t\t\t\t\t\tif(bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tpositionImpulse *= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyA.totalContacts\n\t\t\t\t\t\t\tbodyA.positionImpulse.x += normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyA.positionImpulse.y += normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyB.totalContacts\n\t\t\t\t\t\t\tbodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n\t\t\t\tResolver.postSolvePosition = function(bodies) {\n\t\t\t\t\tvar positionWarming = Resolver._positionWarming,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tverticesTranslate = Vertices.translate,\n\t\t\t\t\t\tboundsUpdate = Bounds.update\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tpositionImpulse = body.positionImpulse,\n\t\t\t\t\t\t\tpositionImpulseX = positionImpulse.x,\n\t\t\t\t\t\t\tpositionImpulseY = positionImpulse.y,\n\t\t\t\t\t\t\tvelocity = body.velocity\n\n\t\t\t\t\t\t// reset contact count\n\t\t\t\t\t\tbody.totalContacts = 0\n\n\t\t\t\t\t\tif(positionImpulseX !== 0 || positionImpulseY !== 0){\n\t\t\t\t\t\t\t// update body geometry\n\t\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\tverticesTranslate(part.vertices, positionImpulse)\n\t\t\t\t\t\t\t\tboundsUpdate(part.bounds, part.vertices, velocity)\n\t\t\t\t\t\t\t\tpart.position.x += positionImpulseX\n\t\t\t\t\t\t\t\tpart.position.y += positionImpulseY\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// move the body without changing velocity\n\t\t\t\t\t\t\tbody.positionPrev.x += positionImpulseX\n\t\t\t\t\t\t\tbody.positionPrev.y += positionImpulseY\n\n\t\t\t\t\t\t\tif(positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0){\n\t\t\t\t\t\t\t\t// reset cached impulse if the body has velocity along it\n\t\t\t\t\t\t\t\tpositionImpulse.x = 0\n\t\t\t\t\t\t\t\tpositionImpulse.y = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// warm the next iteration\n\t\t\t\t\t\t\t\tpositionImpulse.x *= positionWarming\n\t\t\t\t\t\t\t\tpositionImpulse.y *= positionWarming\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolveVelocity = function(pairs) {\n\t\t\t\t\tvar pairsLength = pairs.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar contacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcollision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tnormal = collision.normal,\n\t\t\t\t\t\t\ttangent = collision.tangent\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex,\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse,\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse\n\n\t\t\t\t\t\t\tif(normalImpulse !== 0 || tangentImpulse !== 0){\n\t\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\t\tvar impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n\t\t\t\t\t\t\t\t\timpulseY = normal.y * normalImpulse + tangent.y * tangentImpulse\n\n\t\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.anglePrev += bodyA.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.anglePrev -= bodyB.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyB.position.x) * impulseY\n                            - (contactVertex.y - bodyB.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solveVelocity = function(pairs, timeScale) {\n\t\t\t\t\tvar timeScaleSquared = timeScale * timeScale,\n\t\t\t\t\t\trestingThresh = Resolver._restingThresh * timeScaleSquared,\n\t\t\t\t\t\tfrictionNormalMultiplier = Resolver._frictionNormalMultiplier,\n\t\t\t\t\t\trestingThreshTangent = Resolver._restingThreshTangent * timeScaleSquared,\n\t\t\t\t\t\tNumberMaxValue = Number.MAX_VALUE,\n\t\t\t\t\t\tpairsLength = pairs.length,\n\t\t\t\t\t\ttangentImpulse,\n\t\t\t\t\t\tmaxFriction,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tbodyAVelocity = bodyA.velocity,\n\t\t\t\t\t\t\tbodyBVelocity = bodyB.velocity,\n\t\t\t\t\t\t\tnormalX = collision.normal.x,\n\t\t\t\t\t\t\tnormalY = collision.normal.y,\n\t\t\t\t\t\t\ttangentX = collision.tangent.x,\n\t\t\t\t\t\t\ttangentY = collision.tangent.y,\n\t\t\t\t\t\t\tcontacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcontactShare = 1 / contactsLength,\n\t\t\t\t\t\t\tinverseMassTotal = bodyA.inverseMass + bodyB.inverseMass,\n\t\t\t\t\t\t\tfriction = pair.friction * pair.frictionStatic * frictionNormalMultiplier * timeScaleSquared\n\n\t\t\t\t\t\t// update body velocities\n\t\t\t\t\t\tbodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x\n\t\t\t\t\t\tbodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y\n\t\t\t\t\t\tbodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x\n\t\t\t\t\t\tbodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y\n\t\t\t\t\t\tbodyA.angularVelocity = bodyA.angle - bodyA.anglePrev\n\t\t\t\t\t\tbodyB.angularVelocity = bodyB.angle - bodyB.anglePrev\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex\n\n\t\t\t\t\t\t\tvar offsetAX = contactVertex.x - bodyA.position.x,\n\t\t\t\t\t\t\t\toffsetAY = contactVertex.y - bodyA.position.y,\n\t\t\t\t\t\t\t\toffsetBX = contactVertex.x - bodyB.position.x,\n\t\t\t\t\t\t\t\toffsetBY = contactVertex.y - bodyB.position.y\n\n\t\t\t\t\t\t\tvar velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity\n\n\t\t\t\t\t\t\tvar relativeVelocityX = velocityPointAX - velocityPointBX,\n\t\t\t\t\t\t\t\trelativeVelocityY = velocityPointAY - velocityPointBY\n\n\t\t\t\t\t\t\tvar normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n\t\t\t\t\t\t\t\ttangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY\n\n\t\t\t\t\t\t\t// coulomb friction\n\t\t\t\t\t\t\tvar normalOverlap = pair.separation + normalVelocity\n\t\t\t\t\t\t\tvar normalForce = Math.min(normalOverlap, 1)\n\t\t\t\t\t\t\tnormalForce = normalOverlap < 0 ? 0 : normalForce\n\n\t\t\t\t\t\t\tvar frictionLimit = normalForce * friction\n\n\t\t\t\t\t\t\tif(tangentVelocity > frictionLimit || -tangentVelocity > frictionLimit){\n\t\t\t\t\t\t\t\tmaxFriction = tangentVelocity > 0 ? tangentVelocity : -tangentVelocity\n\t\t\t\t\t\t\t\ttangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleSquared\n\n\t\t\t\t\t\t\t\tif(tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t} else if(tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttangentImpulse = tangentVelocity\n\t\t\t\t\t\t\t\tmaxFriction = NumberMaxValue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// account for mass, inertia and contact offset\n\t\t\t\t\t\t\tvar oAcN = offsetAX * normalY - offsetAY * normalX,\n\t\t\t\t\t\t\t\toBcN = offsetBX * normalY - offsetBY * normalX,\n\t\t\t\t\t\t\t\tshare = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN)\n\n\t\t\t\t\t\t\t// raw impulses\n\t\t\t\t\t\t\tvar normalImpulse = (1 + pair.restitution) * normalVelocity * share\n\t\t\t\t\t\t\ttangentImpulse *= share\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(normalVelocity * normalVelocity > restingThresh && normalVelocity < 0){\n\t\t\t\t\t\t\t\t// high normal velocity so clear cached contact normal impulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// impulse constraint tends to 0\n\t\t\t\t\t\t\t\tvar contactNormalImpulse = contact.normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse += normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = Math.min(contact.normalImpulse, 0)\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse - contactNormalImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(tangentVelocity * tangentVelocity > restingThreshTangent){\n\t\t\t\t\t\t\t\t// high tangent velocity so clear cached contact tangent impulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// tangent impulse tends to -tangentSpeed or +tangentSpeed\n\t\t\t\t\t\t\t\tvar contactTangentImpulse = contact.tangentImpulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse += tangentImpulse\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse - contactTangentImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\tvar impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n\t\t\t\t\t\t\t\timpulseY = normalY * normalImpulse + tangentY * tangentImpulse\n\n\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 20 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\n\t\t\tvar Pairs = {}\n\n\t\t\tmodule.exports = Pairs\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n\t\t\t\tPairs.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\ttable: {},\n\t\t\t\t\t\tlist: [],\n\t\t\t\t\t\tcollisionStart: [],\n\t\t\t\t\t\tcollisionActive: [],\n\t\t\t\t\t\tcollisionEnd: []\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n\t\t\t\tPairs.update = function(pairs, collisions, timestamp) {\n\t\t\t\t\tvar pairsList = pairs.list,\n\t\t\t\t\t\tpairsListLength = pairsList.length,\n\t\t\t\t\t\tpairsTable = pairs.table,\n\t\t\t\t\t\tcollisionsLength = collisions.length,\n\t\t\t\t\t\tcollisionStart = pairs.collisionStart,\n\t\t\t\t\t\tcollisionEnd = pairs.collisionEnd,\n\t\t\t\t\t\tcollisionActive = pairs.collisionActive,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tpairIndex,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// clear collision state arrays, but maintain old reference\n\t\t\t\t\tcollisionStart.length = 0\n\t\t\t\t\tcollisionEnd.length = 0\n\t\t\t\t\tcollisionActive.length = 0\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpairsList[i].confirmedActive = false\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < collisionsLength; i++){\n\t\t\t\t\t\tcollision = collisions[i]\n\t\t\t\t\t\tpair = collision.pair\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\t// pair already exists (but may or may not be active)\n\t\t\t\t\t\t\tif(pair.isActive){\n\t\t\t\t\t\t\t\t// pair exists and is active\n\t\t\t\t\t\t\t\tcollisionActive.push(pair)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// pair exists but was inactive, so a collision has just started again\n\t\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// update the pair\n\t\t\t\t\t\t\tPair.update(pair, collision, timestamp)\n\t\t\t\t\t\t\tpair.confirmedActive = true\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// pair did not exist, create a new pair\n\t\t\t\t\t\t\tpair = Pair.create(collision, timestamp)\n\t\t\t\t\t\t\tpairsTable[pair.id] = pair\n\n\t\t\t\t\t\t\t// push the new pair\n\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\tpairsList.push(pair)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find pairs that are no longer active\n\t\t\t\t\tvar removePairIndex = []\n\t\t\t\t\tpairsListLength = pairsList.length\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpair = pairsList[i]\n\n\t\t\t\t\t\t// keep pair if it had a collision this update\n\t\t\t\t\t\tif(pair.confirmedActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbodyA = pair.collision.bodyA\n\t\t\t\t\t\tbodyB = pair.collision.bodyB\n\n\t\t\t\t\t\t// keep pair if it is sleeping but not both static\n\t\t\t\t\t\tif((bodyA.isSleeping || bodyA.isStatic) && (bodyB.isSleeping || bodyB.isStatic)\n                && !(bodyA.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tPair.setActive(pair, false, timestamp)\n\t\t\t\t\t\tcollisionEnd.push(pair)\n\t\t\t\t\t\tremovePairIndex.push(i)\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove inactive pairs\n\t\t\t\t\tfor(i = 0; i < removePairIndex.length; i++){\n\t\t\t\t\t\tpairIndex = removePairIndex[i] - i\n\t\t\t\t\t\tpair = pairsList[pairIndex]\n\t\t\t\t\t\tpairsList.splice(pairIndex, 1)\n\t\t\t\t\t\tdelete pairsTable[pair.id]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n\t\t\t\tPairs.clear = function(pairs) {\n\t\t\t\t\tpairs.table = {}\n\t\t\t\t\tpairs.list.length = 0\n\t\t\t\t\tpairs.collisionStart.length = 0\n\t\t\t\t\tpairs.collisionActive.length = 0\n\t\t\t\t\tpairs.collisionEnd.length = 0\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 21 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\tvar Matter = module.exports = __webpack_require__(22)\n\n\t\t\tMatter.Axes = __webpack_require__(11)\n\t\t\tMatter.Bodies = __webpack_require__(12)\n\t\t\tMatter.Body = __webpack_require__(6)\n\t\t\tMatter.Bounds = __webpack_require__(1)\n\t\t\tMatter.Collision = __webpack_require__(8)\n\t\t\tMatter.Common = __webpack_require__(0)\n\t\t\tMatter.Composite = __webpack_require__(5)\n\t\t\tMatter.Composites = __webpack_require__(23)\n\t\t\tMatter.Constraint = __webpack_require__(10)\n\t\t\tMatter.Contact = __webpack_require__(17)\n\t\t\tMatter.Detector = __webpack_require__(14)\n\t\t\tMatter.Engine = __webpack_require__(18)\n\t\t\tMatter.Events = __webpack_require__(4)\n\t\t\tMatter.Grid = __webpack_require__(24)\n\t\t\tMatter.Mouse = __webpack_require__(13)\n\t\t\tMatter.MouseConstraint = __webpack_require__(25)\n\t\t\tMatter.Pair = __webpack_require__(9)\n\t\t\tMatter.Pairs = __webpack_require__(20)\n\t\t\tMatter.Plugin = __webpack_require__(15)\n\t\t\tMatter.Query = __webpack_require__(26)\n\t\t\tMatter.Render = __webpack_require__(16)\n\t\t\tMatter.Resolver = __webpack_require__(19)\n\t\t\tMatter.Runner = __webpack_require__(27)\n\t\t\tMatter.SAT = __webpack_require__(28)\n\t\t\tMatter.Sleeping = __webpack_require__(7)\n\t\t\tMatter.Svg = __webpack_require__(29)\n\t\t\tMatter.Vector = __webpack_require__(2)\n\t\t\tMatter.Vertices = __webpack_require__(3)\n\t\t\tMatter.World = __webpack_require__(30)\n\n\t\t\t// temporary back compatibility\n\t\t\tMatter.Engine.run = Matter.Runner.run\n\t\t\tMatter.Common.deprecated(Matter.Engine, \"run\", \"Engine.run ➤ use Matter.Runner.run(engine) instead\")\n\n\n\t\t\t/***/ }),\n\t\t/* 22 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\n\t\t\tvar Matter = {}\n\n\t\t\tmodule.exports = Matter\n\n\t\t\tvar Plugin = __webpack_require__(15)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.name = \"matter-js\"\n\n\t\t\t\t/**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.version = true ? \"0.18.0-alpha+0eeceb5\" : undefined\n\n\t\t\t\t/**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n\t\t\t\tMatter.uses = []\n\n\t\t\t\t/**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n\t\t\t\tMatter.used = []\n\n\t\t\t\t/**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n\t\t\t\tMatter.use = function() {\n\t\t\t\t\tPlugin.use(Matter, Array.prototype.slice.call(arguments))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.before = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathBefore(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.after = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathAfter(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 23 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\n\t\t\tvar Composites = {}\n\n\t\t\tmodule.exports = Composites\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\tvar stack = Composite.create({label: \"Stack\"}),\n\t\t\t\t\t\tx = xx,\n\t\t\t\t\t\ty = yy,\n\t\t\t\t\t\tlastBody,\n\t\t\t\t\t\ti = 0\n\n\t\t\t\t\tfor(var row = 0; row < rows; row++){\n\t\t\t\t\t\tvar maxHeight = 0\n\n\t\t\t\t\t\tfor(var column = 0; column < columns; column++){\n\t\t\t\t\t\t\tvar body = callback(x, y, column, row, lastBody, i)\n\n\t\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\t\tvar bodyHeight = body.bounds.max.y - body.bounds.min.y,\n\t\t\t\t\t\t\t\t\tbodyWidth = body.bounds.max.x - body.bounds.min.x\n\n\t\t\t\t\t\t\t\tif(bodyHeight > maxHeight){\n\t\t\t\t\t\t\t\t\tmaxHeight = bodyHeight\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tBody.translate(body, {x: bodyWidth * 0.5, y: bodyHeight * 0.5})\n\n\t\t\t\t\t\t\t\tx = body.bounds.max.x + columnGap\n\n\t\t\t\t\t\t\t\tComposite.addBody(stack, body)\n\n\t\t\t\t\t\t\t\tlastBody = body\n\t\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tx += columnGap\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty += maxHeight + rowGap\n\t\t\t\t\t\tx = xx\n\t\t\t\t\t}\n\n\t\t\t\t\treturn stack\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n\t\t\t\tComposites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n\t\t\t\t\tvar bodies = composite.bodies\n\n\t\t\t\t\tfor(var i = 1; i < bodies.length; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i - 1],\n\t\t\t\t\t\t\tbodyB = bodies[i],\n\t\t\t\t\t\t\tbodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n\t\t\t\t\t\t\tbodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n\t\t\t\t\t\t\tbodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x\n\n\t\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\t\tpointA: {x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA},\n\t\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\t\tpointB: {x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar constraint = Common.extend(defaults, options)\n\n\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(constraint))\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Chain\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n\t\t\t\tComposites.mesh = function(composite, columns, rows, crossBrace, options) {\n\t\t\t\t\tvar bodies = composite.bodies,\n\t\t\t\t\t\trow,\n\t\t\t\t\t\tcol,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tbodyC\n\n\t\t\t\t\tfor(row = 0; row < rows; row++){\n\t\t\t\t\t\tfor(col = 1; col < columns; col++){\n\t\t\t\t\t\t\tbodyA = bodies[(col - 1) + (row * columns)]\n\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(row > 0){\n\t\t\t\t\t\t\tfor(col = 0; col < columns; col++){\n\t\t\t\t\t\t\t\tbodyA = bodies[col + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\n\t\t\t\t\t\t\t\tif(crossBrace && col > 0){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col - 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(crossBrace && col < columns - 1){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col + 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Mesh\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\treturn Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n\t\t\t\t\t\tvar actualRows = Math.min(rows, Math.ceil(columns / 2)),\n\t\t\t\t\t\t\tlastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0\n\n\t\t\t\t\t\tif(row > actualRows){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reverse row order\n\t\t\t\t\t\trow = actualRows - row\n\n\t\t\t\t\t\tvar start = row,\n\t\t\t\t\t\t\tend = columns - 1 - row\n\n\t\t\t\t\t\tif(column < start || column > end){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// retroactively fix the first body's position, since width was unknown\n\t\t\t\t\t\tif(i === 1){\n\t\t\t\t\t\t\tBody.translate(lastBody, {x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar xOffset = lastBody ? column * lastBodyWidth : 0\n\n\t\t\t\t\t\treturn callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t/**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n\t\t\t\tComposites.newtonsCradle = function(xx, yy, number, size, length) {\n\t\t\t\t\tvar newtonsCradle = Composite.create({label: \"Newtons Cradle\"})\n\n\t\t\t\t\tfor(var i = 0; i < number; i++){\n\t\t\t\t\t\tvar separation = 1.9,\n\t\t\t\t\t\t\tcircle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n\t\t\t\t\t\t\t\t{inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1}),\n\t\t\t\t\t\t\tconstraint = Constraint.create({pointA: {x: xx + i * (size * separation), y: yy}, bodyB: circle})\n\n\t\t\t\t\t\tComposite.addBody(newtonsCradle, circle)\n\t\t\t\t\t\tComposite.addConstraint(newtonsCradle, constraint)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newtonsCradle\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"newtonsCradle\", \"Composites.newtonsCradle ➤ moved to newtonsCradle example\")\n\n\t\t\t\t/**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n\t\t\t\tComposites.car = function(xx, yy, width, height, wheelSize) {\n\t\t\t\t\tvar group = Body.nextGroup(true),\n\t\t\t\t\t\twheelBase = 20,\n\t\t\t\t\t\twheelAOffset = -width * 0.5 + wheelBase,\n\t\t\t\t\t\twheelBOffset = width * 0.5 - wheelBase,\n\t\t\t\t\t\twheelYOffset = 0\n\n\t\t\t\t\tvar car = Composite.create({label: \"Car\"}),\n\t\t\t\t\t\tbody = Bodies.rectangle(xx, yy, width, height, {\n\t\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchamfer: {\n\t\t\t\t\t\t\t\tradius: height * 0.5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdensity: 0.0002\n\t\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelA = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelAOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelA,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelB = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelBOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelB,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tComposite.addBody(car, body)\n\t\t\t\t\tComposite.addBody(car, wheelA)\n\t\t\t\t\tComposite.addBody(car, wheelB)\n\t\t\t\t\tComposite.addConstraint(car, axelA)\n\t\t\t\t\tComposite.addConstraint(car, axelB)\n\n\t\t\t\t\treturn car\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"car\", \"Composites.car ➤ moved to car example\")\n\n\t\t\t\t/**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n\t\t\t\tComposites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n\t\t\t\t\tparticleOptions = Common.extend({inertia: Infinity}, particleOptions)\n\t\t\t\t\tconstraintOptions = Common.extend({stiffness: 0.2, render: {type: \"line\", anchors: false}}, constraintOptions)\n\n\t\t\t\t\tvar softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n\t\t\t\t\t\treturn Bodies.circle(x, y, particleRadius, particleOptions)\n\t\t\t\t\t})\n\n\t\t\t\t\tComposites.mesh(softBody, columns, rows, crossBrace, constraintOptions)\n\n\t\t\t\t\tsoftBody.label = \"Soft Body\"\n\n\t\t\t\t\treturn softBody\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"softBody\", \"Composites.softBody ➤ moved to softBody and cloth examples\")\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 24 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\n\t\t\tvar Grid = {}\n\n\t\t\tmodule.exports = Grid\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n\t\t\t\tGrid.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbuckets: {},\n\t\t\t\t\t\tpairs: {},\n\t\t\t\t\t\tpairsList: [],\n\t\t\t\t\t\tbucketWidth: 48,\n\t\t\t\t\t\tbucketHeight: 48\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n\t\t\t\tGrid.update = function(grid, bodies, engine, forceUpdate) {\n\t\t\t\t\tvar i, col, row,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbuckets = grid.buckets,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketId,\n\t\t\t\t\t\tgridChanged = false\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isSleeping && !forceUpdate){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// temporary back compatibility bounds check\n\t\t\t\t\t\tif(world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar newRegion = Grid._getRegion(grid, body)\n\n\t\t\t\t\t\t// if the body has changed grid region\n\t\t\t\t\t\tif(!body.region || newRegion.id !== body.region.id || forceUpdate){\n\n\t\t\t\t\t\t\tif(!body.region || forceUpdate){\n\t\t\t\t\t\t\t\tbody.region = newRegion\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar union = Grid._regionUnion(newRegion, body.region)\n\n\t\t\t\t\t\t\t// update grid buckets affected by region change\n\t\t\t\t\t\t\t// iterate over the union of both regions\n\t\t\t\t\t\t\tfor(col = union.startCol; col <= union.endCol; col++){\n\t\t\t\t\t\t\t\tfor(row = union.startRow; row <= union.endRow; row++){\n\t\t\t\t\t\t\t\t\tbucketId = Grid._getBucketId(col, row)\n\t\t\t\t\t\t\t\t\tbucket = buckets[bucketId]\n\n\t\t\t\t\t\t\t\t\tvar isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow)\n\n\t\t\t\t\t\t\t\t\tvar isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow)\n\n\t\t\t\t\t\t\t\t\t// remove from old region buckets\n\t\t\t\t\t\t\t\t\tif(!isInsideNewRegion && isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\tif(isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\t\tif(bucket){\n\t\t\t\t\t\t\t\t\t\t\t\tGrid._bucketRemoveBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// add to new region buckets\n\t\t\t\t\t\t\t\t\tif(body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate){\n\t\t\t\t\t\t\t\t\t\tif(!bucket){\n\t\t\t\t\t\t\t\t\t\t\tbucket = Grid._createBucket(buckets, bucketId)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tGrid._bucketAddBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set the new region\n\t\t\t\t\t\t\tbody.region = newRegion\n\n\t\t\t\t\t\t\t// flag changes so we can update pairs\n\t\t\t\t\t\t\tgridChanged = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// update pairs list only if pairs changed (i.e. a body changed region)\n\t\t\t\t\tif(gridChanged){\n\t\t\t\t\t\tgrid.pairsList = Grid._createActivePairsList(grid)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"update\", \"Grid.update ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n\t\t\t\tGrid.clear = function(grid) {\n\t\t\t\t\tgrid.buckets = {}\n\t\t\t\t\tgrid.pairs = {}\n\t\t\t\t\tgrid.pairsList = []\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"clear\", \"Grid.clear ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n\t\t\t\tGrid._regionUnion = function(regionA, regionB) {\n\t\t\t\t\tvar startCol = Math.min(regionA.startCol, regionB.startCol),\n\t\t\t\t\t\tendCol = Math.max(regionA.endCol, regionB.endCol),\n\t\t\t\t\t\tstartRow = Math.min(regionA.startRow, regionB.startRow),\n\t\t\t\t\t\tendRow = Math.max(regionA.endRow, regionB.endRow)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n\t\t\t\tGrid._getRegion = function(grid, body) {\n\t\t\t\t\tvar bounds = body.bounds,\n\t\t\t\t\t\tstartCol = Math.floor(bounds.min.x / grid.bucketWidth),\n\t\t\t\t\t\tendCol = Math.floor(bounds.max.x / grid.bucketWidth),\n\t\t\t\t\t\tstartRow = Math.floor(bounds.min.y / grid.bucketHeight),\n\t\t\t\t\t\tendRow = Math.floor(bounds.max.y / grid.bucketHeight)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n\t\t\t\tGrid._createRegion = function(startCol, endCol, startRow, endRow) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: startCol + \",\" + endCol + \",\" + startRow + \",\" + endRow,\n\t\t\t\t\t\tstartCol: startCol,\n\t\t\t\t\t\tendCol: endCol,\n\t\t\t\t\t\tstartRow: startRow,\n\t\t\t\t\t\tendRow: endRow\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n\t\t\t\tGrid._getBucketId = function(column, row) {\n\t\t\t\t\treturn \"C\" + column + \"R\" + row\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n\t\t\t\tGrid._createBucket = function(buckets, bucketId) {\n\t\t\t\t\tvar bucket = buckets[bucketId] = []\n\t\t\t\t\treturn bucket\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketAddBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\tbucketLength = bucket.length,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// add new pairs\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\tvar bodyB = bucket[i]\n\n\t\t\t\t\t\tif(body.id === bodyB.id || (body.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for Grid.update to work\n\t\t\t\t\t\tvar id = pairId(body, bodyB),\n\t\t\t\t\t\t\tpair = gridPairs[id]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] += 1\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgridPairs[id] = [body, bodyB, 1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to bodies (after pairs, otherwise pairs with self)\n\t\t\t\t\tbucket.push(body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketRemoveBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// remove from bucket\n\t\t\t\t\tbucket.splice(Common.indexOf(bucket, body), 1)\n\n\t\t\t\t\tvar bucketLength = bucket.length\n\n\t\t\t\t\t// update pair counts\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for _createActivePairsList to work\n\t\t\t\t\t\tvar pair = gridPairs[pairId(body, bucket[i])]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n\t\t\t\tGrid._createActivePairsList = function(grid) {\n\t\t\t\t\tvar pair,\n\t\t\t\t\t\tgridPairs = grid.pairs,\n\t\t\t\t\t\tpairKeys = Common.keys(gridPairs),\n\t\t\t\t\t\tpairKeysLength = pairKeys.length,\n\t\t\t\t\t\tpairs = [],\n\t\t\t\t\t\tk\n\n\t\t\t\t\t// iterate over grid.pairs\n\t\t\t\t\tfor(k = 0; k < pairKeysLength; k++){\n\t\t\t\t\t\tpair = gridPairs[pairKeys[k]]\n\n\t\t\t\t\t\t// if pair exists in at least one bucket\n\t\t\t\t\t\t// it is a pair that needs further collision testing so push it\n\t\t\t\t\t\tif(pair[2] > 0){\n\t\t\t\t\t\t\tpairs.push(pair)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete gridPairs[pairKeys[k]]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 25 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\n\t\t\tvar MouseConstraint = {}\n\n\t\t\tmodule.exports = MouseConstraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Mouse = __webpack_require__(13)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n\t\t\t\tMouseConstraint.create = function(engine, options) {\n\t\t\t\t\tvar mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null)\n\n\t\t\t\t\tif(!mouse){\n\t\t\t\t\t\tif(engine && engine.render && engine.render.canvas){\n\t\t\t\t\t\t\tmouse = Mouse.create(engine.render.canvas)\n\t\t\t\t\t\t} else if(options && options.element){\n\t\t\t\t\t\t\tmouse = Mouse.create(options.element)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse = Mouse.create()\n\t\t\t\t\t\t\tCommon.warn(\"MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraint = Constraint.create({\n\t\t\t\t\t\tlabel: \"Mouse Constraint\",\n\t\t\t\t\t\tpointA: mouse.position,\n\t\t\t\t\t\tpointB: {x: 0, y: 0},\n\t\t\t\t\t\tlength: 0.01,\n\t\t\t\t\t\tstiffness: 0.1,\n\t\t\t\t\t\tangularStiffness: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tstrokeStyle: \"#90EE90\",\n\t\t\t\t\t\t\tlineWidth: 3\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\ttype: \"mouseConstraint\",\n\t\t\t\t\t\tmouse: mouse,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tbody: null,\n\t\t\t\t\t\tconstraint: constraint,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mouseConstraint = Common.extend(defaults, options)\n\n\t\t\t\t\tEvents.on(engine, \"beforeUpdate\", function() {\n\t\t\t\t\t\tvar allBodies = Composite.allBodies(engine.world)\n\t\t\t\t\t\tMouseConstraint.update(mouseConstraint, allBodies)\n\t\t\t\t\t\tMouseConstraint._triggerEvents(mouseConstraint)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn mouseConstraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n\t\t\t\tMouseConstraint.update = function(mouseConstraint, bodies) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tconstraint = mouseConstraint.constraint,\n\t\t\t\t\t\tbody = mouseConstraint.body\n\n\t\t\t\t\tif(mouse.button === 0){\n\t\t\t\t\t\tif(!constraint.bodyB){\n\t\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\t\t\tif(Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)){\n\t\t\t\t\t\t\t\t\tfor(var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\t\t\tif(Vertices.contains(part.vertices, mouse.position)){\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = body\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointB = {x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y}\n\t\t\t\t\t\t\t\t\t\t\tconstraint.angleB = body.angle\n\n\t\t\t\t\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"startdrag\", {mouse: mouse, body: body})\n\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSleeping.set(constraint.bodyB, false)\n\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = null\n\t\t\t\t\t\tconstraint.pointB = null\n\n\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"enddrag\", {mouse: mouse, body: body})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n\t\t\t\tMouseConstraint._triggerEvents = function(mouseConstraint) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tmouseEvents = mouse.sourceEvents\n\n\t\t\t\t\tif(mouseEvents.mousemove){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousemove\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mousedown){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousedown\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mouseup){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mouseup\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset the mouse state ready for the next step\n\t\t\t\t\tMouse.clearSourceEvents(mouse)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n\t\t\t\t/**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 26 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\n\t\t\tvar Query = {}\n\n\t\t\tmodule.exports = Query\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar Vertices = __webpack_require__(3);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.collides = function(body, bodies) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tbounds = body.bounds,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\toverlaps = Bounds.overlaps\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsAStart = partsALength === 1 ? 0 : 1\n\n\t\t\t\t\t\tif(overlaps(bodyA.bounds, bounds)){\n\t\t\t\t\t\t\tfor(var j = partsAStart; j < partsALength; j++){\n\t\t\t\t\t\t\t\tvar part = bodyA.parts[j]\n\n\t\t\t\t\t\t\t\tif(overlaps(part.bounds, bounds)){\n\t\t\t\t\t\t\t\t\tvar collision = collides(part, body)\n\n\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.ray = function(bodies, startPoint, endPoint, rayWidth) {\n\t\t\t\t\trayWidth = rayWidth || 1e-100\n\n\t\t\t\t\tvar rayAngle = Vector.angle(startPoint, endPoint),\n\t\t\t\t\t\trayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n\t\t\t\t\t\trayX = (endPoint.x + startPoint.x) * 0.5,\n\t\t\t\t\t\trayY = (endPoint.y + startPoint.y) * 0.5,\n\t\t\t\t\t\tray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {angle: rayAngle}),\n\t\t\t\t\t\tcollisions = Query.collides(ray, bodies)\n\n\t\t\t\t\tfor(var i = 0; i < collisions.length; i += 1){\n\t\t\t\t\t\tvar collision = collisions[i]\n\t\t\t\t\t\tcollision.body = collision.bodyB = collision.bodyA\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.region = function(bodies, bounds, outside) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\toverlaps = Bounds.overlaps(body.bounds, bounds)\n\t\t\t\t\t\tif((overlaps && !outside) || (!overlaps && outside)){\n\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.point = function(bodies, point) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(Bounds.contains(body.bounds, point)){\n\t\t\t\t\t\t\tfor(var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)){\n\t\t\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 27 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\n\t\t\tvar Runner = {}\n\n\t\t\tmodule.exports = Runner\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Engine = __webpack_require__(18)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tif(!_requestAnimationFrame){\n\t\t\t\t\tvar _frameTimeout\n\n\t\t\t\t\t_requestAnimationFrame = function(callback) {\n\t\t\t\t\t\t_frameTimeout = setTimeout(function() {\n\t\t\t\t\t\t\tcallback(Common.now())\n\t\t\t\t\t\t}, 1000 / 60)\n\t\t\t\t\t}\n\n\t\t\t\t\t_cancelAnimationFrame = function() {\n\t\t\t\t\t\tclearTimeout(_frameTimeout)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n\t\t\t\tRunner.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tfps: 60,\n\t\t\t\t\t\tcorrection: 1,\n\t\t\t\t\t\tdeltaSampleSize: 60,\n\t\t\t\t\t\tcounterTimestamp: 0,\n\t\t\t\t\t\tframeCounter: 0,\n\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\ttimePrev: null,\n\t\t\t\t\t\ttimeScalePrev: 1,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\tisFixed: false,\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\n\t\t\t\t\tvar runner = Common.extend(defaults, options)\n\n\t\t\t\t\trunner.delta = runner.delta || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMin = runner.deltaMin || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5)\n\t\t\t\t\trunner.fps = 1000 / runner.delta\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.run = function(runner, engine) {\n\t\t\t\t\t// create runner if engine is first argument\n\t\t\t\t\tif(typeof runner.positionIterations !== \"undefined\"){\n\t\t\t\t\t\tengine = runner\n\t\t\t\t\t\trunner = Runner.create()\n\t\t\t\t\t}\n\n\t\t\t\t\t(function render(time) {\n\t\t\t\t\t\trunner.frameRequestId = _requestAnimationFrame(render)\n\n\t\t\t\t\t\tif(time && runner.enabled){\n\t\t\t\t\t\t\tRunner.tick(runner, engine, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n\t\t\t\tRunner.tick = function(runner, engine, time) {\n\t\t\t\t\tvar timing = engine.timing,\n\t\t\t\t\t\tcorrection = 1,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"beforeTick\", event)\n\n\t\t\t\t\tif(runner.isFixed){\n\t\t\t\t\t\t// fixed timestep\n\t\t\t\t\t\tdelta = runner.delta\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// dynamic timestep based on wall clock between calls\n\t\t\t\t\t\tdelta = (time - runner.timePrev) || runner.delta\n\t\t\t\t\t\trunner.timePrev = time\n\n\t\t\t\t\t\t// optimistically filter delta over a few frames, to improve stability\n\t\t\t\t\t\trunner.deltaHistory.push(delta)\n\t\t\t\t\t\trunner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize)\n\t\t\t\t\t\tdelta = Math.min.apply(null, runner.deltaHistory)\n\n\t\t\t\t\t\t// limit delta\n\t\t\t\t\t\tdelta = delta < runner.deltaMin ? runner.deltaMin : delta\n\t\t\t\t\t\tdelta = delta > runner.deltaMax ? runner.deltaMax : delta\n\n\t\t\t\t\t\t// correction for delta\n\t\t\t\t\t\tcorrection = delta / runner.delta\n\n\t\t\t\t\t\t// update engine timing object\n\t\t\t\t\t\trunner.delta = delta\n\t\t\t\t\t}\n\n\t\t\t\t\t// time correction for time scaling\n\t\t\t\t\tif(runner.timeScalePrev !== 0){\n\t\t\t\t\t\tcorrection *= timing.timeScale / runner.timeScalePrev\n\t\t\t\t\t}\n\n\t\t\t\t\tif(timing.timeScale === 0){\n\t\t\t\t\t\tcorrection = 0\n\t\t\t\t\t}\n\n\t\t\t\t\trunner.timeScalePrev = timing.timeScale\n\t\t\t\t\trunner.correction = correction\n\n\t\t\t\t\t// fps counter\n\t\t\t\t\trunner.frameCounter += 1\n\t\t\t\t\tif(time - runner.counterTimestamp >= 1000){\n\t\t\t\t\t\trunner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000)\n\t\t\t\t\t\trunner.counterTimestamp = time\n\t\t\t\t\t\trunner.frameCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"tick\", event)\n\n\t\t\t\t\t// update\n\t\t\t\t\tEvents.trigger(runner, \"beforeUpdate\", event)\n\t\t\t\t\tEngine.update(engine, delta, correction)\n\t\t\t\t\tEvents.trigger(runner, \"afterUpdate\", event)\n\n\t\t\t\t\tEvents.trigger(runner, \"afterTick\", event)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n\t\t\t\tRunner.stop = function(runner) {\n\t\t\t\t\t_cancelAnimationFrame(runner.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.start = function(runner, engine) {\n\t\t\t\t\tRunner.run(runner, engine)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 28 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\n\t\t\tvar SAT = {}\n\n\t\t\tmodule.exports = SAT\n\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n\t\t\t\tSAT.collides = function(bodyA, bodyB) {\n\t\t\t\t\treturn Collision.collides(bodyA, bodyB)\n\t\t\t\t}\n\n\t\t\t\tdeprecated(SAT, \"collides\", \"SAT.collides ➤ replaced by Collision.collides\")\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 29 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\n\t\t\tvar Svg = {}\n\n\t\t\tmodule.exports = Svg\n\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n\t\t\t\tSvg.pathToVertices = function(path, sampleLength) {\n\t\t\t\t\tif(typeof window !== \"undefined\" && !(\"SVGPathSeg\" in window)){\n\t\t\t\t\t\tCommon.warn(\"Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.\")\n\t\t\t\t\t}\n\n\t\t\t\t\t// https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n\t\t\t\t\tvar i, il, total, point, segment, segments,\n\t\t\t\t\t\tsegmentsQueue, lastSegment,\n\t\t\t\t\t\tlastPoint, segmentIndex, points = [],\n\t\t\t\t\t\tlx, ly, length = 0, x = 0, y = 0\n\n\t\t\t\t\tsampleLength = sampleLength || 15\n\n\t\t\t\t\tvar addPoint = function(px, py, pathSegType) {\n\t\t\t\t\t\t// all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n\t\t\t\t\t\tvar isRelative = pathSegType % 2 === 1 && pathSegType > 1\n\n\t\t\t\t\t\t// when the last point doesn't equal the current point add the current point\n\t\t\t\t\t\tif(!lastPoint || px != lastPoint.x || py != lastPoint.y){\n\t\t\t\t\t\t\tif(lastPoint && isRelative){\n\t\t\t\t\t\t\t\tlx = lastPoint.x\n\t\t\t\t\t\t\t\tly = lastPoint.y\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlx = 0\n\t\t\t\t\t\t\t\tly = 0\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar point = {\n\t\t\t\t\t\t\t\tx: lx + px,\n\t\t\t\t\t\t\t\ty: ly + py\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set last point\n\t\t\t\t\t\t\tif(isRelative || !lastPoint){\n\t\t\t\t\t\t\t\tlastPoint = point\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpoints.push(point)\n\n\t\t\t\t\t\t\tx = lx + px\n\t\t\t\t\t\t\ty = ly + py\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar addSegmentPoint = function(segment) {\n\t\t\t\t\t\tvar segType = segment.pathSegTypeAsLetter.toUpperCase()\n\n\t\t\t\t\t\t// skip path ends\n\t\t\t\t\t\tif(segType === \"Z\"){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// map segment to x and y\n\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\tcase \"M\":\n\t\t\t\t\t\t\tcase \"L\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddPoint(x, y, segment.pathSegType)\n\t\t\t\t\t}\n\n\t\t\t\t\t// ensure path is absolute\n\t\t\t\t\tSvg._svgPathToAbsolute(path)\n\n\t\t\t\t\t// get total length\n\t\t\t\t\ttotal = path.getTotalLength()\n\n\t\t\t\t\t// queue segments\n\t\t\t\t\tsegments = []\n\t\t\t\t\tfor(i = 0; i < path.pathSegList.numberOfItems; i += 1){\n\t\t\t\t\t\tsegments.push(path.pathSegList.getItem(i))\n\t\t\t\t\t}\n\n\t\t\t\t\tsegmentsQueue = segments.concat()\n\n\t\t\t\t\t// sample through path\n\t\t\t\t\twhile(length < total){\n\t\t\t\t\t\t// get segment at position\n\t\t\t\t\t\tsegmentIndex = path.getPathSegAtLength(length)\n\t\t\t\t\t\tsegment = segments[segmentIndex]\n\n\t\t\t\t\t\t// new segment\n\t\t\t\t\t\tif(segment != lastSegment){\n\t\t\t\t\t\t\twhile(segmentsQueue.length && segmentsQueue[0] != segment){\n\t\t\t\t\t\t\t\taddSegmentPoint(segmentsQueue.shift())\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlastSegment = segment\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add points in between when curving\n\t\t\t\t\t\t// TUDDO: adaptive sampling\n\t\t\t\t\t\tswitch(segment.pathSegTypeAsLetter.toUpperCase()){\n\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\tcase \"A\":\n\t\t\t\t\t\t\t\tpoint = path.getPointAtLength(length)\n\t\t\t\t\t\t\t\taddPoint(point.x, point.y, 0)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// increment by sample value\n\t\t\t\t\t\tlength += sampleLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// add remaining segments not passed by sampling\n\t\t\t\t\tfor(i = 0, il = segmentsQueue.length; i < il; ++i){\n\t\t\t\t\t\taddSegmentPoint(segmentsQueue[i])\n\t\t\t\t\t}\n\n\t\t\t\t\treturn points\n\t\t\t\t}\n\n\t\t\t\tSvg._svgPathToAbsolute = function(path) {\n\t\t\t\t\t// http://phrogz.net/convert-svg-path-to-all-absolute-commands\n\t\t\t\t\t// Copyright (c) Gavin Kistner\n\t\t\t\t\t// http://phrogz.net/js/_ReuseLicense.txt\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n\t\t\t\t\t\tx = 0, y = 0, len = segs.numberOfItems\n\n\t\t\t\t\tfor(var i = 0; i < len; ++i){\n\t\t\t\t\t\tvar seg = segs.getItem(i),\n\t\t\t\t\t\t\tsegType = seg.pathSegTypeAsLetter\n\n\t\t\t\t\t\tif(/[MLHVCSQTA]/.test(segType)){\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx = seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty = seg.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(\"x1\" in seg){\n\t\t\t\t\t\t\t\tx1 = x + seg.x1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x2\" in seg){\n\t\t\t\t\t\t\t\tx2 = x + seg.x2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y1\" in seg){\n\t\t\t\t\t\t\t\ty1 = y + seg.y1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y2\" in seg){\n\t\t\t\t\t\t\t\ty2 = y + seg.y2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx += seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty += seg.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\t\tcase \"m\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"l\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"h\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"v\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"c\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"s\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"q\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"t\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"a\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"z\":\n\t\t\t\t\t\t\t\tcase \"Z\":\n\t\t\t\t\t\t\t\t\tx = x0\n\t\t\t\t\t\t\t\t\ty = y0\n\t\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(segType == \"M\" || segType == \"m\"){\n\t\t\t\t\t\t\tx0 = x\n\t\t\t\t\t\t\ty0 = y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 30 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\n\t\t\tvar World = {}\n\n\t\t\tmodule.exports = World\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * See above, aliases for back compatibility only\n     */\n\t\t\t\tWorld.create = Composite.create\n\t\t\t\tWorld.add = Composite.add\n\t\t\t\tWorld.remove = Composite.remove\n\t\t\t\tWorld.clear = Composite.clear\n\t\t\t\tWorld.addComposite = Composite.addComposite\n\t\t\t\tWorld.addBody = Composite.addBody\n\t\t\t\tWorld.addConstraint = Composite.addConstraint\n\n\t\t\t})()\n\n\n\t\t\t/***/ })\n\t\t/** ****/ ])\n})","import {rgbNumberToColorString} from \"common/color_utils\"\nimport {makeSlider} from \"common/slider/slider\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./bottom_bar.module.scss\"\n\ninterface Props {\n\treadonly initialSpeed: number\n\tcolors: readonly number[]\n\tonSpeedChange(newSpeedValue: number): void\n}\n\ninterface BottomBar {\n\troot: HTMLElement\n\tonStatsUpdate(newStats: ReadonlyMap<number, number>): void\n}\n\nexport const makeBottomBar = (props: Props): BottomBar => {\n\tconst bar = tag({class: css.bottomBar})\n\n\tconst slider = makeSlider({\n\t\tmin: 0,\n\t\tmax: 25,\n\t\tstartValue: props.initialSpeed,\n\t\tonChange: props.onSpeedChange,\n\t\tstep: 1\n\t})\n\tbar.appendChild(slider)\n\n\tconst statEls = new Map<number, HTMLElement>()\n\tconst statsContainer = tag({class: css.statsContainer})\n\tbar.appendChild(statsContainer)\n\tfunction onStatsUpdate(stats: ReadonlyMap<number, number>): void {\n\t\tfor(const [color, value] of stats){\n\t\t\tlet statEl = statEls.get(color)\n\t\t\tif(!statEl){\n\t\t\t\tstatEl = tag({\n\t\t\t\t\tclass: css.statEl,\n\t\t\t\t\tstyle: {color: rgbNumberToColorString(props.colors[color] ?? 0)}\n\t\t\t\t})\n\t\t\t\tstatsContainer.appendChild(statEl)\n\t\t\t\tstatEls.set(color, statEl)\n\t\t\t}\n\t\t\tstatEl.textContent = value + \"\"\n\t\t}\n\t}\n\n\n\treturn {root: bar, onStatsUpdate}\n}","import {addCursorMoveHandler, pointerEventsToClientCoords} from \"common/input_utils\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./slider.module.scss\"\n\ninterface Props {\n\treadonly min: number\n\treadonly max: number\n\treadonly step?: number\n\treadonly startValue: number\n\tonChange(newValue: number): void\n}\n\nexport const makeSlider = (props: Props): HTMLElement => {\n\tconst root = tag({class: css.slider})\n\tconst handle = tag({class: css.handle})\n\troot.appendChild(handle)\n\tlet value = Number.NaN\n\n\tfunction setValue(newValue: number): void {\n\t\tif(newValue === value){\n\t\t\treturn\n\t\t}\n\n\t\tvalue = Math.min(props.max, Math.max(props.min, newValue))\n\t\thandle.style.left = (((value - props.min) / (props.max - props.min)) * 100) + \"%\"\n\t}\n\n\tfunction setValueByEvent(e: MouseEvent | TouchEvent): void {\n\t\tconst coords = pointerEventsToClientCoords(e)\n\t\tconst rootRect = root.getBoundingClientRect()\n\n\t\tconst progress = (coords.x - rootRect.left) / rootRect.width\n\t\tlet newValue = (progress * (props.max - props.min)) + props.min\n\t\tif(props.step){\n\t\t\tnewValue = Math.round(newValue / props.step) * props.step\n\t\t}\n\n\t\tsetValue(newValue)\n\t\tprops.onChange(value)\n\t}\n\n\tsetValue(props.startValue)\n\n\taddCursorMoveHandler({\n\t\telement: handle,\n\t\tonMove: setValueByEvent\n\t})\n\n\tconst onSliderBodyClick = (e: MouseEvent | TouchEvent) => {\n\t\tif(e.target === handle){\n\t\t\treturn\n\t\t}\n\n\t\tsetValueByEvent(e)\n\t}\n\n\troot.addEventListener(\"click\", onSliderBodyClick)\n\n\treturn root\n}","export function pointerEventsToClientCoords(e: MouseEvent | TouchEvent): {x: number, y: number} {\n\tif(isTouchEvent(e)){\n\t\tconst touch = e.touches[0]!\n\t\treturn {\n\t\t\tx: touch.clientX,\n\t\t\ty: touch.clientY\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t}\n}\n\nexport function pointerEventsToOffsetCoords(e: MouseEvent | TouchEvent): {x: number, y: number} | null {\n\tif(!(e.target instanceof HTMLElement)){\n\t\treturn null\n\t}\n\n\tconst rect = e.target.getBoundingClientRect() // performance may suck, but whatever\n\tconst coords = pointerEventsToClientCoords(e)\n\tcoords.x -= rect.left\n\tcoords.y -= rect.top\n\treturn coords\n}\n\nexport function isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n\treturn !!(e as TouchEvent).touches\n}\n\ntype CursorMoveHandlerParams = {\n\treadonly element: HTMLElement\n\tonMove(e: MouseEvent | TouchEvent): void\n\t/** If true, onMove will be invoked when down event happen */\n\treadonly downIsMove?: boolean\n\t/** If true, onMove will be invoked when up event happen */\n\treadonly upIsMove?: boolean\n}\n\n/** This is a good way to add a mousemove handler to an element */\nexport function addCursorMoveHandler(params: CursorMoveHandlerParams): void {\n\n\tconst onDown = (e: MouseEvent | TouchEvent) => {\n\t\twindow.addEventListener(\"mousemove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"touchmove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"mouseup\", onUp, {passive: true})\n\t\twindow.addEventListener(\"touchend\", onUp, {passive: true})\n\t\tif(params.downIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tconst onUp = (e: MouseEvent | TouchEvent) => {\n\t\twindow.removeEventListener(\"mousemove\", params.onMove)\n\t\twindow.removeEventListener(\"touchmove\", params.onMove)\n\t\twindow.removeEventListener(\"mouseup\", onUp)\n\t\twindow.removeEventListener(\"touchend\", onUp)\n\t\tif(params.upIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tparams.element.addEventListener(\"mousedown\", onDown, {passive: true})\n\tparams.element.addEventListener(\"touchstart\", onDown, {passive: true})\n}\n\nexport function preventContextMenu(el: HTMLElement): void {\n\tel.addEventListener(\"contextmenu\", e => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\treturn false\n\t})\n}","@import \"/src/website/style/vars\";\n\n.slider {\n\tposition: relative;\n\tmin-width: 15rem;\n\tmin-height: 1.25em;\n\tbackground-color: rgba(128, 128, 128, 0.5);\n\tborder: 3px solid $font-color;\n\tborder-radius: 3px;\n\toverflow: hidden;\n}\n\n.handle {\n\tbox-sizing: border-box;\n\twidth: 1rem;\n\tcursor: pointer;\n\tborder: 3px solid $font-color;\n\tborder-top-width: 0;\n\tborder-bottom-width: 0;\n\tbackground-color: $foreground-secondary-color;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\ttransform: translateX(-50%);\n}","@import \"/src/website/style/vars\";\n\n.bottomBar {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tcolumn-gap: 2rem;\n\trow-gap: 0.5rem;\n\tpadding: 0.5rem;\n\talign-items: center;\n\tbackground-color: $foreground-secondary-color;\n\talign-self: stretch;\n}\n\n.statsContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1rem;\n\tfont-weight: bold;\n\theight: 1.25em;\n}\n\n.statEl {\n\twidth: 3rem;\n\toverflow: hidden;\n}"],"names":["$efatB","parcelRequire","$068d9bf68df70b01$var$blockColors","$068d9bf68df70b01$var$ballColors","map","color","hsl","colorNumberTo3Components","rgbToHsl","Math","min","hslToRgb","color3ComponentsToNumber","$068d9bf68df70b01$export$f22da7240b7add18","container","wrap","document","createElement","style","cssText","appendChild","bottomBar","$cdEIV","makeBottomBar","initialSpeed","colors","onSpeedChange","speed","blockbreaker","setTicksPerFrame","onStatsUpdate","Map","Array","fill","_","i","root","rect","getBoundingClientRect","bottomBarHeight","height","width","screenSpacePx","blockSizePx","floor","sqrt","$068d9bf68df70b01$var$ZenBlockbreaker","ticksPerFrame","ballSpeed","onStatsChange","stats","before","run","$068d9bf68df70b01$var$matterMul","constructor","params","this","$aCP3q","tag","matter","$7ugw8","Engine","create","gravity","x","y","enableSleeping","makeWalls","makeBlocks","makeBalls","render","Render","element","engine","options","wireframes","lookAt","max","Events","on","e","pair","pairs","processCollision","cx","cy","bx","by","part","atan2","PI","sideCount","makeBlock","partSector","angle","sin","cos","distanceToHWall","abs","distanceToWWall","distanceToWall","distanceToBall","makeBall","collision","ballAndColor","getBallFromCollision","ball","ballColor","velocityAngle","velocity","setBallSpeed","blockAndColor","getBlockFromCollision","block","blockColor","setBlockColor","Body","setVelocity","Bodies","rectangle","isStatic","isSleeping","fillStyle","plugin","restitution","label","collisionFilter","group","category","mask","Composite","add","world","oldColor","newColor","set","get","rgbNumberToColorString","getBlockColor","bodyA","bodyB","circle","friction","frictionAir","frictionStatic","random","getBallColor","body","wallProps","wallThickness","stop","$5DUDw","cycledRequestAnimationFrame","delta","update","$fa4a5aa5cdd6ce8e$var$twoHex","toString","$fa4a5aa5cdd6ce8e$export$fdc9c29511f1a926","$fa4a5aa5cdd6ce8e$export$79db3ad3d560d193","components","r","g","b","$fa4a5aa5cdd6ce8e$export$c85ca4f4753af384","cmin","cmax","h","s","l","round","toFixed","$fa4a5aa5cdd6ce8e$export$29fb7152bd3f781a","q","p","$fa4a5aa5cdd6ce8e$var$hueToRgb","t","$fa4a5aa5cdd6ce8e$export$c5ea230d2f55d434","rgb","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","onStop","stopped","prevCallTime","wrappedHandler","time","isConnected","requestAnimationFrame","$hIDiW","$4c0fbf616468c6ce$var$resolveArgs","a","isArray","$hsvBG","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","text","getBinder","watch","textContent","unbox","evtName","addEventListener","passive","capture","k","attrs","v","removeAttribute","setAttribute","vv","setChildren","childTags","filter","parent","newChildren","length","childTag","childNodes","insertBefore","remove","$4c0fbf616468c6ce$var$updateChildren","class","$jM5hi","makeClassname","classname","classList","value","$4c0fbf616468c6ce$export$2b067c6666111485","tagName","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","result","push","classname1","join","factory","module","exports","modules","installedModules","__webpack_require__","moduleId","module1","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","Symbol","toStringTag","mode","__esModule","ns","bind","n","object","property","prototype","hasOwnProperty","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","deepClone","arguments","source","prop","clone","keys","values","path","begin","end","split","slice","val","shuffle","array","j","temp","choose","choices","isElement","HTMLElement","nodeType","nodeName","isFunction","isPlainObject","isString","clamp","sign","now","window","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","concat","info","warn","warnOnce","message","deprecated","warning","chain","nextId","indexOf","haystack","needle","list","func","mapped","topologicalSort","graph","visited","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","$parcel$global","Bounds","vertices","bounds","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","position","deltaX","deltaY","Vector","magnitude","magnitudeSquared","rotate","output","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","_temp","Vertices","points","index","isInternal","fromPath","match","parseFloat","centre","area","mean","average","signed","inertia","mass","numerator","denominator","verticesLength","translateX","translateY","dx","dy","pointX","pointY","nextVertex","scale","scaleX","scaleY","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","clockwiseSort","sort","vertexA","vertexB","isConvex","z","flag","hull","upper","lower","pop","eventNames","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","id","type","isModified","bodies","constraints","composites","cache","allBodies","allConstraints","allComposites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","sleepCounter","removeConstraintAt","clear","keepStatic","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","angularSpeed","angularVelocity","isSensor","motion","sleepThreshold","density","slop","timeScale","visible","opacity","strokeStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setAngularVelocity","setParts","setCentre","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","afterCollisions","isActive","sleepingBody","movingBody","wasSleeping","Collision","_supports","_overlapAB","_overlapBA","Pair","overlap","axis","collided","parentA","parentB","depth","normal","tangent","penetration","supports","collides","_overlapAxes","minOverlap","table","minAxis","minAxisX","minAxisY","supportsB","_findSupports","supportCount","supportsA","verticesA","verticesB","overlapAB","overlapBA","verticesALength","verticesBLength","verticesAX","verticesAY","verticesBX","verticesBY","axesLength","overlapMin","Number","MAX_VALUE","overlapAxisNumber","axisX","axisY","minA","minB","maxA","maxB","_projectToAxis","projection","direction","vertexC","distance","bodyAPositionX","bodyAPositionY","normalX","normalY","nearestDistance","Contact","timestamp","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","parentAVerticesLength","support","contactId","contact","setActive","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","gradient","xx","trapezoid","slope","verticesPath","x1","x2","x3","maxSides","sides","ceil","polygon","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","partA","partB","pav","pbv","da","db","Mouse","mouse","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","preventDefault","detail","setElement","clearSourceEvents","setOffset","setScale","elementBounds","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","Detector","setBodies","detector","collisions","bodiesLength","canCollide","_compareBoundsX","boundXMax","boundYMax","boundYMin","bodyAStatic","partsALength","partsASingle","partsBLength","partsBStart","filterA","filterB","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","test","pattern","exec","major","minor","patch","isRange","operator","prerelease","_requestAnimationFrame","_cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","canvas","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","showSleeping","showDebug","showStats","showPerformance","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","controller","showBroadphase","setPixelRatio","loop","_updateTiming","_getPixelRatio","padding","center","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","startTime","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","sections","Part","Cons","Comp","font","textBaseline","textAlign","section","fillText","lastEngineDelta","lastDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","rateMean","fps","gap","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","start","arc","closePath","coils","globalAlpha","texture","_getTexture","drawImage","normalPosX","normalPosY","inspector","selected","data","setLineDash","selectStart","selectBounds","unshift","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","normalImpulse","tangentImpulse","Resolver","Pairs","positionIterations","velocityIterations","constraintIterations","grid","buckets","broadphase","metrics","_bodiesApplyGravity","_bodiesUpdate","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","activeCount","pairsLength","contactShare","positionDampen","positionWarming","verticesTranslate","boundsUpdate","positionImpulseX","positionImpulseY","contactsLength","contactVertex","impulseX","impulseY","maxFriction","timeScaleSquared","restingThresh","frictionNormalMultiplier","restingThreshTangent","NumberMaxValue","bodyAVelocity","bodyBVelocity","tangentX","tangentY","inverseMassTotal","offsetAX","offsetAY","offsetBX","offsetBY","velocityPointAX","velocityPointAY","relativeVelocityX","relativeVelocityY","tangentVelocity","normalOverlap","normalForce","frictionLimit","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","pairIndex","pairsList","pairsListLength","pairsTable","collisionsLength","removePairIndex","Matter","Composites","Grid","MouseConstraint","Query","Runner","SAT","Svg","World","after","stack","columns","rows","columnGap","rowGap","lastBody","row","maxHeight","column","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","col","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","bucketWidth","bucketHeight","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","gridPairs","pairId","bucketLength","pairKeys","pairKeysLength","mouseConstraint","_triggerEvents","mouseEvents","partsAStart","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_frameTimeout","clearTimeout","runner","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","$0a7e2ac3f8a08a9e$export$46e1934a20752f73","props","bar","$luvNb","slider","$jmBhk","makeSlider","startValue","onChange","step","statEls","statsContainer","statEl","$ih12A","$1bf0a92f5a0d7095$export$47d88ccfec2a7b3b","$3KaNR","handle","NaN","setValue","newValue","setValueByEvent","coords","pointerEventsToClientCoords","rootRect","addCursorMoveHandler","onMove","target","$070b40bf88f7afea$export$f9e1fc62131d1b82","$070b40bf88f7afea$export$c4dfce035d43d1e0","touch","clientX","clientY","$070b40bf88f7afea$export$4eb1c1f17f883a41","$070b40bf88f7afea$export$80eb02ad18c977f1","onDown","onUp","downIsMove","removeEventListener","upIsMove","$070b40bf88f7afea$export$b3002a74c1b9a5fd","el","stopPropagation","$2b9e0c477a19ae15$export$8f34ce051745d39e","$2b9e0c477a19ae15$export$b38bf4f33e9e4c25","$fa550f9741759dbd$export$eebe73d6e99d9049","$fa550f9741759dbd$export$f5f0b4ae0b3f31c1","$fa550f9741759dbd$export$480fff2e0766c90e"],"version":3,"file":"zen_blockbreaker.bc1e651e.js.map"}