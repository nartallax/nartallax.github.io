{"mappings":"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","sources":["src/sketches/particle_toy/particle_toy.ts","src/common/cycled_request_animation_frame.ts","src/common/gl_utils.ts","src/sketches/particle_toy/data_texture.ts","src/sketches/particle_toy/fps_counter.ts","src/sketches/particle_toy/shader.ts","src/sketches/particle_toy/shaders/utils.glsl","src/sketches/particle_toy/shaders/draw_fragment.glsl","src/sketches/particle_toy/shaders/draw_vertex.glsl","src/sketches/particle_toy/shaders/calc_pos_vertex.glsl","src/sketches/particle_toy/shaders/calc_pos_fragment.glsl","src/sketches/particle_toy/shaders/calc_speed_vertex.glsl","src/sketches/particle_toy/shaders/calc_speed_fragment.glsl"],"sourcesContent":["import {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {GlUtils} from \"common/gl_utils\"\nimport {dataTextureSize, FrameBufferTexturePair, particlesCount} from \"sketches/particle_toy/data_texture\"\nimport {FpsCounter} from \"sketches/particle_toy/fps_counter\"\nimport {CalcPosShader, CalcSpeedShader, DrawShader} from \"sketches/particle_toy/shader\"\n\n// const coordsScale = {x: 0xffff / rootSize.width, y: 0xffff / rootSize.height}\nfunction packSignedCoordsPair(range: {x: number, y: number}, x: number, y: number): number {\n\treturn (((x * (0xffff / range.x)) + 0x8fff) & 0xffff) | ((((y * (0xffff / range.y)) + 0x8fff) & 0xffff) << 0x10)\n}\n\nfunction packCoordsPair(range: {x: number, y: number}, x: number, y: number): number {\n\treturn ((x * (0xffff / range.x)) & 0xffff) | (((y * (0xffff / range.y)) & 0xffff) << 0x10)\n}\n\nexport function main(root: HTMLElement): void {\n\tconst canvas = document.createElement(\"canvas\")\n\t// TODO: handle resize\n\tconst rootSize = root.getBoundingClientRect()\n\tcanvas.setAttribute(\"width\", rootSize.width + \"\")\n\tcanvas.setAttribute(\"height\", rootSize.height + \"\")\n\tcanvas.style.cssText = \"position: absolute; top: 0; bottom: 0; left: 0; right: 0;\"\n\troot.appendChild(canvas)\n\n\tconst gl = canvas.getContext(\"webgl2\")!\n\t// TODO: check caps and presence of context\n\n\tconst idBuffer = makeIdBuffer(gl, particlesCount)\n\tconst squareBuffer = makeSquareBuffer(gl)\n\tconst coordsRange = {x: rootSize.width, y: rootSize.height}\n\tconst positionTexture = new FrameBufferTexturePair(gl, makeDataArray(i => packCoordsPair(coordsRange, i * 10, i * 20)))\n\tconst speedTexture = new FrameBufferTexturePair(gl, makeDataArray(() => packSignedCoordsPair(\n\t\t{x: 0x8fff, y: 0x8fff},\n\t\t(Math.random() - 0.5) * 100,\n\t\t(Math.random() - 0.5) * 100)\n\t))\n\n\tconst calcSpeedShader = new CalcSpeedShader(gl)\n\tconst calcPosShader = new CalcPosShader(gl)\n\tconst drawShader = new DrawShader(gl)\n\n\tcalcSpeedShader.use()\n\tgl.uniform2f(calcSpeedShader.screenSize, rootSize.width, rootSize.height)\n\tgl.uniform1i(calcSpeedShader.position, 0)\n\tgl.uniform1i(calcSpeedShader.speed, 1)\n\tgl.uniform1f(calcSpeedShader.gravity, 50)\n\tconst calcSpeedVao = GlUtils.makeBindVAO(gl)\n\tgl.bindBuffer(gl.ARRAY_BUFFER, squareBuffer)\n\tgl.enableVertexAttribArray(calcSpeedShader.vertex)\n\tgl.vertexAttribPointer(calcSpeedShader.vertex, 2, gl.FLOAT, false, 0, 0)\n\n\tcalcPosShader.use()\n\tgl.uniform2f(calcPosShader.screenSize, rootSize.width, rootSize.height)\n\tgl.uniform1i(calcPosShader.position, 0)\n\tgl.uniform1i(calcPosShader.speed, 1)\n\tconst calcPosVao = GlUtils.makeBindVAO(gl)\n\tgl.bindBuffer(gl.ARRAY_BUFFER, squareBuffer)\n\tgl.enableVertexAttribArray(calcPosShader.vertex)\n\tgl.vertexAttribPointer(calcPosShader.vertex, 2, gl.FLOAT, false, 0, 0)\n\n\tdrawShader.use()\n\tgl.uniform2f(drawShader.screenSize, rootSize.width, rootSize.height)\n\tgl.uniform1i(drawShader.position, 0)\n\tconst drawVao = GlUtils.makeBindVAO(gl)\n\tgl.bindBuffer(gl.ARRAY_BUFFER, idBuffer)\n\tgl.enableVertexAttribArray(drawShader.id)\n\tgl.vertexAttribIPointer(drawShader.id, 1, gl.UNSIGNED_INT, 0, 0)\n\n\tlet particleMovementPointer = 0\n\tconst particlesMovedPerSecond = particlesCount / 10\n\n\tconst fpsCounter = new FpsCounter()\n\tfunction drawFrame(deltaTime: number): void {\n\t\tfpsCounter.recordFrame(deltaTime)\n\n\t\tconst firstMovedParticleIndex = particleMovementPointer\n\t\tconst lastMovedParticleIndex = firstMovedParticleIndex + Math.floor(particlesMovedPerSecond * deltaTime)\n\t\tparticleMovementPointer = lastMovedParticleIndex\n\t\tif(particleMovementPointer >= particlesCount){\n\t\t\tparticleMovementPointer = 0\n\t\t}\n\n\t\t// calc speed step\n\t\tspeedTexture.withFramebufferActive(() => {\n\t\t\tcalcSpeedShader.use()\n\t\t\tgl.viewport(0, 0, dataTextureSize, dataTextureSize)\n\t\t\tgl.uniform1f(calcSpeedShader.deltaTime, deltaTime)\n\n\t\t\tgl.activeTexture(gl.TEXTURE0)\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, positionTexture.texture)\n\t\t\tgl.activeTexture(gl.TEXTURE1)\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, speedTexture.texture)\n\n\t\t\tgl.bindVertexArray(calcSpeedVao)\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, 6)\n\t\t})\n\t\tspeedTexture.swap()\n\n\t\t// calc pos step\n\t\tpositionTexture.withFramebufferActive(() => {\n\t\t\tcalcPosShader.use()\n\t\t\tgl.viewport(0, 0, dataTextureSize, dataTextureSize)\n\t\t\tgl.uniform1f(calcPosShader.deltaTime, deltaTime)\n\t\t\tgl.uniform1ui(calcPosShader.firstMovedParticleIndex, firstMovedParticleIndex)\n\t\t\tgl.uniform1ui(calcPosShader.lastMovedParticleIndex, lastMovedParticleIndex)\n\n\t\t\tgl.activeTexture(gl.TEXTURE0)\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, positionTexture.texture)\n\t\t\tgl.activeTexture(gl.TEXTURE1)\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, speedTexture.texture)\n\n\t\t\tgl.bindVertexArray(calcPosVao)\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, 6)\n\t\t})\n\t\tpositionTexture.swap()\n\n\t\t// draw step\n\t\tdrawShader.use()\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\tgl.viewport(0, 0, rootSize.width, rootSize.height)\n\n\t\tgl.activeTexture(gl.TEXTURE0)\n\t\tgl.bindTexture(gl.TEXTURE_2D, positionTexture.texture)\n\n\t\tgl.bindVertexArray(drawVao)\n\t\tgl.drawArrays(gl.POINTS, 0, particlesCount)\n\t}\n\n\tcycledRequestAnimationFrame(deltaTime => {\n\t\tif(deltaTime > 50){\n\t\t\treturn\n\t\t}\n\n\t\tdrawFrame(deltaTime / 1000)\n\t})\n}\n\nfunction makeDataArray(getValue: (index: number) => number): Uint32Array {\n\tconst data = new Array(dataTextureSize * dataTextureSize).fill(0).map((_, i) => getValue(i))\n\treturn new Uint32Array(data)\n}\n\nfunction makeIdBuffer(gl: WebGL2RenderingContext, count: number): WebGLBuffer {\n\tconst ids = new Array(count).fill(0).map((_, i) => i)\n\tconst idBuffer = gl.createBuffer()\n\tif(!idBuffer){\n\t\tthrow new Error(\"Cannot create webgl buffer\")\n\t}\n\tgl.bindBuffer(gl.ARRAY_BUFFER, idBuffer)\n\tgl.bufferData(gl.ARRAY_BUFFER, new Uint32Array(ids), gl.STATIC_DRAW)\n\treturn idBuffer\n}\n\nfunction makeSquareBuffer(gl: WebGL2RenderingContext): WebGLBuffer {\n\tconst squareBuffer = gl.createBuffer()\n\tif(!squareBuffer){\n\t\tthrow new Error(\"Cannot create webgl buffer\")\n\t}\n\tgl.bindBuffer(gl.ARRAY_BUFFER, squareBuffer)\n\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1]), gl.STATIC_DRAW)\n\treturn squareBuffer\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function */\nexport function cycledRequestAnimationFrame(handler: (delta: number) => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","export type Uniform = ReturnType<WebGL2RenderingContext[\"getUniformLocation\"]>\nexport type Attrib = ReturnType<WebGL2RenderingContext[\"getAttribLocation\"]>\n\n// assorted utility functions for webgl\nexport namespace GlUtils {\n\n\texport function getGlContext(canvas: HTMLCanvasElement): WebGL2RenderingContext {\n\t\tconst gl = canvas.getContext(\"webgl2\")\n\t\tif(!gl){\n\t\t\tthrow new Error(\"No webgl2 available.\")\n\t\t}\n\t\tgl.enable(gl.BLEND)\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\t\tgl.disable(gl.SCISSOR_TEST) // can be good, need further investigation\n\t\tgl.disable(gl.CULL_FACE)\n\t\tgl.disable(gl.DEPTH_TEST)\n\t\tgl.disable(gl.POLYGON_OFFSET_FILL)\n\t\tgl.disable(gl.STENCIL_TEST)\n\t\treturn gl\n\t}\n\n\texport function makeShader(gl: WebGL2RenderingContext, type: \"vertex\" | \"fragment\", code: string): WebGLShader {\n\t\tlet shader: WebGLShader | null = null\n\t\ttry {\n\t\t\tshader = gl.createShader(type === \"vertex\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER)\n\t\t\tif(!shader){\n\t\t\t\tthrow new Error(\"No shader is created of type \" + type)\n\t\t\t}\n\t\t\tgl.shaderSource(shader, code)\n\t\t\tgl.compileShader(shader)\n\n\t\t\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n\t\t\tconst log = gl.getShaderInfoLog(shader)\n\t\t\tif(!success){\n\t\t\t\tconsole.log(code)\n\t\t\t\tthrow new Error(\"Failed to compile shader of type \" + type + \": \" + log)\n\t\t\t} else if(log){\n\t\t\t\tconsole.warn(\"WebGL \" + type + \" shader compile log: \", log)\n\t\t\t}\n\n\t\t\treturn shader\n\t\t} catch(e){\n\t\t\tgl.deleteShader(shader)\n\t\t\tthrow e\n\t\t}\n\t}\n\n\texport function makeProgram(gl: WebGL2RenderingContext, vertexShaderCode: string, fragmentShaderCode: string): {program: WebGLProgram, shaders: WebGLShader[]} {\n\t\tlet fragShader: WebGLShader | null = null\n\t\tlet vertShader: WebGLShader | null = null\n\t\tlet program: WebGLProgram | null = null\n\t\ttry {\n\t\t\tfragShader = makeShader(gl, \"fragment\", fragmentShaderCode)\n\t\t\tvertShader = makeShader(gl, \"vertex\", vertexShaderCode)\n\t\t\tprogram = gl.createProgram()\n\t\t\tif(!program){\n\t\t\t\tthrow new Error(\"No webgl program was created.\")\n\t\t\t}\n\n\t\t\tgl.attachShader(program, fragShader)\n\t\t\tgl.attachShader(program, vertShader)\n\t\t\tgl.linkProgram(program)\n\n\t\t\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS)\n\t\t\tconst log = gl.getProgramInfoLog(program)\n\t\t\tif(!success){\n\t\t\t\tthrow new Error(\"Failed to link program: \" + log)\n\t\t\t} else if(log){\n\t\t\t\tconsole.warn(\"WebGL program log: \", log)\n\t\t\t}\n\n\t\t\treturn {program, shaders: [fragShader, vertShader]}\n\t\t} catch(e){\n\t\t\tfragShader && gl.deleteShader(fragShader)\n\t\t\tvertShader && gl.deleteShader(vertShader)\n\t\t\tprogram && gl.deleteProgram(program)\n\t\t\tthrow e\n\t\t}\n\t}\n\n\texport function setViewportSizeByCanvas(gl: WebGL2RenderingContext, canvas: HTMLCanvasElement): {width: number, height: number} {\n\t\tconst width = canvas.clientWidth * window.devicePixelRatio\n\t\tconst height = canvas.clientHeight * window.devicePixelRatio\n\t\t// why do we need this...? is this a lost useless part of some extremely outdated tutorial?\n\t\tcanvas.width = width\n\t\tcanvas.height = height\n\t\tgl.viewport(0, 0, width, height)\n\t\treturn {width, height}\n\t}\n\n\texport function loadTexture(gl: WebGL2RenderingContext, url: string): Promise<WebGLTexture> {\n\t\treturn new Promise((ok, bad) => {\n\t\t\tconst img = new Image()\n\t\t\timg.onload = () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst tex = makeBindSetupTexture(gl)\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\n\t\t\t\t\tok(tex)\n\t\t\t\t} catch(e){\n\t\t\t\t\tbad(e)\n\t\t\t\t}\n\t\t\t}\n\t\t\timg.onerror = () => bad(new Error(\"Failed to load texture: \" + url))\n\t\t\timg.src = url\n\t\t})\n\t}\n\n\tfunction makeBindSetupTexture(gl: WebGL2RenderingContext): WebGLTexture {\n\t\tconst tex = gl.createTexture()\n\t\tif(!tex){\n\t\t\tthrow new Error(\"No texture was created.\")\n\t\t}\n\t\tgl.activeTexture(gl.TEXTURE0)\n\t\tgl.bindTexture(gl.TEXTURE_2D, tex)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n\t\treturn tex\n\t}\n\n\tconst squareVertexData: readonly number[] = [0, 0, 1, 0, 1, 1, 0, 1]\n\tconst squareIndexData: readonly number[] = [0, 1, 2, 0, 2, 3]\n\n\t/** Make vertex buffer that contains 2d coordinates for a square with side length = 1 */\n\texport function makeSquareVertexBuffer(gl: WebGL2RenderingContext): WebGLBuffer {\n\t\tconst buffer = makeBindBuffer(gl, gl.ARRAY_BUFFER)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(squareVertexData), gl.STATIC_DRAW)\n\t\treturn buffer\n\t}\n\n\t/** Make corresponding index buffer for vertex from `makeSquareVertexBuffer()` */\n\texport function makeSquareIndexBuffer(gl: WebGL2RenderingContext): WebGLBuffer {\n\t\tconst buffer = makeBindBuffer(gl, gl.ELEMENT_ARRAY_BUFFER)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(squareIndexData), gl.STATIC_DRAW)\n\t\treturn buffer\n\t}\n\n\texport function makeBindBuffer(gl: WebGL2RenderingContext, target: GLenum): WebGLBuffer {\n\t\tconst buf = gl.createBuffer()\n\t\tif(!buf){\n\t\t\tthrow new Error(\"Buffer was not created.\")\n\t\t}\n\t\tgl.bindBuffer(target, buf)\n\t\treturn buf\n\t}\n\n\texport function makeBindVAO(gl: WebGL2RenderingContext): WebGLVertexArrayObject {\n\t\tconst vao = gl.createVertexArray()\n\t\tif(!vao){\n\t\t\tthrow new Error(\"VAO was not created.\")\n\t\t}\n\t\tgl.bindVertexArray(vao)\n\t\treturn vao\n\t}\n\n}","export const particlesCount = 128000\nexport const dataTextureSize = 2 ** Math.ceil(Math.log2(Math.ceil(Math.sqrt(particlesCount))))\n\nfunction createDataTexture(gl: WebGL2RenderingContext, data: Uint32Array): WebGLTexture {\n\tconst tex = gl.createTexture()\n\tif(!tex){\n\t\tthrow new Error(\"No texture was created\")\n\t}\n\tgl.bindTexture(gl.TEXTURE_2D, tex)\n\tgl.texImage2D(\n\t\tgl.TEXTURE_2D,\n\t\t0, // mip level\n\t\tgl.R32UI, // internal format\n\t\tdataTextureSize, // width\n\t\tdataTextureSize, // height\n\t\t0, // border\n\t\tgl.RED_INTEGER, // format\n\t\tgl.UNSIGNED_INT, // type\n\t\tdata,\n\t\t0\n\t)\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\treturn tex\n}\n\nfunction createFramebuffer(gl: WebGL2RenderingContext, tex: WebGLTexture): WebGLFramebuffer {\n\tconst fb = gl.createFramebuffer()\n\tif(!fb){\n\t\tthrow new Error(\"Cannot create webgl framebuffer\")\n\t}\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb)\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0)\n\treturn fb\n}\n\nexport class DataTexture {\n\n\tprivate readonly _texture: WebGLTexture\n\n\tconstructor(gl: WebGL2RenderingContext, data: Uint32Array) {\n\t\tthis._texture = createDataTexture(gl, data)\n\t}\n\n\tget texture(): WebGLTexture {\n\t\treturn this._texture\n\t}\n\n}\n\nexport class FrameBufferTexturePair {\n\tprivate readonly _textureA: WebGLTexture\n\tprivate readonly _textureB: WebGLTexture\n\tprivate readonly _framebufferA: WebGLFramebuffer\n\tprivate readonly _framebufferB: WebGLFramebuffer\n\tprivate activeA = true\n\n\tconstructor(private readonly gl: WebGL2RenderingContext, data: Uint32Array) {\n\t\tthis._textureA = createDataTexture(gl, data)\n\t\tthis._textureB = createDataTexture(gl, data)\n\t\tthis._framebufferA = createFramebuffer(gl, this._textureA)\n\t\tthis._framebufferB = createFramebuffer(gl, this._textureB)\n\t}\n\n\tget texture(): WebGLTexture {\n\t\treturn this.activeA ? this._textureA : this._textureB\n\t}\n\n\tget framebuffer(): WebGLFramebuffer {\n\t\t// inverted logic here - if A is active, then we cannot write into A\n\t\treturn this.activeA ? this._framebufferB : this._framebufferA\n\t}\n\n\tswap(): void {\n\t\tthis.activeA = !this.activeA\n\t}\n\n\twithFramebufferActive<T>(action: () => T): T {\n\t\ttry {\n\t\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer)\n\t\t\treturn action()\n\t\t} finally {\n\t\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\n\t\t}\n\t}\n\n}","export class FpsCounter {\n\tprivate count = 0\n\tprivate time = 0\n\n\tconstructor(private readonly reportFreq = 3) {}\n\n\trecordFrame(deltaTime: number): void {\n\t\tthis.time += deltaTime\n\t\tthis.count++\n\t\twhile(this.time > this.reportFreq){\n\t\t\tthis.time -= this.reportFreq\n\t\t\tconsole.log(`FPS: ${this.count / this.reportFreq}`)\n\t\t\tthis.count = 0\n\t\t}\n\t}\n}","import glslUtils from \"./shaders/utils.glsl\"\nimport drawFragmentShaderCode from \"./shaders/draw_fragment.glsl\"\nimport drawVertexShaderCode from \"./shaders/draw_vertex.glsl\"\nimport calcPosVertexShaderCode from \"./shaders/calc_pos_vertex.glsl\"\nimport calcPosFragmentShaderCode from \"./shaders/calc_pos_fragment.glsl\"\nimport calcSpeedVertexShaderCode from \"./shaders/calc_speed_vertex.glsl\"\nimport calcSpeedFragmentShaderCode from \"./shaders/calc_speed_fragment.glsl\"\nimport {GlUtils} from \"common/gl_utils\"\nimport {dataTextureSize} from \"sketches/particle_toy/data_texture\"\n\nfunction addUtils(code: string): string {\n\treturn `#version 300 es\\n#define DATA_TEXTURE_SIZE ${dataTextureSize}.0\\n` + glslUtils + \"\\n\" + code\n}\n\nexport abstract class Shader {\n\n\tprotected readonly program: WebGLProgram\n\tprotected readonly shaders: readonly WebGLShader[]\n\n\tconstructor(protected readonly gl: WebGL2RenderingContext, vertexCode: string, fragmentCode: string) {\n\t\tconst {program, shaders} = GlUtils.makeProgram(gl,\n\t\t\taddUtils(vertexCode),\n\t\t\taddUtils(fragmentCode)\n\t\t)\n\t\tthis.program = program\n\t\tthis.shaders = shaders\n\t}\n\n\tuse(): void {\n\t\tthis.gl.useProgram(this.program)\n\t}\n\n\tdelete(): void {\n\t\tthis.gl.deleteProgram(this.program)\n\t\tfor(const shader of this.shaders){\n\t\t\tthis.gl.deleteShader(shader)\n\t\t}\n\t}\n\n}\n\ntype Attrib = number\ntype Uniform = WebGLUniformLocation | null\n\nexport class DrawShader extends Shader {\n\n\treadonly position: Uniform\n\treadonly id: Attrib\n\treadonly screenSize: Uniform\n\n\tconstructor(gl: WebGL2RenderingContext) {\n\t\tsuper(gl, drawVertexShaderCode, drawFragmentShaderCode)\n\t\tthis.position = gl.getUniformLocation(this.program, \"position\")\n\t\tthis.id = gl.getAttribLocation(this.program, \"id\")\n\t\tthis.screenSize = gl.getUniformLocation(this.program, \"screenSize\")\n\t}\n}\n\nexport class CalcPosShader extends Shader {\n\n\treadonly screenSize: Uniform\n\treadonly position: Uniform\n\treadonly speed: Uniform\n\treadonly vertex: Attrib\n\treadonly deltaTime: Uniform\n\treadonly firstMovedParticleIndex: Uniform\n\treadonly lastMovedParticleIndex: Uniform\n\n\tconstructor(gl: WebGL2RenderingContext) {\n\t\tsuper(gl, calcPosVertexShaderCode, calcPosFragmentShaderCode)\n\t\tthis.screenSize = gl.getUniformLocation(this.program, \"screenSize\")\n\t\tthis.position = gl.getUniformLocation(this.program, \"position\")\n\t\tthis.speed = gl.getUniformLocation(this.program, \"speed\")\n\t\tthis.deltaTime = gl.getUniformLocation(this.program, \"deltaTime\")\n\t\tthis.vertex = gl.getAttribLocation(this.program, \"vertex\")\n\t\tthis.firstMovedParticleIndex = gl.getUniformLocation(this.program, \"firstMovedParticleIndex\")\n\t\tthis.lastMovedParticleIndex = gl.getUniformLocation(this.program, \"lastMovedParticleIndex\")\n\t}\n}\n\nexport class CalcSpeedShader extends Shader {\n\treadonly screenSize: Uniform\n\treadonly position: Uniform\n\treadonly speed: Uniform\n\treadonly vertex: Attrib\n\treadonly deltaTime: Uniform\n\treadonly gravity: Uniform\n\n\tconstructor(gl: WebGL2RenderingContext) {\n\t\tsuper(gl, calcSpeedVertexShaderCode, calcSpeedFragmentShaderCode)\n\t\tthis.screenSize = gl.getUniformLocation(this.program, \"screenSize\")\n\t\tthis.position = gl.getUniformLocation(this.program, \"position\")\n\t\tthis.speed = gl.getUniformLocation(this.program, \"speed\")\n\t\tthis.deltaTime = gl.getUniformLocation(this.program, \"deltaTime\")\n\t\tthis.gravity = gl.getUniformLocation(this.program, \"gravity\")\n\t\tthis.vertex = gl.getAttribLocation(this.program, \"vertex\")\n\t}\n}","precision mediump float;\nprecision mediump usampler2D;\n\n#define MAX_XY_RANGE 65535.0\n#define MAX_SIGNED_XY_RANGE 36863.0\n#define SPEED_RANGE vec2(MAX_SIGNED_XY_RANGE, MAX_SIGNED_XY_RANGE)\n\nuint getUintFromTexture(usampler2D tex, uint index){\n  float findex = float(index);\n  float y = floor(findex / DATA_TEXTURE_SIZE);\n  float x = mod(findex, DATA_TEXTURE_SIZE);\n  vec2 texcoord = (vec2(x, y) + 0.5) / DATA_TEXTURE_SIZE;\n  return texture(tex, texcoord).x;\n}\n\nvec2 unpackXY(uint pack, vec2 range){\n  return vec2(\n    float(pack & 0xffffu),\n    float((pack >> 0x10) & 0xffffu)\n  ) * (range / MAX_XY_RANGE);\n}\n\n// const coordsScale = {x: 0xffff / rootSize.width, y: 0xffff / rootSize.height}\nvec2 unpackSignedXY(uint pack, vec2 range){\n  return (vec2(\n    float((pack & 0xffffu)),\n    float(((pack >> 0x10) & 0xffffu))\n  ) - MAX_SIGNED_XY_RANGE) * (range / MAX_XY_RANGE);\n}\n\nuint packSignedXY(vec2 pack, vec2 range){\n  pack = (pack * (MAX_XY_RANGE / range)) + MAX_SIGNED_XY_RANGE;\n  return (uint(pack.x) & 0xffffu) | ((uint(pack.y) & 0xffffu) << 0x10u);\n}\n\nuint packXY(vec2 pack, vec2 range){\n  pack = pack * (MAX_XY_RANGE / range);\n  return (uint(pack.x) & 0xffffu) | ((uint(pack.y) & 0xffffu) << 0x10u);\n}\n\nvec4 absCoordsIntoScreenCoords(vec2 coords, vec2 screenSize){\n  return vec4(((coords / screenSize) * 2.0) - 1.0, 0, 1);\n}\n\nvec2 getXYFromTexture(usampler2D tex, uint index, vec2 range){\n  return unpackXY(getUintFromTexture(tex, index), range);\n}\n\nuint fragCoordToIndex(vec2 fragCoord){\n  return uint(fragCoord.x) + uint(fragCoord.y * DATA_TEXTURE_SIZE);\n}","out vec4 outColor;\n\nvoid main() {\n\toutColor = vec4(1, 1, 1, 1);\n}","uniform usampler2D positions;\nuniform vec2 coordsScale;\nuniform vec2 screenSize;\nin uint id;\n\nvoid main(){\n  vec2 absCoords = getXYFromTexture(positions, id, screenSize);\n  vec4 screenCoords = absCoordsIntoScreenCoords(absCoords, screenSize);\n\tgl_Position = screenCoords;\n  gl_PointSize = 5.0;\n}\n","in vec4 vertex;\nvoid main() {\n\tgl_Position = vertex;\n}","uniform usampler2D position;\nuniform usampler2D speed;\nuniform vec2 screenSize;\nuniform float deltaTime;\n\nuniform uint firstMovedParticleIndex;\nuniform uint lastMovedParticleIndex;\n\n\nout uint newPositionPack;\n\nvoid main() {\n\tvec2 texcoord = gl_FragCoord.xy / DATA_TEXTURE_SIZE;\n\n\tvec2 newPosition;\n\n\tuint index = fragCoordToIndex(gl_FragCoord.xy);\n\tif(index >= firstMovedParticleIndex && index <= lastMovedParticleIndex){\n\t\tnewPosition = screenSize / 2.0;\n\t} else {\n\t\tvec2 particlePosition = unpackXY(texture(position, texcoord).x, screenSize);\n\t\tvec2 particleSpeed = unpackSignedXY(texture(speed, texcoord).x, SPEED_RANGE);\n\n\t\tnewPosition = particlePosition + (particleSpeed * deltaTime);\n\t\t// newPosition = mod(newPosition, screenSize);\n\t\tnewPosition = min(max(newPosition, vec2(0.0, 0.0)), screenSize);\n\t}\n\n\tnewPositionPack = packXY(newPosition, screenSize);\n}","in vec4 vertex;\nvoid main() {\n\tgl_Position = vertex;\n}","uniform usampler2D position;\nuniform usampler2D speed;\nuniform vec2 screenSize;\nuniform float deltaTime;\n\nuniform float gravity;\n\nout uint newSpeedPack;\n\nvoid main() {\n\tvec2 texcoord = gl_FragCoord.xy / DATA_TEXTURE_SIZE;\n\tvec2 particlePosition = unpackXY(texture(position, texcoord).x, screenSize);\n\tvec2 particleSpeed = unpackSignedXY(texture(speed, texcoord).x, SPEED_RANGE);\n\n\tfloat gravityDeltaV = gravity * deltaTime;\n\tvec2 newSpeed = vec2(particleSpeed.x, particleSpeed.y - gravityDeltaV);\n\tif(particlePosition.y == 0.0){\n\t\tnewSpeed.y = -newSpeed.y * 0.5; // jumpyness\n\t}\n\n\tnewSpeedPack = packSignedXY(newSpeed, SPEED_RANGE);\n}"],"names":["$5DUDw","parcelRequire","$0f868be849c07a1e$export$f22da7240b7add18","root","canvas","document","createElement","rootSize","getBoundingClientRect","setAttribute","width","height","style","cssText","appendChild","gl","getContext","idBuffer","count","ids","Array","fill","map","_","i","createBuffer","Error","bindBuffer","ARRAY_BUFFER","bufferData","Uint32Array","STATIC_DRAW","$0f868be849c07a1e$var$makeIdBuffer","$3ekh2","particlesCount","squareBuffer","Float32Array","$0f868be849c07a1e$var$makeSquareBuffer","coordsRange","x","y","positionTexture","FrameBufferTexturePair","$0f868be849c07a1e$var$makeDataArray","$0f868be849c07a1e$var$packCoordsPair","range","speedTexture","$0f868be849c07a1e$var$packSignedCoordsPair","Math","random","calcSpeedShader","$5udHq","CalcSpeedShader","calcPosShader","CalcPosShader","drawShader","DrawShader","use","uniform2f","screenSize","uniform1i","position","speed","uniform1f","gravity","calcSpeedVao","$d4DhX","GlUtils","makeBindVAO","enableVertexAttribArray","vertex","vertexAttribPointer","FLOAT","calcPosVao","drawVao","id","vertexAttribIPointer","UNSIGNED_INT","particleMovementPointer","particlesMovedPerSecond","fpsCounter","$hf9LN","FpsCounter","cycledRequestAnimationFrame","deltaTime","recordFrame","firstMovedParticleIndex","lastMovedParticleIndex","floor","withFramebufferActive","viewport","dataTextureSize","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","TEXTURE1","bindVertexArray","drawArrays","TRIANGLES","swap","uniform1ui","bindFramebuffer","FRAMEBUFFER","POINTS","drawFrame","getValue","data","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","stopped","prevCallTime","wrappedHandler","time","delta","requestAnimationFrame","$c2a4196f056f95b3$export$c925bebd88462bbe","makeShader","type","code","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","success","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","console","warn","e","deleteShader","getGlContext","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","disable","SCISSOR_TEST","CULL_FACE","DEPTH_TEST","POLYGON_OFFSET_FILL","STENCIL_TEST","makeProgram","vertexShaderCode","fragmentShaderCode","fragShader","vertShader","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders","deleteProgram","setViewportSizeByCanvas","clientWidth","window","devicePixelRatio","clientHeight","loadTexture","url","Promise","ok","bad","img","Image","onload","tex","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","NEAREST","makeBindSetupTexture","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","onerror","src","squareVertexData","squareIndexData","makeBindBuffer","target","buf","makeSquareVertexBuffer","buffer","makeSquareIndexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","vao","createVertexArray","$5aa7663b69bdf641$export$7b09a2fd87fa5952","$5aa7663b69bdf641$export$35b20dd8e412bf0c","ceil","log2","sqrt","$5aa7663b69bdf641$var$createDataTexture","R32UI","RED_INTEGER","$5aa7663b69bdf641$var$createFramebuffer","fb","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","$5aa7663b69bdf641$export$a61f5a36ba932086","constructor","activeA","this","_textureA","_textureB","_framebufferA","_framebufferB","framebuffer","action","$0dd95076cf36ee24$export$b25b355fca609f64","reportFreq","$aAGU0","$8a0425e1a044e327$var$addUtils","$parcel$interopDefault","$8a0425e1a044e327$export$462bb059fed9d9e5","vertexCode","fragmentCode","useProgram","delete","$8a0425e1a044e327$export$c00e9721819f822c","super","$72NEL","$6daLX","getUniformLocation","getAttribLocation","$8a0425e1a044e327$export$73bcc8c78de87fc2","$htDMP","$iRKfn","$8a0425e1a044e327$export$cc29113118dcda41","$35ZyT","$44txf","module","exports"],"version":3,"file":"particle_toy.9a4f97c9.js.map"}