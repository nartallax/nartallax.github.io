{"mappings":"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","sources":["src/sketches/squaremix_3d/squaremix_3d.ts","src/common/wait_dom_event.ts","src/sketches/squaremix_3d/squaremix_3d.module.scss","node_modules/@parcel/runtime-js/lib/runtime-c41bfbec62fc9b8f.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/common/debounce.ts","src/common/on_resize.ts"],"sourcesContent":["import * as THREE from \"three\"\nimport {waitDOMEvent} from \"common/wait_dom_event\"\nimport * as css from \"./squaremix_3d.module.scss\"\nimport image from \"./pine_forest.png\"\nimport {debounce} from \"common/debounce\"\nimport {onResize} from \"common/on_resize\"\nimport {tag} from \"@nartallax/cardboard-dom\"\n\nconst imageWidth = 1920\nconst imageHeight = 1080\n\nlet img: HTMLImageElement | null = null\nlet canvas: HTMLCanvasElement | null = null\n\nasync function init(root: HTMLElement): Promise<void> {\n\tconst bodyRect = root.getBoundingClientRect()\n\n\troot.classList.add(css.root ?? \"\")\n\n\tif(img){\n\t\timg.remove()\n\t\timg = null\n\t}\n\timg = tag({tag: \"img\", attrs: {src: image}, class: css.initialImage})\n\tif(bodyRect.width / bodyRect.height > imageWidth / imageHeight){\n\t\timg.style.maxWidth = \"100vw\"\n\t} else {\n\t\timg.style.maxHeight = \"100vh\"\n\t}\n\troot.appendChild(img)\n\tawait waitDOMEvent(img, \"load\")\n\n\tlet isActive = false\n\n\tconst imgRect = img.getBoundingClientRect()\n\tconst xRatio = imgRect.width / bodyRect.width\n\tconst yRatio = imgRect.height / bodyRect.height\n\tconst scene = new THREE.Scene()\n\tconst camera = new THREE.OrthographicCamera(-0.5 / xRatio, 0.5 / xRatio, -0.5 / yRatio, 0.5 / yRatio, 0.1, 1000)\n\tcamera.position.z = 2\n\tcamera.position.x = camera.position.y = 0\n\tcamera.lookAt(0, 0, 0)\n\tcamera.rotateZ(Math.PI)\n\n\tconst squareSize = imgRect.height / 100 > 8 ? 100 : 25\n\tconst columnsCount = Math.ceil(imgRect.height / squareSize)\n\tconst rowsCount = Math.ceil(imgRect.width / squareSize)\n\n\tconst renderer = new THREE.WebGLRenderer()\n\t// renderer.setSize(rect.width, rect.height)\n\trenderer.setSize(bodyRect.width, bodyRect.height)\n\n\tconst textureLoader = new THREE.TextureLoader()\n\tconst texture = await textureLoader.loadAsync(img.src)\n\tconst material = new THREE.MeshBasicMaterial({map: texture})\n\n\tif(canvas){\n\t\tcanvas.remove()\n\t\tcanvas = null\n\t}\n\tcanvas = renderer.domElement\n\tcanvas.classList.add(css.squaremixCanvas ?? \"\")\n\timg.after(canvas)\n\tcanvas.addEventListener(\"click\", runAction)\n\timg.remove()\n\n\trunAction()\n\n\tasync function runAction(): Promise<void> {\n\t\tif(isActive){\n\t\t\treturn\n\t\t}\n\t\tisActive = true\n\t\ttry {\n\t\t\tconst action = new TransformAction(columnsCount, rowsCount, scene, material, camera, () => renderer.render(scene, camera))\n\t\t\tawait action.run()\n\t\t} finally {\n\t\t\tisActive = false\n\t\t}\n\t}\n}\n\nexport function main(root: HTMLElement): void {\n\tconst debouncedInit = debounce(100, () => init(root))\n\tdebouncedInit()\n\tonResize(root, debouncedInit)\n}\n\nclass TransformAction {\n\n\tprivate readonly colHeights: number[][]\n\tprivate readonly disposeables = [] as {dispose(): void}[]\n\tprivate readonly group: THREE.Group\n\n\tconstructor(\n\t\tprivate readonly columnsCount: number,\n\t\tprivate readonly rowsCount: number,\n\t\tprivate readonly scene: THREE.Scene,\n\t\tprivate readonly material: THREE.Material,\n\t\tprivate readonly camera: THREE.Camera,\n\t\tprivate readonly render: () => void\n\t) {\n\t\tthis.colHeights = this.generateColumnHeights(columnsCount, rowsCount)\n\t\tthis.group = new THREE.Group()\n\t\tthis.scene.add(this.group)\n\t}\n\n\tasync run(): Promise<void> {\n\t\tthis.generateObjects()\n\n\t\tawait forEachFrameProgress(1 / 4, progress => {\n\t\t\tthis.group.rotation.y = (Math.PI / 2) * ((1 - progress) + 2)\n\t\t\tthis.camera.rotation.z = (Math.PI / 2) * (progress + 2)\n\t\t\tthis.render()\n\t\t})\n\n\t\tthis.dispose()\n\t}\n\n\tprivate generateColumnHeights(columns: number, rows: number): number[][] {\n\t\tconst maxDerivation = 3\n\n\t\tconst result = new Array(columns) as number[][]\n\t\tfor(let c = 0; c < columns; c++){\n\t\t\tconst column = result[c] = new Array(rows) as number[]\n\t\t\tfor(let r = 0; r < rows; r++){\n\t\t\t\tconst derivation = maxDerivation * ((Math.random() * 2) - 1) // +- maxDerivation\n\t\t\t\tlet depth = (columns - c) + derivation\n\t\t\t\tdepth = Math.min(1, Math.max(0, Math.round(depth) / columns))\n\t\t\t\tcolumn[r] = depth\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tprivate generateObjects(): void {\n\t\tfor(let x = 0; x < this.colHeights.length; x++){\n\t\t\tfor(let y = 0; y < this.colHeights[x]!.length; y++){\n\t\t\t\tthis.generateColumnObject(x, y, this.colHeights[x]![y]!)\n\t\t\t}\n\t\t}\n\n\t\tconst plane = this.makeAddSlicePlane(0, 1, 0, 1)\n\t\tplane.translateX(-0.5)\n\t\tplane.translateY(-0.5)\n\t\tplane.translateZ(-0.5)\n\t\tplane.rotateY(-Math.PI / 2)\n\t}\n\n\tprivate generateColumnObject(x: number, y: number, height: number): void {\n\t\tthis.addTopPlane(x, y, height)\n\t\tthis.addSidePlane(x, y, height)\n\t}\n\n\tprivate addSidePlane(x: number, y: number, height: number): void {\n\t\tif(height === 0){\n\t\t\treturn\n\t\t}\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\t1 - height, 1,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount\n\t\t)\n\n\t\tplane.rotateY(-Math.PI / 2)\n\n\t\tplane.translateX(0.5 - height)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(-(x + 1) / this.columnsCount + 0.5)\n\t}\n\n\tprivate addTopPlane(x: number, y: number, height: number): void {\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\tx / this.columnsCount, (x + 1) / this.columnsCount,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount,\n\t\t\ttrue\n\t\t)\n\n\t\tplane.translateX(x / this.columnsCount - 0.5)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(0.5 - height)\n\t}\n\n\tprivate makeAddSlicePlane(left: number, right: number, top: number, bottom: number, rotate = false): THREE.Object3D {\n\t\tconst geom = new THREE.PlaneGeometry()\n\t\tthis.disposeables.push(geom)\n\t\tconst plane = new THREE.Mesh(geom, this.material)\n\n\t\tconst uv = geom.attributes.uv!\n\t\tif(!rotate){\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tuv.setX(i, uv.getX(i) === 0 ? left : right)\n\t\t\t\tuv.setY(i, uv.getY(i) === 0 ? top : bottom)\n\t\t\t}\n\t\t} else {\n\t\t\tconst l = 1 - top, r = 1 - bottom\n\t\t\tconst t = left, b = right\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tif(uv.getX(i) === 0){\n\t\t\t\t\tif(uv.getY(i) === 0){\n\t\t\t\t\t\tuv.setXY(i, l, t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuv.setXY(i, r, t)\n\t\t\t\t\t}\n\t\t\t\t} else if(uv.getY(i) === 0){\n\t\t\t\t\tuv.setXY(i, l, b)\n\t\t\t\t} else {\n\t\t\t\t\tuv.setXY(i, r, b)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tuv.needsUpdate = true\n\n\t\tconst xOffset = right - left, yOffset = bottom - top\n\t\tconst pos = geom.attributes.position!\n\t\tfor(let i = 0; i < pos.count; i++){\n\t\t\tpos.setX(i, pos.getX(i) < 0 ? 0 : xOffset)\n\t\t\tpos.setY(i, pos.getY(i) < 0 ? 0 : yOffset)\n\t\t}\n\t\tpos.needsUpdate = true\n\t\tthis.group.add(plane)\n\n\t\treturn plane\n\t}\n\n\tprivate dispose(): void {\n\t\tthis.disposeables.forEach(x => x.dispose())\n\t\tthis.disposeables.length = 0\n\t\tthis.scene.remove(this.group)\n\t}\n}\n\nfunction forEachFrameProgress(incrementPerSecond: number, doOnFrame: (progress: number) => void): Promise<void> {\n\treturn new Promise((ok, bad) => {\n\t\tlet progress = 0\n\t\tlet prevFrameStart = Date.now()\n\t\tconst wrappedHandler = () => {\n\t\t\tconst frameStart = Date.now()\n\t\t\ttry {\n\t\t\t\tdoOnFrame(Math.min(1, progress))\n\t\t\t} catch(e){\n\t\t\t\tbad(e)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(progress < 1){\n\t\t\t\trequestAnimationFrame(wrappedHandler)\n\t\t\t} else {\n\t\t\t\tok()\n\t\t\t}\n\t\t\tprogress += incrementPerSecond * ((frameStart - prevFrameStart) / 1000)\n\t\t\tprevFrameStart = frameStart\n\t\t}\n\t\twrappedHandler()\n\t})\n}","type DOMEventEmitter<K, E> = {\n\taddEventListener(name: K, handler: (e: E) => void): void\n}\n\ntype DOMEventEmitterWithError<K, E> = DOMEventEmitter<K, E> & {\n\taddEventListener(name: \"error\", handler: (e: ErrorEvent) => void): void\n}\n\nexport function waitDOMEvent<K, E, I extends DOMEventEmitterWithError<K, E>>(obj: I, name: K): Promise<E> {\n\treturn new Promise((ok, bad) => {\n\t\tobj.addEventListener(\"error\", err => bad(new Error(err.message)))\n\t\tobj.addEventListener(name, e => ok(e))\n\t})\n}",".squaremixCanvas {\n\tcursor: pointer;\n}\n\n.initialImage {\n\twidth: auto;\n\theight: auto;\n}\n\n.root {\n\toverflow: hidden;\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6fzAl\")).toString();","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export function debounce(time: number | \"raf\", handler: () => void): () => void {\n\tlet timer: ReturnType<typeof setTimeout> | ReturnType<typeof requestAnimationFrame> | null = null\n\n\treturn () => {\n\t\tif(timer){\n\t\t\treturn\n\t\t}\n\n\t\tif(time === \"raf\"){\n\t\t\ttimer = requestAnimationFrame(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t})\n\t\t} else {\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t}, time)\n\t\t}\n\t}\n}","import {onMount} from \"@nartallax/cardboard-dom\"\n\nexport function onResize(el: HTMLElement, callback: (resizeEvent: ResizeObserverEntry) => void): void {\n\tonMount(el, () => {\n\t\tconst observer = new ResizeObserver(entries => {\n\t\t\tfor(const entry of entries){\n\t\t\t\t// I'm not sure if this check can be false in our case\n\t\t\t\t// maybe it will fire for nested elements..? this needs testing\n\t\t\t\tif(entry.target === el){\n\t\t\t\t\tconsole.log(\"uwu\")\n\t\t\t\t\tcallback(entry)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tobserver.observe(el)\n\t\treturn () => observer.disconnect()\n\t}, {ifInDom: \"call\"})\n}"],"names":["$ilwiq","parcelRequire","$5d7ba6b915d16345$var$img","$5d7ba6b915d16345$var$canvas","$5d7ba6b915d16345$export$f22da7240b7add18","root","debouncedInit","$euaFP","debounce","async","bodyRect","getBoundingClientRect","classList","add","$Z93qb","remove","$7sHgZ","tag","attrs","src","$parcel$interopDefault","$6eZYS","class","initialImage","width","height","style","maxWidth","maxHeight","appendChild","$iO5IN","waitDOMEvent","isActive","imgRect","xRatio","yRatio","scene","Scene","camera","OrthographicCamera","position","z","x","y","lookAt","rotateZ","Math","PI","squareSize","columnsCount","ceil","rowsCount","renderer","WebGLRenderer","setSize","textureLoader","TextureLoader","texture","loadAsync","material","MeshBasicMaterial","map","runAction","action","$5d7ba6b915d16345$var$TransformAction","render","run","domElement","squaremixCanvas","after","addEventListener","$5d7ba6b915d16345$var$init","$edTLw","onResize","constructor","disposeables","this","colHeights","generateColumnHeights","group","Group","incrementPerSecond","doOnFrame","generateObjects","progress","rotation","Promise","ok","bad","prevFrameStart","Date","now","wrappedHandler","frameStart","min","e","requestAnimationFrame","dispose","columns","rows","result","Array","c","column","r","depth","random","max","round","length","generateColumnObject","plane","makeAddSlicePlane","translateX","translateY","translateZ","rotateY","addTopPlane","addSidePlane","left","right","top","bottom","rotate","geom","PlaneGeometry","push","Mesh","uv","attributes","l","t","b","i1","count","getX","getY","setXY","i","setX","setY","needsUpdate","xOffset","yOffset","pos","i2","forEach","$391ab960b5de8fc4$export$9d1bf630f3954f4c","obj","name","err","Error","message","$0b7cb8977c54d631$export$b86e5322c7744a","$0b7cb8977c54d631$export$638b348249e76df2","$0b7cb8977c54d631$export$e8e78c978b129247","module","exports","URL","resolve","import","meta","url","toString","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","$1fa5674b28854650$export$61fc7d43ac8f84b0","time","handler","timer","setTimeout","$5af6fdaf0a2d9731$export$45b39e67d4ce4921","el","callback","onMount","observer","ResizeObserver","entries","entry","target","console","log","observe","disconnect","ifInDom"],"version":3,"file":"squaremix_3d.4c30230c.js.map"}