{"mappings":"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","sources":["src/sketches/squaremix_3d/squaremix_3d.ts","src/sketches/squaremix_3d/squaremix_3d.module.scss","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/common/debounce.ts","src/common/wait_dom_event.ts","node_modules/@parcel/runtime-js/lib/runtime-c41bfbec62fc9b8f.js","src/common/classname.ts","src/common/tag.ts"],"sourcesContent":["import * as THREE from \"three\"\nimport {waitDOMEvent} from \"common/wait_dom_event\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./squaremix_3d.module.scss\"\nimport {getBinder} from \"common/binder/binder\"\nimport image from \"./pine_forest.png\"\nimport {debounce} from \"common/debounce\"\n\nconst imageWidth = 1920\nconst imageHeight = 1080\n\nlet img: HTMLImageElement | null = null\nlet canvas: HTMLCanvasElement | null = null\n\nasync function init(root: HTMLElement): Promise<void> {\n\tconst bodyRect = root.getBoundingClientRect()\n\n\troot.classList.add(css.root ?? \"\")\n\n\tif(img){\n\t\timg.remove()\n\t\timg = null\n\t}\n\timg = tag({tagName: \"img\", attrs: {src: image}, class: css.initialImage})\n\tif(bodyRect.width / bodyRect.height > imageWidth / imageHeight){\n\t\timg.style.maxWidth = \"100vw\"\n\t} else {\n\t\timg.style.maxHeight = \"100vh\"\n\t}\n\troot.appendChild(img)\n\tawait waitDOMEvent(img, \"load\")\n\n\tlet isActive = false\n\n\tconst imgRect = img.getBoundingClientRect()\n\tconst xRatio = imgRect.width / bodyRect.width\n\tconst yRatio = imgRect.height / bodyRect.height\n\tconst scene = new THREE.Scene()\n\tconst camera = new THREE.OrthographicCamera(-0.5 / xRatio, 0.5 / xRatio, -0.5 / yRatio, 0.5 / yRatio, 0.1, 1000)\n\tcamera.position.z = 2\n\tcamera.position.x = camera.position.y = 0\n\tcamera.lookAt(0, 0, 0)\n\tcamera.rotateZ(Math.PI)\n\n\tconst squareSize = imgRect.height / 100 > 8 ? 100 : 25\n\tconst columnsCount = Math.ceil(imgRect.height / squareSize)\n\tconst rowsCount = Math.ceil(imgRect.width / squareSize)\n\n\tconst renderer = new THREE.WebGLRenderer()\n\t// renderer.setSize(rect.width, rect.height)\n\trenderer.setSize(bodyRect.width, bodyRect.height)\n\n\tconst textureLoader = new THREE.TextureLoader()\n\tconst texture = await textureLoader.loadAsync(img.src)\n\tconst material = new THREE.MeshBasicMaterial({map: texture})\n\n\tif(canvas){\n\t\tcanvas.remove()\n\t\tcanvas = null\n\t}\n\tcanvas = renderer.domElement\n\tcanvas.classList.add(css.squaremixCanvas ?? \"\")\n\timg.after(canvas)\n\tcanvas.addEventListener(\"click\", runAction)\n\timg.remove()\n\n\trunAction()\n\n\tasync function runAction(): Promise<void> {\n\t\tif(isActive){\n\t\t\treturn\n\t\t}\n\t\tisActive = true\n\t\ttry {\n\t\t\tconst action = new TransformAction(columnsCount, rowsCount, scene, material, camera, () => renderer.render(scene, camera))\n\t\t\tawait action.run()\n\t\t} finally {\n\t\t\tisActive = false\n\t\t}\n\t}\n}\n\nexport function main(root: HTMLElement): void {\n\tinit(root)\n\n\tgetBinder(root).onResize(debounce(250, () => init(root)))\n}\n\nclass TransformAction {\n\n\tprivate readonly colHeights: number[][]\n\tprivate readonly disposeables = [] as {dispose(): void}[]\n\tprivate readonly group: THREE.Group\n\n\tconstructor(\n\t\tprivate readonly columnsCount: number,\n\t\tprivate readonly rowsCount: number,\n\t\tprivate readonly scene: THREE.Scene,\n\t\tprivate readonly material: THREE.Material,\n\t\tprivate readonly camera: THREE.Camera,\n\t\tprivate readonly render: () => void\n\t) {\n\t\tthis.colHeights = this.generateColumnHeights(columnsCount, rowsCount)\n\t\tthis.group = new THREE.Group()\n\t\tthis.scene.add(this.group)\n\t}\n\n\tasync run(): Promise<void> {\n\t\tthis.generateObjects()\n\n\t\tawait forEachFrameProgress(1 / 4, progress => {\n\t\t\tthis.group.rotation.y = (Math.PI / 2) * ((1 - progress) + 2)\n\t\t\tthis.camera.rotation.z = (Math.PI / 2) * (progress + 2)\n\t\t\tthis.render()\n\t\t})\n\n\t\tthis.dispose()\n\t}\n\n\tprivate generateColumnHeights(columns: number, rows: number): number[][] {\n\t\tconst maxDerivation = 3\n\n\t\tconst result = new Array(columns) as number[][]\n\t\tfor(let c = 0; c < columns; c++){\n\t\t\tconst column = result[c] = new Array(rows) as number[]\n\t\t\tfor(let r = 0; r < rows; r++){\n\t\t\t\tconst derivation = maxDerivation * ((Math.random() * 2) - 1) // +- maxDerivation\n\t\t\t\tlet depth = (columns - c) + derivation\n\t\t\t\tdepth = Math.min(1, Math.max(0, Math.round(depth) / columns))\n\t\t\t\tcolumn[r] = depth\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tprivate generateObjects(): void {\n\t\tfor(let x = 0; x < this.colHeights.length; x++){\n\t\t\tfor(let y = 0; y < this.colHeights[x]!.length; y++){\n\t\t\t\tthis.generateColumnObject(x, y, this.colHeights[x]![y]!)\n\t\t\t}\n\t\t}\n\n\t\tconst plane = this.makeAddSlicePlane(0, 1, 0, 1)\n\t\tplane.translateX(-0.5)\n\t\tplane.translateY(-0.5)\n\t\tplane.translateZ(-0.5)\n\t\tplane.rotateY(-Math.PI / 2)\n\t}\n\n\tprivate generateColumnObject(x: number, y: number, height: number): void {\n\t\tthis.addTopPlane(x, y, height)\n\t\tthis.addSidePlane(x, y, height)\n\t}\n\n\tprivate addSidePlane(x: number, y: number, height: number): void {\n\t\tif(height === 0){\n\t\t\treturn\n\t\t}\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\t1 - height, 1,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount\n\t\t)\n\n\t\tplane.rotateY(-Math.PI / 2)\n\n\t\tplane.translateX(0.5 - height)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(-(x + 1) / this.columnsCount + 0.5)\n\t}\n\n\tprivate addTopPlane(x: number, y: number, height: number): void {\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\tx / this.columnsCount, (x + 1) / this.columnsCount,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount,\n\t\t\ttrue\n\t\t)\n\n\t\tplane.translateX(x / this.columnsCount - 0.5)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(0.5 - height)\n\t}\n\n\tprivate makeAddSlicePlane(left: number, right: number, top: number, bottom: number, rotate = false): THREE.Object3D {\n\t\tconst geom = new THREE.PlaneGeometry()\n\t\tthis.disposeables.push(geom)\n\t\tconst plane = new THREE.Mesh(geom, this.material)\n\n\t\tconst uv = geom.attributes.uv!\n\t\tif(!rotate){\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tuv.setX(i, uv.getX(i) === 0 ? left : right)\n\t\t\t\tuv.setY(i, uv.getY(i) === 0 ? top : bottom)\n\t\t\t}\n\t\t} else {\n\t\t\tconst l = 1 - top, r = 1 - bottom\n\t\t\tconst t = left, b = right\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tif(uv.getX(i) === 0){\n\t\t\t\t\tif(uv.getY(i) === 0){\n\t\t\t\t\t\tuv.setXY(i, l, t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuv.setXY(i, r, t)\n\t\t\t\t\t}\n\t\t\t\t} else if(uv.getY(i) === 0){\n\t\t\t\t\tuv.setXY(i, l, b)\n\t\t\t\t} else {\n\t\t\t\t\tuv.setXY(i, r, b)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tuv.needsUpdate = true\n\n\t\tconst xOffset = right - left, yOffset = bottom - top\n\t\tconst pos = geom.attributes.position!\n\t\tfor(let i = 0; i < pos.count; i++){\n\t\t\tpos.setX(i, pos.getX(i) < 0 ? 0 : xOffset)\n\t\t\tpos.setY(i, pos.getY(i) < 0 ? 0 : yOffset)\n\t\t}\n\t\tpos.needsUpdate = true\n\t\tthis.group.add(plane)\n\n\t\treturn plane\n\t}\n\n\tprivate dispose(): void {\n\t\tthis.disposeables.forEach(x => x.dispose())\n\t\tthis.disposeables.length = 0\n\t\tthis.scene.remove(this.group)\n\t}\n}\n\nfunction forEachFrameProgress(incrementPerSecond: number, doOnFrame: (progress: number) => void): Promise<void> {\n\treturn new Promise((ok, bad) => {\n\t\tlet progress = 0\n\t\tlet prevFrameStart = Date.now()\n\t\tconst wrappedHandler = () => {\n\t\t\tconst frameStart = Date.now()\n\t\t\ttry {\n\t\t\t\tdoOnFrame(Math.min(1, progress))\n\t\t\t} catch(e){\n\t\t\t\tbad(e)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(progress < 1){\n\t\t\t\trequestAnimationFrame(wrappedHandler)\n\t\t\t} else {\n\t\t\t\tok()\n\t\t\t}\n\t\t\tprogress += incrementPerSecond * ((frameStart - prevFrameStart) / 1000)\n\t\t\tprevFrameStart = frameStart\n\t\t}\n\t\twrappedHandler()\n\t})\n}",".squaremixCanvas {\n\tcursor: pointer;\n}\n\n.initialImage {\n\twidth: auto;\n\theight: auto;\n}\n\n.root {\n\toverflow: hidden;\n}","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export function debounce(time: number, handler: () => void): () => void {\n\tlet timer: ReturnType<typeof setTimeout> | null = null\n\n\treturn () => {\n\t\tif(!timer){\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t}, time)\n\t\t}\n\t}\n}","type DOMEventEmitter<K, E> = {\n\taddEventListener(name: K, handler: (e: E) => void): void\n}\n\ntype DOMEventEmitterWithError<K, E> = DOMEventEmitter<K, E> & {\n\taddEventListener(name: \"error\", handler: (e: ErrorEvent) => void): void\n}\n\nexport function waitDOMEvent<K, E, I extends DOMEventEmitterWithError<K, E>>(obj: I, name: K): Promise<E> {\n\treturn new Promise((ok, bad) => {\n\t\tobj.addEventListener(\"error\", err => bad(new Error(err.message)))\n\t\tobj.addEventListener(name, e => ok(e))\n\t})\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6fzAl\")).toString();","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}"],"names":["$iO5IN","parcelRequire","$5d7ba6b915d16345$var$img","$5d7ba6b915d16345$var$canvas","async","$5d7ba6b915d16345$var$init","root","bodyRect","getBoundingClientRect","classList","add","$Z93qb","remove","$aCP3q","tag","tagName","attrs","src","$parcel$interopDefault","$6eZYS","class","initialImage","width","height","style","maxWidth","maxHeight","appendChild","waitDOMEvent","isActive","imgRect","xRatio","yRatio","scene","$ilwiq","Scene","camera","OrthographicCamera","position","z","x","y","lookAt","rotateZ","Math","PI","squareSize","columnsCount","ceil","rowsCount","renderer","WebGLRenderer","setSize","textureLoader","TextureLoader","texture","loadAsync","material","MeshBasicMaterial","map","runAction","action","$5d7ba6b915d16345$var$TransformAction","render","run","domElement","squaremixCanvas","after","addEventListener","$5d7ba6b915d16345$export$f22da7240b7add18","$hIDiW","getBinder","onResize","$euaFP","debounce","constructor","this","colHeights","generateColumnHeights","group","Group","incrementPerSecond","doOnFrame","generateObjects","progress","rotation","Promise","ok","bad","prevFrameStart","Date","now","wrappedHandler","frameStart","min","e","requestAnimationFrame","dispose","columns","rows","result","Array","c","column","r","depth","random","max","round","length","generateColumnObject","plane","makeAddSlicePlane","translateX","translateY","translateZ","rotateY","addTopPlane","addSidePlane","left","right","top","bottom","rotate","geom","PlaneGeometry","disposeables","push","Mesh","uv","attributes","l","t","b","i1","count","getX","getY","setXY","i","setX","setY","needsUpdate","xOffset","yOffset","pos","i2","forEach","$0b7cb8977c54d631$export$e8e78c978b129247","$0b7cb8977c54d631$export$b86e5322c7744a","$0b7cb8977c54d631$export$638b348249e76df2","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","Error","$1fa5674b28854650$export$61fc7d43ac8f84b0","time","handler","timer","setTimeout","$391ab960b5de8fc4$export$9d1bf630f3954f4c","obj","name","err","message","module","exports","URL","resolve","import","meta","url","toString","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","binder","node","parts","callback","arr","isArray","item","$hsvBG","isRBox","watch","makeClassnameAndCallTheCallback","key","bool","classname","unbox","classname1","join","$4c0fbf616468c6ce$var$resolveArgs","a","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","text","textContent","on","evtName","passive","capture","k","v","removeAttribute","setAttribute","vv","setChildren","childTags","filter","parent","newChildren","childTag","childNodes","insertBefore","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","value","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS"],"version":3,"file":"squaremix_3d.263471f8.js.map"}