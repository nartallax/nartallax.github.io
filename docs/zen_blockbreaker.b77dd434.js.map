{"mappings":"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","sources":["src/sketches/zen_blockbreaker/zen_blockbreaker.ts","src/sketches/zen_blockbreaker/bottom_bar.ts","src/common/bottom_bar/bottom_bar.ts","src/common/bottom_bar/bottom_bar.module.scss","src/common/slider/slider.ts","src/common/input_utils.ts","src/common/slider/slider.module.scss","src/common/textblock.ts","src/common/color_utils.ts","src/sketches/zen_blockbreaker/zen_blockbreaker_impl.ts","src/common/cycled_request_animation_frame.ts","src/lib/matterjs/matter.js","src/sketches/zen_blockbreaker/ball_tail.ts","src/common/timed_queue.ts","src/common/queue.ts"],"sourcesContent":["import {box} from \"@nartallax/cardboard\"\nimport {bindBox} from \"@nartallax/cardboard-dom\"\nimport {makeBottomBar} from \"sketches/zen_blockbreaker/bottom_bar\"\nimport {ZenBlockbreaker} from \"sketches/zen_blockbreaker/zen_blockbreaker_impl\"\n\nconst blockColors = [0x000000, 0x53bc01, 0xffeb03, 0xffa801, 0xf93a1d, 0xe21a5f, 0x572c62, 0xa1ccd3, 0x006898]\n\nexport function main(rootContainer: HTMLElement): void {\n\tconst initialTicksPerFrame = 3\n\tconst speedMult = 0.5 / initialTicksPerFrame\n\tconst sideCount = 4\n\n\tconst speed = box(initialTicksPerFrame)\n\n\tconst stats = new Array(sideCount).fill(null).map(() => box(0))\n\tconst contentContainer = makeBottomBar({\n\t\tspeed,\n\t\tcolors: blockColors,\n\t\tstats,\n\t\troot: rootContainer\n\t})\n\n\tconst rect = contentContainer.getBoundingClientRect()\n\tconst screenSpacePx = rect.width * rect.height\n\tconst blockSizePx = Math.floor(Math.sqrt(screenSpacePx) / 25)\n\n\tconst blockbreaker: ZenBlockbreaker = new ZenBlockbreaker({\n\t\tticksPerFrame: initialTicksPerFrame,\n\t\tballSpeed: speedMult * ((rect.height + rect.width) / blockSizePx),\n\t\t// TODO: think about something more interesting here. fill the whole screen with the board..?\n\t\t// also block size may be related to DPI\n\t\tblockSizePx,\n\t\theight: Math.floor(rect.height / blockSizePx),\n\t\twidth: Math.floor(rect.width / blockSizePx),\n\t\tsideCount,\n\t\tonStatsChange: () => {\n\t\t\tfor(const [color, stat] of blockbreaker.stats){\n\t\t\t\tstats[color - 1]!.set(stat)\n\t\t\t}\n\t\t},\n\t\tcolors: blockColors,\n\t\trender: \"svg\",\n\t\ttailLength: 1 * initialTicksPerFrame\n\t})\n\tcontentContainer.appendChild(blockbreaker.root)\n\tbindBox(rootContainer, speed, speed => blockbreaker.setTicksPerFrame(speed))\n\n\tblockbreaker.run()\n}\n","import {makeBottomBarredScreenContainer} from \"common/bottom_bar/bottom_bar\"\nimport {RBox, WBox} from \"@nartallax/cardboard\"\nimport {Slider} from \"common/slider/slider\"\nimport {Textblock} from \"common/textblock\"\nimport {tag} from \"@nartallax/cardboard-dom\"\n\ninterface Props {\n\treadonly speed: WBox<number>\n\treadonly stats: RBox<number>[]\n\tcolors: readonly number[]\n\troot: HTMLElement\n}\n\nexport const makeBottomBar = (props: Props): HTMLElement => {\n\n\tconst slider = Slider({\n\t\tlabel: \"Speed\",\n\t\tmin: 0,\n\t\tmax: 25,\n\t\tvalue: props.speed,\n\t\tstep: 1\n\t})\n\n\tconst stats = tag({\n\t\tstyle: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"row\",\n\t\t\tgap: \"1rem\",\n\t\t\tfontWeight: \"bold\",\n\t\t\theight: \"1.25em\"\n\t\t}\n\t}, props.stats.map((stat, i) => Textblock({\n\t\tvalue: stat,\n\t\tcolor: props.colors[i + 1],\n\t\tbold: true,\n\t\toverflow: \"hidden\",\n\t\twidth: \"3em\"\n\t})))\n\n\treturn makeBottomBarredScreenContainer({\n\t\tcontents: [slider, stats],\n\t\tparent: props.root\n\t})\n}","import {tag} from \"@nartallax/cardboard-dom\"\nimport * as css from \"./bottom_bar.module.scss\"\n\ninterface Props {\n\tparent: HTMLElement\n\tcontents: HTMLElement[]\n}\n\n// this will return not the container itself, but the element you can add other stuff to\nexport const makeBottomBarredScreenContainer = (props: Props): HTMLElement => {\n\tconst bar = tag({class: css.bottomBar}, props.contents)\n\tconst contentContainer = tag({class: css.contentContainer})\n\tconst wrap = tag({class: css.pageContainer}, [contentContainer, bar])\n\n\tprops.parent.appendChild(wrap)\n\n\treturn contentContainer\n}","@import \"/src/website/style/vars\";\n\n.bottomBar {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tflex: 0 0 auto;\n\tcolumn-gap: 2rem;\n\trow-gap: 0.5rem;\n\tpadding: 0.5rem;\n\talign-items: center;\n\tbackground-color: $foreground-secondary-color;\n\talign-self: stretch;\n}\n\n.pageContainer {\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.contentContainer {\n\tflex: 1 1 0;\n}\n","import {box, constBoxWrap, isRBox, MRBox, WBox} from \"@nartallax/cardboard\"\nimport {bindBox, tag} from \"@nartallax/cardboard-dom\"\nimport {addCursorMoveHandler, pointerEventsToClientCoords} from \"common/input_utils\"\nimport * as css from \"./slider.module.scss\"\n\ninterface Props {\n\treadonly min: MRBox<number>\n\treadonly max: MRBox<number>\n\treadonly step?: number\n\treadonly value: WBox<number>\n\treadonly label?: MRBox<string>\n\treadonly labelWidth?: MRBox<number | string>\n}\n\nexport const Slider = (props: Props): HTMLElement => {\n\tconst min = constBoxWrap(props.min)\n\tconst max = constBoxWrap(props.max)\n\n\tconst handle = tag({class: css.handle})\n\tconst handleContainer = tag({class: css.handleContainer}, [handle])\n\tlet root = tag({class: css.slider}, [handleContainer])\n\tif(props.label){\n\t\tconst labelWidth = isRBox(props.labelWidth) ? props.labelWidth : box(props.labelWidth)\n\t\troot = tag({class: css.sliderRoot}, [\n\t\t\ttag({\n\t\t\t\tclass: css.label,\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: labelWidth.map(x => typeof(x) === \"number\" ? x + \"px\" : x ?? \"\")\n\t\t\t\t}\n\t\t\t}, [props.label]),\n\t\t\troot\n\t\t])\n\t}\n\n\tfunction updateHandlePos(newValue: number): void {\n\t\thandle.style.left = (((newValue - min.get()) / (max.get() - min.get())) * 100) + \"%\"\n\t}\n\n\tfunction setValueByEvent(e: MouseEvent | TouchEvent): void {\n\t\tconst coords = pointerEventsToClientCoords(e)\n\t\tconst contRect = handleContainer.getBoundingClientRect()\n\n\t\tlet progress = (coords.x - contRect.left) / contRect.width\n\t\tprogress = Math.min(1, Math.max(0, progress))\n\t\tlet newValue = (progress * (max.get() - min.get())) + min.get()\n\t\tif(props.step){\n\t\t\tnewValue = Math.round(newValue / props.step) * props.step\n\t\t}\n\n\t\tprops.value.set(newValue)\n\t}\n\n\taddCursorMoveHandler({\n\t\telement: handle,\n\t\tonMove: setValueByEvent\n\t})\n\n\tconst onSliderBodyClick = (e: MouseEvent | TouchEvent) => {\n\t\tif(e.target === handle){\n\t\t\treturn\n\t\t}\n\n\t\tsetValueByEvent(e)\n\t}\n\n\troot.addEventListener(\"click\", onSliderBodyClick)\n\n\tbindBox(root, props.value, value => updateHandlePos(value))\n\tbindBox(root, max, max => {\n\t\tif(props.value.get() > max){\n\t\t\tprops.value.set(max)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value.get())\n\t\t}\n\t})\n\tbindBox(root, min, min => {\n\t\tif(props.value.get() < min){\n\t\t\tprops.value.set(min)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value.get())\n\t\t}\n\t})\n\n\treturn root\n}","export function pointerEventsToClientCoords(e: MouseEvent | TouchEvent): {x: number, y: number} {\n\tif(isTouchEvent(e)){\n\t\tconst touch = e.touches[0]!\n\t\treturn {\n\t\t\tx: touch.clientX,\n\t\t\ty: touch.clientY\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t}\n}\n\nexport function pointerEventsToOffsetCoords(e: MouseEvent | TouchEvent): {x: number, y: number} | null {\n\tif(!(e.target instanceof HTMLElement)){\n\t\treturn null\n\t}\n\n\tconst rect = e.target.getBoundingClientRect() // performance may suck, but whatever\n\tconst coords = pointerEventsToClientCoords(e)\n\tcoords.x -= rect.left\n\tcoords.y -= rect.top\n\treturn coords\n}\n\nexport function isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n\treturn !!(e as TouchEvent).touches\n}\n\ntype CursorMoveHandlerParams = {\n\treadonly element: HTMLElement\n\tonMove(e: MouseEvent | TouchEvent): void\n\t/** If true, onMove will be invoked when down event happen */\n\treadonly downIsMove?: boolean\n\t/** If true, onMove will be invoked when up event happen */\n\treadonly upIsMove?: boolean\n}\n\n/** This is a good way to add a mousemove handler to an element */\nexport function addCursorMoveHandler(params: CursorMoveHandlerParams): void {\n\n\tconst onDown = (e: MouseEvent | TouchEvent) => {\n\t\twindow.addEventListener(\"mousemove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"touchmove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"mouseup\", onUp, {passive: true})\n\t\twindow.addEventListener(\"touchend\", onUp, {passive: true})\n\t\tif(params.downIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tconst onUp = (e: MouseEvent | TouchEvent) => {\n\t\twindow.removeEventListener(\"mousemove\", params.onMove)\n\t\twindow.removeEventListener(\"touchmove\", params.onMove)\n\t\twindow.removeEventListener(\"mouseup\", onUp)\n\t\twindow.removeEventListener(\"touchend\", onUp)\n\t\tif(params.upIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tparams.element.addEventListener(\"mousedown\", onDown, {passive: true})\n\tparams.element.addEventListener(\"touchstart\", onDown, {passive: true})\n}\n\nexport function preventContextMenu(el: HTMLElement): void {\n\tel.addEventListener(\"contextmenu\", e => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\treturn false\n\t})\n}","@import \"/src/website/style/vars\";\n\n.sliderRoot {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: stretch;\n\tgap: 0.5rem;\n}\n\n.slider {\n\tbackground-color: $background-color;\n\tborder: 3px solid $font-color;\n\tborder-radius: 3px;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.handleContainer {\n\tflex: 1 1 auto;\n\tposition: relative;\n\theight: 100%;\n\tmargin: 0 0.5em;\n\tmin-width: 15rem;\n\tmin-height: 1.25em;\n}\n\n.handle {\n\tbox-sizing: border-box;\n\twidth: 1rem;\n\tcursor: pointer;\n\tborder: 3px solid $font-color;\n\tborder-top-width: 0;\n\tborder-bottom-width: 0;\n\tbackground-color: $font-color;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\ttransform: translateX(-50%);\n}\n\n.label {\n\toverflow: hidden;\n\tflex: 0 0 auto;\n\tcolor: $font-color;\n\ttext-align: right;\n}","import {constBoxWrap, MRBox} from \"@nartallax/cardboard\"\nimport {tag} from \"@nartallax/cardboard-dom\"\nimport {rgbNumberToColorString} from \"common/color_utils\"\n\ninterface Props {\n\treadonly value: MRBox<string | number>\n\treadonly color?: MRBox<string | number>\n\treadonly width?: MRBox<string | number>\n\treadonly bold?: MRBox<boolean>\n\treadonly overflow?: MRBox<\"hidden\" | \"auto\">\n}\n\nexport const Textblock = (props: Props): HTMLElement => {\n\treturn tag({\n\t\tstyle: {\n\t\t\tcolor: constBoxWrap(props.color).map(color => typeof(color) === \"number\" ? rgbNumberToColorString(color) : color ?? \"\"),\n\t\t\tfontWeight: constBoxWrap(props.bold).map(bold => bold ? \"bold\" : \"normal\"),\n\t\t\twidth: constBoxWrap(props.width).map(width => typeof(width) === \"number\" ? width + \"px\" : width ?? \"\"),\n\t\t\toverflow: props.overflow\n\t\t}\n\t}, [props.value])\n}","function twoHex(x: number): string {\n\treturn (x > 0xf ? \"\" : \"0\") + x.toString(16)\n}\n\nexport function colorNumberTo3Components(color: number): [r: number, g: number, b: number] {\n\tconst r = (color >> 16) & 0xff,\n\t\tg = (color >> 8) & 0xff,\n\t\tb = (color >> 0) & 0xff\n\treturn [r, g, b]\n}\n\nexport function color3ComponentsToNumber(components: [r: number, g: number, b: number]): number {\n\tconst [r, g, b] = components\n\treturn (r << 16) | (g << 8) | b\n}\n\nexport function rgbToHsl(color: number): number {\n\tlet [r, g, b] = colorNumberTo3Components(color)\n\t// Make r, g, and b fractions of 1\n\tr /= 255\n\tg /= 255\n\tb /= 255\n\n\t// Find greatest and smallest channel values\n\tconst cmin = Math.min(r, g, b),\n\t\tcmax = Math.max(r, g, b),\n\t\tdelta = cmax - cmin\n\tlet h = 0,\n\t\ts = 0,\n\t\tl = 0\n\n\t// Calculate hue\n\t// No difference\n\tif(delta === 0){\n\t\th = 0\n\t} else if(cmax === r){\n\t\t// Red is max\n\t\th = ((g - b) / delta) % 6\n\t} else if(cmax === g){\n\t\t// Green is max\n\t\th = (b - r) / delta + 2\n\t} else {\n\t\t// Blue is max\n\t\th = (r - g) / delta + 4\n\t}\n\n\th = Math.round(h * 60)\n\n\t// Make negative hues positive behind 360°\n\tif(h < 0){\n\t\th += 360\n\t}\n\n\t// Calculate lightness\n\tl = (cmax + cmin) / 2\n\n\t// Calculate saturation\n\ts = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n\t// Multiply l and s by 100\n\ts = +(s * 100).toFixed(1)\n\tl = +(l * 100).toFixed(1)\n\n\treturn color3ComponentsToNumber([(h / 360) * 255, (s / 100) * 255, (l / 100) * 255])\n}\n\nexport function hslToRgb(hsl: number): number {\n\tlet [h, s, l] = colorNumberTo3Components(hsl)\n\th /= 255\n\ts /= 255\n\tl /= 255\n\tlet r: number, g: number, b: number\n\n\tif(s === 0){\n\t\tr = g = b = l // achromatic\n\t} else {\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tr = hueToRgb(p, q, h + 1 / 3)\n\t\tg = hueToRgb(p, q, h)\n\t\tb = hueToRgb(p, q, h - 1 / 3)\n\t}\n\n\treturn color3ComponentsToNumber([Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)])\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n\tif(t < 0){\n\t\tt += 1\n\t}\n\tif(t > 1){\n\t\tt -= 1\n\t}\n\tif(t < 1 / 6){\n\t\treturn p + (q - p) * 6 * t\n\t}\n\tif(t < 1 / 2){\n\t\treturn q\n\t}\n\tif(t < 2 / 3){\n\t\treturn p + (q - p) * (2 / 3 - t) * 6\n\t}\n\treturn p\n}\n\nexport function rgbNumberToColorString(rgb: number): string {\n\tconst b = rgb & 0xff\n\trgb >>= 8\n\tconst g = rgb & 0xff\n\trgb >>= 8\n\tconst r = rgb & 0xff\n\n\treturn \"#\" + twoHex(r) + twoHex(g) + twoHex(b)\n}\n\nexport function transformColorHsl(colorRgb: number, transform: (hsl: [number, number, number]) => [number, number, number]): number {\n\tconst transformResult = transform(\n\t\tcolorNumberTo3Components(\n\t\t\trgbToHsl(colorRgb)\n\t\t)\n\t)\n\ttransformResult[0] = Math.max(0, Math.min(255, Math.round(transformResult[0])))\n\ttransformResult[1] = Math.max(0, Math.min(255, Math.round(transformResult[1])))\n\ttransformResult[2] = Math.max(0, Math.min(255, Math.round(transformResult[2])))\n\treturn hslToRgb(\n\t\tcolor3ComponentsToNumber(\n\t\t\ttransformResult\n\t\t)\n\t)\n}","import {svgTag, tag} from \"@nartallax/cardboard-dom\"\nimport {rgbNumberToColorString, transformColorHsl} from \"common/color_utils\"\nimport {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport * as Matter from \"lib/matterjs/matter\"\nimport {BallTail} from \"sketches/zen_blockbreaker/ball_tail\"\n\ninterface Params {\n\treadonly ticksPerFrame: number\n\treadonly blockSizePx: number\n\treadonly width: number // blocks\n\treadonly height: number // blocks\n\treadonly ballSpeed: number // blocks per second\n\treadonly sideCount: number\n\treadonly colors: readonly number[]\n\treadonly render: \"matterjs\" | \"svg\"\n\treadonly tailLength: number // seconds\n\tonStatsChange(): void\n}\n\ninterface Ball {\n\treadonly body: Matter.Body\n\treadonly el: SVGCircleElement | null\n\treadonly color: number\n\treadonly tail: BallTail | null\n}\n\ninterface Block {\n\treadonly body: Matter.Body\n\treadonly el: SVGRectElement | null\n\tcolor: number\n}\n\n/** Multiplier of matter.js scale\n * matter.js starts to work weird if numbers are small\n * so we multiply those numbers by this value */\nconst matterMul = 100\n\nexport class ZenBlockbreaker {\n\treadonly root: HTMLElement\n\tprivate readonly matter: Matter.Engine\n\tprivate render: Matter.Render | null = null\n\tprivate svg: SVGSVGElement | null = null\n\tprivate ticksPerFrame: number\n\treadonly stats = new Map<number, number>()\n\treadonly balls: Ball[] = []\n\tprivate readonly blockColors: readonly number[]\n\tprivate timePassed = 0\n\n\tconstructor(private readonly params: Params) {\n\t\tthis.blockColors = this.params.colors.map(color => transformColorHsl(color,\n\t\t\t([h, s, l]) => [h, s * 0.75, l * 0.9]\n\t\t))\n\n\t\tthis.root = tag()\n\n\t\tthis.ticksPerFrame = params.ticksPerFrame\n\t\tthis.matter = Matter.Engine.create({\n\t\t\tgravity: {x: 0, y: 0},\n\t\t\tenableSleeping: true\n\t\t})\n\n\t\tif(this.params.render === \"matterjs\"){\n\t\t\tthis.makeMatterjsRender()\n\t\t} else {\n\t\t\tthis.makeSvgRender()\n\t\t}\n\n\t\tthis.makeWalls()\n\t\tthis.makeBlocks()\n\t\tthis.makeBalls()\n\n\t\tMatter.Events.on(this.matter, \"collisionEnd\", (e: Matter.IEventCollision<Matter.Engine>) => {\n\t\t\tfor(const pair of e.pairs){\n\t\t\t\tthis.processCollision(pair)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate makeSvgRender(): void {\n\t\tthis.svg = svgTag({tag: \"svg\"})\n\t\tthis.svg.setAttribute(\"width\", this.params.width + \"\")\n\t\tthis.svg.setAttribute(\"height\", this.params.height + \"\")\n\t\tthis.svg.setAttribute(\"viewBox\", `0 0 ${this.params.width} ${this.params.height}`)\n\t\tthis.svg.style.width = (this.params.width * this.params.blockSizePx) + \"px\"\n\t\tthis.svg.style.height = (this.params.height * this.params.blockSizePx) + \"px\"\n\t\tthis.root.appendChild(this.svg)\n\t}\n\n\tprivate makeMatterjsRender(): void {\n\t\tthis.render = Matter.Render.create({\n\t\t\telement: this.root,\n\t\t\tengine: this.matter,\n\t\t\toptions: {\n\t\t\t\twidth: this.params.width * this.params.blockSizePx,\n\t\t\t\theight: this.params.height * this.params.blockSizePx,\n\t\t\t\twireframes: false\n\t\t\t}\n\t\t})\n\t\tMatter.Render.lookAt(this.render, {\n\t\t\tmin: {x: 0, y: 0},\n\t\t\tmax: {x: this.params.width * matterMul, y: this.params.height * matterMul}\n\t\t})\n\t}\n\n\tsetTicksPerFrame(ticksPerFrame: number): void {\n\t\tthis.ticksPerFrame = ticksPerFrame\n\t}\n\n\tprivate makeBlocks(): void {\n\t\tconst cx = this.params.width / 2\n\t\tconst cy = this.params.height / 2\n\t\tfor(let x = 0; x < this.params.width; x++){\n\t\t\tfor(let y = 0; y < this.params.height; y++){\n\t\t\t\tconst bx = x + 0.5\n\t\t\t\tconst by = y + 0.5\n\t\t\t\tconst angle = Math.atan2(by - cy, bx - cx)\n\n\t\t\t\tlet part = angle / (Math.PI * 2)\n\t\t\t\twhile(part < 0){\n\t\t\t\t\tpart++\n\t\t\t\t}\n\t\t\t\tpart *= this.params.sideCount\n\t\t\t\tpart = Math.floor(part)\n\n\t\t\t\tconst color = part + 1\n\t\t\t\tthis.makeBlock(bx, by, color)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate makeBalls(): void {\n\t\tconst partSector = (Math.PI * 2) / this.params.sideCount\n\t\tfor(let part = 0; part < this.params.sideCount; part++){\n\t\t\tconst angle = (part + 0.5) * partSector\n\t\t\tconst sin = Math.sin(angle)\n\t\t\tconst cos = Math.cos(angle)\n\t\t\tconst distanceToHWall = Math.abs(Math.abs(cos) < 0.01 ? this.params.height / 2 : (this.params.width / 2) / cos)\n\t\t\tconst distanceToWWall = Math.abs(Math.abs(sin) < 0.01 ? this.params.width / 2 : (this.params.height / 2) / sin)\n\t\t\tconst distanceToWall = Math.min(distanceToHWall, distanceToWWall)\n\t\t\tconst distanceToBall = Math.abs(distanceToWall / 2)\n\t\t\tconst x = (distanceToBall * cos) + this.params.width / 2\n\t\t\tconst y = (distanceToBall * sin) + this.params.height / 2\n\t\t\tthis.makeBall(x, y, part + 1)\n\t\t}\n\t}\n\n\tprivate processCollision(collision: Matter.Pair): void {\n\t\tconst ball = this.getBallFromCollision(collision)\n\t\tif(!ball){\n\t\t\t// what?\n\t\t\treturn\n\t\t}\n\n\t\tconst velocityAngle = Math.atan2(ball.body.velocity.y, ball.body.velocity.x)\n\t\t// if we don't do this - ball will gradually lose speed, which is bad\n\t\t// yes, everything has restitution = 1 and friction = 0\n\t\t// but the very nature of incremental simulations is lossy, no way around this\n\t\tthis.setBallSpeed(ball, velocityAngle)\n\n\t\tconst block = this.getBlockFromCollision(collision)\n\t\tif(!block){\n\t\t\t// wall?\n\t\t\treturn\n\t\t}\n\t\tthis.setBlockColor(block, block.color, ball.color)\n\t\tthis.params.onStatsChange()\n\t}\n\n\tprivate setBallSpeed(ball: Ball, angle: number): void {\n\t\tMatter.Body.setVelocity(ball.body, {\n\t\t\tx: Math.cos(angle) * this.params.ballSpeed,\n\t\t\ty: Math.sin(angle) * this.params.ballSpeed\n\t\t})\n\t}\n\n\tprivate makeBlock(x: number, y: number, color: number): void {\n\t\tconst body = Matter.Bodies.rectangle(x * matterMul, y * matterMul, 1 * matterMul, 1 * matterMul, {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {\n\t\t\t\tfillStyle: \"black\"\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tlabel: `Block at ${x},${y}`,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 0,\n\t\t\t\tmask: 0\n\t\t\t}\n\t\t})\n\t\tMatter.Composite.add(this.matter.world, [body])\n\n\t\tlet block: Block = {body, color, el: null}\n\t\tif(this.params.render === \"svg\"){\n\t\t\tconst el = svgTag({tag: \"rect\",\n\t\t\t\tattrs: {\n\t\t\t\t\tfill: \"block\",\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tx: x - 0.5,\n\t\t\t\t\ty: y - 0.5\n\t\t\t\t}})\n\t\t\tthis.svg!.appendChild(el)\n\n\t\t\tblock = {...block, el}\n\t\t}\n\n\t\tbody.plugin.block = block\n\n\t\tthis.setBlockColor(block, null, color)\n\t}\n\n\tprivate setBlockColor(block: Block, oldColor: number | null, newColor: number): void {\n\t\tif(oldColor !== null){\n\t\t\tthis.stats.set(oldColor, (this.stats.get(oldColor) ?? 0) - 1)\n\t\t}\n\t\tthis.stats.set(newColor, (this.stats.get(newColor) ?? 0) + 1)\n\n\t\tblock.color = newColor\n\t\tblock.body.collisionFilter.category = 1 << newColor\n\t\tblock.body.collisionFilter.mask = 0x8fffffff & (~(1 << newColor))\n\n\t\tconst colorStr = rgbNumberToColorString(this.blockColors[newColor]!)\n\t\tif(this.params.render === \"matterjs\"){\n\t\t\tblock.body.render.fillStyle = colorStr\n\t\t} else {\n\t\t\tblock.el!.style.fill = colorStr\n\t\t}\n\t}\n\n\tprivate getBlockFromCollision(pair: Matter.Pair): Block | null {\n\t\treturn this.getBlock(pair.bodyA) ?? this.getBlock(pair.bodyB)\n\t}\n\n\tprivate getBlock(block: Matter.Body): Block | null {\n\t\treturn block.plugin.block ?? null\n\t}\n\n\tprivate makeBall(x: number, y: number, color: number): void {\n\t\tconst colorRgbSrc = this.params.colors[color]!\n\t\tconst colorStr = rgbNumberToColorString(transformColorHsl(colorRgbSrc,\n\t\t\t([h, s, l]) => [h, s * 1.1, l * 1.25]\n\t\t))\n\n\t\tconst body = Matter.Bodies.circle(x * matterMul, y * matterMul, 0.5 * matterMul, {\n\t\t\tisStatic: false,\n\t\t\trender: {\n\t\t\t\tfillStyle: colorStr\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tfriction: 0,\n\t\t\tfrictionAir: 0,\n\t\t\tfrictionStatic: 0,\n\t\t\tlabel: \"Ball \" + color,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 1 << color,\n\t\t\t\tmask: 0x8fffffff & (~(1 << color))\n\t\t\t}\n\t\t})\n\n\t\tMatter.Composite.add(this.matter.world, [body])\n\n\t\tlet ball: Ball = {body, color, el: null, tail: null}\n\n\t\tif(this.params.render === \"svg\"){\n\t\t\tconst tailColor = rgbNumberToColorString(transformColorHsl(colorRgbSrc,\n\t\t\t\t([h, s, l]) => [h, s * 0.9, l * 0.9]\n\t\t\t))\n\t\t\tconst tail = new BallTail(this.params.tailLength, tailColor)\n\t\t\tthis.svg!.appendChild(tail.el)\n\n\t\t\tconst el = svgTag({tag: \"circle\", attrs: {\n\t\t\t\tcx: x, cy: y, r: 0.5, fill: colorStr\n\t\t\t}})\n\t\t\tthis.svg!.appendChild(el)\n\n\t\t\tball = {...ball, el, tail}\n\t\t}\n\n\t\tbody.plugin.ball = ball\n\t\tthis.balls.push(ball)\n\n\t\tconst angle = Math.random() * Math.PI * 2\n\t\tthis.setBallSpeed(ball, angle)\n\t}\n\n\tprivate getBallFromCollision(pair: Matter.Pair): Ball | null {\n\t\treturn this.getBall(pair.bodyA) ?? this.getBall(pair.bodyB)\n\t}\n\n\tprivate getBall(body: Matter.Body): Ball | null {\n\t\treturn body.plugin.ball ?? null\n\t}\n\n\tprivate makeWalls(): void {\n\t\tconst wallThickness = 10\n\t\tconst wallProps: Matter.IChamferableBodyDefinition = {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {fillStyle: \"black\"},\n\t\t\trestitution: 1,\n\t\t\tlabel: \"wall\"\n\t\t}\n\t\tMatter.Composite.add(this.matter.world, [\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, (-wallThickness / 2) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, ((wallThickness / 2) + this.params.height) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(-wallThickness / 2) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t((wallThickness / 2) + this.params.width) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t)\n\t\t])\n\t}\n\n\trun(): void {\n\t\tif(this.render){\n\t\t\tMatter.Render.run(this.render)\n\t\t}\n\t\tconst stop = cycledRequestAnimationFrame(this.root, delta => {\n\t\t\tdelta /= 1000 // delta in seconds\n\t\t\tif(delta > 0.1){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tfor(let i = 0; i < this.ticksPerFrame; i++){\n\t\t\t\t\tthis.timePassed += delta\n\t\t\t\t\tMatter.Engine.update(this.matter, delta * 1000)\n\t\t\t\t\tif(this.params.render === \"svg\"){\n\t\t\t\t\t\tthis.updateBallElements()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(e){\n\t\t\t\tstop()\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}, () => {\n\t\t\tif(this.render){\n\t\t\t\tMatter.Render.stop(this.render)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate updateBallElements(): void {\n\t\tfor(const ball of this.balls){\n\t\t\tconst x = ball.body.position.x / matterMul\n\t\t\tconst y = ball.body.position.y / matterMul\n\n\t\t\tconst el = ball.el!\n\t\t\tel.setAttribute(\"cx\", x + \"\")\n\t\t\tel.setAttribute(\"cy\", y + \"\")\n\n\t\t\tball.tail!.update(this.timePassed, x, y)\n\t\t}\n\t}\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function\n * Unmounting root also stops it */\nexport function cycledRequestAnimationFrame(root: HTMLElement | SVGElement, handler: (delta: number) => void, onStop?: () => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\tonStop?.()\n\t\t\treturn\n\t\t}\n\t\tif(!root.isConnected){\n\t\t\tonStop?.()\n\t\t\tstopped = true\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","/* !\nThis is alpha-something build of matter.js with some alterations\nthose alterations are related to bugfixes and optimizations\noriginal license below\n\n * matter-js 0.18.0-alpha+0eeceb5 by @liabru\n * Experimental pre-release build.\n *   http://brm.io/matter-js/\n * License MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === \"object\" && typeof module === \"object\"){\n\t\tmodule.exports = factory()\n\t} else if(typeof define === \"function\" && define.amd){\n\t\tdefine(\"Matter\", [], factory)\n\t} else if(typeof exports === \"object\"){\n\t\texports[\"Matter\"] = factory()\n\t} else {\n\t\troot[\"Matter\"] = factory()\n\t}\n})(this, function() {\n\treturn /** ****/ (function(modules) { // webpackBootstrap\n\t\t/** ****/ \t// The module cache\n\t\t/** ****/ \tvar installedModules = {}\n\t\t/** ****/\n\t\t/** ****/ \t// The require function\n\t\t/** ****/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Check if module is in cache\n\t\t\t/** ****/ \t\tif(installedModules[moduleId]){\n\t\t\t\t/** ****/ \t\t\treturn installedModules[moduleId].exports\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/** ****/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t\t/** ****/ \t\t\ti: moduleId,\n\t\t\t\t/** ****/ \t\t\tl: false,\n\t\t\t\t/** ****/ \t\t\texports: {}\n\t\t\t\t/** ****/}\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Execute the module function\n\t\t\t/** ****/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__)\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Flag the module as loaded\n\t\t\t/** ****/ \t\tmodule.l = true\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Return the exports of the module\n\t\t\t/** ****/ \t\treturn module.exports\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// expose the modules object (__webpack_modules__)\n\t\t/** ****/ \t__webpack_require__.m = modules\n\t\t/** ****/\n\t\t/** ****/ \t// expose the module cache\n\t\t/** ****/ \t__webpack_require__.c = installedModules\n\t\t/** ****/\n\t\t/** ****/ \t// define getter function for harmony exports\n\t\t/** ****/ \t__webpack_require__.d = function(exports, name, getter) {\n\t\t\t/** ****/ \t\tif(!__webpack_require__.o(exports, name)){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, name, {enumerable: true, get: getter})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// define __esModule on exports\n\t\t/** ****/ \t__webpack_require__.r = function(exports) {\n\t\t\t/** ****/ \t\tif(typeof Symbol !== \"undefined\" && Symbol.toStringTag){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, {value: \"Module\"})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\tObject.defineProperty(exports, \"__esModule\", {value: true})\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// create a fake namespace object\n\t\t/** ****/ \t// mode & 1: value is a module id, require it\n\t\t/** ****/ \t// mode & 2: merge all properties of value into the ns\n\t\t/** ****/ \t// mode & 4: return value when already ns object\n\t\t/** ****/ \t// mode & 8|1: behave like require\n\t\t/** ****/ \t__webpack_require__.t = function(value, mode) {\n\t\t\t/** ****/ \t\tif(mode & 1){\n\t\t\t\tvalue = __webpack_require__(value)\n\t\t\t}\n\t\t\t/** ****/ \t\tif(mode & 8){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tif((mode & 4) && typeof value === \"object\" && value && value.__esModule){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tvar ns = Object.create(null)\n\t\t\t/** ****/ \t\t__webpack_require__.r(ns)\n\t\t\t/** ****/ \t\tObject.defineProperty(ns, \"default\", {enumerable: true, value: value})\n\t\t\t/** ****/ \t\tif(mode & 2 && typeof value !== \"string\"){\n\t\t\t\tfor(var key in value){\n\t\t\t\t\t__webpack_require__.d(ns, key, function(key) {\n\t\t\t\t\t\treturn value[key]\n\t\t\t\t\t}.bind(null, key))\n\t\t\t\t}\n\t\t\t}\n\t\t\t/** ****/ \t\treturn ns\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t\t/** ****/ \t__webpack_require__.n = function(module) {\n\t\t\t/** ****/ \t\tvar getter = module && module.__esModule\n\t\t\t/** ****/ \t\t\t? function getDefault() {\n\t\t\t\t\treturn module[\"default\"]\n\t\t\t\t}\n\t\t\t/** ****/ \t\t\t: function getModuleExports() {\n\t\t\t\t\treturn module\n\t\t\t\t}\n\t\t\t/** ****/ \t\t__webpack_require__.d(getter, \"a\", getter)\n\t\t\t/** ****/ \t\treturn getter\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// Object.prototype.hasOwnProperty.call\n\t\t/** ****/ \t__webpack_require__.o = function(object, property) {\n\t\t\treturn Object.prototype.hasOwnProperty.call(object, property)\n\t\t}\n\t\t/** ****/\n\t\t/** ****/ \t// __webpack_public_path__\n\t\t/** ****/ \t__webpack_require__.p = \"\"\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// Load entry module and return exports\n\t\t/** ****/ \treturn __webpack_require__(__webpack_require__.s = 21)\n\t\t/** ****/ })\n\t/** **********************************************************************/\n\t/** ****/ ([\n\t\t/* 0 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\n\t\t\tvar Common = {}\n\n\t\t\tmodule.exports = Common;\n\n\t\t\t(function() {\n\n\t\t\t\tCommon._nextId = 0\n\t\t\t\tCommon._seed = 0\n\t\t\t\tCommon._nowStartTime = +(new Date())\n\t\t\t\tCommon._warnedOnce = {}\n\t\t\t\tCommon._decomp = null\n\n\t\t\t\t/**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n\t\t\t\tCommon.extend = function(obj, deep) {\n\t\t\t\t\tvar argsStart,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tdeepClone\n\n\t\t\t\t\tif(typeof deep === \"boolean\"){\n\t\t\t\t\t\targsStart = 2\n\t\t\t\t\t\tdeepClone = deep\n\t\t\t\t\t} else {\n\t\t\t\t\t\targsStart = 1\n\t\t\t\t\t\tdeepClone = true\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = argsStart; i < arguments.length; i++){\n\t\t\t\t\t\tvar source = arguments[i]\n\n\t\t\t\t\t\tif(source){\n\t\t\t\t\t\t\tfor(var prop in source){\n\t\t\t\t\t\t\t\tif(deepClone && source[prop] && source[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\tif(!obj[prop] || obj[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\t\tobj[prop] = obj[prop] || {}\n\t\t\t\t\t\t\t\t\t\tCommon.extend(obj[prop], deepClone, source[prop])\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n\t\t\t\tCommon.clone = function(obj, deep) {\n\t\t\t\t\treturn Common.extend({}, deep, obj)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n\t\t\t\tCommon.keys = function(obj) {\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\treturn Object.keys(obj)\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tvar keys = []\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tkeys.push(key)\n\t\t\t\t\t}\n\t\t\t\t\treturn keys\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n\t\t\t\tCommon.values = function(obj) {\n\t\t\t\t\tvar values = []\n\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\tvar keys = Object.keys(obj)\n\t\t\t\t\t\tfor(var i = 0; i < keys.length; i++){\n\t\t\t\t\t\t\tvalues.push(obj[keys[i]])\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn values\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tvalues.push(obj[key])\n\t\t\t\t\t}\n\t\t\t\t\treturn values\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n\t\t\t\tCommon.get = function(obj, path, begin, end) {\n\t\t\t\t\tpath = path.split(\".\").slice(begin, end)\n\n\t\t\t\t\tfor(var i = 0; i < path.length; i += 1){\n\t\t\t\t\t\tobj = obj[path[i]]\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n\t\t\t\tCommon.set = function(obj, path, val, begin, end) {\n\t\t\t\t\tvar parts = path.split(\".\").slice(begin, end)\n\t\t\t\t\tCommon.get(obj, path, 0, -1)[parts[parts.length - 1]] = val\n\t\t\t\t\treturn val\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n\t\t\t\tCommon.shuffle = function(array) {\n\t\t\t\t\tfor(var i = array.length - 1; i > 0; i--){\n\t\t\t\t\t\tvar j = Math.floor(Common.random() * (i + 1))\n\t\t\t\t\t\tvar temp = array[i]\n\t\t\t\t\t\tarray[i] = array[j]\n\t\t\t\t\t\tarray[j] = temp\n\t\t\t\t\t}\n\t\t\t\t\treturn array\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n\t\t\t\tCommon.choose = function(choices) {\n\t\t\t\t\treturn choices[Math.floor(Common.random() * choices.length)]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n\t\t\t\tCommon.isElement = function(obj) {\n\t\t\t\t\tif(typeof HTMLElement !== \"undefined\"){\n\t\t\t\t\t\treturn obj instanceof HTMLElement\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!(obj && obj.nodeType && obj.nodeName)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n\t\t\t\tCommon.isArray = function(obj) {\n\t\t\t\t\treturn Object.prototype.toString.call(obj) === \"[object Array]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n\t\t\t\tCommon.isFunction = function(obj) {\n\t\t\t\t\treturn typeof obj === \"function\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n\t\t\t\tCommon.isPlainObject = function(obj) {\n\t\t\t\t\treturn typeof obj === \"object\" && obj.constructor === Object\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n\t\t\t\tCommon.isString = function(obj) {\n\t\t\t\t\treturn toString.call(obj) === \"[object String]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n\t\t\t\tCommon.clamp = function(value, min, max) {\n\t\t\t\t\tif(value < min){\n\t\t\t\t\t\treturn min\n\t\t\t\t\t}\n\t\t\t\t\tif(value > max){\n\t\t\t\t\t\treturn max\n\t\t\t\t\t}\n\t\t\t\t\treturn value\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n\t\t\t\tCommon.sign = function(value) {\n\t\t\t\t\treturn value < 0 ? -1 : 1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n\t\t\t\tCommon.now = function() {\n\t\t\t\t\tif(typeof window !== \"undefined\" && window.performance){\n\t\t\t\t\t\tif(window.performance.now){\n\t\t\t\t\t\t\treturn window.performance.now()\n\t\t\t\t\t\t} else if(window.performance.webkitNow){\n\t\t\t\t\t\t\treturn window.performance.webkitNow()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Date.now){\n\t\t\t\t\t\treturn Date.now()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (new Date()) - Common._nowStartTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n\t\t\t\tCommon.random = function(min, max) {\n\t\t\t\t\tmin = (typeof min !== \"undefined\") ? min : 0\n\t\t\t\t\tmax = (typeof max !== \"undefined\") ? max : 1\n\t\t\t\t\treturn min + _seededRandom() * (max - min)\n\t\t\t\t}\n\n\t\t\t\tvar _seededRandom = function() {\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Linear_congruential_generator\n\t\t\t\t\tCommon._seed = (Common._seed * 9301 + 49297) % 233280\n\t\t\t\t\treturn Common._seed / 233280\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n\t\t\t\tCommon.colorToNumber = function(colorString) {\n\t\t\t\t\tcolorString = colorString.replace(\"#\", \"\")\n\n\t\t\t\t\tif(colorString.length == 3){\n\t\t\t\t\t\tcolorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn parseInt(colorString, 16)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n\t\t\t\tCommon.logLevel = 1\n\n\t\t\t\t/**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.log = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.log.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.info = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 2){\n\t\t\t\t\t\tconsole.info.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warn = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.warn.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warnOnce = function() {\n\t\t\t\t\tvar message = Array.prototype.slice.call(arguments).join(\" \")\n\n\t\t\t\t\tif(!Common._warnedOnce[message]){\n\t\t\t\t\t\tCommon.warn(message)\n\t\t\t\t\t\tCommon._warnedOnce[message] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n\t\t\t\tCommon.deprecated = function(obj, prop, warning) {\n\t\t\t\t\tobj[prop] = Common.chain(function() {\n\t\t\t\t\t\tCommon.warnOnce(\"🔅 deprecated 🔅\", warning)\n\t\t\t\t\t}, obj[prop])\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n\t\t\t\tCommon.nextId = function() {\n\t\t\t\t\treturn Common._nextId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n\t\t\t\tCommon.indexOf = function(haystack, needle) {\n\t\t\t\t\tif(haystack.indexOf){\n\t\t\t\t\t\treturn haystack.indexOf(needle)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < haystack.length; i++){\n\t\t\t\t\t\tif(haystack[i] === needle){\n\t\t\t\t\t\t\treturn i\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n\t\t\t\tCommon.map = function(list, func) {\n\t\t\t\t\tif(list.map){\n\t\t\t\t\t\treturn list.map(func)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mapped = []\n\n\t\t\t\t\tfor(var i = 0; i < list.length; i += 1){\n\t\t\t\t\t\tmapped.push(func(list[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\treturn mapped\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n\t\t\t\tCommon.topologicalSort = function(graph) {\n\t\t\t\t\t// https://github.com/mgechev/javascript-algorithms\n\t\t\t\t\t// Copyright (c) Minko Gechev (MIT license)\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar result = [],\n\t\t\t\t\t\tvisited = [],\n\t\t\t\t\t\ttemp = []\n\n\t\t\t\t\tfor(var node in graph){\n\t\t\t\t\t\tif(!visited[node] && !temp[node]){\n\t\t\t\t\t\t\tCommon._topologicalSort(node, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\tCommon._topologicalSort = function(node, visited, temp, graph, result) {\n\t\t\t\t\tvar neighbors = graph[node] || []\n\t\t\t\t\ttemp[node] = true\n\n\t\t\t\t\tfor(var i = 0; i < neighbors.length; i += 1){\n\t\t\t\t\t\tvar neighbor = neighbors[i]\n\n\t\t\t\t\t\tif(temp[neighbor]){\n\t\t\t\t\t\t\t// skip circular dependencies\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!visited[neighbor]){\n\t\t\t\t\t\t\tCommon._topologicalSort(neighbor, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttemp[node] = false\n\t\t\t\t\tvisited[node] = true\n\n\t\t\t\t\tresult.push(node)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n\t\t\t\tCommon.chain = function() {\n\t\t\t\t\tvar funcs = []\n\n\t\t\t\t\tfor(var i = 0; i < arguments.length; i += 1){\n\t\t\t\t\t\tvar func = arguments[i]\n\n\t\t\t\t\t\tif(func._chained){\n\t\t\t\t\t\t\t// flatten already chained functions\n\t\t\t\t\t\t\tfuncs.push.apply(funcs, func._chained)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfuncs.push(func)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar chain = function() {\n\t\t\t\t\t\t// https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n\t\t\t\t\t\tvar lastResult,\n\t\t\t\t\t\t\targs = new Array(arguments.length)\n\n\t\t\t\t\t\tfor(var i = 0, l = arguments.length; i < l; i++){\n\t\t\t\t\t\t\targs[i] = arguments[i]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(i = 0; i < funcs.length; i += 1){\n\t\t\t\t\t\t\tvar result = funcs[i].apply(lastResult, args)\n\n\t\t\t\t\t\t\tif(typeof result !== \"undefined\"){\n\t\t\t\t\t\t\t\tlastResult = result\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastResult\n\t\t\t\t\t}\n\n\t\t\t\t\tchain._chained = funcs\n\n\t\t\t\t\treturn chain\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathBefore = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tCommon.get(base, path)\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathAfter = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tCommon.get(base, path),\n\t\t\t\t\t\tfunc\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n\t\t\t\tCommon.setDecomp = function(decomp) {\n\t\t\t\t\tCommon._decomp = decomp\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n\t\t\t\tCommon.getDecomp = function() {\n\t\t\t\t\t// get user provided decomp if set\n\t\t\t\t\tvar decomp = Common._decomp\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// otherwise from window global\n\t\t\t\t\t\tif(!decomp && typeof window !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = window.decomp\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise from node global\n\t\t\t\t\t\tif(!decomp && typeof global !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = global.decomp\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e){\n\t\t\t\t\t\t// decomp not available\n\t\t\t\t\t\tdecomp = null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn decomp\n\t\t\t\t}\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 1 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\n\t\t\tvar Bounds = {}\n\n\t\t\tmodule.exports = Bounds;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n\t\t\t\tBounds.create = function(vertices) {\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: 0, y: 0},\n\t\t\t\t\t\tmax: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(vertices){\n\t\t\t\t\t\tBounds.update(bounds, vertices)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bounds\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n\t\t\t\tBounds.update = function(bounds, vertices, velocity) {\n\t\t\t\t\tbounds.min.x = Infinity\n\t\t\t\t\tbounds.max.x = -Infinity\n\t\t\t\t\tbounds.min.y = Infinity\n\t\t\t\t\tbounds.max.y = -Infinity\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar vertex = vertices[i]\n\t\t\t\t\t\tif(vertex.x > bounds.max.x){\n\t\t\t\t\t\t\tbounds.max.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.x < bounds.min.x){\n\t\t\t\t\t\t\tbounds.min.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y > bounds.max.y){\n\t\t\t\t\t\t\tbounds.max.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y < bounds.min.y){\n\t\t\t\t\t\t\tbounds.min.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(velocity){\n\t\t\t\t\t\tif(velocity.x > 0){\n\t\t\t\t\t\t\tbounds.max.x += velocity.x\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.x += velocity.x\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(velocity.y > 0){\n\t\t\t\t\t\t\tbounds.max.y += velocity.y\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.y += velocity.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n\t\t\t\tBounds.contains = function(bounds, point) {\n\t\t\t\t\treturn point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n\t\t\t\tBounds.overlaps = function(boundsA, boundsB) {\n\t\t\t\t\treturn (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n\t\t\t\tBounds.translate = function(bounds, vector) {\n\t\t\t\t\tbounds.min.x += vector.x\n\t\t\t\t\tbounds.max.x += vector.x\n\t\t\t\t\tbounds.min.y += vector.y\n\t\t\t\t\tbounds.max.y += vector.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n\t\t\t\tBounds.shift = function(bounds, position) {\n\t\t\t\t\tvar deltaX = bounds.max.x - bounds.min.x,\n\t\t\t\t\t\tdeltaY = bounds.max.y - bounds.min.y\n\n\t\t\t\t\tbounds.min.x = position.x\n\t\t\t\t\tbounds.max.x = position.x + deltaX\n\t\t\t\t\tbounds.min.y = position.y\n\t\t\t\t\tbounds.max.y = position.y + deltaY\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 2 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n\t\t\t// TUDDO: consider params for reusing vector objects\n\n\t\t\tvar Vector = {}\n\n\t\t\tmodule.exports = Vector;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n\t\t\t\tVector.create = function(x, y) {\n\t\t\t\t\treturn {x: x || 0, y: y || 0}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n\t\t\t\tVector.clone = function(vector) {\n\t\t\t\t\treturn {x: vector.x, y: vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n\t\t\t\tVector.magnitude = function(vector) {\n\t\t\t\t\treturn Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n\t\t\t\tVector.magnitudeSquared = function(vector) {\n\t\t\t\t\treturn (vector.x * vector.x) + (vector.y * vector.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n\t\t\t\tVector.rotate = function(vector, angle, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = vector.x * cos - vector.y * sin\n\t\t\t\t\toutput.y = vector.x * sin + vector.y * cos\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n\t\t\t\tVector.rotateAbout = function(vector, angle, point, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin)\n\t\t\t\t\toutput.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos)\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n\t\t\t\tVector.normalise = function(vector) {\n\t\t\t\t\tvar magnitude = Vector.magnitude(vector)\n\t\t\t\t\tif(magnitude === 0){\n\t\t\t\t\t\treturn {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\treturn {x: vector.x / magnitude, y: vector.y / magnitude}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n\t\t\t\tVector.dot = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n\t\t\t\tVector.cross = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n\t\t\t\tVector.cross3 = function(vectorA, vectorB, vectorC) {\n\t\t\t\t\treturn (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n\t\t\t\tVector.add = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x + vectorB.x\n\t\t\t\t\toutput.y = vectorA.y + vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n\t\t\t\tVector.sub = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x - vectorB.x\n\t\t\t\t\toutput.y = vectorA.y - vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n\t\t\t\tVector.mult = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x * scalar, y: vector.y * scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n\t\t\t\tVector.div = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x / scalar, y: vector.y / scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n\t\t\t\tVector.perp = function(vector, negate) {\n\t\t\t\t\tnegate = negate === true ? -1 : 1\n\t\t\t\t\treturn {x: negate * -vector.y, y: negate * vector.x}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n\t\t\t\tVector.neg = function(vector) {\n\t\t\t\t\treturn {x: -vector.x, y: -vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n\t\t\t\tVector.angle = function(vectorA, vectorB) {\n\t\t\t\t\treturn Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n\t\t\t\tVector._temp = [\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create()\n\t\t\t\t]\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 3 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\n\t\t\tvar Vertices = {}\n\n\t\t\tmodule.exports = Vertices\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n\t\t\t\tVertices.create = function(points, body) {\n\t\t\t\t\tvar vertices = []\n\n\t\t\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\t\t\tvar point = points[i],\n\t\t\t\t\t\t\tvertex = {\n\t\t\t\t\t\t\t\tx: point.x,\n\t\t\t\t\t\t\t\ty: point.y,\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tbody: body,\n\t\t\t\t\t\t\t\tisInternal: false\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertices.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.fromPath = function(path, body) {\n\t\t\t\t\tvar pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n\t\t\t\t\t\tpoints = []\n\n\t\t\t\t\tpath.replace(pathPattern, function(match, x, y) {\n\t\t\t\t\t\tpoints.push({x: parseFloat(x), y: parseFloat(y)})\n\t\t\t\t\t})\n\n\t\t\t\t\treturn Vertices.create(points, body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n\t\t\t\tVertices.centre = function(vertices) {\n\t\t\t\t\tvar area = Vertices.area(vertices, true),\n\t\t\t\t\t\tcentre = {x: 0, y: 0},\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\ttemp,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tj = (i + 1) % vertices.length\n\t\t\t\t\t\tcross = Vector.cross(vertices[i], vertices[j])\n\t\t\t\t\t\ttemp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross)\n\t\t\t\t\t\tcentre = Vector.add(centre, temp)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(centre, 6 * area)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n\t\t\t\tVertices.mean = function(vertices) {\n\t\t\t\t\tvar average = {x: 0, y: 0}\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\taverage.x += vertices[i].x\n\t\t\t\t\t\taverage.y += vertices[i].y\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(average, vertices.length)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n\t\t\t\tVertices.area = function(vertices, signed) {\n\t\t\t\t\tvar area = 0,\n\t\t\t\t\t\tj = vertices.length - 1\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tarea += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y)\n\t\t\t\t\t\tj = i\n\t\t\t\t\t}\n\n\t\t\t\t\tif(signed){\n\t\t\t\t\t\treturn area / 2\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.abs(area) / 2\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n\t\t\t\tVertices.inertia = function(vertices, mass) {\n\t\t\t\t\tvar numerator = 0,\n\t\t\t\t\t\tdenominator = 0,\n\t\t\t\t\t\tv = vertices,\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find the polygon's moment of inertia, using second moment of area\n\t\t\t\t\t// from equations at http://www.physicsforums.com/showthread.php?t=25293\n\t\t\t\t\tfor(var n = 0; n < v.length; n++){\n\t\t\t\t\t\tj = (n + 1) % v.length\n\t\t\t\t\t\tcross = Math.abs(Vector.cross(v[j], v[n]))\n\t\t\t\t\t\tnumerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]))\n\t\t\t\t\t\tdenominator += cross\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (mass / 6) * (numerator / denominator)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n\t\t\t\tVertices.translate = function(vertices, vector, scalar) {\n\t\t\t\t\tscalar = typeof scalar !== \"undefined\" ? scalar : 1\n\n\t\t\t\t\tvar verticesLength = vertices.length,\n\t\t\t\t\t\ttranslateX = vector.x * scalar,\n\t\t\t\t\t\ttranslateY = vector.y * scalar,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertices[i].x += translateX\n\t\t\t\t\t\tvertices[i].y += translateY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n\t\t\t\tVertices.rotate = function(vertices, angle, point) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle),\n\t\t\t\t\t\tpointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\tdx,\n\t\t\t\t\t\tdy,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdx = vertex.x - pointX\n\t\t\t\t\t\tdy = vertex.y - pointY\n\t\t\t\t\t\tvertex.x = pointX + (dx * cos - dy * sin)\n\t\t\t\t\t\tvertex.y = pointY + (dx * sin + dy * cos)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n\t\t\t\tVertices.contains = function(vertices, point) {\n\t\t\t\t\tvar pointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex = vertices[verticesLength - 1],\n\t\t\t\t\t\tnextVertex\n\n\t\t\t\t\tfor(var i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tnextVertex = vertices[i]\n\n\t\t\t\t\t\tif((pointX - vertex.x) * (nextVertex.y - vertex.y)\n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertex = nextVertex\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n\t\t\t\tVertices.scale = function(vertices, scaleX, scaleY, point) {\n\t\t\t\t\tif(scaleX === 1 && scaleY === 1){\n\t\t\t\t\t\treturn vertices\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint = point || Vertices.centre(vertices)\n\n\t\t\t\t\tvar vertex,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdelta = Vector.sub(vertex, point)\n\t\t\t\t\t\tvertices[i].x = point.x + delta.x * scaleX\n\t\t\t\t\t\tvertices[i].y = point.y + delta.y * scaleY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n\t\t\t\tVertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n\t\t\t\t\tif(typeof radius === \"number\"){\n\t\t\t\t\t\tradius = [radius]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tradius = radius || [8]\n\t\t\t\t\t}\n\n\t\t\t\t\t// quality defaults to -1, which is auto\n\t\t\t\t\tquality = (typeof quality !== \"undefined\") ? quality : -1\n\t\t\t\t\tqualityMin = qualityMin || 2\n\t\t\t\t\tqualityMax = qualityMax || 14\n\n\t\t\t\t\tvar newVertices = []\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n\t\t\t\t\t\t\tvertex = vertices[i],\n\t\t\t\t\t\t\tnextVertex = vertices[(i + 1) % vertices.length],\n\t\t\t\t\t\t\tcurrentRadius = radius[i < radius.length ? i : radius.length - 1]\n\n\t\t\t\t\t\tif(currentRadius === 0){\n\t\t\t\t\t\t\tnewVertices.push(vertex)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar prevNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: vertex.y - prevVertex.y,\n\t\t\t\t\t\t\ty: prevVertex.x - vertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar nextNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: nextVertex.y - vertex.y,\n\t\t\t\t\t\t\ty: vertex.x - nextVertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n\t\t\t\t\t\t\tradiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n\t\t\t\t\t\t\tmidNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n\t\t\t\t\t\t\tscaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius))\n\n\t\t\t\t\t\tvar precision = quality\n\n\t\t\t\t\t\tif(quality === -1){\n\t\t\t\t\t\t\t// automatically decide precision\n\t\t\t\t\t\t\tprecision = Math.pow(currentRadius, 0.32) * 1.75\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprecision = Common.clamp(precision, qualityMin, qualityMax)\n\n\t\t\t\t\t\t// use an even value for precision, more likely to reduce axes by using symmetry\n\t\t\t\t\t\tif(precision % 2 === 1){\n\t\t\t\t\t\t\tprecision += 1\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n\t\t\t\t\t\t\ttheta = alpha / precision\n\n\t\t\t\t\t\tfor(var j = 0; j < precision; j++){\n\t\t\t\t\t\t\tnewVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newVertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.clockwiseSort = function(vertices) {\n\t\t\t\t\tvar centre = Vertices.mean(vertices)\n\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\treturn Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n\t\t\t\tVertices.isConvex = function(vertices) {\n\t\t\t\t\t// http://paulbourke.net/geometry/polygonmesh/\n\t\t\t\t\t// Copyright (c) Paul Bourke (use permitted)\n\n\t\t\t\t\tvar flag = 0,\n\t\t\t\t\t\tn = vertices.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tz\n\n\t\t\t\t\tif(n < 3){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < n; i++){\n\t\t\t\t\t\tj = (i + 1) % n\n\t\t\t\t\t\tk = (i + 2) % n\n\t\t\t\t\t\tz = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y)\n\t\t\t\t\t\tz -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x)\n\n\t\t\t\t\t\tif(z < 0){\n\t\t\t\t\t\t\tflag |= 1\n\t\t\t\t\t\t} else if(z > 0){\n\t\t\t\t\t\t\tflag |= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(flag === 3){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flag !== 0){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n\t\t\t\tVertices.hull = function(vertices) {\n\t\t\t\t\t// http://geomalgorithms.com/a10-_hull-1.html\n\n\t\t\t\t\tvar upper = [],\n\t\t\t\t\t\tlower = [],\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// sort vertices on x-axis (y-axis for ties)\n\t\t\t\t\tvertices = vertices.slice(0)\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\tvar dx = vertexA.x - vertexB.x\n\t\t\t\t\t\treturn dx !== 0 ? dx : vertexA.y - vertexB.y\n\t\t\t\t\t})\n\n\t\t\t\t\t// build lower hull\n\t\t\t\t\tfor(i = 0; i < vertices.length; i += 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tlower.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlower.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// build upper hull\n\t\t\t\t\tfor(i = vertices.length - 1; i >= 0; i -= 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tupper.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tupper.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// concatenation of the lower and upper hulls gives the convex hull\n\t\t\t\t\t// omit last points because they are repeated at the beginning of the other list\n\t\t\t\t\tupper.pop()\n\t\t\t\t\tlower.pop()\n\n\t\t\t\t\treturn upper.concat(lower)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 4 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\n\t\t\tvar Events = {}\n\n\t\t\tmodule.exports = Events\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.on = function(object, eventNames, callback) {\n\t\t\t\t\tvar names = eventNames.split(\" \"),\n\t\t\t\t\t\tname\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\tobject.events = object.events || {}\n\t\t\t\t\t\tobject.events[name] = object.events[name] || []\n\t\t\t\t\t\tobject.events[name].push(callback)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn callback\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.off = function(object, eventNames, callback) {\n\t\t\t\t\tif(!eventNames){\n\t\t\t\t\t\tobject.events = {}\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle Events.off(object, callback)\n\t\t\t\t\tif(typeof eventNames === \"function\"){\n\t\t\t\t\t\tcallback = eventNames\n\t\t\t\t\t\teventNames = Common.keys(object.events).join(\" \")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar names = eventNames.split(\" \")\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tvar callbacks = object.events[names[i]],\n\t\t\t\t\t\t\tnewCallbacks = []\n\n\t\t\t\t\t\tif(callback && callbacks){\n\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\tif(callbacks[j] !== callback){\n\t\t\t\t\t\t\t\t\tnewCallbacks.push(callbacks[j])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject.events[names[i]] = newCallbacks\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n\t\t\t\tEvents.trigger = function(object, eventNames, event) {\n\t\t\t\t\tvar names,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tcallbacks,\n\t\t\t\t\t\teventClone\n\n\t\t\t\t\tvar events = object.events\n\n\t\t\t\t\tif(events && Common.keys(events).length > 0){\n\t\t\t\t\t\tif(!event){\n\t\t\t\t\t\t\tevent = {}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnames = eventNames.split(\" \")\n\n\t\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\t\tcallbacks = events[name]\n\n\t\t\t\t\t\t\tif(callbacks){\n\t\t\t\t\t\t\t\teventClone = Common.clone(event, false)\n\t\t\t\t\t\t\t\teventClone.name = name\n\t\t\t\t\t\t\t\teventClone.source = object\n\n\t\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\t\tcallbacks[j].apply(object, [eventClone])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 5 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n*\n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\n\t\t\tvar Composite = {}\n\n\t\t\tmodule.exports = Composite\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n\t\t\t\tComposite.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"composite\",\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\tisModified: false,\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tconstraints: [],\n\t\t\t\t\t\tcomposites: [],\n\t\t\t\t\t\tlabel: \"Composite\",\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tcache: {\n\t\t\t\t\t\t\tallBodies: null,\n\t\t\t\t\t\t\tallConstraints: null,\n\t\t\t\t\t\t\tallComposites: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n\t\t\t\tComposite.setModified = function(composite, isModified, updateParents, updateChildren) {\n\t\t\t\t\tcomposite.isModified = isModified\n\n\t\t\t\t\tif(isModified && composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = null\n\t\t\t\t\t\tcomposite.cache.allConstraints = null\n\t\t\t\t\t\tcomposite.cache.allComposites = null\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateParents && composite.parent){\n\t\t\t\t\t\tComposite.setModified(composite.parent, isModified, updateParents, updateChildren)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateChildren){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tvar childComposite = composite.composites[i]\n\t\t\t\t\t\t\tComposite.setModified(childComposite, isModified, updateParents, updateChildren)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n\t\t\t\tComposite.add = function(composite, object) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeAdd\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\t// skip adding compound parts\n\t\t\t\t\t\t\t\tif(obj.parent !== obj){\n\t\t\t\t\t\t\t\t\tCommon.warn(\"Composite.add: skipped adding a compound body part (you must add its parent instead)\")\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tComposite.addBody(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.addComposite(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterAdd\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n\t\t\t\tComposite.remove = function(composite, object, deep) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeRemove\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\tComposite.removeBody(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.removeComposite(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterRemove\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n\t\t\t\tComposite.addComposite = function(compositeA, compositeB) {\n\t\t\t\t\tcompositeA.composites.push(compositeB)\n\t\t\t\t\tcompositeB.parent = compositeA\n\t\t\t\t\tComposite.setModified(compositeA, true, true, false)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n\t\t\t\tComposite.removeComposite = function(compositeA, compositeB, deep) {\n\t\t\t\t\tvar position = Common.indexOf(compositeA.composites, compositeB)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeCompositeAt(compositeA, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < compositeA.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeComposite(compositeA.composites[i], compositeB, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n\t\t\t\tComposite.removeCompositeAt = function(composite, position) {\n\t\t\t\t\tcomposite.composites.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n\t\t\t\tComposite.addBody = function(composite, body) {\n\t\t\t\t\tcomposite.bodies.push(body)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBody = function(composite, body, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.bodies, body)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeBodyAt(composite, position)\n\n\t\t\t\t\t\t// remove sleeping to allow pair removal\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeBody(composite.composites[i], body, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBodyAt = function(composite, position) {\n\t\t\t\t\tcomposite.bodies.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n\t\t\t\tComposite.addConstraint = function(composite, constraint) {\n\t\t\t\t\tcomposite.constraints.push(constraint)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraint = function(composite, constraint, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.constraints, constraint)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeConstraintAt(composite, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeConstraint(composite.composites[i], constraint, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraintAt = function(composite, position) {\n\t\t\t\t\tcomposite.constraints.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n\t\t\t\tComposite.clear = function(composite, keepStatic, deep) {\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.clear(composite.composites[i], keepStatic, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(keepStatic){\n\t\t\t\t\t\tcomposite.bodies = composite.bodies.filter(function(body) {\n\t\t\t\t\t\t\treturn body.isStatic\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomposite.bodies.length = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.constraints.length = 0\n\t\t\t\t\tcomposite.composites.length = 0\n\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n\t\t\t\tComposite.allBodies = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allBodies){\n\t\t\t\t\t\treturn composite.cache.allBodies\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bodies = [].concat(composite.bodies)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tbodies = bodies.concat(Composite.allBodies(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = bodies\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bodies\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n\t\t\t\tComposite.allConstraints = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allConstraints){\n\t\t\t\t\t\treturn composite.cache.allConstraints\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraints = [].concat(composite.constraints)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tconstraints = constraints.concat(Composite.allConstraints(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allConstraints = constraints\n\t\t\t\t\t}\n\n\t\t\t\t\treturn constraints\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n\t\t\t\tComposite.allComposites = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allComposites){\n\t\t\t\t\t\treturn composite.cache.allComposites\n\t\t\t\t\t}\n\n\t\t\t\t\tvar composites = [].concat(composite.composites)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tcomposites = composites.concat(Composite.allComposites(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allComposites = composites\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composites\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n\t\t\t\tComposite.get = function(composite, id, type) {\n\t\t\t\t\tvar objects,\n\t\t\t\t\t\tobject\n\n\t\t\t\t\tswitch(type){\n\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\tobjects = Composite.allBodies(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\tobjects = Composite.allConstraints(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\tobjects = Composite.allComposites(composite).concat(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!objects){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = objects.filter(function(object) {\n\t\t\t\t\t\treturn object.id.toString() === id.toString()\n\t\t\t\t\t})\n\n\t\t\t\t\treturn object.length === 0 ? null : object[0]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n\t\t\t\tComposite.move = function(compositeA, objects, compositeB) {\n\t\t\t\t\tComposite.remove(compositeA, objects)\n\t\t\t\t\tComposite.add(compositeB, objects)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n\t\t\t\tComposite.rebase = function(composite) {\n\t\t\t\t\tvar objects = Composite.allBodies(composite)\n\t\t\t\t\t\t.concat(Composite.allConstraints(composite))\n\t\t\t\t\t\t.concat(Composite.allComposites(composite))\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tobjects[i].id = Common.nextId()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.translate = function(composite, translation, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tBody.translate(bodies[i], translation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.rotate = function(composite, rotation, point, recursive) {\n\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\tbodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.rotate(body, rotation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.scale = function(composite, scaleX, scaleY, point, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + dx * scaleX,\n\t\t\t\t\t\t\ty: point.y + dy * scaleY\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.scale(body, scaleX, scaleY)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n\t\t\t\tComposite.bounds = function(composite) {\n\t\t\t\t\tvar bodies = Composite.allBodies(composite),\n\t\t\t\t\t\tvertices = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\tvertices.push(body.bounds.min, body.bounds.max)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bounds.create(vertices)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n\t\t\t\t/**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 6 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\n\t\t\tvar Body = {}\n\n\t\t\tmodule.exports = Body\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Render = __webpack_require__(16)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11);\n\n\t\t\t(function() {\n\n\t\t\t\tBody._inertiaScale = 4\n\t\t\t\tBody._nextCollidingGroupId = 1\n\t\t\t\tBody._nextNonCollidingGroupId = -1\n\t\t\t\tBody._nextCategory = 0x0001\n\n\t\t\t\t/**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n\t\t\t\tBody.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"body\",\n\t\t\t\t\t\tlabel: \"Body\",\n\t\t\t\t\t\tparts: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L 40 0 L 40 40 L 0 40\"),\n\t\t\t\t\t\tposition: {x: 0, y: 0},\n\t\t\t\t\t\tforce: {x: 0, y: 0},\n\t\t\t\t\t\ttorque: 0,\n\t\t\t\t\t\tpositionImpulse: {x: 0, y: 0},\n\t\t\t\t\t\tconstraintImpulse: {x: 0, y: 0, angle: 0},\n\t\t\t\t\t\ttotalContacts: 0,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tangularSpeed: 0,\n\t\t\t\t\t\tvelocity: {x: 0, y: 0},\n\t\t\t\t\t\tangularVelocity: 0,\n\t\t\t\t\t\tisSensor: false,\n\t\t\t\t\t\tisStatic: false,\n\t\t\t\t\t\tisSleeping: false,\n\t\t\t\t\t\tmotion: 0,\n\t\t\t\t\t\tsleepThreshold: 60,\n\t\t\t\t\t\tdensity: 0.001,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tfriction: 0.1,\n\t\t\t\t\t\tfrictionStatic: 0.5,\n\t\t\t\t\t\tfrictionAir: 0.01,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tslop: 0.05,\n\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tstrokeStyle: null,\n\t\t\t\t\t\t\tfillStyle: null,\n\t\t\t\t\t\t\tlineWidth: null,\n\t\t\t\t\t\t\tsprite: {\n\t\t\t\t\t\t\t\txScale: 1,\n\t\t\t\t\t\t\t\tyScale: 1,\n\t\t\t\t\t\t\t\txOffset: 0,\n\t\t\t\t\t\t\t\tyOffset: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevents: null,\n\t\t\t\t\t\tbounds: null,\n\t\t\t\t\t\tchamfer: null,\n\t\t\t\t\t\tcircleRadius: 0,\n\t\t\t\t\t\tpositionPrev: null,\n\t\t\t\t\t\tanglePrev: 0,\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\taxes: null,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\t_original: null\n\t\t\t\t\t}\n\n\t\t\t\t\tvar body = Common.extend(defaults, options)\n\n\t\t\t\t\t_initProperties(body, options)\n\n\t\t\t\t\treturn body\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n\t\t\t\tBody.nextGroup = function(isNonColliding) {\n\t\t\t\t\tif(isNonColliding){\n\t\t\t\t\t\treturn Body._nextNonCollidingGroupId--\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body._nextCollidingGroupId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n\t\t\t\tBody.nextCategory = function() {\n\t\t\t\t\tBody._nextCategory = Body._nextCategory << 1\n\t\t\t\t\treturn Body._nextCategory\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n\t\t\t\tvar _initProperties = function(body, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\t// init required properties (order is important)\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\tbounds: body.bounds || Bounds.create(body.vertices),\n\t\t\t\t\t\tpositionPrev: body.positionPrev || Vector.clone(body.position),\n\t\t\t\t\t\tanglePrev: body.anglePrev || body.angle,\n\t\t\t\t\t\tvertices: body.vertices,\n\t\t\t\t\t\tparts: body.parts || [body],\n\t\t\t\t\t\tisStatic: body.isStatic,\n\t\t\t\t\t\tisSleeping: body.isSleeping,\n\t\t\t\t\t\tparent: body.parent || body\n\t\t\t\t\t})\n\n\t\t\t\t\tVertices.rotate(body.vertices, body.angle, body.position)\n\t\t\t\t\tAxes.rotate(body.axes, body.angle)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\n\t\t\t\t\t// allow options to override the automatically calculated properties\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\taxes: options.axes || body.axes,\n\t\t\t\t\t\tarea: options.area || body.area,\n\t\t\t\t\t\tmass: options.mass || body.mass,\n\t\t\t\t\t\tinertia: options.inertia || body.inertia\n\t\t\t\t\t})\n\n\t\t\t\t\t// render properties\n\t\t\t\t\tvar defaultFillStyle = (body.isStatic ? \"#14151f\" : Common.choose([\"#f19648\", \"#f5d259\", \"#f55a3c\", \"#063e7b\", \"#ececd1\"])),\n\t\t\t\t\t\tdefaultStrokeStyle = body.isStatic ? \"#555\" : \"#ccc\",\n\t\t\t\t\t\tdefaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0\n\t\t\t\t\tbody.render.fillStyle = body.render.fillStyle || defaultFillStyle\n\t\t\t\t\tbody.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle\n\t\t\t\t\tbody.render.lineWidth = body.render.lineWidth || defaultLineWidth\n\t\t\t\t\tbody.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x)\n\t\t\t\t\tbody.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n\t\t\t\tBody.set = function(body, settings, value) {\n\t\t\t\t\tvar property\n\n\t\t\t\t\tif(typeof settings === \"string\"){\n\t\t\t\t\t\tproperty = settings\n\t\t\t\t\t\tsettings = {}\n\t\t\t\t\t\tsettings[property] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(property in settings){\n\t\t\t\t\t\tif(!Object.prototype.hasOwnProperty.call(settings, property)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = settings[property]\n\t\t\t\t\t\tswitch(property){\n\n\t\t\t\t\t\t\tcase \"isStatic\":\n\t\t\t\t\t\t\t\tBody.setStatic(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"isSleeping\":\n\t\t\t\t\t\t\t\tSleeping.set(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mass\":\n\t\t\t\t\t\t\t\tBody.setMass(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"density\":\n\t\t\t\t\t\t\t\tBody.setDensity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"inertia\":\n\t\t\t\t\t\t\t\tBody.setInertia(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"vertices\":\n\t\t\t\t\t\t\t\tBody.setVertices(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"position\":\n\t\t\t\t\t\t\t\tBody.setPosition(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angle\":\n\t\t\t\t\t\t\t\tBody.setAngle(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"velocity\":\n\t\t\t\t\t\t\t\tBody.setVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angularVelocity\":\n\t\t\t\t\t\t\t\tBody.setAngularVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"parts\":\n\t\t\t\t\t\t\t\tBody.setParts(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"centre\":\n\t\t\t\t\t\t\t\tBody.setCentre(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbody[property] = value\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n\t\t\t\tBody.setStatic = function(body, isStatic) {\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.isStatic = isStatic\n\n\t\t\t\t\t\tif(isStatic){\n\t\t\t\t\t\t\tpart._original = {\n\t\t\t\t\t\t\t\trestitution: part.restitution,\n\t\t\t\t\t\t\t\tfriction: part.friction,\n\t\t\t\t\t\t\t\tmass: part.mass,\n\t\t\t\t\t\t\t\tinertia: part.inertia,\n\t\t\t\t\t\t\t\tdensity: part.density,\n\t\t\t\t\t\t\t\tinverseMass: part.inverseMass,\n\t\t\t\t\t\t\t\tinverseInertia: part.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpart.restitution = 0\n\t\t\t\t\t\t\tpart.friction = 1\n\t\t\t\t\t\t\tpart.mass = part.inertia = part.density = Infinity\n\t\t\t\t\t\t\tpart.inverseMass = part.inverseInertia = 0\n\n\t\t\t\t\t\t\tpart.positionPrev.x = part.position.x\n\t\t\t\t\t\t\tpart.positionPrev.y = part.position.y\n\t\t\t\t\t\t\tpart.anglePrev = part.angle\n\t\t\t\t\t\t\tpart.angularVelocity = 0\n\t\t\t\t\t\t\tpart.speed = 0\n\t\t\t\t\t\t\tpart.angularSpeed = 0\n\t\t\t\t\t\t\tpart.motion = 0\n\t\t\t\t\t\t} else if(part._original){\n\t\t\t\t\t\t\tpart.restitution = part._original.restitution\n\t\t\t\t\t\t\tpart.friction = part._original.friction\n\t\t\t\t\t\t\tpart.mass = part._original.mass\n\t\t\t\t\t\t\tpart.inertia = part._original.inertia\n\t\t\t\t\t\t\tpart.density = part._original.density\n\t\t\t\t\t\t\tpart.inverseMass = part._original.inverseMass\n\t\t\t\t\t\t\tpart.inverseInertia = part._original.inverseInertia\n\n\t\t\t\t\t\t\tpart._original = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n\t\t\t\tBody.setMass = function(body, mass) {\n\t\t\t\t\tvar moment = body.inertia / (body.mass / 6)\n\t\t\t\t\tbody.inertia = moment * (mass / 6)\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\n\t\t\t\t\tbody.mass = mass\n\t\t\t\t\tbody.inverseMass = 1 / body.mass\n\t\t\t\t\tbody.density = body.mass / body.area\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n\t\t\t\tBody.setDensity = function(body, density) {\n\t\t\t\t\tBody.setMass(body, density * body.area)\n\t\t\t\t\tbody.density = density\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the moment of inertia (i.e. second moment of area) of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n\t\t\t\tBody.setInertia = function(body, inertia) {\n\t\t\t\t\tbody.inertia = inertia\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n\t\t\t\tBody.setVertices = function(body, vertices) {\n\t\t\t\t\t// change vertices\n\t\t\t\t\tif(vertices[0].body === body){\n\t\t\t\t\t\tbody.vertices = vertices\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.vertices = Vertices.create(vertices, body)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update properties\n\t\t\t\t\tbody.axes = Axes.fromVertices(body.vertices)\n\t\t\t\t\tbody.area = Vertices.area(body.vertices)\n\t\t\t\t\tBody.setMass(body, body.density * body.area)\n\n\t\t\t\t\t// orient vertices around the centre of mass at origin (0, 0)\n\t\t\t\t\tvar centre = Vertices.centre(body.vertices)\n\t\t\t\t\tVertices.translate(body.vertices, centre, -1)\n\n\t\t\t\t\t// update inertia while vertices are at origin (0, 0)\n\t\t\t\t\tBody.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass))\n\n\t\t\t\t\t// update geometry\n\t\t\t\t\tVertices.translate(body.vertices, body.position)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n\t\t\t\tBody.setParts = function(body, parts, autoHull) {\n\t\t\t\t\tvar i\n\n\t\t\t\t\t// add all the parts, ensuring that the first part is always the parent body\n\t\t\t\t\tparts = parts.slice(0)\n\t\t\t\t\tbody.parts.length = 0\n\t\t\t\t\tbody.parts.push(body)\n\t\t\t\t\tbody.parent = body\n\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tvar part = parts[i]\n\t\t\t\t\t\tif(part !== body){\n\t\t\t\t\t\t\tpart.parent = body\n\t\t\t\t\t\t\tbody.parts.push(part)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(body.parts.length === 1){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tautoHull = typeof autoHull !== \"undefined\" ? autoHull : true\n\n\t\t\t\t\t// find the convex hull of all parts to set on the parent body\n\t\t\t\t\tif(autoHull){\n\t\t\t\t\t\tvar vertices = []\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvertices = vertices.concat(parts[i].vertices)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tVertices.clockwiseSort(vertices)\n\n\t\t\t\t\t\tvar hull = Vertices.hull(vertices),\n\t\t\t\t\t\t\thullCentre = Vertices.centre(hull)\n\n\t\t\t\t\t\tBody.setVertices(body, hull)\n\t\t\t\t\t\tVertices.translate(body.vertices, hullCentre)\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tvar total = Body._totalProperties(body)\n\n\t\t\t\t\tbody.area = total.area\n\t\t\t\t\tbody.parent = body\n\t\t\t\t\tbody.position.x = total.centre.x\n\t\t\t\t\tbody.position.y = total.centre.y\n\t\t\t\t\tbody.positionPrev.x = total.centre.x\n\t\t\t\t\tbody.positionPrev.y = total.centre.y\n\n\t\t\t\t\tBody.setMass(body, total.mass)\n\t\t\t\t\tBody.setInertia(body, total.inertia)\n\t\t\t\t\tBody.setPosition(body, total.centre)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set the centre of mass of the body.\n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n\t\t\t\tBody.setCentre = function(body, centre, relative) {\n\t\t\t\t\tif(!relative){\n\t\t\t\t\t\tbody.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x)\n\t\t\t\t\t\tbody.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y)\n\t\t\t\t\t\tbody.position.x = centre.x\n\t\t\t\t\t\tbody.position.y = centre.y\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.positionPrev.x += centre.x\n\t\t\t\t\t\tbody.positionPrev.y += centre.y\n\t\t\t\t\t\tbody.position.x += centre.x\n\t\t\t\t\t\tbody.position.y += centre.y\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n\t\t\t\tBody.setPosition = function(body, position) {\n\t\t\t\t\tvar delta = Vector.sub(position, body.position)\n\t\t\t\t\tbody.positionPrev.x += delta.x\n\t\t\t\t\tbody.positionPrev.y += delta.y\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.position.x += delta.x\n\t\t\t\t\t\tpart.position.y += delta.y\n\t\t\t\t\t\tVertices.translate(part.vertices, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n\t\t\t\tBody.setAngle = function(body, angle) {\n\t\t\t\t\tvar delta = angle - body.angle\n\t\t\t\t\tbody.anglePrev += delta\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.angle += delta\n\t\t\t\t\t\tVertices.rotate(part.vertices, delta, body.position)\n\t\t\t\t\t\tAxes.rotate(part.axes, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tVector.rotateAbout(part.position, delta, body.position, part.position)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n\t\t\t\tBody.setVelocity = function(body, velocity) {\n\t\t\t\t\tbody.positionPrev.x = body.position.x - velocity.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y - velocity.y\n\t\t\t\t\tbody.velocity.x = velocity.x\n\t\t\t\t\tbody.velocity.y = velocity.y\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n\t\t\t\tBody.setAngularVelocity = function(body, velocity) {\n\t\t\t\t\tbody.anglePrev = body.angle - velocity\n\t\t\t\t\tbody.angularVelocity = velocity\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n\t\t\t\tBody.translate = function(body, translation) {\n\t\t\t\t\tBody.setPosition(body, Vector.add(body.position, translation))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.rotate = function(body, rotation, point) {\n\t\t\t\t\tif(!point){\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.scale = function(body, scaleX, scaleY, point) {\n\t\t\t\t\tvar totalArea = 0,\n\t\t\t\t\t\ttotalInertia = 0\n\n\t\t\t\t\tpoint = point || body.position\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\t// scale vertices\n\t\t\t\t\t\tVertices.scale(part.vertices, scaleX, scaleY, point)\n\n\t\t\t\t\t\t// update properties\n\t\t\t\t\t\tpart.axes = Axes.fromVertices(part.vertices)\n\t\t\t\t\t\tpart.area = Vertices.area(part.vertices)\n\t\t\t\t\t\tBody.setMass(part, body.density * part.area)\n\n\t\t\t\t\t\t// update inertia (requires vertices to be at origin)\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: -part.position.x, y: -part.position.y})\n\t\t\t\t\t\tBody.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass))\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: part.position.x, y: part.position.y})\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\ttotalArea += part.area\n\t\t\t\t\t\t\ttotalInertia += part.inertia\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// scale position\n\t\t\t\t\t\tpart.position.x = point.x + (part.position.x - point.x) * scaleX\n\t\t\t\t\t\tpart.position.y = point.y + (part.position.y - point.y) * scaleY\n\n\t\t\t\t\t\t// update bounds\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle parent body\n\t\t\t\t\tif(body.parts.length > 1){\n\t\t\t\t\t\tbody.area = totalArea\n\n\t\t\t\t\t\tif(!body.isStatic){\n\t\t\t\t\t\t\tBody.setMass(body, body.density * totalArea)\n\t\t\t\t\t\t\tBody.setInertia(body, totalInertia)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle circles\n\t\t\t\t\tif(body.circleRadius){\n\t\t\t\t\t\tif(scaleX === scaleY){\n\t\t\t\t\t\t\tbody.circleRadius *= scaleX\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// body is no longer a circle\n\t\t\t\t\t\t\tbody.circleRadius = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n\t\t\t\tBody.update = function(body, deltaTime, timeScale, correction) {\n\t\t\t\t\tvar deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2)\n\n\t\t\t\t\t// from the previous step\n\t\t\t\t\tvar frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n\t\t\t\t\t\tvelocityPrevX = body.position.x - body.positionPrev.x,\n\t\t\t\t\t\tvelocityPrevY = body.position.y - body.positionPrev.y\n\n\t\t\t\t\t// update velocity with Verlet integration\n\t\t\t\t\tbody.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared\n\t\t\t\t\tbody.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared\n\n\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y\n\t\t\t\t\tbody.position.x += body.velocity.x\n\t\t\t\t\tbody.position.y += body.velocity.y\n\n\t\t\t\t\t// update angular velocity with Verlet integration\n\t\t\t\t\tbody.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared\n\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\tbody.angle += body.angularVelocity\n\n\t\t\t\t\t// track speed and acceleration\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\n\t\t\t\t\t// transform the body geometry\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\tVertices.translate(part.vertices, body.velocity)\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tpart.position.x += body.velocity.x\n\t\t\t\t\t\t\tpart.position.y += body.velocity.y\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.angularVelocity !== 0){\n\t\t\t\t\t\t\tVertices.rotate(part.vertices, body.angularVelocity, body.position)\n\t\t\t\t\t\t\tAxes.rotate(part.axes, body.angularVelocity)\n\t\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, body.angularVelocity, body.position, part.position)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n\t\t\t\tBody.applyForce = function(body, position, force) {\n\t\t\t\t\tbody.force.x += force.x\n\t\t\t\t\tbody.force.y += force.y\n\t\t\t\t\tvar offset = {x: position.x - body.position.x, y: position.y - body.position.y}\n\t\t\t\t\tbody.torque += offset.x * force.y - offset.y * force.x\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n\t\t\t\tBody._totalProperties = function(body) {\n\t\t\t\t\t// from equations at:\n\t\t\t\t\t// https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n\t\t\t\t\t// http://output.to/sideway/default.asp?qno=121100087\n\n\t\t\t\t\tvar properties = {\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\tcentre: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tfor(var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i],\n\t\t\t\t\t\t\tmass = part.mass !== Infinity ? part.mass : 1\n\n\t\t\t\t\t\tproperties.mass += mass\n\t\t\t\t\t\tproperties.area += part.area\n\t\t\t\t\t\tproperties.inertia += part.inertia\n\t\t\t\t\t\tproperties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass))\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.centre = Vector.div(properties.centre, properties.mass)\n\n\t\t\t\t\treturn properties\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n\t\t\t\t/**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n\t\t\t\t/**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n\t\t\t\t/**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 7 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\n\t\t\tvar Sleeping = {}\n\n\t\t\tmodule.exports = Sleeping\n\n\t\t\tvar Events = __webpack_require__(4);\n\n\t\t\t(function() {\n\n\t\t\t\tSleeping._motionWakeThreshold = 0.18 // 0.18 originally\n\t\t\t\tSleeping._motionSleepThreshold = 0.08 // 0.08\n\t\t\t\tSleeping._minBias = 0.9\n\n\t\t\t\t/**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.update = function(bodies, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// update bodies sleeping status\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\t// motion = (body.speed + body.angularSpeed) > 1e-12 ? 1 : 0\n\t\t\t\t\t\t\tmotion = (body.speed * body.speed) * 10000 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = (body.speed * body.speed) * 100 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed\n\n\t\t\t\t\t\t// FIX: originally, if body had force applied - motion is not recalculated\n\t\t\t\t\t\t// this is WRONG, because motion can also be used to wakeup other bodies\n\t\t\t\t\t\t// so I always set motion\n\t\t\t\t\t\tvar minMotion = Math.min(body.motion, motion),\n\t\t\t\t\t\t\tmaxMotion = Math.max(body.motion, motion)\n\n\t\t\t\t\t\t// biased average motion estimation between frames\n\t\t\t\t\t\tbody.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion\n\n\t\t\t\t\t\t// wake up bodies if they have a force applied\n\t\t\t\t\t\tif(body.force.x !== 0 || body.force.y !== 0){\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor){\n\t\t\t\t\t\t\tbody.sleepCounter += 1\n\n\t\t\t\t\t\t\tif(body.sleepCounter >= body.sleepThreshold){\n\t\t\t\t\t\t\t\tSleeping.set(body, true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(body.sleepCounter > 0){\n\t\t\t\t\t\t\tbody.sleepCounter -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.afterCollisions = function(pairs, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tfor(var i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\t// don't wake inactive pairs\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.bodyA.parent,\n\t\t\t\t\t\t\tbodyB = collision.bodyB.parent\n\n\t\t\t\t\t\t// don't wake if at least one body is static\n\t\t\t\t\t\tif((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bodyA.isSleeping || bodyB.isSleeping){\n\t\t\t\t\t\t\tvar sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n\t\t\t\t\t\t\t\tmovingBody = sleepingBody === bodyA ? bodyB : bodyA\n\n\t\t\t\t\t\t\tif(!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor){\n\t\t\t\t\t\t\t\tSleeping.set(sleepingBody, false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n\t\t\t\tSleeping.set = function(body, isSleeping) {\n\t\t\t\t\tvar wasSleeping = body.isSleeping\n\n\t\t\t\t\tif(isSleeping){\n\t\t\t\t\t\tbody.isSleeping = true\n\t\t\t\t\t\tbody.sleepCounter = body.sleepThreshold\n\n\t\t\t\t\t\tbody.positionImpulse.x = 0\n\t\t\t\t\t\tbody.positionImpulse.y = 0\n\n\t\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\t\tbody.positionPrev.y = body.position.y\n\n\t\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\t\tbody.speed = 0\n\t\t\t\t\t\tbody.angularSpeed = 0\n\t\t\t\t\t\tbody.motion = 0\n\n\t\t\t\t\t\tif(!wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepStart\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\n\t\t\t\t\t\tif(wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepEnd\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 8 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\n\t\t\tvar Collision = {}\n\n\t\t\tmodule.exports = Collision\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Pair = __webpack_require__(9);\n\n\t\t\t(function() {\n\t\t\t\tvar _supports = []\n\n\t\t\t\tvar _overlapAB = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\tvar _overlapBA = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n\t\t\t\tCollision.create = function(bodyA, bodyB) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpair: null,\n\t\t\t\t\t\tcollided: false,\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tparentA: bodyA.parent,\n\t\t\t\t\t\tparentB: bodyB.parent,\n\t\t\t\t\t\tdepth: 0,\n\t\t\t\t\t\tnormal: {x: 0, y: 0},\n\t\t\t\t\t\ttangent: {x: 0, y: 0},\n\t\t\t\t\t\tpenetration: {x: 0, y: 0},\n\t\t\t\t\t\tsupports: []\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n\t\t\t\tCollision.collides = function(bodyA, bodyB, pairs) {\n\t\t\t\t\tCollision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes)\n\n\t\t\t\t\tif(_overlapAB.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tCollision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes)\n\n\t\t\t\t\tif(_overlapBA.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t// reuse collision records for gc efficiency\n\t\t\t\t\tvar pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n\t\t\t\t\t\tcollision\n\n\t\t\t\t\tif(!pair){\n\t\t\t\t\t\tcollision = Collision.create(bodyA, bodyB)\n\t\t\t\t\t\tcollision.collided = true\n\t\t\t\t\t\tcollision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB\n\t\t\t\t\t\tcollision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA\n\t\t\t\t\t\tcollision.parentA = collision.bodyA.parent\n\t\t\t\t\t\tcollision.parentB = collision.bodyB.parent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t}\n\n\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar minOverlap\n\n\t\t\t\t\tif(_overlapAB.overlap < _overlapBA.overlap){\n\t\t\t\t\t\tminOverlap = _overlapAB\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminOverlap = _overlapBA\n\t\t\t\t\t}\n\n\t\t\t\t\tvar normal = collision.normal,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tminAxis = minOverlap.axis,\n\t\t\t\t\t\tminAxisX = minAxis.x,\n\t\t\t\t\t\tminAxisY = minAxis.y\n\n\t\t\t\t\t// ensure normal is facing away from bodyA\n\t\t\t\t\tif(minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0){\n\t\t\t\t\t\tnormal.x = minAxisX\n\t\t\t\t\t\tnormal.y = minAxisY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormal.x = -minAxisX\n\t\t\t\t\t\tnormal.y = -minAxisY\n\t\t\t\t\t}\n\n\t\t\t\t\tcollision.tangent.x = -normal.y\n\t\t\t\t\tcollision.tangent.y = normal.x\n\n\t\t\t\t\tcollision.depth = minOverlap.overlap\n\n\t\t\t\t\tcollision.penetration.x = normal.x * collision.depth\n\t\t\t\t\tcollision.penetration.y = normal.y * collision.depth\n\n\t\t\t\t\t// find support points, there is always either exactly one or two\n\t\t\t\t\tvar supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n\t\t\t\t\t\tsupportCount = 0\n\n\t\t\t\t\t// find the supports from bodyB that are inside bodyA\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[0])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[1])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[1]\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the supports from bodyA that are inside bodyB\n\t\t\t\t\tif(supportCount < 2){\n\t\t\t\t\t\tvar supportsA = Collision._findSupports(bodyB, bodyA, normal, -1)\n\n\t\t\t\t\t\tif(Vertices.contains(bodyB.vertices, supportsA[0])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[0]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// account for the edge case of overlapping but no vertex containment\n\t\t\t\t\tif(supportCount === 0){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\t// update supports array size\n\t\t\t\t\tsupports.length = supportCount\n\n\t\t\t\t\treturn collision\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n\t\t\t\tCollision._overlapAxes = function(result, verticesA, verticesB, axes) {\n\t\t\t\t\tvar verticesALength = verticesA.length,\n\t\t\t\t\t\tverticesBLength = verticesB.length,\n\t\t\t\t\t\tverticesAX = verticesA[0].x,\n\t\t\t\t\t\tverticesAY = verticesA[0].y,\n\t\t\t\t\t\tverticesBX = verticesB[0].x,\n\t\t\t\t\t\tverticesBY = verticesB[0].y,\n\t\t\t\t\t\taxesLength = axes.length,\n\t\t\t\t\t\toverlapMin = Number.MAX_VALUE,\n\t\t\t\t\t\toverlapAxisNumber = 0,\n\t\t\t\t\t\toverlap,\n\t\t\t\t\t\toverlapAB,\n\t\t\t\t\t\toverlapBA,\n\t\t\t\t\t\tdot,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < axesLength; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\taxisX = axis.x,\n\t\t\t\t\t\t\taxisY = axis.y,\n\t\t\t\t\t\t\tminA = verticesAX * axisX + verticesAY * axisY,\n\t\t\t\t\t\t\tminB = verticesBX * axisX + verticesBY * axisY,\n\t\t\t\t\t\t\tmaxA = minA,\n\t\t\t\t\t\t\tmaxB = minB\n\n\t\t\t\t\t\tfor(j = 1; j < verticesALength; j += 1){\n\t\t\t\t\t\t\tdot = verticesA[j].x * axisX + verticesA[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxA){\n\t\t\t\t\t\t\t\tmaxA = dot\n\t\t\t\t\t\t\t} else if(dot < minA){\n\t\t\t\t\t\t\t\tminA = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(j = 1; j < verticesBLength; j += 1){\n\t\t\t\t\t\t\tdot = verticesB[j].x * axisX + verticesB[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxB){\n\t\t\t\t\t\t\t\tmaxB = dot\n\t\t\t\t\t\t\t} else if(dot < minB){\n\t\t\t\t\t\t\t\tminB = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlapAB = maxA - minB\n\t\t\t\t\t\toverlapBA = maxB - minA\n\t\t\t\t\t\toverlap = overlapAB < overlapBA ? overlapAB : overlapBA\n\n\t\t\t\t\t\tif(overlap < overlapMin){\n\t\t\t\t\t\t\toverlapMin = overlap\n\t\t\t\t\t\t\toverlapAxisNumber = i\n\n\t\t\t\t\t\t\tif(overlap <= 0){\n\t\t\t\t\t\t\t\t// can not be intersecting\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.axis = axes[overlapAxisNumber]\n\t\t\t\t\tresult.overlap = overlapMin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n\t\t\t\tCollision._projectToAxis = function(projection, vertices, axis) {\n\t\t\t\t\tvar min = vertices[0].x * axis.x + vertices[0].y * axis.y,\n\t\t\t\t\t\tmax = min\n\n\t\t\t\t\tfor(var i = 1; i < vertices.length; i += 1){\n\t\t\t\t\t\tvar dot = vertices[i].x * axis.x + vertices[i].y * axis.y\n\n\t\t\t\t\t\tif(dot > max){\n\t\t\t\t\t\t\tmax = dot\n\t\t\t\t\t\t} else if(dot < min){\n\t\t\t\t\t\t\tmin = dot\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprojection.min = min\n\t\t\t\t\tprojection.max = max\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n\t\t\t\tCollision._findSupports = function(bodyA, bodyB, normal, direction) {\n\t\t\t\t\tvar vertices = bodyB.vertices,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tbodyAPositionX = bodyA.position.x,\n\t\t\t\t\t\tbodyAPositionY = bodyA.position.y,\n\t\t\t\t\t\tnormalX = normal.x * direction,\n\t\t\t\t\t\tnormalY = normal.y * direction,\n\t\t\t\t\t\tnearestDistance = Number.MAX_VALUE,\n\t\t\t\t\t\tvertexA,\n\t\t\t\t\t\tvertexB,\n\t\t\t\t\t\tvertexC,\n\t\t\t\t\t\tdistance,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find deepest vertex relative to the axis\n\t\t\t\t\tfor(j = 0; j < verticesLength; j += 1){\n\t\t\t\t\t\tvertexB = vertices[j]\n\t\t\t\t\t\tdistance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y)\n\n\t\t\t\t\t\t// convex hill-climbing\n\t\t\t\t\t\tif(distance < nearestDistance){\n\t\t\t\t\t\t\tnearestDistance = distance\n\t\t\t\t\t\t\tvertexA = vertexB\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// measure next vertex\n\t\t\t\t\tvertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength]\n\t\t\t\t\tnearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y)\n\n\t\t\t\t\t// compare with previous vertex\n\t\t\t\t\tvertexB = vertices[(vertexA.index + 1) % verticesLength]\n\t\t\t\t\tif(normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance){\n\t\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t\t_supports[1] = vertexB\n\n\t\t\t\t\t\treturn _supports\n\t\t\t\t\t}\n\n\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t_supports[1] = vertexC\n\n\t\t\t\t\treturn _supports\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     *\n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     *\n     * @property bodyA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     *\n     * @property bodyB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     *\n     * @property parentA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     *\n     * @property parentB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * An array of body vertices that represent the support points in the collision.\n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 9 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\n\t\t\tvar Pair = {}\n\n\t\t\tmodule.exports = Pair\n\n\t\t\tvar Contact = __webpack_require__(17);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n\t\t\t\tPair.create = function(collision, timestamp) {\n\t\t\t\t\tvar bodyA = collision.bodyA,\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar pair = {\n\t\t\t\t\t\tid: Pair.id(bodyA, bodyB),\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tcollision: collision,\n\t\t\t\t\t\tcontacts: [],\n\t\t\t\t\t\tactiveContacts: [],\n\t\t\t\t\t\tseparation: 0,\n\t\t\t\t\t\tisActive: true,\n\t\t\t\t\t\tconfirmedActive: true,\n\t\t\t\t\t\tisSensor: bodyA.isSensor || bodyB.isSensor,\n\t\t\t\t\t\ttimeCreated: timestamp,\n\t\t\t\t\t\ttimeUpdated: timestamp,\n\t\t\t\t\t\tinverseMass: 0,\n\t\t\t\t\t\tfriction: 0,\n\t\t\t\t\t\tfrictionStatic: 0,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tslop: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tPair.update(pair, collision, timestamp)\n\n\t\t\t\t\treturn pair\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.update = function(pair, collision, timestamp) {\n\t\t\t\t\tvar contacts = pair.contacts,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tactiveContacts = pair.activeContacts,\n\t\t\t\t\t\tparentA = collision.parentA,\n\t\t\t\t\t\tparentB = collision.parentB,\n\t\t\t\t\t\tparentAVerticesLength = parentA.vertices.length\n\n\t\t\t\t\tpair.isActive = true\n\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\tpair.collision = collision\n\t\t\t\t\tpair.separation = collision.depth\n\t\t\t\t\tpair.inverseMass = parentA.inverseMass + parentB.inverseMass\n\t\t\t\t\tpair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction\n\t\t\t\t\tpair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic\n\t\t\t\t\tpair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution\n\t\t\t\t\tpair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop\n\n\t\t\t\t\tcollision.pair = pair\n\t\t\t\t\tactiveContacts.length = 0\n\n\t\t\t\t\tfor(var i = 0; i < supports.length; i++){\n\t\t\t\t\t\tvar support = supports[i],\n\t\t\t\t\t\t\tcontactId = support.body === parentA ? support.index : parentAVerticesLength + support.index,\n\t\t\t\t\t\t\tcontact = contacts[contactId]\n\n\t\t\t\t\t\tif(contact){\n\t\t\t\t\t\t\tactiveContacts.push(contact)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveContacts.push(contacts[contactId] = Contact.create(support))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.setActive = function(pair, isActive, timestamp) {\n\t\t\t\t\tif(isActive){\n\t\t\t\t\t\tpair.isActive = true\n\t\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpair.isActive = false\n\t\t\t\t\t\tpair.activeContacts.length = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n\t\t\t\tPair.id = function(bodyA, bodyB) {\n\t\t\t\t\tif(bodyA.id < bodyB.id){\n\t\t\t\t\t\treturn \"A\" + bodyA.id + \"B\" + bodyB.id\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn \"A\" + bodyB.id + \"B\" + bodyA.id\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 10 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n\t\t\tvar Constraint = {}\n\n\t\t\tmodule.exports = Constraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tConstraint._warming = 0.4\n\t\t\t\tConstraint._torqueDampen = 1\n\t\t\t\tConstraint._minLength = 0.000001\n\n\t\t\t\t/**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n\t\t\t\tConstraint.create = function(options) {\n\t\t\t\t\tvar constraint = options\n\n\t\t\t\t\t// if bodies defined but no points, use body centre\n\t\t\t\t\tif(constraint.bodyA && !constraint.pointA){\n\t\t\t\t\t\tconstraint.pointA = {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\tif(constraint.bodyB && !constraint.pointB){\n\t\t\t\t\t\tconstraint.pointB = {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// calculate static length using initial world space points\n\t\t\t\t\tvar initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n\t\t\t\t\t\tinitialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n\t\t\t\t\t\tlength = Vector.magnitude(Vector.sub(initialPointA, initialPointB))\n\n\t\t\t\t\tconstraint.length = typeof constraint.length !== \"undefined\" ? constraint.length : length\n\n\t\t\t\t\t// option defaults\n\t\t\t\t\tconstraint.id = constraint.id || Common.nextId()\n\t\t\t\t\tconstraint.label = constraint.label || \"Constraint\"\n\t\t\t\t\tconstraint.type = \"constraint\"\n\t\t\t\t\tconstraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7)\n\t\t\t\t\tconstraint.damping = constraint.damping || 0\n\t\t\t\t\tconstraint.angularStiffness = constraint.angularStiffness || 0\n\t\t\t\t\tconstraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA\n\t\t\t\t\tconstraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB\n\t\t\t\t\tconstraint.plugin = {}\n\n\t\t\t\t\t// render\n\t\t\t\t\tvar render = {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\t\tstrokeStyle: \"#ffffff\",\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\tanchors: true\n\t\t\t\t\t}\n\n\t\t\t\t\tif(constraint.length === 0 && constraint.stiffness > 0.1){\n\t\t\t\t\t\trender.type = \"pin\"\n\t\t\t\t\t\trender.anchors = false\n\t\t\t\t\t} else if(constraint.stiffness < 0.9){\n\t\t\t\t\t\trender.type = \"spring\"\n\t\t\t\t\t}\n\n\t\t\t\t\tconstraint.render = Common.extend(render, constraint.render)\n\n\t\t\t\t\treturn constraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.preSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.position.x += impulse.x\n\t\t\t\t\t\tbody.position.y += impulse.y\n\t\t\t\t\t\tbody.angle += impulse.angle\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solveAll = function(constraints, timeScale) {\n\t\t\t\t\t// Solve fixed constraints first.\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tvar constraint = constraints[i],\n\t\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n\t\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(fixedA || fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Solve free constraints last.\n\t\t\t\t\tfor(i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tconstraint = constraints[i]\n\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic)\n\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(!fixedA && !fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solve = function(constraint, timeScale) {\n\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\tpointA = constraint.pointA,\n\t\t\t\t\t\tpointB = constraint.pointB\n\n\t\t\t\t\tif(!bodyA && !bodyB){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tVector.rotate(pointA, bodyA.angle - constraint.angleA, pointA)\n\t\t\t\t\t\tconstraint.angleA = bodyA.angle\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tVector.rotate(pointB, bodyB.angle - constraint.angleB, pointB)\n\t\t\t\t\t\tconstraint.angleB = bodyB.angle\n\t\t\t\t\t}\n\n\t\t\t\t\tvar pointAWorld = pointA,\n\t\t\t\t\t\tpointBWorld = pointB\n\n\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, pointA)\n\t\t\t\t\t}\n\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, pointB)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar delta = Vector.sub(pointAWorld, pointBWorld),\n\t\t\t\t\t\tcurrentLength = Vector.magnitude(delta)\n\n\t\t\t\t\t// prevent singularity\n\t\t\t\t\tif(currentLength < Constraint._minLength){\n\t\t\t\t\t\tcurrentLength = Constraint._minLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// solve distance constraint with Gauss-Siedel method\n\t\t\t\t\tvar difference = (currentLength - constraint.length) / currentLength,\n\t\t\t\t\t\tstiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n\t\t\t\t\t\tforce = Vector.mult(delta, difference * stiffness),\n\t\t\t\t\t\tmassTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n\t\t\t\t\t\tinertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n\t\t\t\t\t\tresistanceTotal = massTotal + inertiaTotal,\n\t\t\t\t\t\ttorque,\n\t\t\t\t\t\tshare,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tnormalVelocity,\n\t\t\t\t\t\trelativeVelocity\n\n\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\tvar zero = Vector.create()\n\t\t\t\t\t\tnormal = Vector.div(delta, currentLength)\n\n\t\t\t\t\t\trelativeVelocity = Vector.sub(\n\t\t\t\t\t\t\tbodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n\t\t\t\t\t\t\tbodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tnormalVelocity = Vector.dot(normal, relativeVelocity)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tshare = bodyA.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyA.constraintImpulse.x -= force.x * share\n\t\t\t\t\t\tbodyA.constraintImpulse.y -= force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyA.position.x -= force.x * share\n\t\t\t\t\t\tbodyA.position.y -= force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyA.constraintImpulse.angle -= torque\n\t\t\t\t\t\tbodyA.angle -= torque\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tshare = bodyB.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyB.constraintImpulse.x += force.x * share\n\t\t\t\t\t\tbodyB.constraintImpulse.y += force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyB.position.x += force.x * share\n\t\t\t\t\t\tbodyB.position.y += force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyB.constraintImpulse.angle += torque\n\t\t\t\t\t\tbodyB.angle += torque\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.postSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tSleeping.set(body, false)\n\n\t\t\t\t\t\t// update geometry and reset\n\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\tVertices.translate(part.vertices, impulse)\n\n\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\tpart.position.x += impulse.x\n\t\t\t\t\t\t\t\tpart.position.y += impulse.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(impulse.angle !== 0){\n\t\t\t\t\t\t\t\tVertices.rotate(part.vertices, impulse.angle, body.position)\n\t\t\t\t\t\t\t\tAxes.rotate(part.axes, impulse.angle)\n\t\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, impulse.angle, body.position, part.position)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// dampen the cached impulse for warming next step\n\t\t\t\t\t\timpulse.angle *= Constraint._warming\n\t\t\t\t\t\timpulse.x *= Constraint._warming\n\t\t\t\t\t\timpulse.y *= Constraint._warming\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointAWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyA ? constraint.bodyA.position.x : 0)\n                + (constraint.pointA ? constraint.pointA.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyA ? constraint.bodyA.position.y : 0)\n                + (constraint.pointA ? constraint.pointA.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointBWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyB ? constraint.bodyB.position.x : 0)\n                + (constraint.pointB ? constraint.pointB.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyB ? constraint.bodyB.position.y : 0)\n                + (constraint.pointB ? constraint.pointB.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 11 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\n\t\t\tvar Axes = {}\n\n\t\t\tmodule.exports = Axes\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n\t\t\t\tAxes.fromVertices = function(vertices) {\n\t\t\t\t\tvar axes = {}\n\n\t\t\t\t\t// find the unique axes, using edge normal gradients\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar j = (i + 1) % vertices.length,\n\t\t\t\t\t\t\tnormal = Vector.normalise({\n\t\t\t\t\t\t\t\tx: vertices[j].y - vertices[i].y,\n\t\t\t\t\t\t\t\ty: vertices[i].x - vertices[j].x\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tgradient = (normal.y === 0) ? Infinity : (normal.x / normal.y)\n\n\t\t\t\t\t\t// limit precision\n\t\t\t\t\t\tgradient = gradient.toFixed(3).toString()\n\t\t\t\t\t\taxes[gradient] = normal\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.values(axes)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n\t\t\t\tAxes.rotate = function(axes, angle) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle)\n\n\t\t\t\t\tfor(var i = 0; i < axes.length; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\txx\n\t\t\t\t\t\txx = axis.x * cos - axis.y * sin\n\t\t\t\t\t\taxis.y = axis.x * sin + axis.y * cos\n\t\t\t\t\t\taxis.x = xx\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 12 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n\t\t\t// TUDDO: true circle bodies\n\n\t\t\tvar Bodies = {}\n\n\t\t\tmodule.exports = Bodies\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Vector = __webpack_require__(2);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n\t\t\t\tBodies.rectangle = function(x, y, width, height, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar rectangle = {\n\t\t\t\t\t\tlabel: \"Rectangle Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L \" + width + \" 0 L \" + width + \" \" + height + \" L 0 \" + height)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\trectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, rectangle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n\t\t\t\tBodies.trapezoid = function(x, y, width, height, slope, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tslope *= 0.5\n\t\t\t\t\tvar roof = (1 - (slope * 2)) * width\n\n\t\t\t\t\tvar x1 = width * slope,\n\t\t\t\t\t\tx2 = x1 + roof,\n\t\t\t\t\t\tx3 = x2 + x1,\n\t\t\t\t\t\tverticesPath\n\n\t\t\t\t\tif(slope < 0.5){\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x1 + \" \" + (-height) + \" L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar trapezoid = {\n\t\t\t\t\t\tlabel: \"Trapezoid Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(verticesPath)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\ttrapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, trapezoid, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n\t\t\t\tBodies.circle = function(x, y, radius, options, maxSides) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar circle = {\n\t\t\t\t\t\tlabel: \"Circle Body\",\n\t\t\t\t\t\tcircleRadius: radius\n\t\t\t\t\t}\n\n\t\t\t\t\t// approximate circles with polygons until true circles implemented in SAT\n\t\t\t\t\tmaxSides = maxSides || 25\n\t\t\t\t\tvar sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)))\n\n\t\t\t\t\t// optimisation: always use even number of sides (half the number of unique axes)\n\t\t\t\t\tif(sides % 2 === 1){\n\t\t\t\t\t\tsides += 1\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n\t\t\t\tBodies.polygon = function(x, y, sides, radius, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tif(sides < 3){\n\t\t\t\t\t\treturn Bodies.circle(x, y, radius, options)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar theta = 2 * Math.PI / sides,\n\t\t\t\t\t\tpath = \"\",\n\t\t\t\t\t\toffset = theta * 0.5\n\n\t\t\t\t\tfor(var i = 0; i < sides; i += 1){\n\t\t\t\t\t\tvar angle = offset + (i * theta),\n\t\t\t\t\t\t\txx = Math.cos(angle) * radius,\n\t\t\t\t\t\t\tyy = Math.sin(angle) * radius\n\n\t\t\t\t\t\tpath += \"L \" + xx.toFixed(3) + \" \" + yy.toFixed(3) + \" \"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar polygon = {\n\t\t\t\t\t\tlabel: \"Polygon Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(path)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\tpolygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, polygon, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Utility to create a compound body based on set(s) of vertices.\n     *\n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js)\n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     *\n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     *\n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     *\n     * Note that automatic conconcave decomposition results are not always optimal.\n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     *\n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     *\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n\t\t\t\tBodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n\t\t\t\t\tvar decomp = Common.getDecomp(),\n\t\t\t\t\t\tcanDecomp,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tisConvex,\n\t\t\t\t\t\tisConcave,\n\t\t\t\t\t\tvertices,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tv,\n\t\t\t\t\t\tz\n\n\t\t\t\t\t// check decomp is as expected\n\t\t\t\t\tcanDecomp = Boolean(decomp && decomp.quickDecomp)\n\n\t\t\t\t\toptions = options || {}\n\t\t\t\t\tparts = []\n\n\t\t\t\t\tflagInternal = typeof flagInternal !== \"undefined\" ? flagInternal : false\n\t\t\t\t\tremoveCollinear = typeof removeCollinear !== \"undefined\" ? removeCollinear : 0.01\n\t\t\t\t\tminimumArea = typeof minimumArea !== \"undefined\" ? minimumArea : 10\n\t\t\t\t\tremoveDuplicatePoints = typeof removeDuplicatePoints !== \"undefined\" ? removeDuplicatePoints : 0.01\n\n\t\t\t\t\t// ensure vertexSets is an array of arrays\n\t\t\t\t\tif(!Common.isArray(vertexSets[0])){\n\t\t\t\t\t\tvertexSets = [vertexSets]\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(v = 0; v < vertexSets.length; v += 1){\n\t\t\t\t\t\tvertices = vertexSets[v]\n\t\t\t\t\t\tisConvex = Vertices.isConvex(vertices)\n\t\t\t\t\t\tisConcave = !isConvex\n\n\t\t\t\t\t\tif(isConcave && !canDecomp){\n\t\t\t\t\t\t\tCommon.warnOnce(\n\t\t\t\t\t\t\t\t\"Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(isConvex || !canDecomp){\n\t\t\t\t\t\t\tif(isConvex){\n\t\t\t\t\t\t\t\tvertices = Vertices.clockwiseSort(vertices)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// fallback to convex hull when decomposition is not possible\n\t\t\t\t\t\t\t\tvertices = Vertices.hull(vertices)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet centre = Vertices.centre(vertices)\n\t\t\t\t\t\t\tcentre = Vector.create(centre.x + x, centre.y + y)\n\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t// Nartallax: this is fix by me.\n\t\t\t\t\t\t\t\t// if I won't do that, part-bodies of the composite body we are trying to create\n\t\t\t\t\t\t\t\t// will be created relative to composite body center,\n\t\t\t\t\t\t\t\t// which is completely wrong, because that mashes all the parts together.\n\t\t\t\t\t\t\t\t// liabru probably just forgot to update it here, this is not the main path\n\t\t\t\t\t\t\t\t// (but it is for us!)\n\n\t\t\t\t\t\t\t\t// position: {x: x, y: y},\n\t\t\t\t\t\t\t\tposition: centre,\n\t\t\t\t\t\t\t\tvertices: vertices\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// initialise a decomposition\n\t\t\t\t\t\t\tvar concave = vertices.map(function(vertex) {\n\t\t\t\t\t\t\t\treturn [vertex.x, vertex.y]\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// vertices are concave and simple, we can decompose into parts\n\t\t\t\t\t\t\tdecomp.makeCCW(concave)\n\t\t\t\t\t\t\tif(removeCollinear !== false){\n\t\t\t\t\t\t\t\tdecomp.removeCollinearPoints(concave, removeCollinear)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(removeDuplicatePoints !== false && decomp.removeDuplicatePoints){\n\t\t\t\t\t\t\t\tdecomp.removeDuplicatePoints(concave, removeDuplicatePoints)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// use the quick decomposition algorithm (Bayazit)\n\t\t\t\t\t\t\tvar decomposed = decomp.quickDecomp(concave)\n\n\t\t\t\t\t\t\t// for each decomposed chunk\n\t\t\t\t\t\t\tfor(i = 0; i < decomposed.length; i++){\n\t\t\t\t\t\t\t\tvar chunk = decomposed[i]\n\n\t\t\t\t\t\t\t\t// convert vertices into the correct structure\n\t\t\t\t\t\t\t\tvar chunkVertices = chunk.map(function(vertices) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: vertices[0],\n\t\t\t\t\t\t\t\t\t\ty: vertices[1]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t// skip small chunks\n\t\t\t\t\t\t\t\tif(minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea){\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// create a compound part\n\t\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t\tposition: Vertices.centre(chunkVertices),\n\t\t\t\t\t\t\t\t\tvertices: chunkVertices\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// create body parts\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tparts[i] = Body.create(Common.extend(parts[i], options))\n\t\t\t\t\t}\n\n\t\t\t\t\t// flag internal edges (coincident part edges)\n\t\t\t\t\tif(flagInternal){\n\t\t\t\t\t\tvar coincident_max_dist = 5\n\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvar partA = parts[i]\n\n\t\t\t\t\t\t\tfor(j = i + 1; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar partB = parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.overlaps(partA.bounds, partB.bounds)){\n\t\t\t\t\t\t\t\t\tvar pav = partA.vertices,\n\t\t\t\t\t\t\t\t\t\tpbv = partB.vertices\n\n\t\t\t\t\t\t\t\t\t// iterate vertices of both parts\n\t\t\t\t\t\t\t\t\tfor(k = 0; k < partA.vertices.length; k++){\n\t\t\t\t\t\t\t\t\t\tfor(z = 0; z < partB.vertices.length; z++){\n\t\t\t\t\t\t\t\t\t\t\t// find distances between the vertices\n\t\t\t\t\t\t\t\t\t\t\tvar da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n\t\t\t\t\t\t\t\t\t\t\t\tdb = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]))\n\n\t\t\t\t\t\t\t\t\t\t\t// if both vertices are very close, consider the edge concident (internal)\n\t\t\t\t\t\t\t\t\t\t\tif(da < coincident_max_dist && db < coincident_max_dist){\n\t\t\t\t\t\t\t\t\t\t\t\tpav[k].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t\tpbv[z].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(parts.length > 1){\n\t\t\t\t\t\t// create the parent body to be returned, that contains generated compound parts\n\t\t\t\t\t\tbody = Body.create(Common.extend({parts: parts.slice(0)}, options))\n\n\t\t\t\t\t\t// offset such that body.position is at the centre off mass\n\t\t\t\t\t\tBody.setPosition(body, {x: x, y: y})\n\n\t\t\t\t\t\treturn body\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn parts[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 13 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\n\t\t\tvar Mouse = {}\n\n\t\t\tmodule.exports = Mouse\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n\t\t\t\tMouse.create = function(element) {\n\t\t\t\t\tvar mouse = {}\n\n\t\t\t\t\tif(!element){\n\t\t\t\t\t\tCommon.log(\"Mouse.create: element was undefined, defaulting to document.body\", \"warn\")\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.element = element || document.body\n\t\t\t\t\tmouse.absolute = {x: 0, y: 0}\n\t\t\t\t\tmouse.position = {x: 0, y: 0}\n\t\t\t\t\tmouse.mousedownPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.mouseupPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.offset = {x: 0, y: 0}\n\t\t\t\t\tmouse.scale = {x: 1, y: 1}\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t\tmouse.button = -1\n\t\t\t\t\tmouse.pixelRatio = parseInt(mouse.element.getAttribute(\"data-pixel-ratio\"), 10) || 1\n\n\t\t\t\t\tmouse.sourceEvents = {\n\t\t\t\t\t\tmousemove: null,\n\t\t\t\t\t\tmousedown: null,\n\t\t\t\t\t\tmouseup: null,\n\t\t\t\t\t\tmousewheel: null\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousemove = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.sourceEvents.mousemove = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousedown = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.button = event.button\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mousedownPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mousedownPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mousedown = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mouseup = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.button = -1\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mouseupPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mouseupPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mouseup = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousewheel = function(event) {\n\t\t\t\t\t\tmouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail))\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t}\n\n\t\t\t\t\tMouse.setElement(mouse, mouse.element)\n\n\t\t\t\t\treturn mouse\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n\t\t\t\tMouse.setElement = function(mouse, element) {\n\t\t\t\t\tmouse.element = element\n\n\t\t\t\t\telement.addEventListener(\"mousemove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"mousedown\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"mouseup\", mouse.mouseup)\n\n\t\t\t\t\telement.addEventListener(\"mousewheel\", mouse.mousewheel)\n\t\t\t\t\telement.addEventListener(\"DOMMouseScroll\", mouse.mousewheel)\n\n\t\t\t\t\telement.addEventListener(\"touchmove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"touchstart\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"touchend\", mouse.mouseup)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n\t\t\t\tMouse.clearSourceEvents = function(mouse) {\n\t\t\t\t\tmouse.sourceEvents.mousemove = null\n\t\t\t\t\tmouse.sourceEvents.mousedown = null\n\t\t\t\t\tmouse.sourceEvents.mouseup = null\n\t\t\t\t\tmouse.sourceEvents.mousewheel = null\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n\t\t\t\tMouse.setOffset = function(mouse, offset) {\n\t\t\t\t\tmouse.offset.x = offset.x\n\t\t\t\t\tmouse.offset.y = offset.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n\t\t\t\tMouse.setScale = function(mouse, scale) {\n\t\t\t\t\tmouse.scale.x = scale.x\n\t\t\t\t\tmouse.scale.y = scale.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n\t\t\t\tMouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n\t\t\t\t\tvar elementBounds = element.getBoundingClientRect(),\n\t\t\t\t\t\trootNode = (document.documentElement || document.body.parentNode || document.body),\n\t\t\t\t\t\tscrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n\t\t\t\t\t\tscrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n\t\t\t\t\t\ttouches = event.changedTouches,\n\t\t\t\t\t\tx, y\n\n\t\t\t\t\tif(touches){\n\t\t\t\t\t\tx = touches[0].pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = touches[0].pageY - elementBounds.top - scrollY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = event.pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = event.pageY - elementBounds.top - scrollY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n\t\t\t\t\t\ty: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 14 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\n\t\t\tvar Detector = {}\n\n\t\t\tmodule.exports = Detector\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Collision = __webpack_require__(8);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n\t\t\t\tDetector.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tpairs: null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n\t\t\t\tDetector.setBodies = function(detector, bodies) {\n\t\t\t\t\tdetector.bodies = bodies.slice(0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n\t\t\t\tDetector.clear = function(detector) {\n\t\t\t\t\tdetector.bodies = []\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     *\n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n\t\t\t\tDetector.collisions = function(detector) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tpairs = detector.pairs,\n\t\t\t\t\t\tbodies = detector.bodies,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tcanCollide = Detector.canCollide,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tbodies.sort(Detector._compareBoundsX)\n\n\t\t\t\t\tfor(i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tboundsA = bodyA.bounds,\n\t\t\t\t\t\t\tboundXMax = bodyA.bounds.max.x,\n\t\t\t\t\t\t\tboundYMax = bodyA.bounds.max.y,\n\t\t\t\t\t\t\tboundYMin = bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsASingle = partsALength === 1\n\n\t\t\t\t\t\tfor(j = i + 1; j < bodiesLength; j++){\n\t\t\t\t\t\t\tvar bodyB = bodies[j],\n\t\t\t\t\t\t\t\tboundsB = bodyB.bounds\n\n\t\t\t\t\t\t\tif(boundsB.min.x > boundXMax){\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(boundYMax < boundsB.min.y || boundYMin > boundsB.max.y){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar partsBLength = bodyB.parts.length\n\n\t\t\t\t\t\t\tif(partsASingle && partsBLength === 1){\n\t\t\t\t\t\t\t\tvar collision = collides(bodyA, bodyB, pairs)\n\n\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar partsAStart = partsALength > 1 ? 1 : 0,\n\t\t\t\t\t\t\t\t\tpartsBStart = partsBLength > 1 ? 1 : 0\n\n\t\t\t\t\t\t\t\tfor(var k = partsAStart; k < partsALength; k++){\n\t\t\t\t\t\t\t\t\tvar partA = bodyA.parts[k],\n\t\t\t\t\t\t\t\t\t\tboundsA = partA.bounds\n\n\t\t\t\t\t\t\t\t\tfor(var z = partsBStart; z < partsBLength; z++){\n\t\t\t\t\t\t\t\t\t\tvar partB = bodyB.parts[z],\n\t\t\t\t\t\t\t\t\t\t\tboundsB = partB.bounds\n\n\t\t\t\t\t\t\t\t\t\tif(boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y){\n\t\t\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar collision = collides(partA, partB, pairs)\n\n\t\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n\t\t\t\tDetector.canCollide = function(filterA, filterB) {\n\t\t\t\t\tif(filterA.group === filterB.group && filterA.group !== 0){\n\t\t\t\t\t\treturn filterA.group > 0\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n\t\t\t\tDetector._compareBoundsX = function(bodyA, bodyB) {\n\t\t\t\t\treturn bodyA.bounds.min.x - bodyB.bounds.min.x\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     *\n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 15 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\n\t\t\tvar Plugin = {}\n\n\t\t\tmodule.exports = Plugin\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tPlugin._registry = {}\n\n\t\t\t\t/**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n\t\t\t\tPlugin.register = function(plugin) {\n\t\t\t\t\tif(!Plugin.isPlugin(plugin)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"does not implement all required fields.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(plugin.name in Plugin._registry){\n\t\t\t\t\t\tvar registered = Plugin._registry[plugin.name],\n\t\t\t\t\t\t\tpluginVersion = Plugin.versionParse(plugin.version).number,\n\t\t\t\t\t\t\tregisteredVersion = Plugin.versionParse(registered.version).number\n\n\t\t\t\t\t\tif(pluginVersion > registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"was upgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t\t} else if(pluginVersion < registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"can not be downgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t} else if(plugin !== registered){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"is already registered to different plugin object\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t}\n\n\t\t\t\t\treturn plugin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n\t\t\t\tPlugin.resolve = function(dependency) {\n\t\t\t\t\treturn Plugin._registry[Plugin.dependencyParse(dependency).name]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n\t\t\t\tPlugin.toString = function(plugin) {\n\t\t\t\t\treturn typeof plugin === \"string\" ? plugin : (plugin.name || \"anonymous\") + \"@\" + (plugin.version || plugin.range || \"0.0.0\")\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n\t\t\t\tPlugin.isPlugin = function(obj) {\n\t\t\t\t\treturn obj && obj.name && obj.version && obj.install\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isUsed = function(module, name) {\n\t\t\t\t\treturn module.used.indexOf(name) > -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isFor = function(plugin, module) {\n\t\t\t\t\tvar parsed = plugin.for && Plugin.dependencyParse(plugin.for)\n\t\t\t\t\treturn !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n\t\t\t\tPlugin.use = function(module, plugins) {\n\t\t\t\t\tmodule.uses = (module.uses || []).concat(plugins || [])\n\n\t\t\t\t\tif(module.uses.length === 0){\n\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(module), \"does not specify any dependencies to install.\")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar dependencies = Plugin.dependencies(module),\n\t\t\t\t\t\tsortedDependencies = Common.topologicalSort(dependencies),\n\t\t\t\t\t\tstatus = []\n\n\t\t\t\t\tfor(var i = 0; i < sortedDependencies.length; i += 1){\n\t\t\t\t\t\tif(sortedDependencies[i] === module.name){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar plugin = Plugin.resolve(sortedDependencies[i])\n\n\t\t\t\t\t\tif(!plugin){\n\t\t\t\t\t\t\tstatus.push(\"❌ \" + sortedDependencies[i])\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(Plugin.isUsed(module, plugin.name)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!Plugin.isFor(plugin, module)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"is for\", plugin.for, \"but installed on\", Plugin.toString(module) + \".\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin.install){\n\t\t\t\t\t\t\tplugin.install(module)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"does not specify an install function.\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin._warned){\n\t\t\t\t\t\t\tstatus.push(\"🔶 \" + Plugin.toString(plugin))\n\t\t\t\t\t\t\tdelete plugin._warned\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus.push(\"✅ \" + Plugin.toString(plugin))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodule.used.push(plugin.name)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(status.length > 0){\n\t\t\t\t\t\tCommon.info(status.join(\"  \"))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n\t\t\t\tPlugin.dependencies = function(module, tracked) {\n\t\t\t\t\tvar parsedBase = Plugin.dependencyParse(module),\n\t\t\t\t\t\tname = parsedBase.name\n\n\t\t\t\t\ttracked = tracked || {}\n\n\t\t\t\t\tif(name in tracked){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tmodule = Plugin.resolve(module) || module\n\n\t\t\t\t\ttracked[name] = Common.map(module.uses || [], function(dependency) {\n\t\t\t\t\t\tif(Plugin.isPlugin(dependency)){\n\t\t\t\t\t\t\tPlugin.register(dependency)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parsed = Plugin.dependencyParse(dependency),\n\t\t\t\t\t\t\tresolved = Plugin.resolve(dependency)\n\n\t\t\t\t\t\tif(resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(resolved), \"does not satisfy\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsed), \"used by\", Plugin.toString(parsedBase) + \".\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tresolved._warned = true\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t} else if(!resolved){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(dependency), \"used by\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsedBase), \"could not be resolved.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn parsed.name\n\t\t\t\t\t})\n\n\t\t\t\t\tfor(var i = 0; i < tracked[name].length; i += 1){\n\t\t\t\t\t\tPlugin.dependencies(tracked[name][i], tracked)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tracked\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n\t\t\t\tPlugin.dependencyParse = function(dependency) {\n\t\t\t\t\tif(Common.isString(dependency)){\n\t\t\t\t\t\tvar pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/\n\n\t\t\t\t\t\tif(!pattern.test(dependency)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.dependencyParse:\", dependency, \"is not a valid dependency string.\")\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: dependency.split(\"@\")[0],\n\t\t\t\t\t\t\trange: dependency.split(\"@\")[1] || \"*\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: dependency.name,\n\t\t\t\t\t\trange: dependency.range || dependency.version\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n\t\t\t\tPlugin.versionParse = function(range) {\n\t\t\t\t\tvar pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/\n\n\t\t\t\t\tif(!pattern.test(range)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.versionParse:\", range, \"is not a valid version or range.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parts = pattern.exec(range)\n\t\t\t\t\tvar major = Number(parts[4])\n\t\t\t\t\tvar minor = Number(parts[5])\n\t\t\t\t\tvar patch = Number(parts[6])\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisRange: Boolean(parts[1] || parts[2]),\n\t\t\t\t\t\tversion: parts[3],\n\t\t\t\t\t\trange: range,\n\t\t\t\t\t\toperator: parts[1] || parts[2] || \"\",\n\t\t\t\t\t\tmajor: major,\n\t\t\t\t\t\tminor: minor,\n\t\t\t\t\t\tpatch: patch,\n\t\t\t\t\t\tparts: [major, minor, patch],\n\t\t\t\t\t\tprerelease: parts[7],\n\t\t\t\t\t\tnumber: major * 1e8 + minor * 1e4 + patch\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n\t\t\t\tPlugin.versionSatisfies = function(version, range) {\n\t\t\t\t\trange = range || \"*\"\n\n\t\t\t\t\tvar r = Plugin.versionParse(range),\n\t\t\t\t\t\tv = Plugin.versionParse(version)\n\n\t\t\t\t\tif(r.isRange){\n\t\t\t\t\t\tif(r.operator === \"*\" || version === \"*\"){\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">\"){\n\t\t\t\t\t\t\treturn v.number > r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">=\"){\n\t\t\t\t\t\t\treturn v.number >= r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"~\"){\n\t\t\t\t\t\t\treturn v.major === r.major && v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"^\"){\n\t\t\t\t\t\t\tif(r.major > 0){\n\t\t\t\t\t\t\t\treturn v.major === r.major && v.number >= r.number\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(r.minor > 0){\n\t\t\t\t\t\t\t\treturn v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn v.patch === r.patch\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn version === range || version === \"*\"\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 16 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\n\t\t\tvar Render = {}\n\n\t\t\tmodule.exports = Render\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Mouse = __webpack_require__(13);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback) {\n                                      \twindow.setTimeout(function() {\n                                      \t\tcallback(Common.now())\n                                      \t}, 1000 / 60)\n                                      }\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tRender._goodFps = 30\n\t\t\t\tRender._goodDelta = 1000 / 60\n\n\t\t\t\t/**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n\t\t\t\tRender.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tengine: null,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tcanvas: null,\n\t\t\t\t\t\tmouse: null,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\thistorySize: 60,\n\t\t\t\t\t\t\tdelta: 0,\n\t\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\t\tlastTime: 0,\n\t\t\t\t\t\t\tlastTimestamp: 0,\n\t\t\t\t\t\t\tlastElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsedHistory: [],\n\t\t\t\t\t\t\tengineDeltaHistory: [],\n\t\t\t\t\t\t\tengineElapsedHistory: [],\n\t\t\t\t\t\t\telapsedHistory: []\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\twidth: 800,\n\t\t\t\t\t\t\theight: 600,\n\t\t\t\t\t\t\tpixelRatio: 1,\n\t\t\t\t\t\t\tbackground: \"#14151f\",\n\t\t\t\t\t\t\twireframeBackground: \"#14151f\",\n\t\t\t\t\t\t\thasBounds: !!options.bounds,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\twireframes: true,\n\t\t\t\t\t\t\tshowSleeping: true,\n\t\t\t\t\t\t\tshowDebug: false,\n\t\t\t\t\t\t\tshowStats: false,\n\t\t\t\t\t\t\tshowPerformance: false,\n\t\t\t\t\t\t\tshowBounds: false,\n\t\t\t\t\t\t\tshowVelocity: false,\n\t\t\t\t\t\t\tshowCollisions: false,\n\t\t\t\t\t\t\tshowSeparations: false,\n\t\t\t\t\t\t\tshowAxes: false,\n\t\t\t\t\t\t\tshowPositions: false,\n\t\t\t\t\t\t\tshowAngleIndicator: false,\n\t\t\t\t\t\t\tshowIds: false,\n\t\t\t\t\t\t\tshowVertexNumbers: false,\n\t\t\t\t\t\t\tshowConvexHulls: false,\n\t\t\t\t\t\t\tshowInternalEdges: false,\n\t\t\t\t\t\t\tshowMousePosition: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar render = Common.extend(defaults, options)\n\n\t\t\t\t\tif(render.canvas){\n\t\t\t\t\t\trender.canvas.width = render.options.width || render.canvas.width\n\t\t\t\t\t\trender.canvas.height = render.options.height || render.canvas.height\n\t\t\t\t\t}\n\n\t\t\t\t\trender.mouse = options.mouse\n\t\t\t\t\trender.engine = options.engine\n\t\t\t\t\trender.canvas = render.canvas || _createCanvas(render.options.width, render.options.height)\n\t\t\t\t\trender.context = render.canvas.getContext(\"2d\")\n\t\t\t\t\trender.textures = {}\n\n\t\t\t\t\trender.bounds = render.bounds || {\n\t\t\t\t\t\tmin: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmax: {\n\t\t\t\t\t\t\tx: render.canvas.width,\n\t\t\t\t\t\t\ty: render.canvas.height\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\trender.controller = Render\n\t\t\t\t\trender.options.showBroadphase = false\n\n\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\tRender.setPixelRatio(render, render.options.pixelRatio)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Common.isElement(render.element)){\n\t\t\t\t\t\trender.element.appendChild(render.canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn render\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n\t\t\t\tRender.run = function(render) {\n\t\t\t\t\t(function loop(time) {\n\t\t\t\t\t\trender.frameRequestId = _requestAnimationFrame(loop)\n\n\t\t\t\t\t\t_updateTiming(render, time)\n\n\t\t\t\t\t\tRender.world(render, time)\n\n\t\t\t\t\t\tif(render.options.showStats || render.options.showDebug){\n\t\t\t\t\t\t\tRender.stats(render, render.context, time)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(render.options.showPerformance || render.options.showDebug){\n\t\t\t\t\t\t\tRender.performance(render, render.context, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n\t\t\t\tRender.stop = function(render) {\n\t\t\t\t\t_cancelAnimationFrame(render.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n\t\t\t\tRender.setPixelRatio = function(render, pixelRatio) {\n\t\t\t\t\tvar options = render.options,\n\t\t\t\t\t\tcanvas = render.canvas\n\n\t\t\t\t\tif(pixelRatio === \"auto\"){\n\t\t\t\t\t\tpixelRatio = _getPixelRatio(canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.pixelRatio = pixelRatio\n\t\t\t\t\tcanvas.setAttribute(\"data-pixel-ratio\", pixelRatio)\n\t\t\t\t\tcanvas.width = options.width * pixelRatio\n\t\t\t\t\tcanvas.height = options.height * pixelRatio\n\t\t\t\t\tcanvas.style.width = options.width + \"px\"\n\t\t\t\t\tcanvas.style.height = options.height + \"px\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n\t\t\t\tRender.lookAt = function(render, objects, padding, center) {\n\t\t\t\t\tcenter = typeof center !== \"undefined\" ? center : true\n\t\t\t\t\tobjects = Common.isArray(objects) ? objects : [objects]\n\t\t\t\t\tpadding = padding || {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}\n\n\t\t\t\t\t// find bounds of all objects\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: Infinity, y: Infinity},\n\t\t\t\t\t\tmax: {x: -Infinity, y: -Infinity}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i += 1){\n\t\t\t\t\t\tvar object = objects[i],\n\t\t\t\t\t\t\tmin = object.bounds ? object.bounds.min : (object.min || object.position || object),\n\t\t\t\t\t\t\tmax = object.bounds ? object.bounds.max : (object.max || object.position || object)\n\n\t\t\t\t\t\tif(min && max){\n\t\t\t\t\t\t\tif(min.x < bounds.min.x){\n\t\t\t\t\t\t\t\tbounds.min.x = min.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.x > bounds.max.x){\n\t\t\t\t\t\t\t\tbounds.max.x = max.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(min.y < bounds.min.y){\n\t\t\t\t\t\t\t\tbounds.min.y = min.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.y > bounds.max.y){\n\t\t\t\t\t\t\t\tbounds.max.y = max.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find ratios\n\t\t\t\t\tvar width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n\t\t\t\t\t\theight = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n\t\t\t\t\t\tviewHeight = render.canvas.height,\n\t\t\t\t\t\tviewWidth = render.canvas.width,\n\t\t\t\t\t\touterRatio = viewWidth / viewHeight,\n\t\t\t\t\t\tinnerRatio = width / height,\n\t\t\t\t\t\tscaleX = 1,\n\t\t\t\t\t\tscaleY = 1\n\n\t\t\t\t\t// find scale factor\n\t\t\t\t\tif(innerRatio > outerRatio){\n\t\t\t\t\t\tscaleY = innerRatio / outerRatio\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscaleX = outerRatio / innerRatio\n\t\t\t\t\t}\n\n\t\t\t\t\t// enable bounds\n\t\t\t\t\trender.options.hasBounds = true\n\n\t\t\t\t\t// position and size\n\t\t\t\t\trender.bounds.min.x = bounds.min.x\n\t\t\t\t\trender.bounds.max.x = bounds.min.x + width * scaleX\n\t\t\t\t\trender.bounds.min.y = bounds.min.y\n\t\t\t\t\trender.bounds.max.y = bounds.min.y + height * scaleY\n\n\t\t\t\t\t// center\n\t\t\t\t\tif(center){\n\t\t\t\t\t\trender.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t\trender.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t}\n\n\t\t\t\t\t// padding\n\t\t\t\t\trender.bounds.min.x -= padding.x\n\t\t\t\t\trender.bounds.max.x -= padding.x\n\t\t\t\t\trender.bounds.min.y -= padding.y\n\t\t\t\t\trender.bounds.max.y -= padding.y\n\n\t\t\t\t\t// update mouse\n\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.startViewTransform = function(render) {\n\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\trender.context.setTransform(\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleX, 0, 0,\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleY, 0, 0\n\t\t\t\t\t)\n\n\t\t\t\t\trender.context.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.endViewTransform = function(render) {\n\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n\t\t\t\tRender.world = function(render, time) {\n\t\t\t\t\tvar startTime = Common.now(),\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tcanvas = render.canvas,\n\t\t\t\t\t\tcontext = render.context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\ttiming = render.timing\n\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world),\n\t\t\t\t\t\tbackground = options.wireframes ? options.wireframeBackground : options.background,\n\t\t\t\t\t\tbodies = [],\n\t\t\t\t\t\tconstraints = [],\n\t\t\t\t\t\ti\n\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: engine.timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"beforeRender\", event)\n\n\t\t\t\t\t// apply background if it has changed\n\t\t\t\t\tif(render.currentBackground !== background){\n\t\t\t\t\t\t_applyBackground(render, background)\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the canvas with a transparent fill, to allow the canvas background to show\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-in\"\n\t\t\t\t\tcontext.fillStyle = \"transparent\"\n\t\t\t\t\tcontext.fillRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-over\"\n\n\t\t\t\t\t// handle bounds\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// filter out bodies that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allBodies.length; i++){\n\t\t\t\t\t\t\tvar body = allBodies[i]\n\t\t\t\t\t\t\tif(Bounds.overlaps(body.bounds, render.bounds)){\n\t\t\t\t\t\t\t\tbodies.push(body)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// filter out constraints that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allConstraints.length; i++){\n\t\t\t\t\t\t\tvar constraint = allConstraints[i],\n\t\t\t\t\t\t\t\tbodyA = constraint.bodyA,\n\t\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\t\tpointAWorld = constraint.pointA,\n\t\t\t\t\t\t\t\tpointBWorld = constraint.pointB\n\n\t\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld)){\n\t\t\t\t\t\t\t\tconstraints.push(constraint)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the view\n\t\t\t\t\t\tRender.startViewTransform(render)\n\n\t\t\t\t\t\t// update mouse\n\t\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n\t\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraints = allConstraints\n\t\t\t\t\t\tbodies = allBodies\n\n\t\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!options.wireframes || (engine.enableSleeping && options.showSleeping)){\n\t\t\t\t\t\t// fully featured rendering of bodies\n\t\t\t\t\t\tRender.bodies(render, bodies, context)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(options.showConvexHulls){\n\t\t\t\t\t\t\tRender.bodyConvexHulls(render, bodies, context)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// optimised method for wireframes only\n\t\t\t\t\t\tRender.bodyWireframes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showBounds){\n\t\t\t\t\t\tRender.bodyBounds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showAxes || options.showAngleIndicator){\n\t\t\t\t\t\tRender.bodyAxes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showPositions){\n\t\t\t\t\t\tRender.bodyPositions(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVelocity){\n\t\t\t\t\t\tRender.bodyVelocity(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showIds){\n\t\t\t\t\t\tRender.bodyIds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showSeparations){\n\t\t\t\t\t\tRender.separations(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showCollisions){\n\t\t\t\t\t\tRender.collisions(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVertexNumbers){\n\t\t\t\t\t\tRender.vertexNumbers(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showMousePosition){\n\t\t\t\t\t\tRender.mousePosition(render, render.mouse, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tRender.constraints(constraints, context)\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// revert view transforms\n\t\t\t\t\t\tRender.endViewTransform(render)\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"afterRender\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\ttiming.lastElapsed = Common.now() - startTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n\t\t\t\tRender.stats = function(render, context, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbodies = Composite.allBodies(world),\n\t\t\t\t\t\tparts = 0,\n\t\t\t\t\t\twidth = 55,\n\t\t\t\t\t\theight = 44,\n\t\t\t\t\t\tx = 0,\n\t\t\t\t\t\ty = 0\n\n\t\t\t\t\t// count parts\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tparts += bodies[i].parts.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// sections\n\t\t\t\t\tvar sections = {\n\t\t\t\t\t\tPart: parts,\n\t\t\t\t\t\tBody: bodies.length,\n\t\t\t\t\t\tCons: Composite.allConstraints(world).length,\n\t\t\t\t\t\tComp: Composite.allComposites(world).length,\n\t\t\t\t\t\tPair: engine.pairs.list.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(x, y, width * 5.5, height)\n\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"top\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\n\t\t\t\t\t// sections\n\t\t\t\t\tfor(var key in sections){\n\t\t\t\t\t\tvar section = sections[key]\n\t\t\t\t\t\t// label\n\t\t\t\t\t\tcontext.fillStyle = \"#aaa\"\n\t\t\t\t\t\tcontext.fillText(key, x + width, y + 8)\n\n\t\t\t\t\t\t// value\n\t\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\t\tcontext.fillText(section, x + width, y + 26)\n\n\t\t\t\t\t\tx += width\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.performance = function(render, context) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\tdeltaHistory = timing.deltaHistory,\n\t\t\t\t\t\telapsedHistory = timing.elapsedHistory,\n\t\t\t\t\t\ttimestampElapsedHistory = timing.timestampElapsedHistory,\n\t\t\t\t\t\tengineDeltaHistory = timing.engineDeltaHistory,\n\t\t\t\t\t\tengineElapsedHistory = timing.engineElapsedHistory,\n\t\t\t\t\t\tlastEngineDelta = engine.timing.lastDelta\n\n\t\t\t\t\tvar deltaMean = _mean(deltaHistory),\n\t\t\t\t\t\telapsedMean = _mean(elapsedHistory),\n\t\t\t\t\t\tengineDeltaMean = _mean(engineDeltaHistory),\n\t\t\t\t\t\tengineElapsedMean = _mean(engineElapsedHistory),\n\t\t\t\t\t\ttimestampElapsedMean = _mean(timestampElapsedHistory),\n\t\t\t\t\t\trateMean = (timestampElapsedMean / deltaMean) || 0,\n\t\t\t\t\t\tfps = (1000 / deltaMean) || 0\n\n\t\t\t\t\tvar graphHeight = 4,\n\t\t\t\t\t\tgap = 12,\n\t\t\t\t\t\twidth = 60,\n\t\t\t\t\t\theight = 34,\n\t\t\t\t\t\tx = 10,\n\t\t\t\t\t\ty = 69\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(0, 50, gap * 4 + width * 5 + 22, height)\n\n\t\t\t\t\t// show FPS\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x, y, width, graphHeight, deltaHistory.length,\n\t\t\t\t\t\tMath.round(fps) + \" fps\",\n\t\t\t\t\t\tfps / Render._goodFps,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (deltaHistory[i] / deltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine delta\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n\t\t\t\t\t\tlastEngineDelta.toFixed(2) + \" dt\",\n\t\t\t\t\t\tRender._goodDelta / lastEngineDelta,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineDeltaHistory[i] / engineDeltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine update time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n\t\t\t\t\t\tengineElapsedMean.toFixed(2) + \" ut\",\n\t\t\t\t\t\t1 - (engineElapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineElapsedHistory[i] / engineElapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show render time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n\t\t\t\t\t\telapsedMean.toFixed(2) + \" rt\",\n\t\t\t\t\t\t1 - (elapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (elapsedHistory[i] / elapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show effective speed\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length,\n\t\t\t\t\t\trateMean.toFixed(2) + \" x\",\n\t\t\t\t\t\trateMean * rateMean * rateMean,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n\t\t\t\tRender.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.strokeStyle = \"#888\"\n\t\t\t\t\tcontext.fillStyle = \"#444\"\n\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\tcontext.fillRect(x, y + 7, width, 1)\n\n\t\t\t\t\t// chart\n\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\tcontext.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2))\n\t\t\t\t\tfor(var i = 0; i < width; i += 1){\n\t\t\t\t\t\tcontext.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0))\n\t\t\t\t\t}\n\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t// indicator\n\t\t\t\t\tcontext.fillStyle = \"hsl(\" + Common.clamp(25 + 95 * indicator, 0, 120) + \",100%,60%)\"\n\t\t\t\t\tcontext.fillRect(x, y - 7, 4, 4)\n\n\t\t\t\t\t// label\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"middle\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\tcontext.fillText(label, x + width, y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.constraints = function(constraints, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i++){\n\t\t\t\t\t\tvar constraint = constraints[i]\n\n\t\t\t\t\t\tif(!constraint.render.visible || !constraint.pointA || !constraint.pointB){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\n\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\tstart = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstart = constraint.pointA\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.type === \"pin\"){\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tend = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tend = constraint.pointB\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.moveTo(start.x, start.y)\n\n\t\t\t\t\t\t\tif(constraint.render.type === \"spring\"){\n\t\t\t\t\t\t\t\tvar delta = Vector.sub(end, start),\n\t\t\t\t\t\t\t\t\tnormal = Vector.perp(Vector.normalise(delta)),\n\t\t\t\t\t\t\t\t\tcoils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n\t\t\t\t\t\t\t\t\toffset\n\n\t\t\t\t\t\t\t\tfor(var j = 1; j < coils; j += 1){\n\t\t\t\t\t\t\t\t\toffset = j % 2 === 0 ? 1 : -1\n\n\t\t\t\t\t\t\t\t\tc.lineTo(\n\t\t\t\t\t\t\t\t\t\tstart.x + delta.x * (j / coils) + normal.x * offset * 4,\n\t\t\t\t\t\t\t\t\t\tstart.y + delta.y * (j / coils) + normal.y * offset * 4\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(end.x, end.y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.lineWidth){\n\t\t\t\t\t\t\tc.lineWidth = constraint.render.lineWidth\n\t\t\t\t\t\t\tc.strokeStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.anchors){\n\t\t\t\t\t\t\tc.fillStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.arc(end.x, end.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodies = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tshowInternalEdges = options.showInternalEdges || !options.wireframes,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tif(!part.render.visible){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(options.showSleeping && body.isSleeping){\n\t\t\t\t\t\t\t\tc.globalAlpha = 0.5 * part.render.opacity\n\t\t\t\t\t\t\t} else if(part.render.opacity !== 1){\n\t\t\t\t\t\t\t\tc.globalAlpha = part.render.opacity\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(part.render.sprite && part.render.sprite.texture && !options.wireframes){\n\t\t\t\t\t\t\t\t// part sprite\n\t\t\t\t\t\t\t\tvar sprite = part.render.sprite,\n\t\t\t\t\t\t\t\t\ttexture = _getTexture(render, sprite.texture)\n\n\t\t\t\t\t\t\t\tc.translate(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\tc.rotate(part.angle)\n\n\t\t\t\t\t\t\t\tc.drawImage(\n\t\t\t\t\t\t\t\t\ttexture,\n\t\t\t\t\t\t\t\t\ttexture.width * -sprite.xOffset * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * -sprite.yOffset * sprite.yScale,\n\t\t\t\t\t\t\t\t\ttexture.width * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * sprite.yScale\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t// revert translation, hopefully faster than save / restore\n\t\t\t\t\t\t\t\tc.rotate(-part.angle)\n\t\t\t\t\t\t\t\tc.translate(-part.position.x, -part.position.y)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// part polygon\n\t\t\t\t\t\t\t\tif(part.circleRadius){\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\t\t\tfor(var j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!options.wireframes){\n\t\t\t\t\t\t\t\t\tc.fillStyle = part.render.fillStyle\n\n\t\t\t\t\t\t\t\t\tif(part.render.lineWidth){\n\t\t\t\t\t\t\t\t\t\tc.lineWidth = part.render.lineWidth\n\t\t\t\t\t\t\t\t\t\tc.strokeStyle = part.render.strokeStyle\n\t\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.globalAlpha = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyWireframes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tshowInternalEdges = render.options.showInternalEdges,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render all bodies\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\tfor(j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyConvexHulls = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render convex hulls\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible || body.parts.length === 1){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.vertices[0].x, body.vertices[0].y)\n\n\t\t\t\t\t\tfor(j = 1; j < body.vertices.length; j++){\n\t\t\t\t\t\t\tc.lineTo(body.vertices[j].x, body.vertices[j].y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.lineTo(body.vertices[0].x, body.vertices[0].y)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.vertexNumbers = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(k = parts.length > 1 ? 1 : 0; k < parts.length; k++){\n\t\t\t\t\t\t\tvar part = parts[k]\n\t\t\t\t\t\t\tfor(j = 0; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\t\t\t\tc.fillText(i + \"_\" + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.mousePosition = function(render, mouse, context) {\n\t\t\t\t\tvar c = context\n\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\t\t\tc.fillText(mouse.position.x + \"  \" + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyBounds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\t\tfor(var j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\t\tc.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.08)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(0,0,0,0.1)\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyAxes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tparts = body.parts\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(options.showAxes){\n\t\t\t\t\t\t\t// render all axes\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\tvar axis = part.axes[k]\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\t// render a single axis indicator\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo((part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,\n\t\t\t\t\t\t\t\t\t\t(part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"indianred\"\n\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255, 255, 255, 0.4)\"\n\t\t\t\t\t\tc.globalCompositeOperation = \"overlay\"\n\t\t\t\t\t\tc.lineWidth = 2\n\t\t\t\t\t}\n\n\t\t\t\t\tc.stroke()\n\t\t\t\t\tc.globalCompositeOperation = \"source-over\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyPositions = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render current positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"indianred\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"rgba(0,0,0,0.5)\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render previous positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tc.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.fillStyle = \"rgba(255,165,0,0.8)\"\n\t\t\t\t\tc.fill()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyVelocity = function(render, bodies, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.position.x, body.position.y)\n\t\t\t\t\t\tc.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 3\n\t\t\t\t\tc.strokeStyle = \"cornflowerblue\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyIds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tif(!bodies[i].render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\tc.font = \"12px Arial\"\n\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.5)\"\n\t\t\t\t\t\t\tc.fillText(part.id, part.position.x + 10, part.position.y - 10)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.collisions = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision positions\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tfor(j = 0; j < pair.activeContacts.length; j++){\n\t\t\t\t\t\t\tvar contact = pair.activeContacts[j],\n\t\t\t\t\t\t\t\tvertex = contact.vertex\n\t\t\t\t\t\t\tc.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision normals\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\n\t\t\t\t\t\tif(pair.activeContacts.length > 0){\n\t\t\t\t\t\t\tvar normalPosX = pair.activeContacts[0].vertex.x,\n\t\t\t\t\t\t\t\tnormalPosY = pair.activeContacts[0].vertex.y\n\n\t\t\t\t\t\t\tif(pair.activeContacts.length === 2){\n\t\t\t\t\t\t\t\tnormalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2\n\t\t\t\t\t\t\t\tnormalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true){\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(normalPosX, normalPosY)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.separations = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render separations\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\t\tvar k = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyB.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyB.position.x, bodyB.position.y)\n\t\t\t\t\t\tc.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k)\n\n\t\t\t\t\t\tk = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyA.position.x, bodyA.position.y)\n\t\t\t\t\t\tc.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.5)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.inspector = function(inspector, context) {\n\t\t\t\t\tvar engine = inspector.engine,\n\t\t\t\t\t\tselected = inspector.selected,\n\t\t\t\t\t\trender = inspector.render,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbounds\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\t\tcontext.scale(1 / boundsScaleX, 1 / boundsScaleY)\n\t\t\t\t\t\tcontext.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < selected.length; i++){\n\t\t\t\t\t\tvar item = selected[i].data\n\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.9)\"\n\t\t\t\t\t\tcontext.setLineDash([1, 2])\n\n\t\t\t\t\t\tswitch(item.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\n\t\t\t\t\t\t\t\t// render body selections\n\t\t\t\t\t\t\t\tbounds = item.bounds\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n\t\t\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6))\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\tcase \"constraint\":\n\n\t\t\t\t\t\t\t\t// render constraint selections\n\t\t\t\t\t\t\t\tvar point = item.pointA\n\t\t\t\t\t\t\t\tif(item.bodyA){\n\t\t\t\t\t\t\t\t\tpoint = item.pointB\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.arc(point.x, point.y, 10, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.setLineDash([])\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\t// render selection region\n\t\t\t\t\tif(inspector.selectStart !== null){\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.6)\"\n\t\t\t\t\t\tcontext.fillStyle = \"rgba(255,165,0,0.1)\"\n\t\t\t\t\t\tbounds = inspector.selectBounds\n\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y))\n\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\tcontext.stroke()\n\t\t\t\t\t\tcontext.fill()\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tcontext.setTransform(1, 0, 0, 1, 0, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n\t\t\t\tvar _updateTiming = function(render, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\thistorySize = timing.historySize,\n\t\t\t\t\t\ttimestamp = engine.timing.timestamp\n\n\t\t\t\t\ttiming.delta = time - timing.lastTime || Render._goodDelta\n\t\t\t\t\ttiming.lastTime = time\n\n\t\t\t\t\ttiming.timestampElapsed = timestamp - timing.lastTimestamp || 0\n\t\t\t\t\ttiming.lastTimestamp = timestamp\n\n\t\t\t\t\ttiming.deltaHistory.unshift(timing.delta)\n\t\t\t\t\ttiming.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineDeltaHistory.unshift(engine.timing.lastDelta)\n\t\t\t\t\ttiming.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.timestampElapsedHistory.unshift(timing.timestampElapsed)\n\t\t\t\t\ttiming.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineElapsedHistory.unshift(engine.timing.lastElapsed)\n\t\t\t\t\ttiming.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.elapsedHistory.unshift(timing.lastElapsed)\n\t\t\t\t\ttiming.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n\t\t\t\tvar _mean = function(values) {\n\t\t\t\t\tvar result = 0\n\t\t\t\t\tfor(var i = 0; i < values.length; i += 1){\n\t\t\t\t\t\tresult += values[i]\n\t\t\t\t\t}\n\t\t\t\t\treturn (result / values.length) || 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n\t\t\t\tvar _createCanvas = function(width, height) {\n\t\t\t\t\tvar canvas = document.createElement(\"canvas\")\n\t\t\t\t\tcanvas.width = width\n\t\t\t\t\tcanvas.height = height\n\t\t\t\t\tcanvas.oncontextmenu = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\tcanvas.onselectstart = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn canvas\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n\t\t\t\tvar _getPixelRatio = function(canvas) {\n\t\t\t\t\tvar context = canvas.getContext(\"2d\"),\n\t\t\t\t\t\tdevicePixelRatio = window.devicePixelRatio || 1,\n\t\t\t\t\t\tbackingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1\n\n\t\t\t\t\treturn devicePixelRatio / backingStorePixelRatio\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n\t\t\t\tvar _getTexture = function(render, imagePath) {\n\t\t\t\t\tvar image = render.textures[imagePath]\n\n\t\t\t\t\tif(image){\n\t\t\t\t\t\treturn image\n\t\t\t\t\t}\n\n\t\t\t\t\timage = render.textures[imagePath] = new Image()\n\t\t\t\t\timage.src = imagePath\n\n\t\t\t\t\treturn image\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n\t\t\t\tvar _applyBackground = function(render, background) {\n\t\t\t\t\tvar cssBackground = background\n\n\t\t\t\t\tif(/(jpg|gif|png)$/.test(background)){\n\t\t\t\t\t\tcssBackground = \"url(\" + background + \")\"\n\t\t\t\t\t}\n\n\t\t\t\t\trender.canvas.style.background = cssBackground\n\t\t\t\t\trender.canvas.style.backgroundSize = \"contain\"\n\t\t\t\t\trender.currentBackground = background\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @deprecated\n     * @property controller\n     * @type render\n     */\n\n\t\t\t\t/**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n\t\t\t\t/**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t\t/**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n\t\t\t\t/**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n\t\t\t\t/**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n\t\t\t\t/**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable all debug information overlays together.\n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the engine stats info overlay.\n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable performance charts.\n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 17 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\n\t\t\tvar Contact = {}\n\n\t\t\tmodule.exports = Contact;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n\t\t\t\tContact.create = function(vertex) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvertex: vertex,\n\t\t\t\t\t\tnormalImpulse: 0,\n\t\t\t\t\t\ttangentImpulse: 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 18 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\n\t\t\tvar Engine = {}\n\n\t\t\tmodule.exports = Engine\n\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Resolver = __webpack_require__(19)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Pairs = __webpack_require__(20)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n\t\t\t\tEngine.create = function(options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tpositionIterations: 6,\n\t\t\t\t\t\tvelocityIterations: 4,\n\t\t\t\t\t\tconstraintIterations: 2,\n\t\t\t\t\t\tenableSleeping: false,\n\t\t\t\t\t\tevents: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tgravity: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 1,\n\t\t\t\t\t\t\tscale: 0.001\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\ttimestamp: 0,\n\t\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\t\tlastDelta: 0,\n\t\t\t\t\t\t\tlastElapsed: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar engine = Common.extend(defaults, options)\n\n\t\t\t\t\tengine.world = options.world || Composite.create({label: \"World\"})\n\t\t\t\t\tengine.pairs = options.pairs || Pairs.create()\n\t\t\t\t\tengine.detector = options.detector || Detector.create()\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\tengine.grid = {buckets: []}\n\t\t\t\t\tengine.world.gravity = engine.gravity\n\t\t\t\t\tengine.broadphase = engine.grid\n\t\t\t\t\tengine.metrics = {}\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n\t\t\t\tEngine.update = function(engine, delta, correction) {\n\t\t\t\t\tvar startTime = Common.now()\n\n\t\t\t\t\tdelta = delta || 1000 / 60\n\t\t\t\t\tcorrection = correction || 1\n\n\t\t\t\t\tvar world = engine.world,\n\t\t\t\t\t\tdetector = engine.detector,\n\t\t\t\t\t\tpairs = engine.pairs,\n\t\t\t\t\t\ttiming = engine.timing,\n\t\t\t\t\t\ttimestamp = timing.timestamp,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// increment timestamp\n\t\t\t\t\ttiming.timestamp += delta * timing.timeScale\n\t\t\t\t\ttiming.lastDelta = delta * timing.timeScale\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(engine, \"beforeUpdate\", event)\n\n\t\t\t\t\t// get all bodies and all constraints in the world\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world)\n\n\t\t\t\t\t// update the detector bodies if they have changed\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tDetector.setBodies(detector, allBodies)\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset all composite modified flags\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tComposite.setModified(world, false, false, true)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update sleeping if enabled\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.update(allBodies, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// apply gravity to all bodies\n\t\t\t\t\tEngine._bodiesApplyGravity(allBodies, engine.gravity)\n\n\t\t\t\t\t// update all body position and rotation by integration\n\t\t\t\t\tEngine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds)\n\n\t\t\t\t\t// update all constraints (first pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// find all collisions\n\t\t\t\t\tdetector.pairs = engine.pairs\n\t\t\t\t\tvar collisions = Detector.collisions(detector)\n\n\t\t\t\t\t// update collision pairs\n\t\t\t\t\tPairs.update(pairs, collisions, timestamp)\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.afterCollisions(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionStart.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionStart\", {pairs: pairs.collisionStart})\n\t\t\t\t\t}\n\n\t\t\t\t\t// iteratively resolve position between collisions\n\t\t\t\t\tResolver.preSolvePosition(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.positionIterations; i++){\n\t\t\t\t\t\tResolver.solvePosition(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tResolver.postSolvePosition(allBodies)\n\n\t\t\t\t\t// update all constraints (second pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// iteratively resolve velocity between collisions\n\t\t\t\t\tResolver.preSolveVelocity(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.velocityIterations; i++){\n\t\t\t\t\t\tResolver.solveVelocity(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionActive.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionActive\", {pairs: pairs.collisionActive})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(pairs.collisionEnd.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionEnd\", {pairs: pairs.collisionEnd})\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear force buffers\n\t\t\t\t\tEngine._bodiesClearForces(allBodies)\n\n\t\t\t\t\tEvents.trigger(engine, \"afterUpdate\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\tengine.timing.lastElapsed = Common.now() - startTime\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n\t\t\t\tEngine.merge = function(engineA, engineB) {\n\t\t\t\t\tCommon.extend(engineA, engineB)\n\n\t\t\t\t\tif(engineB.world){\n\t\t\t\t\t\tengineA.world = engineB.world\n\n\t\t\t\t\t\tEngine.clear(engineA)\n\n\t\t\t\t\t\tvar bodies = Composite.allBodies(engineA.world)\n\n\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tbody.id = Common.nextId()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n\t\t\t\tEngine.clear = function(engine) {\n\t\t\t\t\tPairs.clear(engine.pairs)\n\t\t\t\t\tDetector.clear(engine.detector)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n\t\t\t\tEngine._bodiesClearForces = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\t// reset force buffers\n\t\t\t\t\t\tbody.force.x = 0\n\t\t\t\t\t\tbody.force.y = 0\n\t\t\t\t\t\tbody.torque = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n\t\t\t\tEngine._bodiesApplyGravity = function(bodies, gravity) {\n\t\t\t\t\tvar gravityScale = typeof gravity.scale !== \"undefined\" ? gravity.scale : 0.001\n\n\t\t\t\t\tif((gravity.x === 0 && gravity.y === 0) || gravityScale === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply gravity\n\t\t\t\t\t\tbody.force.y += body.mass * gravity.y * gravityScale\n\t\t\t\t\t\tbody.force.x += body.mass * gravity.x * gravityScale\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n\t\t\t\tEngine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBody.update(body, deltaTime, timeScale, correction)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n\t\t\t\t/**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n\t\t\t\t/**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n\t\t\t\t/**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 19 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\n\t\t\tvar Resolver = {}\n\n\t\t\tmodule.exports = Resolver\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\tResolver._restingThresh = 4\n\t\t\t\tResolver._restingThreshTangent = 6\n\t\t\t\tResolver._positionDampen = 0.9\n\t\t\t\tResolver._positionWarming = 0.8\n\t\t\t\tResolver._frictionNormalMultiplier = 5\n\n\t\t\t\t/**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolvePosition = function(pairs) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tactiveCount,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find total contacts on each body\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tactiveCount = pair.activeContacts.length\n\t\t\t\t\t\tpair.collision.parentA.totalContacts += activeCount\n\t\t\t\t\t\tpair.collision.parentB.totalContacts += activeCount\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solvePosition = function(pairs, timeScale) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tcontactShare,\n\t\t\t\t\t\tpositionImpulse,\n\t\t\t\t\t\tpositionDampen = Resolver._positionDampen,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find impulses required to resolve penetration\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\n\t\t\t\t\t\t// get current separation between body edges involved in collision\n\t\t\t\t\t\tpair.separation\n                = normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\t\t\t\t\t\tpositionImpulse = (pair.separation - pair.slop) * timeScale\n\n\t\t\t\t\t\tif(bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tpositionImpulse *= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyA.totalContacts\n\t\t\t\t\t\t\tbodyA.positionImpulse.x += normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyA.positionImpulse.y += normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyB.totalContacts\n\t\t\t\t\t\t\tbodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n\t\t\t\tResolver.postSolvePosition = function(bodies) {\n\t\t\t\t\tvar positionWarming = Resolver._positionWarming,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tverticesTranslate = Vertices.translate,\n\t\t\t\t\t\tboundsUpdate = Bounds.update\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tpositionImpulse = body.positionImpulse,\n\t\t\t\t\t\t\tpositionImpulseX = positionImpulse.x,\n\t\t\t\t\t\t\tpositionImpulseY = positionImpulse.y,\n\t\t\t\t\t\t\tvelocity = body.velocity\n\n\t\t\t\t\t\t// reset contact count\n\t\t\t\t\t\tbody.totalContacts = 0\n\n\t\t\t\t\t\tif(positionImpulseX !== 0 || positionImpulseY !== 0){\n\t\t\t\t\t\t\t// update body geometry\n\t\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\tverticesTranslate(part.vertices, positionImpulse)\n\t\t\t\t\t\t\t\tboundsUpdate(part.bounds, part.vertices, velocity)\n\t\t\t\t\t\t\t\tpart.position.x += positionImpulseX\n\t\t\t\t\t\t\t\tpart.position.y += positionImpulseY\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// move the body without changing velocity\n\t\t\t\t\t\t\tbody.positionPrev.x += positionImpulseX\n\t\t\t\t\t\t\tbody.positionPrev.y += positionImpulseY\n\n\t\t\t\t\t\t\tif(positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0){\n\t\t\t\t\t\t\t\t// reset cached impulse if the body has velocity along it\n\t\t\t\t\t\t\t\tpositionImpulse.x = 0\n\t\t\t\t\t\t\t\tpositionImpulse.y = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// warm the next iteration\n\t\t\t\t\t\t\t\tpositionImpulse.x *= positionWarming\n\t\t\t\t\t\t\t\tpositionImpulse.y *= positionWarming\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolveVelocity = function(pairs) {\n\t\t\t\t\tvar pairsLength = pairs.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar contacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcollision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tnormal = collision.normal,\n\t\t\t\t\t\t\ttangent = collision.tangent\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex,\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse,\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse\n\n\t\t\t\t\t\t\tif(normalImpulse !== 0 || tangentImpulse !== 0){\n\t\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\t\tvar impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n\t\t\t\t\t\t\t\t\timpulseY = normal.y * normalImpulse + tangent.y * tangentImpulse\n\n\t\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.anglePrev += bodyA.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.anglePrev -= bodyB.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyB.position.x) * impulseY\n                            - (contactVertex.y - bodyB.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solveVelocity = function(pairs, timeScale) {\n\t\t\t\t\tvar timeScaleSquared = timeScale * timeScale,\n\t\t\t\t\t\trestingThresh = Resolver._restingThresh * timeScaleSquared,\n\t\t\t\t\t\tfrictionNormalMultiplier = Resolver._frictionNormalMultiplier,\n\t\t\t\t\t\trestingThreshTangent = Resolver._restingThreshTangent * timeScaleSquared,\n\t\t\t\t\t\tNumberMaxValue = Number.MAX_VALUE,\n\t\t\t\t\t\tpairsLength = pairs.length,\n\t\t\t\t\t\ttangentImpulse,\n\t\t\t\t\t\tmaxFriction,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tbodyAVelocity = bodyA.velocity,\n\t\t\t\t\t\t\tbodyBVelocity = bodyB.velocity,\n\t\t\t\t\t\t\tnormalX = collision.normal.x,\n\t\t\t\t\t\t\tnormalY = collision.normal.y,\n\t\t\t\t\t\t\ttangentX = collision.tangent.x,\n\t\t\t\t\t\t\ttangentY = collision.tangent.y,\n\t\t\t\t\t\t\tcontacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcontactShare = 1 / contactsLength,\n\t\t\t\t\t\t\tinverseMassTotal = bodyA.inverseMass + bodyB.inverseMass,\n\t\t\t\t\t\t\tfriction = pair.friction * pair.frictionStatic * frictionNormalMultiplier * timeScaleSquared\n\n\t\t\t\t\t\t// update body velocities\n\t\t\t\t\t\tbodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x\n\t\t\t\t\t\tbodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y\n\t\t\t\t\t\tbodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x\n\t\t\t\t\t\tbodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y\n\t\t\t\t\t\tbodyA.angularVelocity = bodyA.angle - bodyA.anglePrev\n\t\t\t\t\t\tbodyB.angularVelocity = bodyB.angle - bodyB.anglePrev\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex\n\n\t\t\t\t\t\t\tvar offsetAX = contactVertex.x - bodyA.position.x,\n\t\t\t\t\t\t\t\toffsetAY = contactVertex.y - bodyA.position.y,\n\t\t\t\t\t\t\t\toffsetBX = contactVertex.x - bodyB.position.x,\n\t\t\t\t\t\t\t\toffsetBY = contactVertex.y - bodyB.position.y\n\n\t\t\t\t\t\t\tvar velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity\n\n\t\t\t\t\t\t\tvar relativeVelocityX = velocityPointAX - velocityPointBX,\n\t\t\t\t\t\t\t\trelativeVelocityY = velocityPointAY - velocityPointBY\n\n\t\t\t\t\t\t\tvar normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n\t\t\t\t\t\t\t\ttangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY\n\n\t\t\t\t\t\t\t// coulomb friction\n\t\t\t\t\t\t\tvar normalOverlap = pair.separation + normalVelocity\n\t\t\t\t\t\t\tvar normalForce = Math.min(normalOverlap, 1)\n\t\t\t\t\t\t\tnormalForce = normalOverlap < 0 ? 0 : normalForce\n\n\t\t\t\t\t\t\tvar frictionLimit = normalForce * friction\n\n\t\t\t\t\t\t\tif(tangentVelocity > frictionLimit || -tangentVelocity > frictionLimit){\n\t\t\t\t\t\t\t\tmaxFriction = tangentVelocity > 0 ? tangentVelocity : -tangentVelocity\n\t\t\t\t\t\t\t\ttangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleSquared\n\n\t\t\t\t\t\t\t\tif(tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t} else if(tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttangentImpulse = tangentVelocity\n\t\t\t\t\t\t\t\tmaxFriction = NumberMaxValue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// account for mass, inertia and contact offset\n\t\t\t\t\t\t\tvar oAcN = offsetAX * normalY - offsetAY * normalX,\n\t\t\t\t\t\t\t\toBcN = offsetBX * normalY - offsetBY * normalX,\n\t\t\t\t\t\t\t\tshare = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN)\n\n\t\t\t\t\t\t\t// raw impulses\n\t\t\t\t\t\t\tvar normalImpulse = (1 + pair.restitution) * normalVelocity * share\n\t\t\t\t\t\t\ttangentImpulse *= share\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(normalVelocity * normalVelocity > restingThresh && normalVelocity < 0){\n\t\t\t\t\t\t\t\t// high normal velocity so clear cached contact normal impulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// impulse constraint tends to 0\n\t\t\t\t\t\t\t\tvar contactNormalImpulse = contact.normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse += normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = Math.min(contact.normalImpulse, 0)\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse - contactNormalImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(tangentVelocity * tangentVelocity > restingThreshTangent){\n\t\t\t\t\t\t\t\t// high tangent velocity so clear cached contact tangent impulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// tangent impulse tends to -tangentSpeed or +tangentSpeed\n\t\t\t\t\t\t\t\tvar contactTangentImpulse = contact.tangentImpulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse += tangentImpulse\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse - contactTangentImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\tvar impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n\t\t\t\t\t\t\t\timpulseY = normalY * normalImpulse + tangentY * tangentImpulse\n\n\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 20 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\n\t\t\tvar Pairs = {}\n\n\t\t\tmodule.exports = Pairs\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n\t\t\t\tPairs.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\ttable: {},\n\t\t\t\t\t\tlist: [],\n\t\t\t\t\t\tcollisionStart: [],\n\t\t\t\t\t\tcollisionActive: [],\n\t\t\t\t\t\tcollisionEnd: []\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n\t\t\t\tPairs.update = function(pairs, collisions, timestamp) {\n\t\t\t\t\tvar pairsList = pairs.list,\n\t\t\t\t\t\tpairsListLength = pairsList.length,\n\t\t\t\t\t\tpairsTable = pairs.table,\n\t\t\t\t\t\tcollisionsLength = collisions.length,\n\t\t\t\t\t\tcollisionStart = pairs.collisionStart,\n\t\t\t\t\t\tcollisionEnd = pairs.collisionEnd,\n\t\t\t\t\t\tcollisionActive = pairs.collisionActive,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tpairIndex,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// clear collision state arrays, but maintain old reference\n\t\t\t\t\tcollisionStart.length = 0\n\t\t\t\t\tcollisionEnd.length = 0\n\t\t\t\t\tcollisionActive.length = 0\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpairsList[i].confirmedActive = false\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < collisionsLength; i++){\n\t\t\t\t\t\tcollision = collisions[i]\n\t\t\t\t\t\tpair = collision.pair\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\t// pair already exists (but may or may not be active)\n\t\t\t\t\t\t\tif(pair.isActive){\n\t\t\t\t\t\t\t\t// pair exists and is active\n\t\t\t\t\t\t\t\tcollisionActive.push(pair)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// pair exists but was inactive, so a collision has just started again\n\t\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// update the pair\n\t\t\t\t\t\t\tPair.update(pair, collision, timestamp)\n\t\t\t\t\t\t\tpair.confirmedActive = true\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// pair did not exist, create a new pair\n\t\t\t\t\t\t\tpair = Pair.create(collision, timestamp)\n\t\t\t\t\t\t\tpairsTable[pair.id] = pair\n\n\t\t\t\t\t\t\t// push the new pair\n\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\tpairsList.push(pair)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find pairs that are no longer active\n\t\t\t\t\tvar removePairIndex = []\n\t\t\t\t\tpairsListLength = pairsList.length\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpair = pairsList[i]\n\n\t\t\t\t\t\t// keep pair if it had a collision this update\n\t\t\t\t\t\tif(pair.confirmedActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbodyA = pair.collision.bodyA\n\t\t\t\t\t\tbodyB = pair.collision.bodyB\n\n\t\t\t\t\t\t// keep pair if it is sleeping but not both static\n\t\t\t\t\t\tif((bodyA.isSleeping || bodyA.isStatic) && (bodyB.isSleeping || bodyB.isStatic)\n                && !(bodyA.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tPair.setActive(pair, false, timestamp)\n\t\t\t\t\t\tcollisionEnd.push(pair)\n\t\t\t\t\t\tremovePairIndex.push(i)\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove inactive pairs\n\t\t\t\t\tfor(i = 0; i < removePairIndex.length; i++){\n\t\t\t\t\t\tpairIndex = removePairIndex[i] - i\n\t\t\t\t\t\tpair = pairsList[pairIndex]\n\t\t\t\t\t\tpairsList.splice(pairIndex, 1)\n\t\t\t\t\t\tdelete pairsTable[pair.id]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n\t\t\t\tPairs.clear = function(pairs) {\n\t\t\t\t\tpairs.table = {}\n\t\t\t\t\tpairs.list.length = 0\n\t\t\t\t\tpairs.collisionStart.length = 0\n\t\t\t\t\tpairs.collisionActive.length = 0\n\t\t\t\t\tpairs.collisionEnd.length = 0\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 21 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\tvar Matter = module.exports = __webpack_require__(22)\n\n\t\t\tMatter.Axes = __webpack_require__(11)\n\t\t\tMatter.Bodies = __webpack_require__(12)\n\t\t\tMatter.Body = __webpack_require__(6)\n\t\t\tMatter.Bounds = __webpack_require__(1)\n\t\t\tMatter.Collision = __webpack_require__(8)\n\t\t\tMatter.Common = __webpack_require__(0)\n\t\t\tMatter.Composite = __webpack_require__(5)\n\t\t\tMatter.Composites = __webpack_require__(23)\n\t\t\tMatter.Constraint = __webpack_require__(10)\n\t\t\tMatter.Contact = __webpack_require__(17)\n\t\t\tMatter.Detector = __webpack_require__(14)\n\t\t\tMatter.Engine = __webpack_require__(18)\n\t\t\tMatter.Events = __webpack_require__(4)\n\t\t\tMatter.Grid = __webpack_require__(24)\n\t\t\tMatter.Mouse = __webpack_require__(13)\n\t\t\tMatter.MouseConstraint = __webpack_require__(25)\n\t\t\tMatter.Pair = __webpack_require__(9)\n\t\t\tMatter.Pairs = __webpack_require__(20)\n\t\t\tMatter.Plugin = __webpack_require__(15)\n\t\t\tMatter.Query = __webpack_require__(26)\n\t\t\tMatter.Render = __webpack_require__(16)\n\t\t\tMatter.Resolver = __webpack_require__(19)\n\t\t\tMatter.Runner = __webpack_require__(27)\n\t\t\tMatter.SAT = __webpack_require__(28)\n\t\t\tMatter.Sleeping = __webpack_require__(7)\n\t\t\tMatter.Svg = __webpack_require__(29)\n\t\t\tMatter.Vector = __webpack_require__(2)\n\t\t\tMatter.Vertices = __webpack_require__(3)\n\t\t\tMatter.World = __webpack_require__(30)\n\n\t\t\t// temporary back compatibility\n\t\t\tMatter.Engine.run = Matter.Runner.run\n\t\t\tMatter.Common.deprecated(Matter.Engine, \"run\", \"Engine.run ➤ use Matter.Runner.run(engine) instead\")\n\n\n\t\t\t/***/ }),\n\t\t/* 22 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\n\t\t\tvar Matter = {}\n\n\t\t\tmodule.exports = Matter\n\n\t\t\tvar Plugin = __webpack_require__(15)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.name = \"matter-js\"\n\n\t\t\t\t/**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.version = true ? \"0.18.0-alpha+0eeceb5\" : undefined\n\n\t\t\t\t/**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n\t\t\t\tMatter.uses = []\n\n\t\t\t\t/**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n\t\t\t\tMatter.used = []\n\n\t\t\t\t/**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n\t\t\t\tMatter.use = function() {\n\t\t\t\t\tPlugin.use(Matter, Array.prototype.slice.call(arguments))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.before = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathBefore(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.after = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathAfter(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 23 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\n\t\t\tvar Composites = {}\n\n\t\t\tmodule.exports = Composites\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\tvar stack = Composite.create({label: \"Stack\"}),\n\t\t\t\t\t\tx = xx,\n\t\t\t\t\t\ty = yy,\n\t\t\t\t\t\tlastBody,\n\t\t\t\t\t\ti = 0\n\n\t\t\t\t\tfor(var row = 0; row < rows; row++){\n\t\t\t\t\t\tvar maxHeight = 0\n\n\t\t\t\t\t\tfor(var column = 0; column < columns; column++){\n\t\t\t\t\t\t\tvar body = callback(x, y, column, row, lastBody, i)\n\n\t\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\t\tvar bodyHeight = body.bounds.max.y - body.bounds.min.y,\n\t\t\t\t\t\t\t\t\tbodyWidth = body.bounds.max.x - body.bounds.min.x\n\n\t\t\t\t\t\t\t\tif(bodyHeight > maxHeight){\n\t\t\t\t\t\t\t\t\tmaxHeight = bodyHeight\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tBody.translate(body, {x: bodyWidth * 0.5, y: bodyHeight * 0.5})\n\n\t\t\t\t\t\t\t\tx = body.bounds.max.x + columnGap\n\n\t\t\t\t\t\t\t\tComposite.addBody(stack, body)\n\n\t\t\t\t\t\t\t\tlastBody = body\n\t\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tx += columnGap\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty += maxHeight + rowGap\n\t\t\t\t\t\tx = xx\n\t\t\t\t\t}\n\n\t\t\t\t\treturn stack\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n\t\t\t\tComposites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n\t\t\t\t\tvar bodies = composite.bodies\n\n\t\t\t\t\tfor(var i = 1; i < bodies.length; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i - 1],\n\t\t\t\t\t\t\tbodyB = bodies[i],\n\t\t\t\t\t\t\tbodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n\t\t\t\t\t\t\tbodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n\t\t\t\t\t\t\tbodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x\n\n\t\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\t\tpointA: {x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA},\n\t\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\t\tpointB: {x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar constraint = Common.extend(defaults, options)\n\n\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(constraint))\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Chain\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n\t\t\t\tComposites.mesh = function(composite, columns, rows, crossBrace, options) {\n\t\t\t\t\tvar bodies = composite.bodies,\n\t\t\t\t\t\trow,\n\t\t\t\t\t\tcol,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tbodyC\n\n\t\t\t\t\tfor(row = 0; row < rows; row++){\n\t\t\t\t\t\tfor(col = 1; col < columns; col++){\n\t\t\t\t\t\t\tbodyA = bodies[(col - 1) + (row * columns)]\n\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(row > 0){\n\t\t\t\t\t\t\tfor(col = 0; col < columns; col++){\n\t\t\t\t\t\t\t\tbodyA = bodies[col + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\n\t\t\t\t\t\t\t\tif(crossBrace && col > 0){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col - 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(crossBrace && col < columns - 1){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col + 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Mesh\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\treturn Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n\t\t\t\t\t\tvar actualRows = Math.min(rows, Math.ceil(columns / 2)),\n\t\t\t\t\t\t\tlastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0\n\n\t\t\t\t\t\tif(row > actualRows){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reverse row order\n\t\t\t\t\t\trow = actualRows - row\n\n\t\t\t\t\t\tvar start = row,\n\t\t\t\t\t\t\tend = columns - 1 - row\n\n\t\t\t\t\t\tif(column < start || column > end){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// retroactively fix the first body's position, since width was unknown\n\t\t\t\t\t\tif(i === 1){\n\t\t\t\t\t\t\tBody.translate(lastBody, {x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar xOffset = lastBody ? column * lastBodyWidth : 0\n\n\t\t\t\t\t\treturn callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t/**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n\t\t\t\tComposites.newtonsCradle = function(xx, yy, number, size, length) {\n\t\t\t\t\tvar newtonsCradle = Composite.create({label: \"Newtons Cradle\"})\n\n\t\t\t\t\tfor(var i = 0; i < number; i++){\n\t\t\t\t\t\tvar separation = 1.9,\n\t\t\t\t\t\t\tcircle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n\t\t\t\t\t\t\t\t{inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1}),\n\t\t\t\t\t\t\tconstraint = Constraint.create({pointA: {x: xx + i * (size * separation), y: yy}, bodyB: circle})\n\n\t\t\t\t\t\tComposite.addBody(newtonsCradle, circle)\n\t\t\t\t\t\tComposite.addConstraint(newtonsCradle, constraint)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newtonsCradle\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"newtonsCradle\", \"Composites.newtonsCradle ➤ moved to newtonsCradle example\")\n\n\t\t\t\t/**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n\t\t\t\tComposites.car = function(xx, yy, width, height, wheelSize) {\n\t\t\t\t\tvar group = Body.nextGroup(true),\n\t\t\t\t\t\twheelBase = 20,\n\t\t\t\t\t\twheelAOffset = -width * 0.5 + wheelBase,\n\t\t\t\t\t\twheelBOffset = width * 0.5 - wheelBase,\n\t\t\t\t\t\twheelYOffset = 0\n\n\t\t\t\t\tvar car = Composite.create({label: \"Car\"}),\n\t\t\t\t\t\tbody = Bodies.rectangle(xx, yy, width, height, {\n\t\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchamfer: {\n\t\t\t\t\t\t\t\tradius: height * 0.5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdensity: 0.0002\n\t\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelA = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelAOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelA,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelB = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelBOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelB,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tComposite.addBody(car, body)\n\t\t\t\t\tComposite.addBody(car, wheelA)\n\t\t\t\t\tComposite.addBody(car, wheelB)\n\t\t\t\t\tComposite.addConstraint(car, axelA)\n\t\t\t\t\tComposite.addConstraint(car, axelB)\n\n\t\t\t\t\treturn car\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"car\", \"Composites.car ➤ moved to car example\")\n\n\t\t\t\t/**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n\t\t\t\tComposites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n\t\t\t\t\tparticleOptions = Common.extend({inertia: Infinity}, particleOptions)\n\t\t\t\t\tconstraintOptions = Common.extend({stiffness: 0.2, render: {type: \"line\", anchors: false}}, constraintOptions)\n\n\t\t\t\t\tvar softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n\t\t\t\t\t\treturn Bodies.circle(x, y, particleRadius, particleOptions)\n\t\t\t\t\t})\n\n\t\t\t\t\tComposites.mesh(softBody, columns, rows, crossBrace, constraintOptions)\n\n\t\t\t\t\tsoftBody.label = \"Soft Body\"\n\n\t\t\t\t\treturn softBody\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"softBody\", \"Composites.softBody ➤ moved to softBody and cloth examples\")\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 24 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\n\t\t\tvar Grid = {}\n\n\t\t\tmodule.exports = Grid\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n\t\t\t\tGrid.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbuckets: {},\n\t\t\t\t\t\tpairs: {},\n\t\t\t\t\t\tpairsList: [],\n\t\t\t\t\t\tbucketWidth: 48,\n\t\t\t\t\t\tbucketHeight: 48\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n\t\t\t\tGrid.update = function(grid, bodies, engine, forceUpdate) {\n\t\t\t\t\tvar i, col, row,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbuckets = grid.buckets,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketId,\n\t\t\t\t\t\tgridChanged = false\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isSleeping && !forceUpdate){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// temporary back compatibility bounds check\n\t\t\t\t\t\tif(world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar newRegion = Grid._getRegion(grid, body)\n\n\t\t\t\t\t\t// if the body has changed grid region\n\t\t\t\t\t\tif(!body.region || newRegion.id !== body.region.id || forceUpdate){\n\n\t\t\t\t\t\t\tif(!body.region || forceUpdate){\n\t\t\t\t\t\t\t\tbody.region = newRegion\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar union = Grid._regionUnion(newRegion, body.region)\n\n\t\t\t\t\t\t\t// update grid buckets affected by region change\n\t\t\t\t\t\t\t// iterate over the union of both regions\n\t\t\t\t\t\t\tfor(col = union.startCol; col <= union.endCol; col++){\n\t\t\t\t\t\t\t\tfor(row = union.startRow; row <= union.endRow; row++){\n\t\t\t\t\t\t\t\t\tbucketId = Grid._getBucketId(col, row)\n\t\t\t\t\t\t\t\t\tbucket = buckets[bucketId]\n\n\t\t\t\t\t\t\t\t\tvar isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow)\n\n\t\t\t\t\t\t\t\t\tvar isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow)\n\n\t\t\t\t\t\t\t\t\t// remove from old region buckets\n\t\t\t\t\t\t\t\t\tif(!isInsideNewRegion && isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\tif(isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\t\tif(bucket){\n\t\t\t\t\t\t\t\t\t\t\t\tGrid._bucketRemoveBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// add to new region buckets\n\t\t\t\t\t\t\t\t\tif(body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate){\n\t\t\t\t\t\t\t\t\t\tif(!bucket){\n\t\t\t\t\t\t\t\t\t\t\tbucket = Grid._createBucket(buckets, bucketId)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tGrid._bucketAddBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set the new region\n\t\t\t\t\t\t\tbody.region = newRegion\n\n\t\t\t\t\t\t\t// flag changes so we can update pairs\n\t\t\t\t\t\t\tgridChanged = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// update pairs list only if pairs changed (i.e. a body changed region)\n\t\t\t\t\tif(gridChanged){\n\t\t\t\t\t\tgrid.pairsList = Grid._createActivePairsList(grid)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"update\", \"Grid.update ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n\t\t\t\tGrid.clear = function(grid) {\n\t\t\t\t\tgrid.buckets = {}\n\t\t\t\t\tgrid.pairs = {}\n\t\t\t\t\tgrid.pairsList = []\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"clear\", \"Grid.clear ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n\t\t\t\tGrid._regionUnion = function(regionA, regionB) {\n\t\t\t\t\tvar startCol = Math.min(regionA.startCol, regionB.startCol),\n\t\t\t\t\t\tendCol = Math.max(regionA.endCol, regionB.endCol),\n\t\t\t\t\t\tstartRow = Math.min(regionA.startRow, regionB.startRow),\n\t\t\t\t\t\tendRow = Math.max(regionA.endRow, regionB.endRow)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n\t\t\t\tGrid._getRegion = function(grid, body) {\n\t\t\t\t\tvar bounds = body.bounds,\n\t\t\t\t\t\tstartCol = Math.floor(bounds.min.x / grid.bucketWidth),\n\t\t\t\t\t\tendCol = Math.floor(bounds.max.x / grid.bucketWidth),\n\t\t\t\t\t\tstartRow = Math.floor(bounds.min.y / grid.bucketHeight),\n\t\t\t\t\t\tendRow = Math.floor(bounds.max.y / grid.bucketHeight)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n\t\t\t\tGrid._createRegion = function(startCol, endCol, startRow, endRow) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: startCol + \",\" + endCol + \",\" + startRow + \",\" + endRow,\n\t\t\t\t\t\tstartCol: startCol,\n\t\t\t\t\t\tendCol: endCol,\n\t\t\t\t\t\tstartRow: startRow,\n\t\t\t\t\t\tendRow: endRow\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n\t\t\t\tGrid._getBucketId = function(column, row) {\n\t\t\t\t\treturn \"C\" + column + \"R\" + row\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n\t\t\t\tGrid._createBucket = function(buckets, bucketId) {\n\t\t\t\t\tvar bucket = buckets[bucketId] = []\n\t\t\t\t\treturn bucket\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketAddBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\tbucketLength = bucket.length,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// add new pairs\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\tvar bodyB = bucket[i]\n\n\t\t\t\t\t\tif(body.id === bodyB.id || (body.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for Grid.update to work\n\t\t\t\t\t\tvar id = pairId(body, bodyB),\n\t\t\t\t\t\t\tpair = gridPairs[id]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] += 1\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgridPairs[id] = [body, bodyB, 1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to bodies (after pairs, otherwise pairs with self)\n\t\t\t\t\tbucket.push(body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketRemoveBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// remove from bucket\n\t\t\t\t\tbucket.splice(Common.indexOf(bucket, body), 1)\n\n\t\t\t\t\tvar bucketLength = bucket.length\n\n\t\t\t\t\t// update pair counts\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for _createActivePairsList to work\n\t\t\t\t\t\tvar pair = gridPairs[pairId(body, bucket[i])]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n\t\t\t\tGrid._createActivePairsList = function(grid) {\n\t\t\t\t\tvar pair,\n\t\t\t\t\t\tgridPairs = grid.pairs,\n\t\t\t\t\t\tpairKeys = Common.keys(gridPairs),\n\t\t\t\t\t\tpairKeysLength = pairKeys.length,\n\t\t\t\t\t\tpairs = [],\n\t\t\t\t\t\tk\n\n\t\t\t\t\t// iterate over grid.pairs\n\t\t\t\t\tfor(k = 0; k < pairKeysLength; k++){\n\t\t\t\t\t\tpair = gridPairs[pairKeys[k]]\n\n\t\t\t\t\t\t// if pair exists in at least one bucket\n\t\t\t\t\t\t// it is a pair that needs further collision testing so push it\n\t\t\t\t\t\tif(pair[2] > 0){\n\t\t\t\t\t\t\tpairs.push(pair)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete gridPairs[pairKeys[k]]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 25 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\n\t\t\tvar MouseConstraint = {}\n\n\t\t\tmodule.exports = MouseConstraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Mouse = __webpack_require__(13)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n\t\t\t\tMouseConstraint.create = function(engine, options) {\n\t\t\t\t\tvar mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null)\n\n\t\t\t\t\tif(!mouse){\n\t\t\t\t\t\tif(engine && engine.render && engine.render.canvas){\n\t\t\t\t\t\t\tmouse = Mouse.create(engine.render.canvas)\n\t\t\t\t\t\t} else if(options && options.element){\n\t\t\t\t\t\t\tmouse = Mouse.create(options.element)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse = Mouse.create()\n\t\t\t\t\t\t\tCommon.warn(\"MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraint = Constraint.create({\n\t\t\t\t\t\tlabel: \"Mouse Constraint\",\n\t\t\t\t\t\tpointA: mouse.position,\n\t\t\t\t\t\tpointB: {x: 0, y: 0},\n\t\t\t\t\t\tlength: 0.01,\n\t\t\t\t\t\tstiffness: 0.1,\n\t\t\t\t\t\tangularStiffness: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tstrokeStyle: \"#90EE90\",\n\t\t\t\t\t\t\tlineWidth: 3\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\ttype: \"mouseConstraint\",\n\t\t\t\t\t\tmouse: mouse,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tbody: null,\n\t\t\t\t\t\tconstraint: constraint,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mouseConstraint = Common.extend(defaults, options)\n\n\t\t\t\t\tEvents.on(engine, \"beforeUpdate\", function() {\n\t\t\t\t\t\tvar allBodies = Composite.allBodies(engine.world)\n\t\t\t\t\t\tMouseConstraint.update(mouseConstraint, allBodies)\n\t\t\t\t\t\tMouseConstraint._triggerEvents(mouseConstraint)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn mouseConstraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n\t\t\t\tMouseConstraint.update = function(mouseConstraint, bodies) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tconstraint = mouseConstraint.constraint,\n\t\t\t\t\t\tbody = mouseConstraint.body\n\n\t\t\t\t\tif(mouse.button === 0){\n\t\t\t\t\t\tif(!constraint.bodyB){\n\t\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\t\t\tif(Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)){\n\t\t\t\t\t\t\t\t\tfor(var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\t\t\tif(Vertices.contains(part.vertices, mouse.position)){\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = body\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointB = {x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y}\n\t\t\t\t\t\t\t\t\t\t\tconstraint.angleB = body.angle\n\n\t\t\t\t\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"startdrag\", {mouse: mouse, body: body})\n\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSleeping.set(constraint.bodyB, false)\n\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = null\n\t\t\t\t\t\tconstraint.pointB = null\n\n\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"enddrag\", {mouse: mouse, body: body})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n\t\t\t\tMouseConstraint._triggerEvents = function(mouseConstraint) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tmouseEvents = mouse.sourceEvents\n\n\t\t\t\t\tif(mouseEvents.mousemove){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousemove\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mousedown){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousedown\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mouseup){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mouseup\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset the mouse state ready for the next step\n\t\t\t\t\tMouse.clearSourceEvents(mouse)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n\t\t\t\t/**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 26 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\n\t\t\tvar Query = {}\n\n\t\t\tmodule.exports = Query\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar Vertices = __webpack_require__(3);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.collides = function(body, bodies) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tbounds = body.bounds,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\toverlaps = Bounds.overlaps\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsAStart = partsALength === 1 ? 0 : 1\n\n\t\t\t\t\t\tif(overlaps(bodyA.bounds, bounds)){\n\t\t\t\t\t\t\tfor(var j = partsAStart; j < partsALength; j++){\n\t\t\t\t\t\t\t\tvar part = bodyA.parts[j]\n\n\t\t\t\t\t\t\t\tif(overlaps(part.bounds, bounds)){\n\t\t\t\t\t\t\t\t\tvar collision = collides(part, body)\n\n\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.ray = function(bodies, startPoint, endPoint, rayWidth) {\n\t\t\t\t\trayWidth = rayWidth || 1e-100\n\n\t\t\t\t\tvar rayAngle = Vector.angle(startPoint, endPoint),\n\t\t\t\t\t\trayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n\t\t\t\t\t\trayX = (endPoint.x + startPoint.x) * 0.5,\n\t\t\t\t\t\trayY = (endPoint.y + startPoint.y) * 0.5,\n\t\t\t\t\t\tray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {angle: rayAngle}),\n\t\t\t\t\t\tcollisions = Query.collides(ray, bodies)\n\n\t\t\t\t\tfor(var i = 0; i < collisions.length; i += 1){\n\t\t\t\t\t\tvar collision = collisions[i]\n\t\t\t\t\t\tcollision.body = collision.bodyB = collision.bodyA\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.region = function(bodies, bounds, outside) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\toverlaps = Bounds.overlaps(body.bounds, bounds)\n\t\t\t\t\t\tif((overlaps && !outside) || (!overlaps && outside)){\n\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.point = function(bodies, point) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(Bounds.contains(body.bounds, point)){\n\t\t\t\t\t\t\tfor(var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)){\n\t\t\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 27 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\n\t\t\tvar Runner = {}\n\n\t\t\tmodule.exports = Runner\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Engine = __webpack_require__(18)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tif(!_requestAnimationFrame){\n\t\t\t\t\tvar _frameTimeout\n\n\t\t\t\t\t_requestAnimationFrame = function(callback) {\n\t\t\t\t\t\t_frameTimeout = setTimeout(function() {\n\t\t\t\t\t\t\tcallback(Common.now())\n\t\t\t\t\t\t}, 1000 / 60)\n\t\t\t\t\t}\n\n\t\t\t\t\t_cancelAnimationFrame = function() {\n\t\t\t\t\t\tclearTimeout(_frameTimeout)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n\t\t\t\tRunner.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tfps: 60,\n\t\t\t\t\t\tcorrection: 1,\n\t\t\t\t\t\tdeltaSampleSize: 60,\n\t\t\t\t\t\tcounterTimestamp: 0,\n\t\t\t\t\t\tframeCounter: 0,\n\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\ttimePrev: null,\n\t\t\t\t\t\ttimeScalePrev: 1,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\tisFixed: false,\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\n\t\t\t\t\tvar runner = Common.extend(defaults, options)\n\n\t\t\t\t\trunner.delta = runner.delta || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMin = runner.deltaMin || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5)\n\t\t\t\t\trunner.fps = 1000 / runner.delta\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.run = function(runner, engine) {\n\t\t\t\t\t// create runner if engine is first argument\n\t\t\t\t\tif(typeof runner.positionIterations !== \"undefined\"){\n\t\t\t\t\t\tengine = runner\n\t\t\t\t\t\trunner = Runner.create()\n\t\t\t\t\t}\n\n\t\t\t\t\t(function render(time) {\n\t\t\t\t\t\trunner.frameRequestId = _requestAnimationFrame(render)\n\n\t\t\t\t\t\tif(time && runner.enabled){\n\t\t\t\t\t\t\tRunner.tick(runner, engine, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n\t\t\t\tRunner.tick = function(runner, engine, time) {\n\t\t\t\t\tvar timing = engine.timing,\n\t\t\t\t\t\tcorrection = 1,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"beforeTick\", event)\n\n\t\t\t\t\tif(runner.isFixed){\n\t\t\t\t\t\t// fixed timestep\n\t\t\t\t\t\tdelta = runner.delta\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// dynamic timestep based on wall clock between calls\n\t\t\t\t\t\tdelta = (time - runner.timePrev) || runner.delta\n\t\t\t\t\t\trunner.timePrev = time\n\n\t\t\t\t\t\t// optimistically filter delta over a few frames, to improve stability\n\t\t\t\t\t\trunner.deltaHistory.push(delta)\n\t\t\t\t\t\trunner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize)\n\t\t\t\t\t\tdelta = Math.min.apply(null, runner.deltaHistory)\n\n\t\t\t\t\t\t// limit delta\n\t\t\t\t\t\tdelta = delta < runner.deltaMin ? runner.deltaMin : delta\n\t\t\t\t\t\tdelta = delta > runner.deltaMax ? runner.deltaMax : delta\n\n\t\t\t\t\t\t// correction for delta\n\t\t\t\t\t\tcorrection = delta / runner.delta\n\n\t\t\t\t\t\t// update engine timing object\n\t\t\t\t\t\trunner.delta = delta\n\t\t\t\t\t}\n\n\t\t\t\t\t// time correction for time scaling\n\t\t\t\t\tif(runner.timeScalePrev !== 0){\n\t\t\t\t\t\tcorrection *= timing.timeScale / runner.timeScalePrev\n\t\t\t\t\t}\n\n\t\t\t\t\tif(timing.timeScale === 0){\n\t\t\t\t\t\tcorrection = 0\n\t\t\t\t\t}\n\n\t\t\t\t\trunner.timeScalePrev = timing.timeScale\n\t\t\t\t\trunner.correction = correction\n\n\t\t\t\t\t// fps counter\n\t\t\t\t\trunner.frameCounter += 1\n\t\t\t\t\tif(time - runner.counterTimestamp >= 1000){\n\t\t\t\t\t\trunner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000)\n\t\t\t\t\t\trunner.counterTimestamp = time\n\t\t\t\t\t\trunner.frameCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"tick\", event)\n\n\t\t\t\t\t// update\n\t\t\t\t\tEvents.trigger(runner, \"beforeUpdate\", event)\n\t\t\t\t\tEngine.update(engine, delta, correction)\n\t\t\t\t\tEvents.trigger(runner, \"afterUpdate\", event)\n\n\t\t\t\t\tEvents.trigger(runner, \"afterTick\", event)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n\t\t\t\tRunner.stop = function(runner) {\n\t\t\t\t\t_cancelAnimationFrame(runner.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.start = function(runner, engine) {\n\t\t\t\t\tRunner.run(runner, engine)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 28 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\n\t\t\tvar SAT = {}\n\n\t\t\tmodule.exports = SAT\n\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n\t\t\t\tSAT.collides = function(bodyA, bodyB) {\n\t\t\t\t\treturn Collision.collides(bodyA, bodyB)\n\t\t\t\t}\n\n\t\t\t\tdeprecated(SAT, \"collides\", \"SAT.collides ➤ replaced by Collision.collides\")\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 29 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\n\t\t\tvar Svg = {}\n\n\t\t\tmodule.exports = Svg\n\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n\t\t\t\tSvg.pathToVertices = function(path, sampleLength) {\n\t\t\t\t\tif(typeof window !== \"undefined\" && !(\"SVGPathSeg\" in window)){\n\t\t\t\t\t\tCommon.warn(\"Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.\")\n\t\t\t\t\t}\n\n\t\t\t\t\t// https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n\t\t\t\t\tvar i, il, total, point, segment, segments,\n\t\t\t\t\t\tsegmentsQueue, lastSegment,\n\t\t\t\t\t\tlastPoint, segmentIndex, points = [],\n\t\t\t\t\t\tlx, ly, length = 0, x = 0, y = 0\n\n\t\t\t\t\tsampleLength = sampleLength || 15\n\n\t\t\t\t\tvar addPoint = function(px, py, pathSegType) {\n\t\t\t\t\t\t// all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n\t\t\t\t\t\tvar isRelative = pathSegType % 2 === 1 && pathSegType > 1\n\n\t\t\t\t\t\t// when the last point doesn't equal the current point add the current point\n\t\t\t\t\t\tif(!lastPoint || px != lastPoint.x || py != lastPoint.y){\n\t\t\t\t\t\t\tif(lastPoint && isRelative){\n\t\t\t\t\t\t\t\tlx = lastPoint.x\n\t\t\t\t\t\t\t\tly = lastPoint.y\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlx = 0\n\t\t\t\t\t\t\t\tly = 0\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar point = {\n\t\t\t\t\t\t\t\tx: lx + px,\n\t\t\t\t\t\t\t\ty: ly + py\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set last point\n\t\t\t\t\t\t\tif(isRelative || !lastPoint){\n\t\t\t\t\t\t\t\tlastPoint = point\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpoints.push(point)\n\n\t\t\t\t\t\t\tx = lx + px\n\t\t\t\t\t\t\ty = ly + py\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar addSegmentPoint = function(segment) {\n\t\t\t\t\t\tvar segType = segment.pathSegTypeAsLetter.toUpperCase()\n\n\t\t\t\t\t\t// skip path ends\n\t\t\t\t\t\tif(segType === \"Z\"){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// map segment to x and y\n\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\tcase \"M\":\n\t\t\t\t\t\t\tcase \"L\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddPoint(x, y, segment.pathSegType)\n\t\t\t\t\t}\n\n\t\t\t\t\t// ensure path is absolute\n\t\t\t\t\tSvg._svgPathToAbsolute(path)\n\n\t\t\t\t\t// get total length\n\t\t\t\t\ttotal = path.getTotalLength()\n\n\t\t\t\t\t// queue segments\n\t\t\t\t\tsegments = []\n\t\t\t\t\tfor(i = 0; i < path.pathSegList.numberOfItems; i += 1){\n\t\t\t\t\t\tsegments.push(path.pathSegList.getItem(i))\n\t\t\t\t\t}\n\n\t\t\t\t\tsegmentsQueue = segments.concat()\n\n\t\t\t\t\t// sample through path\n\t\t\t\t\twhile(length < total){\n\t\t\t\t\t\t// get segment at position\n\t\t\t\t\t\tsegmentIndex = path.getPathSegAtLength(length)\n\t\t\t\t\t\tsegment = segments[segmentIndex]\n\n\t\t\t\t\t\t// new segment\n\t\t\t\t\t\tif(segment != lastSegment){\n\t\t\t\t\t\t\twhile(segmentsQueue.length && segmentsQueue[0] != segment){\n\t\t\t\t\t\t\t\taddSegmentPoint(segmentsQueue.shift())\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlastSegment = segment\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add points in between when curving\n\t\t\t\t\t\t// TUDDO: adaptive sampling\n\t\t\t\t\t\tswitch(segment.pathSegTypeAsLetter.toUpperCase()){\n\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\tcase \"A\":\n\t\t\t\t\t\t\t\tpoint = path.getPointAtLength(length)\n\t\t\t\t\t\t\t\taddPoint(point.x, point.y, 0)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// increment by sample value\n\t\t\t\t\t\tlength += sampleLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// add remaining segments not passed by sampling\n\t\t\t\t\tfor(i = 0, il = segmentsQueue.length; i < il; ++i){\n\t\t\t\t\t\taddSegmentPoint(segmentsQueue[i])\n\t\t\t\t\t}\n\n\t\t\t\t\treturn points\n\t\t\t\t}\n\n\t\t\t\tSvg._svgPathToAbsolute = function(path) {\n\t\t\t\t\t// http://phrogz.net/convert-svg-path-to-all-absolute-commands\n\t\t\t\t\t// Copyright (c) Gavin Kistner\n\t\t\t\t\t// http://phrogz.net/js/_ReuseLicense.txt\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n\t\t\t\t\t\tx = 0, y = 0, len = segs.numberOfItems\n\n\t\t\t\t\tfor(var i = 0; i < len; ++i){\n\t\t\t\t\t\tvar seg = segs.getItem(i),\n\t\t\t\t\t\t\tsegType = seg.pathSegTypeAsLetter\n\n\t\t\t\t\t\tif(/[MLHVCSQTA]/.test(segType)){\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx = seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty = seg.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(\"x1\" in seg){\n\t\t\t\t\t\t\t\tx1 = x + seg.x1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x2\" in seg){\n\t\t\t\t\t\t\t\tx2 = x + seg.x2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y1\" in seg){\n\t\t\t\t\t\t\t\ty1 = y + seg.y1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y2\" in seg){\n\t\t\t\t\t\t\t\ty2 = y + seg.y2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx += seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty += seg.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\t\tcase \"m\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"l\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"h\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"v\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"c\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"s\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"q\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"t\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"a\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"z\":\n\t\t\t\t\t\t\t\tcase \"Z\":\n\t\t\t\t\t\t\t\t\tx = x0\n\t\t\t\t\t\t\t\t\ty = y0\n\t\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(segType == \"M\" || segType == \"m\"){\n\t\t\t\t\t\t\tx0 = x\n\t\t\t\t\t\t\ty0 = y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 30 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\n\t\t\tvar World = {}\n\n\t\t\tmodule.exports = World\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * See above, aliases for back compatibility only\n     */\n\t\t\t\tWorld.create = Composite.create\n\t\t\t\tWorld.add = Composite.add\n\t\t\t\tWorld.remove = Composite.remove\n\t\t\t\tWorld.clear = Composite.clear\n\t\t\t\tWorld.addComposite = Composite.addComposite\n\t\t\t\tWorld.addBody = Composite.addBody\n\t\t\t\tWorld.addConstraint = Composite.addConstraint\n\n\t\t\t})()\n\n\n\t\t\t/***/ })\n\t\t/** ****/ ])\n})","import {svgTag} from \"@nartallax/cardboard-dom\"\nimport {TimedQueue} from \"common/timed_queue\"\n\ninterface Point {\n\tx: number\n\ty: number\n\tangle: number\n}\n\nexport class BallTail {\n\tprivate readonly queue = new TimedQueue<Point>()\n\treadonly el: SVGPathElement\n\n\tconstructor(private readonly timeLimit: number, color: string) {\n\t\tthis.el = svgTag({tag: \"path\", attrs: {stroke: \"none\", fill: color, \"stroke-width\": \"0.01\"}})\n\t}\n\n\tprivate addPoint(time: number, x: number, y: number): void {\n\t\tconst prevPoint = this.queue.tail\n\t\tconst angle = !prevPoint ? 0 : Math.atan2(prevPoint.y - y, prevPoint.x - x) + Math.PI / 2\n\t\tthis.queue.enqueue(time, {x, y, angle})\n\t}\n\n\tprivate updatePath(): void {\n\t\tlet start = \"\"\n\t\tlet leftSide = \"\"\n\t\tlet rightSide = \"\"\n\t\tconst segments = this.queue.toArray()\n\t\tlet size = 0\n\t\tconst segmentSizeIncrement = 0.5 / segments.length\n\t\tfor(const {x, y, angle} of segments){\n\t\t\tif(!start){\n\t\t\t\tstart = `M ${x} ${y}`\n\t\t\t} else {\n\t\t\t\tconst sin = Math.sin(angle)\n\t\t\t\tconst cos = Math.cos(angle)\n\t\t\t\tleftSide += ` L ${x - cos * size} ${y - sin * size}`\n\t\t\t\trightSide = `L ${x + cos * size} ${y + sin * size}` + rightSide\n\t\t\t}\n\t\t\tsize += segmentSizeIncrement\n\t\t}\n\t\tconst result = start + leftSide + rightSide + \" z\"\n\t\tthis.el.setAttribute(\"d\", result)\n\t}\n\n\tupdate(time: number, x: number, y: number): void {\n\t\tthis.addPoint(time, x, y)\n\t\tthis.queue.dropUntil(time - this.timeLimit)\n\t\tthis.updatePath()\n\t}\n}","import {Queue} from \"common/queue\"\n\n/** A queue that also stores time with items.\n * Is useful when you need to store only last x seconds of something */\nexport class TimedQueue<T> {\n\tprivate readonly items = new Queue<{time: number, item: T}>()\n\n\tenqueue(time: number, item: T): void {\n\t\tthis.items.enqueue({time, item})\n\t}\n\n\tdropUntil(time: number): void {\n\t\twhile(this.items.head && this.items.head.time < time){\n\t\t\tthis.items.dequeue()\n\t\t}\n\t}\n\n\t/** Convert contents of the queue into array.\n\t * Oldest elements go first. */\n\ttoArray(): T[] {\n\t\treturn this.items.toArrayHeadFirst().map(x => x.item)\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.items.head?.item\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.items.tail?.item\n\t}\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.tailNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tmaybeDequeue(): T | undefined {\n\t\tif(!this.headNode){\n\t\t\treturn undefined\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n\ttoArrayHeadFirst(): T[] {\n\t\tconst result: T[] = new Array(this.len)\n\t\tlet node = this.headNode\n\t\tlet i = 0\n\t\twhile(node){\n\t\t\tresult[i++] = node.value\n\t\t\tnode = node.prev\n\t\t}\n\t\treturn result\n\t}\n\n}"],"names":["$9H5KT","parcelRequire","$068d9bf68df70b01$var$blockColors","$068d9bf68df70b01$export$f22da7240b7add18","rootContainer","speed","box","stats","Array","fill","map","contentContainer","$cdEIV","makeBottomBar","colors","root","rect","getBoundingClientRect","screenSpacePx","width","height","blockSizePx","Math","floor","sqrt","blockbreaker","$5xOdw","ZenBlockbreaker","ticksPerFrame","ballSpeed","onStatsChange","color","stat","set","render","tailLength","appendChild","$7sHgZ","bindBox","setTicksPerFrame","run","$kTeo1","$0a7e2ac3f8a08a9e$export$46e1934a20752f73","props","slider","$jmBhk","Slider","label","min","max","value","step","tag","style","display","flexDirection","gap","fontWeight","i","$d9Hqa","Textblock","bold","overflow","makeBottomBarredScreenContainer","contents","parent","$0b128bc07ced54fa$export$efc4f4afff32aea8","bar","class","$3MmRR","bottomBar","wrap","pageContainer","$2c0797ddc08f9f2b$export$eebe73d6e99d9049","$2c0797ddc08f9f2b$export$9bfd64464b8f45a7","$2c0797ddc08f9f2b$export$8f981dffec84ba52","$1bf0a92f5a0d7095$export$472062a354075cee","constBoxWrap","handle","$3KaNR","handleContainer","labelWidth","isRBox","sliderRoot","x","updateHandlePos","newValue","left","get","setValueByEvent","e","coords","$ih12A","pointerEventsToClientCoords","contRect","progress","round","addCursorMoveHandler","element","onMove","addEventListener","target","$070b40bf88f7afea$export$f9e1fc62131d1b82","touches","$070b40bf88f7afea$export$c4dfce035d43d1e0","touch","clientX","y","clientY","$070b40bf88f7afea$export$4eb1c1f17f883a41","HTMLElement","top","$070b40bf88f7afea$export$80eb02ad18c977f1","params","onDown","window","passive","onUp","downIsMove","removeEventListener","upIsMove","$070b40bf88f7afea$export$b3002a74c1b9a5fd","el","preventDefault","stopPropagation","$2b9e0c477a19ae15$export$b38bf4f33e9e4c25","$2b9e0c477a19ae15$export$8f34ce051745d39e","$2b9e0c477a19ae15$export$c19509281e5dc3a3","$2b9e0c477a19ae15$export$1237798dc640739a","$2b9e0c477a19ae15$export$8240c6390807f912","$d28ef00c11afa79c$export$e1c030fab1537e7","$efatB","rgbNumberToColorString","$fa4a5aa5cdd6ce8e$var$twoHex","toString","$fa4a5aa5cdd6ce8e$export$fdc9c29511f1a926","$fa4a5aa5cdd6ce8e$export$79db3ad3d560d193","components","r","g","b","$fa4a5aa5cdd6ce8e$var$hueToRgb","p","q","t","$fa4a5aa5cdd6ce8e$export$c5ea230d2f55d434","rgb","$fa4a5aa5cdd6ce8e$export$21d90289cdbe307c","colorRgb","transform","transformResult","cmin","cmax","delta","h","s","l","abs","toFixed","$fa4a5aa5cdd6ce8e$export$c85ca4f4753af384","hsl","$fa4a5aa5cdd6ce8e$export$29fb7152bd3f781a","$ad44aa306ac78938$var$matterMul","$ad44aa306ac78938$export$393b7ae2a19d47b6","constructor","svg","Map","balls","timePassed","this","blockColors","transformColorHsl","matter","$7ugw8","Engine","create","gravity","enableSleeping","makeMatterjsRender","makeSvgRender","makeWalls","makeBlocks","makeBalls","Events","on","pair","pairs","processCollision","svgTag","setAttribute","Render","engine","options","wireframes","lookAt","cx","cy","bx","by","part","atan2","PI","sideCount","makeBlock","partSector","angle","sin","cos","distanceToHWall","distanceToWWall","distanceToWall","distanceToBall","makeBall","collision","ball","getBallFromCollision","velocityAngle","body","velocity","setBallSpeed","block","getBlockFromCollision","setBlockColor","Body","setVelocity","Bodies","rectangle","isStatic","isSleeping","fillStyle","restitution","collisionFilter","group","category","mask","Composite","add","world","attrs","plugin","oldColor","newColor","colorStr","getBlock","bodyA","bodyB","colorRgbSrc","circle","friction","frictionAir","frictionStatic","tail","tailColor","$5ufZV","BallTail","push","random","getBall","wallProps","wallThickness","stop","$5DUDw","cycledRequestAnimationFrame","update","updateBallElements","position","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","onStop","stopped","prevCallTime","wrappedHandler","time","isConnected","requestAnimationFrame","factory","module","exports","modules","installedModules","__webpack_require__","moduleId","module1","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","Symbol","toStringTag","mode","__esModule","ns","key","bind","n","object","property","prototype","hasOwnProperty","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","deepClone","arguments","length","source","prop","clone","keys","values","path","begin","end","split","slice","val","parts","shuffle","array","j","temp","choose","choices","isElement","nodeType","nodeName","isArray","isFunction","isPlainObject","isString","clamp","sign","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","concat","info","warn","warnOnce","message","join","deprecated","warning","chain","nextId","indexOf","haystack","needle","list","func","mapped","topologicalSort","graph","result","visited","node","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","$parcel$global","Bounds","vertices","bounds","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","deltaX","deltaY","Vector","magnitude","magnitudeSquared","rotate","output","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","_temp","Vertices","points","index","isInternal","fromPath","match","parseFloat","centre","area","mean","average","signed","inertia","mass","numerator","denominator","v","verticesLength","translateX","translateY","dx","dy","pointX","pointY","nextVertex","scale","scaleX","scaleY","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","clockwiseSort","sort","vertexA","vertexB","isConvex","k","z","flag","hull","upper","lower","pop","eventNames","callback","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","id","type","isModified","bodies","constraints","composites","cache","allBodies","allConstraints","allComposites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","remove","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","sleepCounter","removeConstraintAt","clear","keepStatic","filter","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","angularSpeed","angularVelocity","isSensor","motion","sleepThreshold","density","slop","timeScale","visible","opacity","strokeStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setAngularVelocity","setParts","setCentre","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","afterCollisions","isActive","sleepingBody","movingBody","wasSleeping","Collision","_supports","_overlapAB","_overlapBA","Pair","overlap","axis","collided","parentA","parentB","depth","normal","tangent","penetration","supports","collides","_overlapAxes","minOverlap","table","minAxis","minAxisX","minAxisY","supportsB","_findSupports","supportCount","supportsA","verticesA","verticesB","overlapAB","overlapBA","verticesALength","verticesBLength","verticesAX","verticesAY","verticesBX","verticesBY","axesLength","overlapMin","Number","MAX_VALUE","overlapAxisNumber","axisX","axisY","minA","minB","maxA","maxB","_projectToAxis","projection","direction","vertexC","distance","bodyAPositionX","bodyAPositionY","normalX","normalY","nearestDistance","Contact","timestamp","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","parentAVerticesLength","support","contactId","contact","setActive","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","gradient","xx","trapezoid","slope","verticesPath","x1","x2","x3","maxSides","sides","ceil","polygon","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","partA","partB","pav","pbv","da","db","Mouse","mouse","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","detail","setElement","clearSourceEvents","setOffset","setScale","elementBounds","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","pageY","clientWidth","clientHeight","Detector","setBodies","detector","collisions","bodiesLength","canCollide","_compareBoundsX","boundXMax","boundYMax","boundYMin","bodyAStatic","partsALength","partsASingle","partsBLength","partsBStart","filterA","filterB","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","test","pattern","exec","major","minor","patch","isRange","operator","prerelease","_requestAnimationFrame","_cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","canvas","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","showSleeping","showDebug","showStats","showPerformance","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","controller","showBroadphase","setPixelRatio","loop","_updateTiming","_getPixelRatio","padding","center","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","startTime","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","sections","Part","Cons","Comp","font","textBaseline","textAlign","section","fillText","lastEngineDelta","lastDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","rateMean","fps","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","start","arc","closePath","coils","globalAlpha","texture","_getTexture","drawImage","normalPosX","normalPosY","inspector","selected","item","data","setLineDash","selectStart","selectBounds","unshift","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","normalImpulse","tangentImpulse","Resolver","Pairs","positionIterations","velocityIterations","constraintIterations","grid","buckets","broadphase","metrics","_bodiesApplyGravity","_bodiesUpdate","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","activeCount","pairsLength","contactShare","positionDampen","positionWarming","verticesTranslate","boundsUpdate","positionImpulseX","positionImpulseY","contactsLength","contactVertex","impulseX","impulseY","maxFriction","timeScaleSquared","restingThresh","frictionNormalMultiplier","restingThreshTangent","NumberMaxValue","bodyAVelocity","bodyBVelocity","tangentX","tangentY","inverseMassTotal","offsetAX","offsetAY","offsetBX","offsetBY","velocityPointAX","velocityPointAY","relativeVelocityX","relativeVelocityY","tangentVelocity","normalOverlap","normalForce","frictionLimit","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","pairIndex","pairsList","pairsListLength","pairsTable","collisionsLength","removePairIndex","Matter","Composites","Grid","MouseConstraint","Query","Runner","SAT","Svg","World","before","after","stack","columns","rows","columnGap","rowGap","lastBody","row","maxHeight","column","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","col","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","bucketWidth","bucketHeight","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","gridPairs","pairId","bucketLength","pairKeys","pairKeysLength","mouseConstraint","_triggerEvents","mouseEvents","partsAStart","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_frameTimeout","clearTimeout","runner","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","$7ec4b16cdc1e79b3$export$c04342dc9b7dcd2b","timeLimit","queue","$fpqML","TimedQueue","prevPoint","enqueue","updatePath","leftSide","rightSide","toArray","segmentSizeIncrement","dropUntil","$6A5Hp","$d0350651d2450633$export$f719b079108b4ba6","items","Queue","head","dequeue","toArrayHeadFirst","$d86dd992f2068262$export$3dc07afe418952bc","headNode","tailNode","oldTail","prev","Error","maybeDequeue"],"version":3,"file":"zen_blockbreaker.b77dd434.js.map"}