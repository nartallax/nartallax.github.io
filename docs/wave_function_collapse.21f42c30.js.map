{"mappings":"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","sources":["src/sketches/wave_function_collapse/wave_function_collapse.ts","src/common/perfometer.ts","src/common/tag.ts","src/common/classname.ts","src/sketches/wave_function_collapse/color_array_display.ts","src/common/color_utils.ts","src/sketches/wave_function_collapse/pattern_input.ts","src/common/input_utils.ts","src/sketches/wave_function_collapse/wave_function_collapse.module.scss","src/sketches/wave_function_collapse/wave_function_collapse_algo.ts","src/common/bitmap.ts","src/sketches/wave_function_collapse/test_result.json","src/sketches/wave_function_collapse/island_source.json"],"sourcesContent":["import {performeter} from \"common/perfometer\"\nimport {tag} from \"common/tag\"\nimport {ColorArrayDisplay} from \"sketches/wave_function_collapse/color_array_display\"\nimport {PatternInput} from \"sketches/wave_function_collapse/pattern_input\"\nimport {waveFunctionCollapse} from \"sketches/wave_function_collapse/wave_function_collapse_algo\"\nimport * as css from \"./wave_function_collapse.module.scss\"\nimport * as testResult from \"./test_result.json\"\nimport * as islandsSource from \"./island_source.json\"\n\nexport function main(root: HTMLElement): void {\n\tconst patternInput = new PatternInput<number>({\n\t\tpalette: [0x53bc01, 0xffeb03, 0xffa801, 0xf93a1d, 0xe21a5f, 0x572c62, 0xa1ccd3, 0x006898],\n\t\tdefaultValue: 0x53bc01,\n\t\theight: 20,\n\t\twidth: 20,\n\t\tscale: 10\n\t})\n\n\tconst display = new ColorArrayDisplay(10)\n\n\troot.appendChild(tag({\n\t\tclass: css[\"wave-function-collapse-root\"]\n\t}, [\n\t\ttag([\n\t\t\tpatternInput.root,\n\t\t\ttag({tagName: \"button\", text: \"Collapse!\", on: {click: run}})\n\t\t]),\n\t\tdisplay.root\n\t]))\n\n\tpatternInput.setValue(islandsSource)\n\n\tfunction run(): void {\n\t\tconst source = patternInput.getPattern()\n\t\tconst result = waveFunctionCollapse({\n\t\t\tflip: true,\n\t\t\trotate: true,\n\t\t\tsourceSample: source,\n\t\t\tpatternSize: 3,\n\t\t\trandomSeed: 12345,\n\t\t\tresultSize: {width: 50, height: 50}\n\t\t})\n\t\tdisplay.draw(result)\n\t\tcheckResult(result)\n\t\tperformeter.print()\n\t\tperformeter.reset()\n\t}\n}\n\nfunction checkResult(result: number[][]): void {\n\tif(JSON.stringify(result) !== JSON.stringify(testResult)){\n\t\tconsole.error(\"Results are different!\")\n\t} else {\n\t\tconsole.log(\"Results are the same.\")\n\t}\n}","interface Block {\n\tparent: Block | null\n\tsubblocks: Record<string, Block>\n\ttimeStart: number\n\ttimeSum: number\n\tenterCount: number\n}\n\ninterface BlockToPrint {\n\t\"ms per enter\": number\n\t\"full %\": number\n\t\"parent %\": number\n}\n\nclass Perfometer {\n\n\tprivate root: Block = this.makeBlock(null)\n\tprivate currentBlock: Block = this.root\n\tprivate eventCounters: Record<string, number> = {}\n\n\tprivate makeBlock(parent: Block | null): Block {\n\t\treturn {\n\t\t\tsubblocks: {}, parent: parent,\n\t\t\ttimeStart: -1, timeSum: 0,\n\t\t\tenterCount: 0\n\t\t}\n\t}\n\n\tenterBlock(name: string): void {\n\t\tlet nextBlock = this.currentBlock.subblocks[name]\n\t\tif(!nextBlock){\n\t\t\tnextBlock = this.makeBlock(this.currentBlock)\n\t\t\tthis.currentBlock.subblocks[name] = nextBlock\n\t\t}\n\t\tnextBlock.timeStart = performance.now()\n\t\tnextBlock.enterCount++\n\t\tthis.currentBlock = nextBlock\n\t}\n\n\trecordEvent(name: string): void {\n\t\tthis.eventCounters[name] = (this.eventCounters[name] ?? 0) + 1\n\t}\n\n\texitBlock(): void {\n\t\tthis.currentBlock.timeSum += performance.now() - this.currentBlock.timeStart\n\t\tconst parent = this.currentBlock.parent\n\t\tif(!parent){\n\t\t\tthrow new Error(\"No parent! Blocks are all messed up.\")\n\t\t}\n\t\tthis.currentBlock = parent\n\t}\n\n\texitEnterBlock(name: string): void {\n\t\tthis.exitBlock()\n\t\tthis.enterBlock(name)\n\t}\n\n\tprint(): void {\n\t\tconst table: Record<string, BlockToPrint> = {}\n\t\tlet fullTime = 0\n\t\tfor(const name in this.root.subblocks){\n\t\t\tfullTime += this.root.subblocks[name]!.timeSum\n\t\t}\n\n\t\tthis.forEachBlock((block, name, depth) => {\n\t\t\tname = new Array(depth + 1).join(\"-\") + name\n\t\t\ttable[name] = {\n\t\t\t\t\"parent %\": strip((block.timeSum / block.parent!.timeSum) * 100),\n\t\t\t\t\"full %\": strip((block.timeSum / fullTime) * 100),\n\t\t\t\t\"ms per enter\": strip(block.timeSum / block.enterCount)\n\t\t\t}\n\t\t})\n\n\t\tconsole.table(table)\n\t\tconsole.table(this.eventCounters)\n\t}\n\n\treset(): void {\n\t\tthis.root = this.makeBlock(null)\n\t\tthis.currentBlock = this.root\n\t\tthis.eventCounters = {}\n\t}\n\n\tprivate forEachBlock(callback: (block: Block, name: string, depth: number) => void, start: Block = this.root, currentDepth = 0): void {\n\t\tfor(const name in start.subblocks){\n\t\t\tconst subblock = start.subblocks[name]!\n\t\t\tcallback(subblock, name, currentDepth)\n\t\t\tthis.forEachBlock(callback, subblock, currentDepth + 1)\n\t\t}\n\t}\n\n}\n\nexport const performeter = new Perfometer()\n\nfunction strip(v: number): number {\n\treturn Math.round(v * 100) / 100\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {rgbNumberToColorString} from \"common/color_utils\"\nimport {tag} from \"common/tag\"\n\nexport class ColorArrayDisplay {\n\n\treadonly root: HTMLElement\n\tprivate readonly context: CanvasRenderingContext2D\n\n\tconstructor(readonly scale: number) {\n\t\tconst canvas = tag({tagName: \"canvas\"})\n\t\tthis.root = canvas\n\n\t\tconst context = canvas.getContext(\"2d\")\n\t\tif(!context){\n\t\t\tthrow new Error(\"No context\")\n\t\t}\n\t\tthis.context = context\n\t}\n\n\tdraw(values: readonly (readonly number[])[]): void {\n\t\tconst w = values.length * this.scale\n\t\tconst h = values[0]!.length * this.scale\n\t\tthis.root.setAttribute(\"width\", w + \"\")\n\t\tthis.root.setAttribute(\"height\", h + \"\")\n\t\tthis.root.style.width = w + \"px\"\n\t\tthis.root.style.height = h + \"px\"\n\n\t\tconst s = this.scale\n\t\tfor(let x = 0; x < values.length; x++){\n\t\t\tconst row = values[x]!\n\t\t\tfor(let y = 0; y < row.length; y++){\n\t\t\t\tthis.context.fillStyle = rgbNumberToColorString(row[y]!)\n\t\t\t\tthis.context.fillRect(x * s, y * s, s, s)\n\t\t\t}\n\t\t}\n\t}\n\n}","function twoHex(x: number): string {\n\treturn (x > 0xf ? \"\" : \"0\") + x.toString(16)\n}\n\nexport function rgbNumberToColorString(rgb: number): string {\n\tconst b = rgb & 0xff\n\trgb >>= 8\n\tconst g = rgb & 0xff\n\trgb >>= 8\n\tconst r = rgb & 0xff\n\n\treturn \"#\" + twoHex(r) + twoHex(g) + twoHex(b)\n}","import {rgbNumberToColorString} from \"common/color_utils\"\nimport {addCursorMoveHandler, pointerEventsToOffsetCoords, preventContextMenu} from \"common/input_utils\"\nimport {tag} from \"common/tag\"\nimport {ColorArrayDisplay} from \"sketches/wave_function_collapse/color_array_display\"\nimport * as css from \"./wave_function_collapse.module.scss\"\n\ntype PatternInputParams<T extends number = number> = {\n\treadonly palette: readonly T[]\n\treadonly defaultValue: T\n\treadonly width: number\n\treadonly height: number\n\treadonly scale: number\n}\n\ntype ColorButton<T extends number = number> = {\n\tbutton: HTMLElement\n\tcolor: T\n\tclassName: string\n}\n\nexport class PatternInput<T extends number = number> {\n\treadonly root: HTMLElement\n\n\tprivate readonly display: ColorArrayDisplay\n\tprivate pattern: readonly (T[])[]\n\tprivate primaryCb: ColorButton<T> | null = null\n\t// I had logic around having secondary color on right mouse button\n\t// but turns out mouseevent.buttons can be weird\n\t// so, whatever, I'm not solving this now\n\t// private secondaryCb: ColorButton<T> | null = null\n\n\tconstructor(private readonly params: PatternInputParams<T>) {\n\t\tthis.display = new ColorArrayDisplay(params.scale)\n\n\t\tpreventContextMenu(this.display.root)\n\t\taddCursorMoveHandler({\n\t\t\telement: this.display.root,\n\t\t\tonMove: this.onSetColorAction.bind(this),\n\t\t\tdownIsMove: true\n\t\t})\n\n\t\tthis.pattern = new Array(params.width).fill(null).map(() =>\n\t\t\tnew Array(params.height).fill(params.defaultValue)\n\t\t)\n\n\t\tconst paletteButtons = params.palette.map(color => {\n\t\t\tconst button: HTMLElement = tag({\n\t\t\t\tclass: css[\"pattern-input-palette-item\"],\n\t\t\t\ton: {\n\t\t\t\t\tclick: () => {\n\t\t\t\t\t\tthis.primaryCb = this.selectColor(this.primaryCb, button, color)\n\t\t\t\t\t}\n\t\t\t\t\t// contextmenu: () => {\n\t\t\t\t\t// \tthis.secondaryCb = this.selectColor(this.secondaryCb, button, color)\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: rgbNumberToColorString(color)\n\t\t\t\t}\n\t\t\t})\n\t\t\tpreventContextMenu(button)\n\t\t\tif(color === this.params.defaultValue){\n\t\t\t\tthis.primaryCb = this.selectColor(null, button, color, css[\"selected-primary\"]!)\n\t\t\t\t// this.secondaryCb = this.selectColor(null, button, color, css[\"selected-secondary\"]!)\n\t\t\t}\n\t\t\treturn button\n\t\t})\n\n\t\tthis.root = tag({\n\t\t\tclass: css[\"pattern-input-wrap\"]\n\t\t}, [\n\t\t\tthis.display.root,\n\t\t\ttag({\n\t\t\t\tclass: css[\"pattern-input-palette-wrap\"]\n\t\t\t}, paletteButtons)\n\t\t])\n\n\t\tthis.redrawCanvas()\n\t}\n\n\tprivate redrawCanvas(): void {\n\t\tthis.display.draw(this.pattern)\n\t}\n\n\tprivate onSetColorAction(e: MouseEvent | TouchEvent): void {\n\t\tconst coords = pointerEventsToOffsetCoords(e)\n\t\tif(!coords){\n\t\t\treturn\n\t\t}\n\t\t// let isPrimary: boolean\n\t\t// if(isTouchEvent(e)){\n\t\t// \tisPrimary = true\n\t\t// } else {\n\t\t// \tisPrimary = e.buttons !== 2\n\t\t// }\n\t\tconst cellX = Math.floor(coords.x / this.params.scale)\n\t\tconst cellY = Math.floor(coords.y / this.params.scale)\n\t\tconst row = this.pattern[cellX]\n\t\tif(row && row.length > cellY){\n\t\t\t// const cb = isPrimary ? this.primaryCb : this.secondaryCb\n\t\t\tconst cb = this.primaryCb\n\t\t\tif(cb){\n\t\t\t\tthis.set(cellX, cellY, cb.color)\n\t\t\t}\n\t\t}\n\t}\n\n\tsetValue(values: T[][]): void {\n\t\tthis.pattern = JSON.parse(JSON.stringify(values))\n\t\tthis.redrawCanvas()\n\t}\n\n\tset(x: number, y: number, color: T): void {\n\t\tthis.pattern[x]![y] = color\n\t\tthis.redrawCanvas()\n\t}\n\n\tprivate selectColor(prevCb: ColorButton<T> | null, button: HTMLElement, color: T, dfltClassName = \"selected\"): ColorButton<T> {\n\t\tconst clsName = prevCb?.className ?? dfltClassName\n\t\tif(prevCb){\n\t\t\tprevCb.button.classList.remove(clsName)\n\t\t}\n\t\tconst cb: ColorButton<T> = {\n\t\t\tbutton,\n\t\t\tcolor,\n\t\t\tclassName: clsName\n\t\t}\n\t\tbutton.classList.add(clsName)\n\t\treturn cb\n\t}\n\n\tgetPattern(): number[][] {\n\t\treturn JSON.parse(JSON.stringify(this.pattern))\n\t}\n}","export function pointerEventsToClientCoords(e: MouseEvent | TouchEvent): {x: number, y: number} {\n\tif(isTouchEvent(e)){\n\t\tconst touch = e.touches[0]!\n\t\treturn {\n\t\t\tx: touch.clientX,\n\t\t\ty: touch.clientY\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t}\n}\n\nexport function pointerEventsToOffsetCoords(e: MouseEvent | TouchEvent): {x: number, y: number} | null {\n\tif(!(e.target instanceof HTMLElement)){\n\t\treturn null\n\t}\n\n\tconst rect = e.target.getBoundingClientRect() // performance may suck, but whatever\n\tconst coords = pointerEventsToClientCoords(e)\n\tcoords.x -= rect.left\n\tcoords.y -= rect.top\n\treturn coords\n}\n\nexport function isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n\treturn !!(e as TouchEvent).touches\n}\n\ntype CursorMoveHandlerParams = {\n\treadonly element: HTMLElement\n\tonMove(e: MouseEvent | TouchEvent): void\n\t/** If true, onMove will be invoked when down event happen */\n\treadonly downIsMove?: boolean\n\t/** If true, onMove will be invoked when up event happen */\n\treadonly upIsMove?: boolean\n}\n\n/** This is a good way to add a mousemove handler to an element */\nexport function addCursorMoveHandler(params: CursorMoveHandlerParams): void {\n\n\tconst onDown = (e: MouseEvent | TouchEvent) => {\n\t\tparams.element.addEventListener(\"mousemove\", params.onMove, {passive: true})\n\t\tparams.element.addEventListener(\"touchmove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"mouseup\", onUp, {passive: true})\n\t\twindow.addEventListener(\"touchend\", onUp, {passive: true})\n\t\tif(params.downIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tconst onUp = (e: MouseEvent | TouchEvent) => {\n\t\tparams.element.removeEventListener(\"mousemove\", params.onMove)\n\t\tparams.element.removeEventListener(\"touchmove\", params.onMove)\n\t\twindow.removeEventListener(\"mouseup\", onUp)\n\t\twindow.removeEventListener(\"touchend\", onUp)\n\t\tif(params.upIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tparams.element.addEventListener(\"mousedown\", onDown, {passive: true})\n\tparams.element.addEventListener(\"touchstart\", onDown, {passive: true})\n}\n\nexport function preventContextMenu(el: HTMLElement): void {\n\tel.addEventListener(\"contextmenu\", e => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\treturn false\n\t})\n}",".wave-function-collapse-root {\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100%;\n\tflex-direction: row;\n\talign-items: center;\n\n\t.pattern-input-wrap {\n\t\tpadding: 1rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-grow: 0;\n\t\tflex-shrink: 0;\n\t\tmargin-right: 1rem;\n\t}\n\n\t.pattern-input-palette-item {\n\t\twidth: 1.5rem;\n\t\theight: 1.5rem;\n\t\tcursor: pointer;\n\t\tborder: 2px solid #222;\n\t\tborder-radius: 3px;\n\n\t\t&.selected-secondary {\n\t\t\tborder: 3px solid #999;\n\t\t}\n\n\t\t&.selected-primary {\n\t\t\tborder: 3px solid #ccc;\n\t\t}\n\t}\n\n\t.pattern-input-palette-wrap {\n\t\tpadding-top: 1rem;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t\tflex-wrap: wrap;\n\t}\n\n}","import {Bitmap} from \"common/bitmap\"\nimport {performeter} from \"common/perfometer\"\n\ntype WaveFunctionCollapseInput<T = unknown> = {\n\t/** The source sample, from which patterns will be extracted\n\t * indexing: sourceSample[x][y]\n\t * You MUST use same referencially-equal values to represent same logical values\n\t * (that is, if you have two of the same cat in the source - they must both be represented by single instance)\n\t * (this can only matter if you use objects or something like that as T)\n\t * (otherwise it will screw up the pattern extraction) */\n\tsourceSample: T[][]\n\tpatternSize: number\n\tresultSize: {height: number, width: number}\n\tflip: boolean\n\trotate: boolean\n\trandomSeed: number\n}\n\nexport function waveFunctionCollapse<T>(params: WaveFunctionCollapseInput<T>): T[][] {\n\tperformeter.enterBlock(\"init stage\")\n\tconst {patterns, matrix} = init(params)\n\tperformeter.exitEnterBlock(\"collapse stage\")\n\n\twhile(!matrix.isEverythingCollapsed()){\n\t\tperformeter.enterBlock(\"search\")\n\t\tconst lowestEntropyPoint = matrix.findMinEntropyCell()\n\t\tif(!lowestEntropyPoint){\n\t\t\tthrow new Error(\"No lowest entropy point!\")\n\t\t}\n\t\tperformeter.exitEnterBlock(\"collapse\")\n\t\tmatrix.collapse(lowestEntropyPoint)\n\t\tperformeter.exitBlock()\n\t}\n\n\tconst patternIndices = matrix.getResults()\n\n\tperformeter.exitBlock()\n\n\treturn patternIndices.map(row => row.map(patternIndex => {\n\t\tconst pattern = patterns[patternIndex]!\n\t\treturn pattern[0]![0]!\n\t}))\n}\n\ntype XY = {x: number, y: number}\ntype PatternData<T = unknown> = readonly (readonly T[])[]\n// Array(pattern index -> Map(encoded offset -> list of available pattern indices for that offset))\ntype Rules = Map<number, Bitmap>[]\ntype InitResult<T> = {\n\tmatrix: Matrix\n\toffsets: XY[]\n\tpatterns: PatternData<T>[]\n\tpatternsFreq: number[]\n\trules: Rules\n\trandom(): number\n}\n\n/** Performs the initialization phase of the wfc algorithm, namely - aggregate the patterns from the input_examples image, calculate their frequencies and initiate the coefficient_matrix */\nfunction init<T>(params: WaveFunctionCollapseInput<T>): InitResult<T> {\n\tconst offsets = generateOffsets(params.patternSize)\n\tconst [patterns, patternsFreq] = generatePatternsAndFrequences(params)\n\tconst rules = getRules(patterns, offsets)\n\tconst random = makeRandom(params.randomSeed)\n\tconst matrix = new Matrix(params.resultSize.width, params.resultSize.height, patterns.length, random, rules, offsets, patternsFreq)\n\t// console.log(\"Rules: \", rules)\n\treturn {offsets, patterns, patternsFreq, rules, matrix, random}\n}\n\nfunction getRules<T>(patterns: PatternData<T>[], offsets: XY[]): Rules {\n\tconst result: Rules = new Array(patterns.length).fill(null).map(() => {\n\t\tconst patternsByOffset = new Map<number, Bitmap>(offsets.map(offset => [encodeOffset(offset), new Bitmap(patterns.length)]))\n\t\treturn patternsByOffset\n\t})\n\t// console.log(\"Patterns\", patterns)\n\n\tfor(const offset of offsets){\n\t\tconst encodedOffset = encodeOffset(offset)\n\t\t// console.log(`Encoded offset (${offset.x}, ${offset.y}) as ${encodedOffset}`)\n\t\tconst flipEncodedOffset = encodeOffset(flipOffset(offset))\n\t\tfor(let aIndex = 0; aIndex < patterns.length; aIndex++){\n\t\t\tconst a = patterns[aIndex]!\n\t\t\tfor(let bIndex = aIndex; bIndex < patterns.length; bIndex++){\n\t\t\t\tconst b = patterns[bIndex]!\n\t\t\t\tif(patternsHaveMatch(a, b, offset)){\n\t\t\t\t\tresult[aIndex]!.get(encodedOffset)!.set(bIndex)\n\t\t\t\t\tresult[bIndex]!.get(flipEncodedOffset)!.set(aIndex)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n\nfunction patternsHaveMatch<T>(a: PatternData<T>, b: PatternData<T>, offset: XY): boolean {\n\tconst patternSize = a.length\n\tconst intersectionLengthX = patternSize - Math.abs(offset.x)\n\tconst intersectionLengthY = patternSize - Math.abs(offset.y)\n\n\tconst startXA = Math.min(Math.max(offset.x, 0), patternSize - intersectionLengthX)\n\tconst startYA = Math.min(Math.max(offset.y, 0), patternSize - intersectionLengthY)\n\tconst startXB = Math.min(Math.max(-offset.x, 0), patternSize - intersectionLengthX)\n\tconst startYB = Math.min(Math.max(-offset.y, 0), patternSize - intersectionLengthY)\n\n\tfor(let dx = 0; dx < intersectionLengthX; dx++){\n\t\tfor(let dy = 0; dy < intersectionLengthY; dy++){\n\t\t\tif(a[startXA + dx]![startYA + dy] !== b[startXB + dx]![startYB + dy]){\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\n\nfunction flipOffset(offset: XY): XY {\n\treturn {x: -offset.x, y: -offset.y}\n}\n\n/** Get the coordinates around a pattern.\n * This function returns a list of all coordinates around a pattern of given size, starting from the top left and ending at the bottom right. The center point (0, 0) is excluded from the list. */\nfunction generateOffsets(patternSize: number): XY[] {\n\tconst result: XY[] = []\n\tfor(let x = -patternSize + 1; x < patternSize; x++){\n\t\tfor(let y = -patternSize + 1; y < patternSize; y++){\n\t\t\tif(x === 0 && y === 0){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tresult.push({x, y})\n\t\t}\n\t}\n\treturn result\n}\n\nfunction encodeOffset(offset: XY): number {\n\treturn Math.abs(offset.x) << 18 | Math.abs(offset.y) << 2 | (offset.y < 0 ? 0x1 : 0) | (offset.x < 0 ? 0x2 : 0)\n}\n\nfunction encodePosition(position: XY): number {\n\treturn position.x << 16 | position.y\n}\n\nfunction decodePosition(position: number): XY {\n\treturn {\n\t\tx: (position >> 16) & 0xffff,\n\t\ty: position & 0xffff\n\t}\n}\n\nfunction normalizeArray(input: number[]): number[] {\n\tconst sum = input.reduce((a, b) => a + b, 0)\n\treturn input.map(x => x / sum)\n}\n\nfunction generatePatternsAndFrequences<T>(params: WaveFunctionCollapseInput<T>): [PatternData<T>[], number[]] {\n\tlet patterns = getPatternDataFromSource(params)\n\n\tconst hashMap = new Map<number, (PatternData<T> | null)[]>()\n\tconst hasher = new PatternHasher(params.sourceSample)\n\tfor(const pattern of patterns){\n\t\tconst hash = hasher.hash(pattern)\n\t\tlet arr = hashMap.get(hash)\n\t\tif(!arr){\n\t\t\tarr = []\n\t\t\thashMap.set(hash, arr)\n\t\t}\n\t\tarr.push(pattern)\n\t}\n\n\tconst freqMap = new Map<PatternData<T>, number>()\n\tfor(const patterns of hashMap.values()){\n\t\tfor(let i = 0; i < patterns.length; i++){\n\t\t\tconst pattern = patterns[i]\n\t\t\tif(!pattern){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlet count = 0\n\t\t\tfor(let j = 0; j < patterns.length; j++){\n\t\t\t\tconst otherPattern = patterns[j]\n\t\t\t\tif(!otherPattern){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif(patternsAreEqual(pattern, otherPattern)){\n\t\t\t\t\tpatterns[j] = null\n\t\t\t\t}\n\t\t\t\tcount++\n\t\t\t}\n\t\t\tfreqMap.set(pattern, count)\n\t\t}\n\t}\n\tpatterns = [...freqMap.keys()]\n\n\tconst freqs: number[] = []\n\tfor(const pattern of patterns){\n\t\tfreqs.push(freqMap.get(pattern)!)\n\t}\n\treturn [patterns, normalizeArray(freqs)]\n}\n\nfunction patternsAreEqual<T>(a: PatternData<T>, b: PatternData<T>): boolean {\n\tfor(let x = 0; x < a.length; x++){\n\t\tconst aRow = a[x]!\n\t\tconst bRow = b[x]!\n\t\tfor(let y = 0; y < aRow.length; y++){\n\t\t\tif(aRow[y] !== bRow[y]){\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\n\n/** Class that is able to take fast (non-secure) hash from a pattern */\nclass PatternHasher<T> {\n\n\tprivate readonly valueIndices: Map<T, number> = new Map()\n\n\tconstructor(source: WaveFunctionCollapseInput<T>[\"sourceSample\"]) {\n\t\tconst allPossibleValues = [...new Set(flatten(source))]\n\t\tfor(let i = 0; i < allPossibleValues.length; i++){\n\t\t\tthis.valueIndices.set(allPossibleValues[i]!, i)\n\t\t}\n\t}\n\n\thash(pattern: PatternData<T>): number {\n\t\tlet hash = 0\n\n\t\tfor(let x = 0; x < pattern.length; x++){\n\t\t\tconst row = pattern[x]!\n\t\t\tfor(let y = 0; y < row.length; y++){\n\t\t\t\tconst item = row[y]!\n\t\t\t\tconst itemIndex = this.valueIndices.get(item)!\n\t\t\t\thash = ((hash << 5) - hash + (itemIndex * x * y)) | 0\n\t\t\t}\n\t\t}\n\n\t\treturn hash\n\t}\n}\n\nfunction flatten<T>(arr: readonly (readonly T[])[]): T[] {\n\tconst result: T[] = []\n\tfor(const row of arr){\n\t\tresult.push(...row)\n\t}\n\treturn result\n}\n\nfunction getPatternDataFromSource<T>(params: WaveFunctionCollapseInput<T>): PatternData<T>[] {\n\tlet patterns: PatternData<T>[] = []\n\tfor(let x = 0; x < params.sourceSample.length - params.patternSize + 1; x++){\n\t\tconst row = params.sourceSample[x]!\n\t\tfor(let y = 0; y < row.length - params.patternSize + 1; y++){\n\t\t\tpatterns.push(extractSourcePatternAt(params.sourceSample, x, y, params.patternSize))\n\t\t}\n\t}\n\n\tif(params.flip){\n\t\tconst flipped: PatternData<T>[] = []\n\t\tfor(const axis of [\"x\", \"y\"] as const){\n\t\t\tfor(const pattern of patterns){\n\t\t\t\tflipped.push(flipPattern(pattern, axis))\n\t\t\t}\n\t\t}\n\t\tpatterns = [...patterns, ...flipped]\n\t}\n\n\tif(params.rotate){\n\t\tconst rotated: PatternData<T>[] = []\n\t\tfor(const count of [1, 2, 3] as const){\n\t\t\tfor(const pattern of patterns){\n\t\t\t\trotated.push(rotatePattern(pattern, count))\n\t\t\t}\n\t\t}\n\t\tpatterns = [...patterns, ...rotated]\n\t}\n\n\treturn patterns\n}\n\nfunction extractSourcePatternAt<T>(source: WaveFunctionCollapseInput<T>[\"sourceSample\"], x: number, y: number, size: number): PatternData<T> {\n\tconst result: T[][] = []\n\tfor(let dx = 0; dx < size; dx++){\n\t\tconst row = source[x + dx]!\n\t\tresult.push(row.slice(y, y + size))\n\t}\n\treturn result\n}\n\nfunction copyPattern<T>(pattern: PatternData<T>): T[][] {\n\tconst result: T[][] = []\n\tfor(let x = 0; x < pattern.length; x++){\n\t\tresult.push([...pattern[x]!])\n\t}\n\treturn result\n}\n\nfunction flipPattern<T>(pattern: PatternData<T>, axis: \"x\" | \"y\"): PatternData<T> {\n\tconst res = copyPattern(pattern)\n\tconst halfLen = Math.floor(pattern.length / 2)\n\tif(axis === \"x\"){\n\t\tfor(let dx = 0; dx < halfLen; dx++){\n\t\t\tconst rowA = res[dx]!\n\t\t\tconst rowB = res[res.length - dx - 1]!\n\t\t\tfor(let y = 0; y < rowA.length; y++){\n\t\t\t\tconst tmp = rowA[y]!\n\t\t\t\trowA[y] = rowB[y]!\n\t\t\t\trowB[y] = tmp\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor(let x = 0; x < pattern.length; x++){\n\t\t\tconst row = res[x]!\n\t\t\tfor(let dy = 0; dy < halfLen; dy++){\n\t\t\t\tconst tmp = row[dy]!\n\t\t\t\trow[dy] = row[row.length - dy - 1]!\n\t\t\t\trow[row.length - dy - 1] = tmp\n\t\t\t}\n\t\t}\n\t}\n\treturn res\n}\n\nfunction rotatePattern<T>(pattern: PatternData<T>, times: 1 | 2 | 3): PatternData<T> {\n\tconst res = copyPattern(pattern)\n\tconst size = pattern.length\n\tconst halfSize = Math.floor(size / 2)\n\tfor(let i = 0; i < times; i++){\n\t\tfor(let circleOffset = 0; circleOffset < halfSize; circleOffset++){\n\t\t\tconst lastPos = size - circleOffset - 1\n\t\t\tfor(let posOffset = circleOffset; posOffset < size - circleOffset - 1; posOffset++){\n\t\t\t\tconst tmp = res[posOffset]![circleOffset]!\n\t\t\t\tres[posOffset]![circleOffset] = res[lastPos]![posOffset]!\n\t\t\t\tres[lastPos]![posOffset] = res[size - posOffset - 1]![lastPos]!\n\t\t\t\tres[size - posOffset - 1]![lastPos] = res[circleOffset]![size - posOffset - 1]!\n\t\t\t\tres[circleOffset]![size - posOffset - 1] = tmp\n\t\t\t}\n\t\t}\n\t}\n\treturn res\n}\n\nclass Matrix {\n\tprivate readonly entropy: number[]\n\tprivate readonly matrix: Bitmap\n\tprivate readonly collapseMask: Bitmap\n\tprivate readonly patternCount: number\n\tprivate incollapsedCellsCount: number\n\n\tconstructor(\n\t\tprivate readonly width: number,\n\t\tprivate readonly height: number,\n\t\tpatternCount: number,\n\t\tprivate readonly random: () => number,\n\t\tprivate readonly rules: Rules,\n\t\tprivate readonly offsets: XY[],\n\t\tprivate readonly freqs: number[]\n\t) {\n\t\tthis.patternCount = Math.ceil(patternCount / 8) * 8\n\t\tthis.entropy = new Array(width * height).fill(1)\n\t\tthis.matrix = new Bitmap(width * height * this.patternCount)\n\t\tthis.collapseMask = new Bitmap(width * height)\n\t\tthis.incollapsedCellsCount = width * height\n\n\t\tthis.matrix.setAll()\n\t\tconst paddingPatternCount = this.patternCount - patternCount\n\t\tfor(let i = 0; i < width * height; i++){\n\t\t\tconst cellEnd = ((i + 1) * this.patternCount) - 1\n\t\t\tfor(let offset = 0; offset < paddingPatternCount; offset++){\n\t\t\t\tthis.matrix.clear(cellEnd - offset)\n\t\t\t}\n\t\t}\n\t}\n\n\tisEverythingCollapsed(): boolean {\n\t\treturn this.incollapsedCellsCount === 0\n\t}\n\n\tfindMinEntropyCell(): XY | null {\n\t\tlet minEntropy = Number.MAX_SAFE_INTEGER\n\t\tconst cells: number[] = []\n\t\tfor(let i = 0; i < this.entropy.length; i++){\n\t\t\tif(this.collapseMask.get(i)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst entropy = this.entropy[i]!\n\t\t\tif(entropy < minEntropy){\n\t\t\t\tcells.length = 0\n\t\t\t\tminEntropy = entropy\n\t\t\t}\n\t\t\tif(entropy === minEntropy){\n\t\t\t\tcells.push(i)\n\t\t\t}\n\t\t}\n\t\tif(cells.length === 0){\n\t\t\treturn null\n\t\t}\n\n\t\t// console.log(`Lowest entropy cells are at ${minEntropy}: `, cells.map(index => ({x: index % this.width, y: Math.floor(index / this.width)})))\n\n\t\tconst index = cells.length === 1 ? cells[0]! : cells[Math.floor(this.random() * cells.length)]!\n\t\treturn {x: index % this.width, y: Math.floor(index / this.width)}\n\t}\n\n\tcollapse(cell: XY): void {\n\t\tperformeter.enterBlock(\"collapse-set\")\n\t\t// console.log(`Collapsing at (${cell.x}, ${cell.y}): \\n${this}`)\n\t\tconst cellIndex = cell.y * this.width + cell.x\n\t\tconst availableValues = this.matrix.getOffsetsAsNumbers(cellIndex * this.patternCount, this.patternCount)\n\t\tif(availableValues.length === 0){\n\t\t\t// should be caught on propagate stage tbh\n\t\t\tthrow new Error(`Cell at (${cell.x}, ${cell.y}) don't have available values`)\n\t\t}\n\t\tthis.collapseMask.set(cellIndex)\n\t\tthis.incollapsedCellsCount--\n\t\tif(availableValues.length === 1){\n\t\t\tperformeter.exitBlock()\n\t\t\treturn // it's already kinda collapsed, no action required\n\t\t}\n\t\tconst selectedValue = availableValues[Math.floor(this.random() * availableValues.length)]!\n\t\t// console.log(\"Selected value: \" + selectedValue)\n\t\t// console.log(ruleToString(this.rules[selectedValue]!))\n\t\tfor(const value of availableValues){\n\t\t\tif(value === selectedValue){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.matrix.clear(cellIndex * this.patternCount + value)\n\t\t}\n\t\tthis.entropy[cellIndex] = 0\n\t\tperformeter.exitEnterBlock(\"propagate\")\n\t\tthis.propagateStartingAt(cell)\n\t\tperformeter.exitBlock()\n\t}\n\n\tprivate isInBounds(coords: XY): boolean {\n\t\treturn coords.x >= 0 && coords.y >= 0 && coords.x < this.width && coords.y < this.height\n\t}\n\n\tprivate propagateStartingAt(cell: XY): void {\n\t\tconst queue = new SetQueue<number>()\n\t\tqueue.enqueue(encodePosition(cell))\n\n\t\twhile(true){\n\t\t\tconst origCellEncoded = queue.dequeue()\n\t\t\tif(origCellEncoded === undefined || origCellEncoded === null){\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tconst origCell = decodePosition(origCellEncoded)\n\t\t\t// console.log(`Propagating at (${origCell.x}, ${origCell.y})`)\n\n\t\t\tfor(const offset of this.offsets){\n\t\t\t\tconst adjacentCellPos = {x: origCell.x + offset.x, y: origCell.y + offset.y}\n\t\t\t\tif(!this.isInBounds(adjacentCellPos)){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst adjacentCellIndex = adjacentCellPos.y * this.width + adjacentCellPos.x\n\t\t\t\tif(this.collapseMask.get(adjacentCellIndex)){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst changed = this.propagateToCellByOffset(origCell, offset)\n\t\t\t\tif(changed){\n\t\t\t\t\tqueue.enqueue(encodePosition(adjacentCellPos))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate propagateToCellByOffset(origCell: XY, offset: XY): boolean {\n\t\t// TODO: optimise here\n\t\tperformeter.enterBlock(\"assemble_pattern\")\n\t\tconst encodedOffset = encodeOffset(offset)\n\t\tconst origCellIndex = origCell.y * this.width + origCell.x\n\t\tperformeter.enterBlock(\"get offsets\")\n\t\tconst origCellPatterns = this.matrix.getOffsetsAsNumbers(origCellIndex * this.patternCount, this.patternCount)\n\t\tperformeter.exitEnterBlock(\"OR pattern\")\n\t\tconst resultTargetCellPatterns = new Bitmap(this.patternCount)\n\t\tfor(const origPattern of origCellPatterns){\n\t\t\tconst patternsByRule = this.rules[origPattern]!.get(encodedOffset)!\n\t\t\tresultTargetCellPatterns.orFromTheStart(patternsByRule)\n\t\t}\n\t\tperformeter.exitBlock()\n\n\t\tperformeter.exitEnterBlock(\"apply_pattern\")\n\t\tconst targetCell = {x: origCell.x + offset.x, y: origCell.y + offset.y}\n\t\tconst targetCellIndex = targetCell.y * this.width + targetCell.x\n\t\tconst hasChange = this.matrix.and(resultTargetCellPatterns, targetCellIndex * this.patternCount)\n\t\tif(hasChange){\n\t\t\tthis.entropy[targetCellIndex] = this.matrix.getOffsetsAsNumbers(targetCellIndex * this.patternCount, this.patternCount)\n\t\t\t\t.map(pattern => this.freqs[pattern]!)\n\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t}\n\t\tperformeter.exitBlock()\n\t\treturn hasChange\n\t}\n\n\tgetResults(): number[][] {\n\t\tconst result: number[][] = []\n\t\tfor(let x = 0; x < this.width; x++){\n\t\t\tconst row: number[] = []\n\t\t\tresult.push(row)\n\t\t\tfor(let y = 0; y < this.height; y++){\n\t\t\t\tconst index = y * this.width + x\n\t\t\t\tconst patterns = this.matrix.getOffsetsAsNumbers(index * this.patternCount, this.patternCount)\n\t\t\t\trow.push(patterns[0]!)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\ttoString(): string {\n\t\tlet longestCellLen = 0\n\t\tconst result: string[][] = []\n\t\tfor(let y = 0; y < this.height; y++){\n\t\t\tconst row: string[] = []\n\t\t\tresult.push(row)\n\t\t\tfor(let x = 0; x < this.width; x++){\n\t\t\t\tconst index = y * this.width + x\n\t\t\t\tconst patterns = this.matrix.getOffsetsAsNumbers(index * this.patternCount, this.patternCount)\n\t\t\t\tconst str = shortenNumberSpan(patterns)\n\t\t\t\trow.push(str)\n\t\t\t\tlongestCellLen = Math.max(longestCellLen, str.length)\n\t\t\t}\n\t\t}\n\t\treturn result.map(row => row.map(cell => whitePad(cell, longestCellLen)).join(\" | \")).join(\"\\n\")\n\t}\n\n}\n\nfunction whitePad(str: string, len: number): string {\n\twhile(str.length < len){\n\t\tstr += \" \"\n\t}\n\treturn str\n}\n\nfunction makeRandom(seed: number): () => number {\n\tseed ^= 0xDEADBEEF\n\t// Pad seed with Phi, Pi and E.\n\t// https://en.wikipedia.org/wiki/Nothing-up-my-sleeve_number\n\tconst rand = sfc32(0x9E3779B9, 0x243F6A88, 0xB7E15162, seed)\n\tfor(let i = 0; i < 15; i++){\n\t\trand()\n\t}\n\treturn rand\n}\n\nfunction sfc32(a: number, b: number, c: number, d: number) {\n\treturn function() {\n\t\ta >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0\n\t\tlet t = (a + b) | 0\n\t\ta = b ^ b >>> 9\n\t\tb = c + (c << 3) | 0\n\t\tc = (c << 21 | c >>> 11)\n\t\td = d + 1 | 0\n\t\tt = t + d | 0\n\t\tc = c + t | 0\n\t\treturn (t >>> 0) / 4294967296\n\t}\n}\n\nclass SetQueue<T> {\n\tprivate readonly set = new Set<T>()\n\tprivate readonly queue: (T | null)[] = []\n\tprivate pos = 0\n\n\tenqueue(value: T): boolean {\n\t\tif(this.set.has(value)){\n\t\t\treturn false\n\t\t}\n\t\tthis.set.add(value)\n\t\tthis.queue.push(value)\n\t\treturn true\n\t}\n\n\tdequeue(): T | null | undefined {\n\t\tconst result = this.queue[this.pos]\n\t\tthis.queue[this.pos] = null\n\t\tif(this.queue.length > this.pos){\n\t\t\tthis.set.delete(result!)\n\t\t\tthis.pos++\n\t\t}\n\t\treturn result\n\t}\n}\n\n/** Format sequence of numbers in a shorter manner, compressing sequental spans into from-to format */\nfunction shortenNumberSpan(nums: number[]): string {\n\treturn joinSpans(nums, (a, b) => a + 1 === b).map(span => {\n\t\tconst first = span[0]!\n\t\tconst last = span[span.length - 1]!\n\t\tif(first === last){\n\t\t\treturn first + \"\"\n\t\t} else if(first + 1 === last){\n\t\t\treturn first + \",\" + last\n\t\t} else {\n\t\t\treturn first + \"-\" + last\n\t\t}\n\t}).join(\",\")\n}\n\nfunction joinSpans<T>(values: T[], shouldJoin: (a: T, b: T) => boolean): T[][] {\n\tconst result: T[][] = []\n\tif(values.length === 0){\n\t\treturn result\n\t}\n\tlet currentSpan: T[] = [values[0]!]\n\tresult.push(currentSpan)\n\n\tfor(let i = 1; i < values.length; i++){\n\t\tconst v = values[i]!\n\t\tif(shouldJoin(currentSpan[currentSpan.length - 1]!, v)){\n\t\t\tcurrentSpan.push(v)\n\t\t} else {\n\t\t\tcurrentSpan = [v]\n\t\t\tresult.push(currentSpan)\n\t\t}\n\t}\n\n\treturn result\n}","/** An optimized array of bits (booleans) */\nexport class Bitmap {\n\tprivate readonly arr: Uint8Array\n\tconstructor(readonly size: number) {\n\t\tif(size < 0){\n\t\t\tthrow new Error(`Expected non-negative as size, got ${size}`)\n\t\t}\n\n\t\tif(size % 8){\n\t\t\tsize = Math.ceil(size / 8) * 8\n\t\t}\n\n\t\tthis.arr = new Uint8Array(size >> 3)\n\t}\n\n\t/** Set bit at selected index to 1 */\n\tset(index: number): void {\n\t\tconst arr = this.arr\n\t\tconst byteIndex = index >> 3\n\t\tarr[byteIndex] = arr[byteIndex]! | (1 << (index & 0b111))\n\t}\n\n\t/** Set bit at selected index to 0 */\n\tclear(index: number): void {\n\t\tconst arr = this.arr\n\t\tconst byteIndex = index >> 3\n\t\tarr[byteIndex] = arr[byteIndex]! & (~(1 << (index & 0b111)))\n\t}\n\n\t/** Get value of bit at index */\n\tget(index: number): boolean {\n\t\treturn (this.arr[index >> 3]! & (1 << (index & 0b111))) !== 0\n\t}\n\n\t/** Set value of all the bits to 1 */\n\tsetAll(): void {\n\t\tthis.arr.fill(0xff)\n\t}\n\n\t/** Set value of all the bits to 0 */\n\tclearAll(): void {\n\t\tthis.arr.fill(0)\n\t}\n\n\t/** @returns sorted array of offsets within [start, start + length] */\n\tgetOffsetsAsNumbers(start: number, length: number): number[] {\n\t\tif(start & 0x7 || length & 0x7){\n\t\t\tthrow new Error(\"Assertion failed, only byte-aligned start/length is supported\")\n\t\t}\n\t\tconst result: number[] = []\n\t\tlet i = 0\n\t\tfor(let byteOffset = 0; byteOffset < (length >> 3); byteOffset++){\n\t\t\tconst byte = this.arr[(start >> 3) + byteOffset]!\n\t\t\tlet mask = 0x1\n\t\t\twhile(mask !== 0x100){\n\t\t\t\tif(byte & mask){\n\t\t\t\t\tresult.push(i)\n\t\t\t\t}\n\t\t\t\ti++\n\t\t\t\tmask <<= 1\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\t/** Sets to 1 every offset that is present in array of offsets and to 0 everything else\n\t * @param offsets sorted array of offsets\n\t * @returns if anything was changed */\n\tsetOffsetsByNumbers(start: number, length: number, offsets: number[]): boolean {\n\t\tif(start & 0x7 || length & 0x7){\n\t\t\tthrow new Error(\"Assertion failed, only byte-aligned start/length is supported\")\n\t\t}\n\t\tlet hasChange = false\n\t\tlet offset = 0\n\t\tlet offsetIndex = 0\n\t\tlet nextNonzeroOffset = offsets[offsetIndex]\n\t\tfor(let byteOffset = 0; byteOffset < (length >> 3); byteOffset++){\n\t\t\tconst origByte = this.arr[(start >> 3) + byteOffset]!\n\t\t\tlet byte = 0\n\t\t\tlet mask = 0x1\n\t\t\twhile(mask !== 0x100){\n\t\t\t\tconst bit = offset === nextNonzeroOffset ? mask : 0\n\t\t\t\thasChange = hasChange || (origByte & mask) !== bit\n\t\t\t\tif(bit){\n\t\t\t\t\tbyte |= mask\n\t\t\t\t\toffsetIndex++\n\t\t\t\t\tnextNonzeroOffset = offsets[offsetIndex]\n\t\t\t\t}\n\t\t\t\toffset++\n\t\t\t\tmask <<= 1\n\t\t\t}\n\t\t\tthis.arr[(start >> 3) + byteOffset] = byte\n\t\t}\n\t\treturn hasChange\n\t}\n\n\t/** Applies bitwise-and operation to this bitmap; saves result in this bitmap\n\t * Expecting other bitmap to be smaller than this one\n\t * @returns if this bitmap was changed\n\t */\n\tand(other: Bitmap, startThis: number): boolean {\n\t\tif(startThis & 0x7){\n\t\t\tthrow new Error(\"Assertion failed, only byte-aligned start/length is supported\")\n\t\t}\n\t\tlet hasChange = false\n\t\tfor(let byteOffset = 0; byteOffset < other.arr.length; byteOffset++){\n\t\t\tconst thisByte = this.arr[(startThis >> 3) + byteOffset]!\n\t\t\tconst otherByte = other.arr[byteOffset]!\n\t\t\tconst result = thisByte & otherByte\n\t\t\thasChange = hasChange || (result !== thisByte)\n\t\t\tthis.arr[(startThis >> 3) + byteOffset] = result\n\t\t}\n\t\treturn hasChange\n\t}\n\n\torFromTheStart(other: Bitmap): void {\n\t\tif(other.arr.length > this.arr.length){\n\t\t\tthrow new Error(\"Assertion failed, lengths are not equal\")\n\t\t}\n\t\tfor(let byteOffset = 0; byteOffset < other.arr.length; byteOffset++){\n\t\t\tthis.arr[byteOffset] = this.arr[byteOffset]! | other.arr[byteOffset]!\n\t\t}\n\t}\n\n}","[[16754689,16754689,16754689,16754689,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776],[26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776],[26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776],[26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,16754689],[26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,16754689,16754689,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689],[26776,16754689,16754689,16771843,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,16754689,16754689,16771843,16771843],[16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,16754689,16754689,16771843,16771843,16771843],[16754689,16771843,16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,16754689,16771843,16771843,14817887,16771843],[16754689,16754689,16771843,16771843,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843],[26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887],[26776,26776,16754689,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843],[26776,26776,26776,26776,16754689,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689],[26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689],[16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776],[16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776],[14817887,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776],[16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776],[16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776],[16771843,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776],[14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776],[16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689],[16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689],[16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,14817887,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843],[16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,14817887,16771843],[16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843],[16771843,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843],[16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689],[16754689,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,16754689],[26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776],[26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776],[26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776],[26776,26776,16754689,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776],[26776,16754689,16754689,16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,16754689],[26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689],[26776,26776,16754689,16754689,16771843,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843],[26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843],[26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843],[26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843],[16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843],[16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16754689,16754689,16754689,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689],[16771843,16754689,26776,26776,26776,26776,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16754689],[16754689,16754689,26776,26776,26776,16754689,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776],[16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776],[26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776],[26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,14817887,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,16754689],[16754689,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16754689,16754689],[16754689,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843],[16754689,16754689,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843],[16754689,26776,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16771843,16771843,16754689,16754689,26776,26776,26776,16754689,16771843,16771843,14817887,16771843],[16754689,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,16754689,16754689,26776,26776,26776,26776,26776,26776,26776,16754689,16754689,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,26776,16754689,16754689,16754689,16771843,16771843,16771843,16771843,14817887,16771843,16771843,16754689,26776,26776,26776,16754689,16754689,16771843,16771843,16771843,16771843]]","[[26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16754689, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16771843, 16771843, 16771843, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16771843, 16771843, 14817887, 16771843, 16771843, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16771843, 16771843, 16771843, 16771843, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 16754689, 16771843, 16771843, 14817887, 16771843, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16771843, 16771843, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 16754689, 16754689, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776], [26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776, 26776]]"],"names":["$8HcCf","parcelRequire","$02ba7994cbb01639$export$f22da7240b7add18","root","patternInput","$ffFvw","PatternInput","palette","defaultValue","height","width","scale","display","$jVGbq","ColorArrayDisplay","appendChild","$aCP3q","tag","class","$9sNwz","tagName","text","on","click","source","getPattern","result","$1OdCr","waveFunctionCollapse","flip","rotate","sourceSample","patternSize","randomSeed","resultSize","draw","JSON","stringify","$41Cz4","console","error","log","$02ba7994cbb01639$var$checkResult","performeter","print","reset","setValue","$5Ofxc","$6f792b9b35387246$export$e1ee22bc4cc102ea","this","makeBlock","currentBlock","eventCounters","parent","subblocks","timeStart","timeSum","enterCount","enterBlock","name","nextBlock","performance","now","recordEvent","exitBlock","Error","exitEnterBlock","table","fullTime","forEachBlock","block","depth","Array","join","$6f792b9b35387246$var$strip","callback","start","currentDepth","subblock","v","Math","round","$hIDiW","$4c0fbf616468c6ce$var$resolveArgs","a","b","isArray","$hsvBG","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","getBinder","watch","textContent","unbox","evtName","handler","addEventListener","passive","capture","k","attrs","removeAttribute","setAttribute","vv","setChildren","childTags","filter","x","newChildren","i","length","childTag","childNodes","insertBefore","remove","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","classname","classList","value","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","style","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","arr","item","makeClassnameAndCallTheCallback","key","bool","push","classname1","$efatB","$96d2a9ef9a2c2245$export$5640fc17115cf007","constructor","canvas","context","getContext","values","w","h","s","row","y","fillStyle","rgbNumberToColorString","fillRect","$fa4a5aa5cdd6ce8e$var$twoHex","toString","$fa4a5aa5cdd6ce8e$export$c5ea230d2f55d434","rgb","g","$013bb80b3ccfc188$export$c5328dac6d89974f","params","primaryCb","$ih12A","preventContextMenu","addCursorMoveHandler","element","onMove","onSetColorAction","bind","downIsMove","pattern","fill","map","paletteButtons","color","button","selectColor","backgroundColor","redrawCanvas","e","coords","pointerEventsToOffsetCoords","cellX","floor","cellY","cb","set","parse","prevCb","dfltClassName","clsName","className","add","$070b40bf88f7afea$export$4eb1c1f17f883a41","target","HTMLElement","rect","getBoundingClientRect","touches","$070b40bf88f7afea$export$c4dfce035d43d1e0","touch","clientX","clientY","$070b40bf88f7afea$export$f9e1fc62131d1b82","left","top","$070b40bf88f7afea$export$80eb02ad18c977f1","onDown","window","onUp","removeEventListener","upIsMove","$070b40bf88f7afea$export$b3002a74c1b9a5fd","el","preventDefault","stopPropagation","$6e3d250e7771e99d$export$be5cd583167290d2","$6e3d250e7771e99d$export$f9ca6c3b4d310360","$6e3d250e7771e99d$export$9a9aa9ffab568c99","$6e3d250e7771e99d$export$6cc254038363eb2f","$6e3d250e7771e99d$export$b64206a3d550df71","$1VHh9","$b29a1f8e2035086d$export$afb809ac55339913","patterns","matrix","offsets","$b29a1f8e2035086d$var$generateOffsets","patternsFreq","$b29a1f8e2035086d$var$extractSourcePatternAt","flipped","axis","$b29a1f8e2035086d$var$flipPattern","rotated","count","pattern1","$b29a1f8e2035086d$var$rotatePattern","$b29a1f8e2035086d$var$getPatternDataFromSource","hashMap","Map","hasher","$b29a1f8e2035086d$var$PatternHasher","hash","get","freqMap","patterns1","j","otherPattern","$b29a1f8e2035086d$var$patternsAreEqual","keys","freqs","pattern2","$b29a1f8e2035086d$var$normalizeArray","$b29a1f8e2035086d$var$generatePatternsAndFrequences","rules","offset","$b29a1f8e2035086d$var$encodeOffset","Bitmap","encodedOffset","flipEncodedOffset","$b29a1f8e2035086d$var$flipOffset","aIndex","bIndex","$b29a1f8e2035086d$var$patternsHaveMatch","$b29a1f8e2035086d$var$getRules","random","seed","rand","c","d","t","$b29a1f8e2035086d$var$makeRandom","$b29a1f8e2035086d$var$Matrix","$b29a1f8e2035086d$var$init","isEverythingCollapsed","lowestEntropyPoint","findMinEntropyCell","collapse","patternIndices","getResults","patternIndex","intersectionLengthX","abs","intersectionLengthY","startXA","min","max","startYA","startXB","startYB","dx","dy","$b29a1f8e2035086d$var$encodePosition","position","input","sum","reduce","aRow","bRow","valueIndices","allPossibleValues","Set","$b29a1f8e2035086d$var$flatten","size","slice","$b29a1f8e2035086d$var$copyPattern","res","halfLen","rowA","rowB","tmp","tmp1","times","halfSize","circleOffset","lastPos","posOffset","patternCount","ceil","entropy","collapseMask","incollapsedCellsCount","setAll","paddingPatternCount","cellEnd","clear","minEntropy","Number","MAX_SAFE_INTEGER","cells","index","cell","cellIndex","availableValues","getOffsetsAsNumbers","selectedValue","propagateStartingAt","isInBounds","queue","$b29a1f8e2035086d$var$SetQueue","enqueue","origCellEncoded","dequeue","origCell","adjacentCellPos","adjacentCellIndex","propagateToCellByOffset","origCellIndex","origCellPatterns","resultTargetCellPatterns","origPattern","patternsByRule","orFromTheStart","targetCell","targetCellIndex","hasChange","and","longestCellLen","str","shouldJoin","currentSpan","$b29a1f8e2035086d$var$joinSpans","span","first","last","len","$b29a1f8e2035086d$var$whitePad","pos","has","delete","$665dc4e67c6f8c6a$export$3924f7882b5e2b61","Uint8Array","byteIndex","clearAll","byteOffset","byte","mask","setOffsetsByNumbers","offsetIndex","nextNonzeroOffset","origByte","bit","other","startThis","thisByte","module","exports"],"version":3,"file":"wave_function_collapse.21f42c30.js.map"}