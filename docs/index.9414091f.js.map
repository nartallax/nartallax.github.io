{"mappings":"gJACAA,EAGAC,EAIAC,E,kgBCcA,IAAAC,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,uECDA,MAAME,EAAUC,SAUT,MAAMC,EASZC,YAAqBC,G,QAAAA,E,KARbC,iBAA0C,K,KAC1CC,gBAAyC,K,KACzCC,aAAoC,K,KACpCC,eAAwC,K,KACxCC,eAAwC,K,KACxCC,cAA+C,KAItDC,KAAKC,QAoNP,SAAqBC,GACpB,IAAIC,EAASD,EAAKE,WAClB,KAAMD,GAAO,CACZ,GAAGA,IAAWE,SAASC,KACtB,OAAO,EAERH,EAASA,EAAOC,UACjB,CACA,OAAO,CACR,CA7NiBG,CAAYd,EAC5B,CAEYe,cACX,MAAMf,EAAKO,KAAKP,GAChB,KAAKA,aAAcgB,SAClB,MAAM,IAAIrB,MAAM,yDAA2DK,GAE5E,OAAOA,CACR,CAEAiB,eAAeC,IACbX,KAAKN,mBAAqB,IAAIkB,KAAKD,EACrC,CACAE,cAAcF,IACZX,KAAKL,kBAAoB,IAAIiB,KAAKD,EACpC,CAEAG,mBAAmBH,GAClB,MAAMI,EAAiB,KACtB,IACCJ,GAGD,CAFA,QACCX,KAAKgB,oBAAoBD,EAC1B,GAGDf,KAAKU,eAAeK,EACrB,CACAE,kBAAkBN,GACjB,MAAMI,EAAiB,KACtB,IACCJ,GAGD,CAFA,QACCX,KAAKkB,mBAAmBH,EACzB,GAGDf,KAAKa,cAAcE,EACpB,CAEAC,oBAAoBL,GACnBX,KAAKN,iBAAmByB,EAAkBnB,KAAKN,iBAAkBiB,EAClE,CACAO,mBAAmBP,GAClBX,KAAKL,gBAAkBwB,EAAkBnB,KAAKL,gBAAiBgB,EAChE,CAEAS,mBACCpB,KAAKC,SAAU,EACf,MAAMoB,EAAQrB,KAAKJ,aACnB,GAAGyB,EACF,IAAI,IAAIrC,EAAI,EAAGA,EAAIqC,EAAMpC,OAAQD,IAAI,CACpC,MAAMsC,EAAMD,EAAMrC,GACZuC,EAAQD,EAAIA,MACfA,EAAIE,iBAAmBD,GACzBvB,KAAKyB,iBAAiBF,EAAOD,GAE9BtB,KAAK0B,SAASJ,EACf,CAGDtB,KAAK2B,uBAELC,EAAQ5B,KAAKN,iBACd,CAEAmC,kBACC7B,KAAKC,SAAU,EACf,MAAMoB,EAAQrB,KAAKJ,aACnB,GAAGyB,EACF,IAAI,IAAIrC,EAAI,EAAGA,EAAIqC,EAAMpC,OAAQD,IAAI,CACxBqC,EAAMrC,GACd8C,OACL,CAGD9B,KAAK2B,uBAELC,EAAQ5B,KAAKL,gBACd,CAEQ8B,iBAAoBF,EAAUD,GACrCA,EAAIX,QAAQY,GACZD,EAAIE,eAAiBD,CACtB,CAEQG,SAASJ,GAChBA,EAAIQ,MAAQR,EAAIA,IAAIS,WAAUC,GAAKhC,KAAKyB,iBAAiBO,EAAGV,IAC7D,CAEQW,WAAcX,EAAcX,GACnC,MAAMuB,EAAyB,C,IAC9BZ,E,QACAX,EACAa,eAAgBnC,EAChByC,MAAO,MAMR,OAJG9B,KAAKC,SACPD,KAAK0B,SAASQ,IAEdlC,KAAKJ,eAAiB,IAAIgB,KAAKsB,GACzB,CACNJ,MAAO,KACN9B,KAAKJ,aAAeuB,EAAkBnB,KAAKJ,aAAcsC,EAAA,E,WAE1DA,EAEF,CAEAC,MAASb,EAAcX,GACtB,OAAOX,KAAKiC,WAAWX,EAAKX,GAASmB,KACtC,CAEAM,YAAed,EAAkBX,GAChC,IAAG,EAAA0B,EAAAC,QAAOhB,GAAK,CACd,MAAMQ,MAACA,EAAKI,WAAEA,GAAclC,KAAKiC,WAAWX,EAAKX,GAEjD,OADAX,KAAKyB,iBAAiBH,IAAOY,GACtBJ,CACR,CAEC,OADAnB,EAAQW,GACD,MAIT,CAEQiB,qBACP,IAAIvC,KAAKF,eACR,OAED,MAAM0C,EAAIxC,KAAKQ,QAAQiC,YACjBC,EAAI1C,KAAKQ,QAAQmC,aACvB,GAAG3C,KAAKD,cAAc,CACrB,GAAGC,KAAKD,cAAcyC,IAAMA,GAAKxC,KAAKD,cAAc2C,IAAMA,EACzD,OAED1C,KAAKD,cAAcyC,EAAIA,EACvBxC,KAAKD,cAAc2C,EAAIA,CACxB,MACC1C,KAAKD,cAAgB,C,EAACyC,E,EAAGE,GAG1B,IAAI,MAAM/B,KAAWX,KAAKF,eACzBa,GAEF,CAEQgB,uBACJ3B,KAAKC,SAAWD,KAAKF,eACnBE,KAAKH,iBACRG,KAAKD,cAAgB,CAACyC,EAAGxC,KAAKQ,QAAQiC,YAAaC,EAAG1C,KAAKQ,QAAQmC,cACnE3C,KAAKH,eAAiB,IAAI+C,eAAe5C,KAAKuC,mBAAmBM,KAAK7C,OACtEA,KAAKH,eAAeiD,QAAQ9C,KAAKQ,UAEzBR,KAAKH,iBACdG,KAAKH,eAAekD,UAAU/C,KAAKQ,SACnCR,KAAKH,eAAemD,aACpBhD,KAAKH,eAAiB,KACtBG,KAAKD,cAAgB,KAEvB,CAEAkD,SAAStC,GAQR,OAPIX,KAAKF,iBACRE,KAAKF,eAAiB,IAEvBE,KAAKF,eAAec,KAAKD,GAEzBX,KAAK2B,uBAEE,KACN3B,KAAKF,eAAiBE,KAAKF,gBAAgBoD,QAAOC,GAAKA,IAAMxC,KAAY,KACrC,IAAjCX,KAAKL,iBAAiBV,SACxBe,KAAKF,eAAiB,KACtBE,KAAK2B,uBACN,CAEF,EAID,MAAMyB,GAAgB,EAAAC,EAAAC,sBAAiC,yBACjDC,EAAiB,IAAI,EAAAC,EAAAC,gBAAeL,GAEnC,SAASM,EAAUjE,GACzB8D,EAAeI,OACf,IAAIC,EAASR,EAAcS,IAAIpE,GAK/B,OAJImE,IACHA,EAAS,IAAIrE,EAAWE,GACxB2D,EAAcU,IAAIrE,EAAImE,IAEhBA,CACR,CAKA,SAASzC,EAAqB4C,EAAiBC,GAC9C,IAAID,GAAuB,IAAfA,EAAI9E,QAAgB8E,EAAI,KAAOC,EAC1C,OAAO,KAER,MAAMC,EAAS,GACf,IAAI,IAAIjF,EAAI,EAAGA,EAAI+E,EAAI9E,OAAQD,IAAI,CAClC,MAAMS,EAAKsE,EAAI/E,GACZS,IAAOuE,GACTC,EAAOrD,KAAKnB,EAEd,CACA,OAAOwE,CACR,CAaA,SAASrC,EAAQsC,GAChB,GAAIA,EAGJ,IAAI,IAAIlF,EAAI,EAAGA,EAAIkF,EAASjF,OAAQD,IACnCkF,EAASlF,IAEX,C,4HCrNO,MAAMmF,EAwYb,SAAyB5C,GAiBxB,MAAM0C,EAASG,GAff,YAAqBC,GAOpB,GANGA,EAAKpF,OAAS,EAChBqF,EAAkBC,eAAeN,GAEjCA,EAAOO,eAAeH,EAAK,IAGzBJ,EAAO1C,QAAUkD,EAEnB,MAAM,IAAIrF,MAAM,iDAGjB,OAAO6E,EAAO1C,KACf,GAEgD,IAAImD,EAASnD,IAE7D,OAAO0C,CACR,EAlZO,SAASU,EAAUxB,GACzB,OAAOA,aAAayB,CACrB,CAMO,SAASC,EAAS1B,GACxB,OAAOwB,EAAOxB,GAAKA,IAAMA,CAC1B,CAYA,MAAMsB,EAAmBnF,SA2CzB,SAAS8E,EAAwGU,EAAOC,GAGvH,OAFAhG,OAAOiG,eAAeF,EAAI/F,OAAOkG,eAAeF,IAChDhG,OAAOmG,OAAOJ,EAAIC,GACXD,CACR,CAGA,MAAMR,EAAoB,IAlC1B,MACSa,kBAAyD,GACjEC,wBAA2BC,EAAiBC,GAE3C,IAAIrB,EADJjE,KAAKmF,kBAAkBvE,KAAK0E,GAE5B,IACCrB,EAASoB,GAGV,CAFA,QACCrF,KAAKmF,kBAAkBI,KACxB,CACA,OAAOtB,CACR,CAEAM,eAAkBvC,GACjB,MAAMwD,EAAWxF,KAAKmF,kBAAkBnF,KAAKmF,kBAAkBlG,OAAS,GACrEuG,GACFA,EAASC,IAAIzD,EAEf,GAmBD,MAAe4C,EAmBdpF,YAAmB+B,G,WAAAA,E,KAPXmE,SAAW,E,KAGXC,oBAAsB,IAAIC,I,KAE1BC,oBAAsB,IAAID,GAEM,CAExCE,kBACC,OAAO9F,KAAK2F,oBAAoBI,KAAO,GAAK/F,KAAK6F,oBAAoBE,KAAO,CAC7E,CAIAC,UACChG,KAAKuB,MAAQkD,EACb,IAAI,MAAMwB,KAAOjG,KAAK2F,oBACrBM,EAAI3E,IAAI0E,SAEV,CAEAE,YAAeC,EAAmBxF,EAAiCW,GAClE,MAAMC,EAAQvB,KAAKuB,MACnB,GAAGA,IAAUkD,EACZ,MAAM,IAAIrF,MAAM,sCAGjB,GAAG+G,EAAS,CACX,MAAMF,EAA6B,C,QAClCtF,EACAyF,kBAAmBpG,KAAK0F,SACxBlE,eAAgBD,GAGjB,OADAvB,KAAK6F,oBAAoBJ,IAAIQ,GACtB,KACNjG,KAAK6F,oBAAoBQ,OAAOJ,EAAA,CAElC,CAAO,CACN,IAAI3E,EACH,MAAM,IAAIlC,MAAM,oBAEjB,MAAMkH,EAA6B,C,QAClC3F,EAASW,IAAKA,EACd8E,kBAAmBpG,KAAK0F,SACxBlE,eAAgBD,GAGjB,OADAvB,KAAK2F,oBAAoBF,IAAIa,GACtB,IAAMtG,KAAK2F,oBAAoBU,OAAOC,EAC9C,CACD,CAEAvE,UAAUpB,GACT,OAAOX,KAAKkG,aAAY,EAAMvF,EAC/B,CAEA6D,eAAkBjD,EAAUD,GAM3B,MAAMiF,EAAevG,KAAKuB,QAAUA,EACpCvB,KAAKuB,MAAQA,EACVgF,IACFvG,KAAK0F,WACL1F,KAAKwG,OAAOjF,EAAOD,GAErB,CAEAkF,OAAUjF,EAAUD,GACnB,MAAMmF,EAAgBzG,KAAK0F,SAE3B,IAAI,MAAMO,KAAOjG,KAAK2F,oBAElBM,EAAI3E,MAAQA,GAIftB,KAAK0G,oBAAoBT,EAAK1E,EAAOkF,GAGtC,KAAGA,EAAgBzG,KAAK0F,UAOxB,IAAI,MAAMY,KAAOtG,KAAK6F,oBACrB7F,KAAK0G,oBAAoBJ,EAAK/E,EAAOkF,EAGvC,CAEQC,oBAAoBT,EAA4B1E,EAAUkF,GAC9DR,EAAIG,kBAAoBK,IAQ3BR,EAAIG,kBAAoBK,EACrBR,EAAIzE,iBAAmBD,IAG1B0E,EAAIzE,eAAiBD,EACrB0E,EAAItF,QAAQY,IACb,CAEAoF,IAAsBC,GACrB,OAAOC,GAAY,IAAMD,EAAO5G,SAAS,CAACA,MAC3C,CAEA8G,aAAuDC,GACtD,OAAOC,EAAuE,IAAIC,EAAsBjH,KAAM+G,GAC/G,EAOD,MAAMrC,UAAqBE,EAI1BsC,KAAwBC,GAOvB,GAAGC,MAAMC,QAAQrH,KAAKuB,OACrB,MAAM,IAAInC,MAAM,iGAEjB,OAAOkI,EAAgB,IAAIC,EAAkBvH,KAAMmH,GACpD,EAMD,MAAeK,UAAkF9C,EAGhGlF,YAAqBiI,EAAalG,GACjCmG,MAAMnG,G,cADckG,E,KADbE,cAAsC,IAG9C,CAKUC,yBACT,OAAO5H,KAAK6H,yBAAyB7H,KAAK8H,mBAC3C,CAEUC,qBACT,OAAO/H,KAAK8F,iBACb,CAEUkC,mBAAmBC,GAC5B,MAAMC,EAAWlI,KAAK6H,yBAAyBI,GAC/CjI,KAAKwE,eAAe0D,EAAUlI,KAAKyH,SACpC,CAEUU,uBAAuB5G,GAChC,MAAM6G,EAAiBpI,KAAKqI,mBAAmB9G,GAC/CvB,KAAKyH,SAASjD,eAAe4D,EAAgBpI,KAC9C,CAEU8H,mBAGT,OAAOxD,EAAkBc,wBAAwBpF,KAAKyH,SAAU,KACjE,CAEAa,cAIC,OAAGtI,KAAKuB,QAAUkD,GAAkC,OAAvBzE,KAAK2H,cAC1B3H,KAAKuB,MAELvB,KAAK4H,wBAEd,CAEAW,uBACC,MAAMC,EAAcxI,KAAK+H,qBACtBS,IAAgBxI,KAAK2H,cACvB3H,KAAKyI,iBACKD,GAAexI,KAAK2H,eAC9B3H,KAAK0I,mBAEP,CAEQA,oBACP,IAAI1I,KAAK2H,cACR,MAAM,IAAIvI,MAAM,oBAEjBY,KAAK2H,gBACL3H,KAAK2H,cAAgB,KACrB3H,KAAKuB,MAAQvB,KAAK2I,eACnB,CAEQF,gBACP,GAAGzI,KAAK2H,cACP,MAAM,IAAIvI,MAAM,oBAEdY,KAAKuB,QAAUkD,IACjBzE,KAAKuB,MAAQvB,KAAKsI,eAEnBtI,KAAK2H,cAAgB3H,KAAKyH,SAASvB,aAAY,EAAOlG,KAAKgI,mBAAmBnF,KAAK7C,MAAOA,KAC3F,CAESkG,YAAeC,EAAmBxF,EAAiCW,GACxEtB,KAAKuB,QAAUkD,IACjBzE,KAAKuB,MAAQvB,KAAKsI,eAEnB,MAAMxG,EAAQ4F,MAAMxB,YAAYC,EAAUxF,EAASW,GAEnD,OADAtB,KAAKuI,uBACE,KACNzG,IACA9B,KAAKuI,sBAAoB,CAE3B,CAES/B,OAAUjF,EAAUD,GAIxBtB,KAAK+H,uBACR/H,KAAKuB,MAAQvB,KAAK2I,iBAMhBrH,IAAmBtB,KAAKyH,UAC1BzH,KAAKmI,uBAAuB5G,GAG7BmG,MAAMlB,OAAOjF,EAAOD,EACrB,CAEUqH,gBACT,OAAOlE,CACR,EAID,MAAM8C,UAAgDC,EAErDhI,YAAYiI,EAA0CN,GACrDO,MAAMD,EAAUhD,G,aADqC0C,CAEtD,CAEmBU,yBAAyBO,GAC3C,OAAOA,EAAepI,KAAKmH,QAC5B,CAEmBkB,mBAAmB9G,GACrC,MAAM6G,EAAiBpI,KAAK8H,mBAC5B,GAAGV,MAAMC,QAAQe,GAChB,MAAM,IAAIhJ,MAAM,8EAA8EY,KAAKmH,QAAQyB,sBAE5G,MAAO,IACHR,EACH,CAACpI,KAAKmH,SAAU5F,EAElB,EAID,SAAS+F,EAAyBuB,GAYjC,MAAM5E,EAASG,GAVf,YAA6BC,GAO5B,OANmB,IAAhBA,EAAKpF,OACPqF,EAAkBC,eAAeN,GAEjCA,EAAOO,eAAeH,EAAK,IAGrBJ,EAAOqE,aACf,GAEwDO,GAExD,OAAO5E,CACR,CAyBA,MAAe6E,UAAoBlE,EA0BlCpF,YAA6BuJ,GAC5BrB,MAAMjD,G,4BADsBsE,E,KANrBC,aAAgC,G,KAChCC,wBAA+C,K,KAE/CC,aAAiC,IAKzC,CAEQC,aACPnJ,KAAKgJ,aAAaI,SAAQjG,GAAKA,MAC/BnD,KAAKgJ,aAAa/J,OAAS,CAC5B,CAEQoK,oBACP,OAAGrJ,KAAKuB,QAAUkD,GAIc,IAA7BzE,KAAKgJ,aAAa/J,MAQtB,CAEQqK,0BAA0BC,GAIjC,MAAMC,EAAkB,IAAIxJ,KAAKgJ,cAEjC,IAAIS,EACAC,EACJ,MAAMC,EAAO3J,KAAKkJ,eAAiBlJ,KAAK4J,eAAe/G,KAAK7C,MAC5D,GAAIA,KAAK+I,uBAKRU,EAAWnF,EAAkBc,wBAAwBuE,EAAM,MAC3DD,EAAU1J,KAAK+I,2BANgB,CAC/B,MAAMc,EAAgB,IAAIjE,IAC1B6D,EAAWnF,EAAkBc,wBAAwBuE,EAAME,GAC3DH,EAAU,IAAIG,EACf,CAaA,GALA7J,KAAKwE,eAAeiF,GAKjBF,GAAkBvJ,KAAK8F,mBACzB,GAAG4D,EAAQzK,OAAS,EAAE,CACrB,MAAM6K,EAAwB9J,KAAKiJ,0BAA4B,IAAMjJ,KAAKsJ,2BAA0B,GACpG,IAAI,IAAItK,EAAI,EAAGA,EAAI0K,EAAQzK,OAAQD,IAClCgB,KAAKgJ,aAAapI,KAAK8I,EAAQ1K,GAAIkH,aAAY,EAAO4D,EAAuB9J,MAE/E,OAEAA,KAAKuB,MAAQkD,EAEd,IAAI,MAAMsF,KAAeP,EACxBO,IAGD/J,KAAKgJ,aAAehJ,KAAKgJ,aAAagB,MAAMR,EAAgBvK,OAC7D,CAESiH,YAAeC,EAAmBxF,EAAiCW,GACvEtB,KAAK8F,mBAGR9F,KAAKsJ,2BAA0B,GAEhC,MAAMxH,EAAQ4F,MAAMxB,YAAYC,EAAUxF,EAASW,GACnD,MAAO,KACNQ,IACI9B,KAAK8F,oBACR9F,KAAKmJ,aACLnJ,KAAKuB,MAAQkD,EACd,CAEF,CAEAwF,WAGC,GAFA3F,EAAkBC,eAAevE,OAE7BA,KAAKqJ,oBACR,OAAOrJ,KAAKuB,MAGb,MAAMoI,EAAO3J,KAAKkJ,eAAiBlJ,KAAK4J,eAAe/G,KAAK7C,MAC5D,OAAOsE,EAAkBc,wBAAwBuE,EAAM,KACxD,CAEAzC,KAAwBC,GACvB,OAAOnH,KAAK2G,KAAI3E,GAAKA,EAAEmF,IACxB,EAID,MAAM+C,UAA8BpB,EAEnCtJ,YAA+BoK,EAAyBb,GACvDrB,MAAMqB,G,oBADwBa,CAE/B,EAID,SAAS/C,EAAesD,EAAsBpB,GAC7C,OAAO/B,EAA0C,IAAIkD,EAAmBC,EAAapB,GACtF,CAEA,SAAS/B,EAAoD6B,GAK5D,MAAM5E,EAASG,GAJf,WACC,OAAOH,EAAOgG,UACf,GAE+CpB,GAC/C,OAAO5E,CACR,CAEA,MAAMgD,UAAoC6B,EAIzCtJ,YAAqBiI,EAAyDV,GAC7EW,MAAM,CAACD,I,cADaA,E,YAAyDV,E,KAF7DqD,SAAW,IAAIC,GAIhC,CAEmBT,iBAClB,GAAoB,mBAAV5J,KACT,MAAM,IAAIZ,MAAM,oBAEjB,MAAMkL,EAAe,IAAI1E,IAAI5F,KAAKoK,SAAStL,QAErCyL,EAAgBjG,EAAkBc,wBAAwBpF,KAAKyH,SAAU,MAC/E,IAAIL,MAAMC,QAAQkD,GACjB,MAAM,IAAInL,MAAM,oEAEjB,MAAM6E,EAASsG,EAAc5D,KAAI,CAAC3C,EAAMwG,KACvC,MAAMC,EAAMzK,KAAK+G,OAAO/C,GACxB,IAAI1C,EAAMtB,KAAKoK,SAASvG,IAAI4G,GAC5B,GAAGnJ,EAAI,CACN,IAAIgJ,EAAaI,IAAID,GACpB,MAAM,IAAIrL,MAAM,2CAA6CqL,GAE9DnJ,EAAIkJ,MAAQA,EACZlJ,EAAIkD,eAAeR,EAAMhE,KAC1B,MACCsB,EAAMgG,EAAgB,IAAIqD,EAAqBF,EAAKD,EAAOxG,EAAMhE,OACjEA,KAAKoK,SAAStG,IAAI2G,EAAKnJ,GAKxB,OAFAgJ,EAAajE,OAAOoE,GAEbnJ,CAAA,IAGR,IAAI,MAAMmJ,KAAOH,EAAa,CACjBtK,KAAKoK,SAASvG,IAAI4G,GAC1BzE,UACJhG,KAAKoK,SAAS/D,OAAOoE,EACtB,CAEA,OAAOxG,CACR,CAEA2G,0BACC5K,KAAK4J,gBACN,CAEAiB,mBAAmBtJ,EAAUD,GAC5B,KAAWtB,KAAKyH,oBA9lBG/C,GAgmBlB,MAAM,IAAItF,MAAM,kFAGjB,MAAMqL,EAAMzK,KAAK+G,OAAOxF,GAClBuJ,EAAc9K,KAAKoK,SAASvG,IAAI4G,GAChCM,EAAYzJ,EAAImJ,IACtB,GAAIK,GAIG,GAAGA,IAAgBxJ,EACzB,MAAM,IAAIlC,MAAM,2CAA6CqL,QAJ7DzK,KAAKoK,SAAS/D,OAAO/E,EAAImJ,KACzBzK,KAAKoK,SAAStG,IAAI2G,EAAKnJ,GACvBA,EAAImJ,IAAMA,EAQX,IAAIxC,EAAgB3D,EAAkBc,wBAAwBpF,KAAKyH,SAAU,MAC7EQ,EAAgB,IAAIA,GACpB,IAAIuC,GAAQ,EACZ,GAAGxK,KAAK8F,kBAGP0E,EAAQlJ,EAAIkJ,UACN,CACN,IAAI,IAAIxL,EAAI,EAAGA,EAAIiJ,EAAchJ,OAAQD,IAAI,CAC5C,MAAMgF,EAAOiE,EAAcjJ,GAE3B,GADgBgB,KAAK+G,OAAO/C,KACb+G,EAAU,CAGxB,GAAGP,GAAS,EACX,MAAM,IAAIpL,MAAM,2CAA6C2L,GAE9DP,EAAQxL,CACT,CACD,CAEGwL,EAAQ,IAGVlJ,EAAI0E,UACJ1E,EAAI0J,qBAEN,CAEA/C,EAAcuC,GAASjJ,EACvBvB,KAAKyH,SAASjD,eAAeyD,EAAejI,KAC7C,EAID,MAAM2K,UAAmCnD,EAIxChI,YAAmBiL,EAAeD,EAAejJ,EAAUkG,GAC1DC,MAAMD,EAAUlG,G,SADEkJ,E,WAAeD,E,KAF1BS,UAAW,CAInB,CAESjF,UACRhG,KAAKiL,UAAW,EAGhBjL,KAAKuB,MAAQkD,EACbzE,KAAKuI,uBACLb,MAAM1B,SACP,CAEmB+B,qBAClB,OAAQ/H,KAAKiL,UAAYvD,MAAMK,oBAChC,CAEmBH,yBAuBlB,OAHA5H,KAAKkL,mBACLlL,KAAKyH,SAASmD,0BACd5K,KAAKkL,mBACElL,KAAKuB,KACb,CAEQ2J,mBACJlL,KAAKiL,UACPjL,KAAKgL,oBAEP,CAEAA,qBACC,MAAM,IAAI5L,MAAM,8BAgCA,iBADQ+D,EA/BuCnD,KAAKyK,KAiC7DtH,EAAEyF,WAEFzF,EAAI,IAnCgE,0KA+B7E,IAA0BA,CA9BzB,CAEmB0E,2BAClB,MAAM,IAAIzI,MAAM,iDACjB,CAEmBiJ,qBAClB,MAAM,IAAIjJ,MAAM,iDACjB,CAEmB4I,qBAOnB,CAEUG,uBAAuB5G,GAChCvB,KAAKkL,mBACLlL,KAAKyH,SAASoD,mBAAmBtJ,EAAOvB,KACzC,CAEmB2I,gBAClB,OAAO3I,KAAKiL,SAAWxG,EAAUzE,KAAKuB,KACvC,E,sCCpyBD4J,EAAAC,QAAiBC,QAAQC,IAAI,CAACC,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWF,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,YAAYC,MAAK,IAAMF,EAAc,U,sCCA5NL,EAAAC,QAAiBC,QAAQC,IAAI,CAACC,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWF,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWF,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,YAAYC,MAAK,IAAMF,EAAc,U,sCCA9SL,EAAAC,QAAiBC,QAAQC,IAAI,CAACC,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWD,EAAA,SAAwC,IAAAG,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,YAAa2C,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,YAAYC,MAAK,IAAMF,EAAc,U,sCCI5VL,EAAAC,QAAiBU,GAAY,SAAUC,GACrC,OAAO,IAAIV,SAAQ,SAAUI,EAASO,GAEpC,IAAIC,EAAgB5L,SAAS6L,qBAAqB,QAElD,GAAI,GAAGC,OAAOF,GAAeG,MAAK,SAAyBC,GACzD,OAAOA,EAAKC,OAASP,GAAUM,EAAKE,IAAIC,QAAQ,eAAgB,CAClE,IACEf,QAHF,CAOA,IAAIY,EAAOhM,SAASoM,cAAc,QAClCJ,EAAKE,IAAM,aACXF,EAAKC,KAAOP,EAEZM,EAAKK,QAAU,SAAUC,GACvBN,EAAKK,QAAUL,EAAKO,OAAS,KAC7BP,EAAKQ,SACLb,EAAOW,EACT,EAEAN,EAAKO,OAAS,WACZP,EAAKK,QAAUL,EAAKO,OAAS,KAC7BnB,GACF,EAEApL,SAAS6L,qBAAqB,QAAQ,GAAGY,YAAYT,EAjBrD,CAkBF,GACF,G,sCCjCAlB,EAAAC,QAAiBC,QAAQC,IAAI,CAACC,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWF,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWD,EAAA,SAAwC,IAAAG,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,YAAa2C,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,YAAYC,MAAK,IAAMF,EAAc,U,sCCA9aL,EAAAC,QAAiBC,QAAQC,IAAI,CAACC,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,UAAWD,EAAA,SAAwC,IAAAG,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,YAAa2C,OAAmB,KAAOC,EAAA,SAAAC,QAA6C,YAAYC,MAAK,IAAMF,EAAc,U,4ECGrV,MAAMuB,EAGZvN,YAA6BwN,G,aAAAA,E,KAFrBC,SAAoC,IAEyB,CAErEtJ,OACK3D,KAAKiN,WACRjN,KAAKiN,SAAW,IAAIC,iBAAiBlN,KAAKmN,cAActK,KAAK7C,OAC7DA,KAAKiN,SAASnK,QAAQzC,SAASC,KAAM,CAAC8M,WAAW,EAAMC,SAAS,IAElE,CAEQC,qBAAqBC,GAC5B,MAAMtJ,EAAS,IAAI2B,IACnB,OAAW,CACV,MAAM1F,EAAOqN,EAAMhI,MACnB,IAAIrF,EACH,MAEEF,KAAKgN,QAAQtC,IAAIxK,IACnB+D,EAAOwB,IAAIvF,GAEZ,MAAMsN,EAAWtN,EAAKuN,WACtB,IAAI,IAAIzO,EAAI,EAAGA,EAAIwO,EAASvO,OAAQD,IACnCuO,EAAM3M,KAAK4M,EAASxO,GAEtB,CACA,OAAOiF,CACR,CAEQkJ,cAAcO,GACrB,MAAMC,EAAgB,GAChBC,EAAkB,GACxB,IAAI,IAAI5O,EAAI,EAAGA,EAAI0O,EAAQzO,OAAQD,IAAI,CACtC,MAAM6O,EAASH,EAAQ1O,GACvB,IAAI,IAAI8O,EAAI,EAAGA,EAAID,EAAOE,WAAW9O,OAAQ6O,IAC5CH,EAAc/M,KAAKiN,EAAOE,WAAWD,IAEtC,IAAI,IAAIE,EAAI,EAAGA,EAAIH,EAAOE,WAAW9O,OAAQ+O,IAC5CJ,EAAgBhN,KAAKiN,EAAOI,aAAaD,GAE3C,CAEA,MAAMD,EAAa/N,KAAKsN,qBAAqBK,GACvCM,EAAejO,KAAKsN,qBAAqBM,GAI/C,IAAI,MAAM1N,KAAQ6N,EACdE,EAAavD,IAAIxK,IAGpBF,KAAKgN,QAAQnJ,IAAI3D,GAAOkB,mBAGzB,IAAI,MAAM8M,KAAQD,EACdF,EAAWrD,IAAIwD,IAGlBlO,KAAKgN,QAAQnJ,IAAIqK,GAAOrM,iBAE1B,E,sCCzDM,SAASsM,EAAwB1D,GACvC,MAA2B,oBAAb2D,QAA2B,IAAIC,EAAqB5D,GAAO,IAAI6D,CAC9E,C,4CAEA,MAAMA,EAEY3H,IAAM,IAAIyH,QAE3BvK,IAAI3D,GACH,OAAOF,KAAK2G,IAAI9C,IAAI3D,EACrB,CAEA4D,IAAI5D,EAAYqB,GACfvB,KAAK2G,IAAI7C,IAAI5D,EAAMqB,EACpB,CAEA8E,OAAOnG,GACN,OAAOF,KAAK2G,IAAIN,OAAOnG,EACxB,CAEAwK,IAAIxK,GACH,OAAOF,KAAK2G,IAAI+D,IAAIxK,EACrB,EAKD,MAAMmO,EAEL7O,YAAqBiL,G,SAAAA,CAAc,CAEnC5G,IAAI3D,GACH,OAAOA,EAAmCF,KAAKyK,IAChD,CAEA3G,IAAI5D,EAAYqB,GACdrB,EAAkCF,KAAKyK,KAAOlJ,CAChD,CAEA8E,OAAOnG,GACN,MAAMqO,EAAWvO,KAAK0K,IAAIxK,GAE1B,cADMA,EAAmCF,KAAKyK,KACvC8D,CACR,CAEA7D,IAAIxK,GACH,OAAOF,KAAKyK,OAAOvK,CACpB,E,sCCpDD,IAAIsO,EAAgB,CAAC,EACjBC,EAAiB,CAAC,EAClBC,EAAmB,CAAC,EAExB,SAASC,EAASC,GAChB,OAAQA,GACN,IAAK,UACH,OAAOH,EAET,IAAK,WACH,OAAOC,EAET,QACE,OAAOF,EAEb,CAEArD,EAAAC,QAAiB,SAAUyD,EAAQD,GACjC,OAAO,SAAU7C,GACf,IAAI+C,EAAQH,EAASC,GAErB,OAAIE,EAAM/C,GACD+C,EAAM/C,GAGR+C,EAAM/C,GAAU8C,EAAOE,MAAM,KAAMC,WAAWC,OAAM,SAAUtC,GAEnE,aADOmC,EAAM/C,GACPY,CACR,GACF,CACF,C,IZ/BApO,EAA8B,oBAG9BC,EAAoC,0BAIpCC,EAAkC,wBaFlC,MAAMyQ,EAAQ,CACbC,WAAY,CACXC,KAAM,aACNC,YAAa,0EAEdC,IAAK,CACJF,KAAM,MACNC,YAAa,uFAEdE,QAAS,CACRH,KAAM,WACNC,YAAa,oDAEdG,OAAQ,CACPJ,KAAM,UACNC,YAAa,6CAEdI,KAAM,CACLL,KAAM,OACNC,YAAa,4CAEdK,IAAK,CACJN,KAAM,MACNC,YAAa,qCAEdM,MAAO,CACNP,KAAM,QACNC,YAAa,mBAEdO,IAAK,CACJR,KAAM,MACNC,YAAa,iBAEdQ,UAAW,CACVT,KAAM,YACNC,YAAa,+BAEdS,KAAM,CACLV,KAAM,OACNC,YAAa,wCAIFU,EAAc,MAC1B,MAAMC,EAAkC,CAAC,EACzC,IAAI,MAAM9Q,KAAMgQ,EACfc,EAAI9Q,GAAM,IAAIgQ,EAAMhQ,GAAqBA,GAAIA,GAE9C,OAAO8Q,CACR,EAN2B,GCjD3B,ICAAC,IAA+B,oB,+CCQxB,SAASC,EAA6DnL,EAAQqK,GACpF,OAAO,IAAI/D,SAAQ,CAAC8E,EAAIC,KACvBrL,EAAIsL,iBAAiB,SAASC,GAAOF,EAAI,IAAIhR,MAAMkR,EAAIC,YACvDxL,EAAIsL,iBAAiBjB,GAAMzC,GAAKwD,EAAGxD,IAAA,GAErC,C,mBCbA6D,EAAiB,IAAA7E,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,W,MCA5F6H,EAAiB,IAAA9E,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,WCE5F,IAAI8H,EAAgC,K,MCFpCC,EAAiB,IAAAhF,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,W,MCA5FgI,EAAiB,IAAAjF,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,WCE5F,IAAIiI,EAAuC,KAEpC,SAASC,IACf,IAAID,EAAgB,CACnB,MAAME,EAAIF,GAAkB,EAAAxO,EAAAf,KAAI0P,EAAQC,OAAOC,SAASC,OAExDF,OAAOZ,iBAAiB,cAAc,IAAMU,EAAEC,EAAQC,OAAOC,SAASC,SACtEJ,EAAEhP,WAAUR,IACX,GAAa,KAAVA,GACC0P,OAAOC,SAASC,MAA4B,oBAAbC,QAGjC,YADAA,QAAQC,UAAU,GAAIhR,SAASiR,MAAOL,OAAOC,SAASK,SAAWN,OAAOC,SAASM,QAInF,MAAML,EAAO,IAAM5P,EAEhB0P,OAAOC,SAASC,OAASA,IAC3BF,OAAOC,SAASC,KAAOA,EAAA,GAG1B,CAEA,OAAON,CACR,CAEA,SAASG,EAAQS,GAChB,OAAOA,EAAQC,QAAQ,KAAM,GAC9B,C,mBC9BAC,EAAiB,IAAAhG,IAAoBH,EAAA,SAAAC,QAA6C,SAAAF,OAAAK,KAAAC,KAAUjD,WCOrF,SAASgJ,EAAchO,EAAuB1D,EAAY2R,EAAuBC,GACvF,MAAM/N,EAAMqD,MAAMC,QAAQwK,GAASA,EAAQ,CAACA,GAC5C,IAAI,MAAM7N,KAAQD,EACjB,IAAG,EAAA1B,EAAAC,QAAO0B,IACRJ,KAAW,EAAAmO,EAAAC,WAAU9R,IAAOiC,MAAM6B,EAAMiO,QACnC,GAAGjO,GAAyB,iBAAVA,EACxB,IAAI,MAAMyG,KAAOzG,EAAK,CACrB,MAAMkO,EAAOlO,EAAKyG,IACf,EAAApI,EAAAC,QAAO4P,KACRtO,KAAW,EAAAmO,EAAAC,WAAU9R,IAAOiC,MAAM+P,EAAMD,EAE3C,CAIF,SAASA,IACR,MAAMhO,EAAS,GACf,IAAI,MAAMD,KAAQD,EACjB,GAAGC,GAAyB,iBAAVA,EACjB,IAAI,MAAMmO,KAAanO,GACnB,EAAA3B,EAAA+P,OAAMpO,EAAKmO,KACblO,EAAOrD,KAAKuR,OAGR,CACN,MAAME,GAAY,EAAAhQ,EAAA+P,OAAMpO,GACrBqO,GACFpO,EAAOrD,KAAKyR,EAEd,CAEDP,EAAS7N,EAAOqO,KAAK,KACtB,CAIA,OAFAL,IAEOrO,CACR,CCbA,SAAS2O,EAAeC,EAAoBzB,GAC3C,OAAIyB,EAEMpL,MAAMC,QAAQmL,KAAM,EAAAnQ,EAAAC,QAAOkQ,GAC7B,CAAC,CAAC,EAAQA,GAEV,CAACA,EAAQzB,GAJT,CAAC,CAAC,EAAQA,EAMnB,CAEA,SAAS0B,EAAiCC,EAAkBrD,EAAmC7B,GAC9F,IAAI5J,EAAwB,KAE5B,GAAGyL,EAAYsD,KAAK,CACnB,MAAMA,EAAOtD,EAAYsD,MACtB,EAAAtQ,EAAAC,QAAOqQ,KACR/O,KAAW,EAAAmO,EAAAC,WAAUU,IAAUvQ,MAAuBwQ,GAAMA,IAC5DD,EAAQE,YAAcD,EAAO,MAG/BD,EAAQE,aAAc,EAAAvQ,EAAA+P,OAAMO,GAAQ,EACrC,CAEA,GAAGtD,EAAYwD,GACd,IAAI,MAAMC,KAAWzD,EAAYwD,GAAG,CACnC,MAAMlS,EAAU0O,EAAYwD,GAAGC,GAK/BJ,EAAQrC,iBAAiByC,EAASnS,EAAgB,CAACoS,SAAS,EAAMC,SAAS,GAC5E,CAGD,IAAI,MAAMC,KAAK5D,EAAY6D,MAAM,CAChC,MAAMlR,EAAIqN,EAAY6D,MAAMD,IACzB,EAAA5Q,EAAAC,QAAON,KACR4B,KAAW,EAAAmO,EAAAC,WAAUU,IAAUvQ,MAA0CH,GAAGA,IACzEA,QACF0Q,EAAQS,gBAAgBF,GAExBP,EAAQU,aAAaH,EAAGjR,EAAI,OAI/B,MAAMqR,GAAK,EAAAhR,EAAA+P,OAAMpQ,GACdA,SACF0Q,EAAQU,aAAaH,EAAGI,EAAK,GAE/B,CAEA,GAAG7F,EAAS,CACX,MAAM8F,EAAe9F,IACpB,MAAM+F,EAAY/F,EAAStK,QAAOC,KAAOA,KAuE5C,SAAwBhD,EAAiBqT,GACxC,IAAI,IAAIxU,EAAI,EAAGA,EAAIwU,EAAYvU,OAAQD,IAAI,CAC1C,MAAMyU,EAAWD,EAAYxU,GACvBmE,EAAIhD,EAAOsN,WAAWzO,GACzBmE,IAAMsQ,IAGNtQ,EACFhD,EAAOuT,aAAaD,EAAUtQ,GAE9BhD,EAAO2M,YAAY2G,GAErB,CAEA,KAAMtT,EAAOsN,WAAW+F,EAAYvU,SACnCkB,EAAOsN,WAAW+F,EAAYvU,QAAS4N,QAEzC,CAvFG8G,CAAejB,EAASa,EAAA,GAGtB,EAAAlR,EAAAC,QAAOkL,KACR5J,KAAW,EAAAmO,EAAAC,WAAUU,IAAUvQ,MAAMqL,GAAUA,IAC/C8F,EAAY9F,EAAA,IAGd8F,GAAY,EAAAjR,EAAA+P,OAAM5E,GACnB,CAYA,OAVG6B,EAAYuE,QACdhQ,EAASgO,EACRhO,EACA8O,EACArD,EAAYuE,OAEZzB,GAAaO,EAAQmB,UAAUtS,MAAQ4Q,KACnCvO,GAGCA,CACR,CAOO,SAASkQ,EAAmDtB,EAAwCzB,GAC1G,MAAO1B,EAAa7B,GAAY+E,EAAYC,EAAGzB,GAEzC2B,EAAUrS,SAASoM,cAAc4C,EAAY0E,SAAW,OAE9D,IAAInQ,EAAS6O,EAAYC,EAASrD,EAAa7B,GAE/C,GAAG6B,EAAY2E,MACd,IAAI,MAAMf,KAAK5D,EAAY2E,MAAM,CAChC,MAAMhS,EAAIqN,EAAY2E,MAAMf,IACzB,EAAA5Q,EAAAC,QAAON,KACR4B,KAAW,EAAAmO,EAAAC,WAAUU,IAAUvQ,MAAuBH,GAAGA,IACzD0Q,EAAQsB,MAAMf,GAAKjR,EAAI,MAGzB0Q,EAAQsB,MAAMf,IAAK,EAAA5Q,EAAA+P,OAAM/C,EAAY2E,MAAMf,IAAO,EACnD,CAGD,OAAOP,CACR,CAOO,SAASuB,EAAmDzB,EAAuCzB,GACzG,MAAO1B,EAAa7B,GAAY+E,EAAYC,EAAGzB,GAEzC2B,EAAUrS,SAAS6T,gBAAgB,6BAA8B7E,EAAY0E,SAAW,KAQ9F,MAN2B,QAAxB1E,EAAY0E,SACdrB,EAAQyB,eAAe,gCAAiC,cAAe,gCAGxE1B,EAAYC,EAASrD,EAAa7B,GAE3BkF,CACR,CC5HA,MAAM0B,EAAY,CACjBC,OAAQ,CACPjF,KAAM,SACNC,YAAa,4CACbiF,YAAa,CAAC,CACbjF,YAAa,eACbxD,IAAK,gDAEN0I,KAAM,IAAIC,KAAK,KAAM,EAAG,GACxBC,KAAM,CAAC1E,EAAYD,KAAMC,EAAYH,KACrC8E,QAAQ,EACRC,KAAM,IAAMnJ,EAAA,SACZoJ,UAAWC,EAAAjE,IAGZkE,cAAe,CACd1F,KAAM,gBACNC,YAAa,6BACbiF,YAAa,CAAC,CACbjF,YAAa,+BAEdkF,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,KAAM,CAAC1E,EAAYR,QAASQ,EAAYP,QACxCmF,KAAM,IAAMnJ,EAAA,SACZoJ,UAAWC,EAAArE,IAGZuE,MAAO,CACN3F,KAAM,QACNC,YAAa,kCACbiF,YAAa,CAAC,CACbjF,YAAa,yBAEdkF,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,KAAM,CAAC1E,EAAYN,MACnBkF,KAAM,IAAMnJ,EAAA,SACZoJ,UAAWC,EAAApE,IAGZuE,aAAc,CACb5F,KAAM,aACNC,YAAa,kCACbiF,YAAa,CAAC,CACbjF,YAAa,oCAEd4F,YAAa,CAAC,CACb5F,YAAa,sBACbxD,IAAK,4CAEN0I,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,KAAM,CAAC1E,EAAYR,SACnBoF,KAAM,IAAMnJ,EAAA,SACZoJ,UAAWC,EAAAlD,IAGZuD,YAAa,CACZ9F,KAAM,cACNC,YAAa,6BACbiF,YAAa,CAAC,CACbjF,YAAa,0BACbxD,IAAK,gDAEN0I,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,KAAM,CAAC1E,EAAYT,IAAKS,EAAYH,IAAKG,EAAYL,KACrDiF,KAAM,IAAMnJ,EAAA,SACZoJ,UAAWC,EAAAlE,KAIAwE,EAAqB,MACjC,MAAMnF,EAAyC,CAAC,EAChD,IAAI,MAAM9Q,KAAMkV,EACfpE,EAAI9Q,GAAM,IAAIkV,EAAUlV,GAAiBA,GAAIA,GAE9C,OAAO8Q,CACR,EANkC,GC/F3B,SAASoF,EAAeC,GAC9B,MAAMtP,EAAO,GAGPuP,EAAM,EAAIC,KAAKC,GADNzP,GAmBf,OAhBakO,EAAO,CACnBF,QAAS,MACTb,MAAO,CAACuC,MAAO1P,EAAM2P,OAAQ3P,EAAM4P,QAAS,iBAC5C/B,MbR4B,oBaS1B,CACFK,EAAO,CAACF,QAAS,SAAUb,MAAO,CAAC0C,EARrB7P,GAQgC,eAThC,KAUdkO,EAAO,CAACF,QAAS,SAChBb,MAAO,CACN0C,EAXY7P,GAYZ,eAbY,EAcZ,mBAAoBuP,EACpB,qBAAsBA,EAAM,KAC5B,qBAAsBD,EAAQ,IAAQ,QAK1C,CCtBA,MAAMQ,EAAM1S,GAAcA,EAAI,GAAK,IAAMA,EAAI,GAAKA,EAIlD,SAAS2S,EAAqBxE,EAAeyE,GAC5C,MAAMC,EAAOlC,EAAI,CAACF,MAAO,mBAAoBjB,KAAM,GAAGrB,OAYtD,OAXAyE,EAAM3M,SAAQpF,IACb,IAAIiS,EACJ,MAAMtD,EAAO3O,EAAKqL,aAAerL,EAAK6H,KAAO,MAE5CoK,EADEjS,EAAK6H,IACGiI,EAAI,CAACC,QAAS,IAAKb,MAAO,CAAC5G,KAAMtI,EAAK6H,IAAKqK,OAAQ,SAAU3J,IAAK,uB,KAAwBoG,IAE1FmB,EAAI,C,KAACnB,IAEhBsD,EAAQE,UChB4B,2BDiBpCH,EAAKlJ,YAAYmJ,EAAA,IAEXD,CACR,CAEO,SAASI,EAAiBC,GAChC,MAAMC,EAASxC,EAAI,CAACF,MCrBgB,0BDqBajB,KAAM,MAyBvD,OAxBA2D,EAAOjG,iBAAiB,SAAS,KAChC,MAAMkG,EAAQzC,EAAI,CAACF,MCxBe,2BDGjB,IAACW,EAuBlBgC,EAAMzJ,YAAYgH,EAAI,CAACnB,KAAM0D,EAAEjH,QAC/BmH,EAAMzJ,YAAYgH,EAAI,CAACnB,KAAM0D,EAAEhH,eAC/BkH,EAAMzJ,YAAYgH,EAAI,CAACC,QAAS,QAChCwC,EAAMzJ,YAAYgH,EAAI,CAACnB,KAAM,gBA1BX4B,EA0BqC8B,EAAE9B,KA1BxB,GAAGA,EAAKiC,iBAAiBX,EAAGtB,EAAKkC,WAAa,MAAMZ,EAAGtB,EAAKmC,iBA4B7FH,EAAMzJ,YAAYgH,EAAI,CAACnB,KAAM,SAAS0D,EAAE5B,KAAK9N,KAAIgQ,GAAOA,EAAIvH,OAAMkD,KAAK,WAEpE+D,EAAE/B,aACJiC,EAAMzJ,YAAYgJ,EAAqB,gBAAiBO,EAAE/B,cAGxD+B,EAAEpB,aACJsB,EAAMzJ,YAAYgJ,EAAqB,eAAgBO,EAAEpB,cAG1DsB,EAAMzJ,YAAYgH,EAAI,CAACC,QAAS,QAChCwC,EAAMzJ,YAAYgH,EAAI,CAACC,QAAS,SAAUpB,KAAM,QAASE,GAAI,CAAC+D,MAAO,IAAML,EAAM1J,aAEjFyJ,EAAOO,MAAMN,EAAA,IAEdlW,SAASC,KAAKwM,YAAYwJ,GACnBA,CACR,CE9CO,SAASQ,EAAgB5X,GAC/B,MAAO,UAAUA,GAClB,CAEA,MAmBa6X,EAAS,IAnBD,MACpB,MAAM/G,EAAwC,CAAC,EAC/C,IAAI,MAAM9Q,KAAMiW,EAAmB,CAClC,MAAM6B,EAAS7B,EAAmBjW,GAClC8Q,EAAI8G,EAAgB5X,IAAmB,CACtC+X,OAAQ,IAAMC,EAAWF,GACzB1F,MAAO0F,EAAO5H,KAEhB,CACA,OAAOY,CACR,EAVqB,MAYA,CACpB,GAAI,CACHsB,MAAO,+BACP2F,OCnBK,WACN,OAAOnD,EAAI,CAACF,MCNyB,4BDOpC7U,OAAOoY,OAAOhC,GACZjS,QAAO8T,IAAWA,EAAOtC,SACzB/N,KAAIqQ,GAAUI,EAAYJ,KAE9B,KDsBaK,EAAS,IGpBf,MAON7X,YAA6B8X,EAAsCC,G,YAAtCD,E,kBAAsCC,E,KALlDC,QAAU1G,I,KACV2G,UdXb/G,IACHA,GAAW,EAAArO,EAAAf,KAAIjB,SAASiR,OAExBZ,EAAS3O,WAAUR,GAASlB,SAASiR,MAAQ/P,KAGvCmP,G,KcMCgH,KAAuB,K,KACvBC,YAAyB,CAAC,CAGlC,CAEAC,QAAQF,GACP,GAAG1X,KAAK0X,KACP,MAAM,IAAItY,MAAM,0BAEjBY,KAAK0X,KAAOA,EACZ1X,KAAKwX,QAAQzV,WAAU,IAAM/B,KAAK6X,cAClC7X,KAAK6X,WACN,CAEAC,aAAaC,EAAU1T,GACtB,MAAM2T,GAAQ/G,OAAOC,SAAW,IAAIQ,QAAQ,QAAS,IAC/CP,EAAOnR,KAAKiY,SAASF,EAAO1T,GAAQ,CAAC,GAC3C,OAAQ8M,EAAc6G,EAAO,IAAM7G,EAApB6G,CAChB,CAEAE,KAAKH,EAAU1T,GACdrE,KAAKwX,QAAQxX,KAAKiY,SAASF,EAAO1T,GAAQ,CAAC,GAC5C,CAEA8T,YAAY/I,GACX,OAAOpP,KAAK2X,YAAYvI,EACzB,CAEQyI,YACP,MAAOE,EAAO1T,GAAQrE,KAAKoY,UAAUpY,KAAKwX,WAEpCnI,EAAcrP,KAAKsX,OAAOS,GAChC,GAAI1I,EAMJ,OADArP,KAAK2X,YAActT,EACZrE,KAAKqY,YAAYhJ,GALvBrP,KAAKwX,QAAQxX,KAAKuX,aAMpB,CAEQa,UAAUjH,GACjB,MAAM9M,EAAkB,CAAC,GAClBiU,EAAWC,GAAYpH,EAAKqH,MAAM,KACzC,GAAGD,EACF,IAAI,MAAME,KAAMF,EAASC,MAAM,KAAK,CACnC,MAAOvF,EAAGjR,GAAKyW,EAAGD,MAAM,KAAK7R,KAAI+R,GAAQC,mBAAmBD,KACxDzF,IAIJ5O,EAAK4O,GAAKjR,IAAK,EAChB,CAGD,MAAO,CAACsW,EAAgBjU,EACzB,CAEQ4T,SAASF,EAAU1T,GAC1B,IAAIJ,EAAiB8T,EACjBa,GAAQ,EACZ,IAAI,MAAO3F,EAAGjR,KAAMjD,OAAO8Z,QAAQxU,IACzB,IAANrC,IAGHiC,GAAU2U,GAASA,GAAS,EAAQ,KAAO,IAC3C3U,GAAU6U,mBAAmB7F,IACpB,IAANjR,IACFiC,GAAU,IAAM6U,mBAAmB9W,EAAI,MAGzC,OAAOiC,CACR,CAEQoU,YAAYhJ,GACnB,MAAMiC,MAACA,EAAK2F,OAAEA,GAAU5H,EACxB,IAAIrP,KAAK0X,KACR,MAAM,IAAItY,MAAM,sBAGjB,KAAMY,KAAK0X,KAAKqB,YACf/Y,KAAK0X,KAAKqB,WAAWlM,SAEtB7M,KAAK0X,KAAK5K,YAAYmK,KACtBjX,KAAKyX,SAASnG,EACf,GHtEqDyF,EAAQ,II3BjDiC,EAAkC,iBAExC,SAAS9B,EAAWF,GAC1B,MAAMU,EAAO5D,EAAI,CAACF,MAAO3D,IAEnBgJ,EAAe5B,EAAOc,YAAYa,GAYxC,MAVC,WACA,WACoBhC,EAAOrC,QACrBuE,KAAKxB,EAIX,CAHE,MAAM/K,GACPwM,QAAQC,IAAIzM,GACZ+K,EAAK9E,YAAc,wBACpB,CACD,EARC,GAUMkB,EAAI,CAACF,MAAO3D,GAAiB,CACnCyH,EACAuB,EAAe,KAAO7C,EAAiBY,IAEzC,CCnBO,SAASI,EAAYJ,GAE3B,MAAMqC,EAAevF,EAAI,CAACF,MnCDM,wBmCCoB,CACnDE,EAAI,CAACC,QAAS,MAAOb,MAAO,CAACoG,IAAKtC,EAAOpC,UAAW2E,IAAKvC,EAAO3H,iBAG3DqI,EAAO5D,EAAI,CAChBF,MnCVyB,iBmCWzBf,GAAI,CAAC+D,MAAO,IAAMS,EAAOa,KAAKpB,EAAgBE,EAAO9X,OACnD,CACFma,EACAvF,EAAI,CAACF,MnCbyB,sBmCaDjB,KAAMqE,EAAO5H,SAG3C,IAAI2F,EAAsB,KAa1B,OAZA2C,EAAKrH,iBAAiB,cAAc,KAChC0E,IAGHA,EAeF,SAAwBiC,EAA2BwC,EAAwBnE,GAC1E,IAAIoE,GAAU,EACVC,EAA8B,KAC9BC,EAAwC,KAE5C,SAASC,IACRF,GAAS7M,SACT8M,GAAa9M,QACd,CAmCA,MAjCC,WAUA,GATA6M,EAAU5F,EAAI,CACbF,MAAOpV,EACPwV,MAAO,CAAC6F,kBAAmBxE,EAAS,EAAK,IAAQ,MAC/C,CACFD,EAAeC,KAEhBmE,EAAU1M,YAAY4M,SAEhBI,EAAMzE,EAAO,GAChBoE,EACF,OAGD,MAAM5N,EAAMwL,EAAOS,aAAahB,EAAgBE,EAAO9X,IAAK,CAAC8Z,CAACA,IAAkC,IAChGW,EAAc7F,EAAI,CACjBC,QAAS,SACTH,MAAOnV,EACPyU,MAAO,CAACoG,IAAKzN,KAEd2N,EAAU1M,YAAY6M,SAChBtO,QAAQC,IAAI,CACjBwO,EAAMzE,EAAO,GACbnF,EAAayJ,EAAa,UAExBF,GAIHE,EAAY9F,UAAUpO,IAAIlH,GAAiB,GAE5C,EA/BC,GAiCM,CAACwb,KAAM,KACbN,GAAU,EACVG,GAAA,EAEF,CA9DUI,CAAehD,EAAQqC,EAAc,SAC3C,CAACtG,SAAS,IAEb2E,EAAKrH,iBAAiB,cAAc,KACnC0E,GAAOgF,OACPhF,EAAQ,IAAI,GACV,CAAChC,SAAS,IAEN2E,CACR,CAuDA,SAASoC,EAAMG,GACd,OAAO,IAAI5O,SAAQ8E,GAAM+J,WAAW/J,EAAI8J,IACzC,CC7FAzO,EAAA,SAAA2O,SAAAC,KAAAC,MAAA,86B,6ECKA,MAASC,EAAAja,SAAAka,eAAa,OAErB,IAAAD,EAAM,MAAU,IAAAlb,MAAS,gBACtBiY,EACcO,QAAA0C,E,CAGlBE","sources":["src/website/controls/sketch_block.module.scss","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/common/binder/binder.ts","src/common/box.ts","node_modules/@parcel/runtime-js/lib/runtime-133f58d6159702b0.js","node_modules/@parcel/runtime-js/lib/runtime-a218c202b6449668.js","node_modules/@parcel/runtime-js/lib/runtime-e44dd6619f802e38.js","node_modules/@parcel/runtime-js/lib/helpers/browser/css-loader.js","node_modules/@parcel/runtime-js/lib/runtime-199ff7a89f461e53.js","node_modules/@parcel/runtime-js/lib/runtime-20cd4107b79566d3.js","src/common/binder/mutation_binder.ts","src/common/node_data_attacher.ts","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","src/website/content_tags.ts","src/website/controls/countdown_timer.module.scss","src/website/controls/sketch_page.module.scss","src/common/wait_dom_event.ts","node_modules/@parcel/runtime-js/lib/runtime-d78be45e413a5b46.js","node_modules/@parcel/runtime-js/lib/runtime-9f1e01cfc9edef71.js","src/common/get_title_box.ts","node_modules/@parcel/runtime-js/lib/runtime-d8e9cbe67a1fa4b3.js","node_modules/@parcel/runtime-js/lib/runtime-e88c6d3f9fad55f1.js","src/common/location_hash_box.ts","node_modules/@parcel/runtime-js/lib/runtime-48385555df8bdc97.js","src/common/classname.ts","src/common/tag.ts","src/website/sketches.ts","src/website/controls/countdown_timer.ts","src/website/controls/sketch_info_button.ts","src/website/controls/sketch_info_button.module.scss","src/website/routes.ts","src/website/controls/main_page.ts","src/website/controls/main_page.module.scss","src/website/router.ts","src/website/controls/sketch_page.ts","src/website/controls/sketch_block.ts","node_modules/@parcel/runtime-js/lib/runtime-44addc82987e1b6e.js","src/website/main.ts"],"sourcesContent":["@import \"/src/website/style/common\";\n@import \"/src/website/style/vars\";\n\n.sketch {\n\t@extend .foreground-block;\n\tpadding: 0.35rem;\n\tmargin: 0.5rem;\n\tcursor: pointer;\n\n\ttransform: scale(1.0);\n\ttransition: 0.25s;\n\tz-index: 0;\n\n\t&:hover {\n\t\ttransform: scale(1.15);\n\t\tz-index: 1;\n\t}\n\n}\n\n.sketchTitle {\n\t@extend .text-stroke;\n\n\tmargin-left: 5px;\n}\n\n.imgContainer {\n\n\twidth: 300px;\n\theight: 200px;\n\tposition: relative;\n\tborder: 5px solid $foreground-primary-color;\n\n\t> img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t}\n}\n\n.timerBackground {\n\tposition: absolute;\n\tbackground: rgba(0, 0, 0, 0.5);\n\twidth: 100%;\n\theight: 100%;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\tanimation: timerBackgroundColor 1s ease-out;\n}\n\n@keyframes timerBackgroundColor {\n\t0% { background: rgba(0, 0, 0, 0); }\n\t100% { background: rgba(0, 0, 0, 0.5); }\n}\n\n.sketchPreview {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tborder: 0;\n\tz-index: -1;\n\n\t&.completed {\n\t\tz-index: 1;\n\t}\n\n\tpointer-events: none;\n}","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import {MutationBinder} from \"common/binder/mutation_binder\"\nimport {isRBox, RBox} from \"common/box\"\nimport {makeNodeDataAttacher} from \"common/node_data_attacher\"\n\n/** Binder is a way to access various lifecycle events of DOM nodes\n * Through that it can help with subscription to various stuff like boxes */\nexport interface Binder {\n\tonNodeInserted(handler: () => void): void\n\tonNodeRemoved(handler: () => void): void\n\tonNodeInsertedOnce(handler: () => void): void\n\tonNodeRemovedOnce(handler: () => void): void\n\tclearOnNodeInserted(handler: () => void): void\n\tclearOnNodeRemoved(handler: () => void): void\n\twatch<T>(box: RBox<T>, handler: (value: T) => void): () => void\n\twatchAndRun<T>(box: RBox<T>, handler: (value: T) => void): () => void\n\tonResize(handler: () => void): () => void\n\treadonly isInDom: boolean\n}\n\nconst noValue = Symbol()\ntype NoValue = typeof noValue\n\ninterface WatchedBox<T = unknown>{\n\treadonly box: RBox<T>\n\thandler(value: T): void\n\tlastKnownValue: T | NoValue\n\tunsub: (() => void) | null\n}\n\nexport class BinderImpl implements Binder {\n\tprivate insertedHandlers: null | (() => void)[] = null\n\tprivate removedHandlers: null | (() => void)[] = null\n\tprivate watchedBoxes: null | WatchedBox[] = null\n\tprivate resizeObserver: ResizeObserver | null = null\n\tprivate resizeHandlers: null | (() => void)[] = null\n\tprivate lastKnownSize: {w: number, h: number} | null = null\n\tisInDom: boolean\n\n\tconstructor(readonly el: Node) {\n\t\tthis.isInDom = nodeIsInDom(el)\n\t}\n\n\tprivate get element(): Element {\n\t\tconst el = this.el\n\t\tif(!(el instanceof Element)){\n\t\t\tthrow new Error(\"Expected to have node of class Element, but it's not: \" + el)\n\t\t}\n\t\treturn el\n\t}\n\n\tonNodeInserted(handler: () => void): void {\n\t\t(this.insertedHandlers ||= []).push(handler)\n\t}\n\tonNodeRemoved(handler: () => void): void {\n\t\t(this.removedHandlers ||= []).push(handler)\n\t}\n\n\tonNodeInsertedOnce(handler: () => void): void {\n\t\tconst wrappedHandler = () => {\n\t\t\ttry {\n\t\t\t\thandler()\n\t\t\t} finally {\n\t\t\t\tthis.clearOnNodeInserted(wrappedHandler)\n\t\t\t}\n\t\t}\n\n\t\tthis.onNodeInserted(wrappedHandler)\n\t}\n\tonNodeRemovedOnce(handler: () => void): void {\n\t\tconst wrappedHandler = () => {\n\t\t\ttry {\n\t\t\t\thandler()\n\t\t\t} finally {\n\t\t\t\tthis.clearOnNodeRemoved(wrappedHandler)\n\t\t\t}\n\t\t}\n\n\t\tthis.onNodeRemoved(wrappedHandler)\n\t}\n\n\tclearOnNodeInserted(handler: () => void): void {\n\t\tthis.insertedHandlers = dropItemFromArray(this.insertedHandlers, handler)\n\t}\n\tclearOnNodeRemoved(handler: () => void): void {\n\t\tthis.removedHandlers = dropItemFromArray(this.removedHandlers, handler)\n\t}\n\n\tfireNodeInserted(): void {\n\t\tthis.isInDom = true\n\t\tconst boxes = this.watchedBoxes\n\t\tif(boxes){\n\t\t\tfor(let i = 0; i < boxes.length; i++){\n\t\t\t\tconst box = boxes[i]!\n\t\t\t\tconst value = box.box()\n\t\t\t\tif(box.lastKnownValue !== value){\n\t\t\t\t\tthis.invokeBoxHandler(value, box)\n\t\t\t\t}\n\t\t\t\tthis.subToBox(box)\n\t\t\t}\n\t\t}\n\n\t\tthis.updateResizeObserver()\n\n\t\tfireAll(this.insertedHandlers)\n\t}\n\n\tfireNodeRemoved(): void {\n\t\tthis.isInDom = false\n\t\tconst boxes = this.watchedBoxes\n\t\tif(boxes){\n\t\t\tfor(let i = 0; i < boxes.length; i++){\n\t\t\t\tconst box = boxes[i]!\n\t\t\t\tbox.unsub!()\n\t\t\t}\n\t\t}\n\n\t\tthis.updateResizeObserver()\n\n\t\tfireAll(this.removedHandlers)\n\t}\n\n\tprivate invokeBoxHandler<T>(value: T, box: WatchedBox<T>): void {\n\t\tbox.handler(value)\n\t\tbox.lastKnownValue = value\n\t}\n\n\tprivate subToBox(box: WatchedBox): void {\n\t\tbox.unsub = box.box.subscribe(v => this.invokeBoxHandler(v, box))\n\t}\n\n\tprivate _subscribe<T>(box: RBox<T>, handler: (value: T) => void): {unsub(): void, watchedBox: WatchedBox} {\n\t\tconst watchedBox: WatchedBox = {\n\t\t\tbox,\n\t\t\thandler,\n\t\t\tlastKnownValue: noValue,\n\t\t\tunsub: null\n\t\t}\n\t\tif(this.isInDom){\n\t\t\tthis.subToBox(watchedBox)\n\t\t}\n\t\t(this.watchedBoxes ||= []).push(watchedBox)\n\t\treturn {\n\t\t\tunsub: () => {\n\t\t\t\tthis.watchedBoxes = dropItemFromArray(this.watchedBoxes, watchedBox)\n\t\t\t},\n\t\t\twatchedBox\n\t\t}\n\t}\n\n\twatch<T>(box: RBox<T>, handler: (value: T) => void): () => void {\n\t\treturn this._subscribe(box, handler).unsub\n\t}\n\n\twatchAndRun<T>(box: T | RBox<T>, handler: (value: T) => void): () => void {\n\t\tif(isRBox(box)){\n\t\t\tconst {unsub, watchedBox} = this._subscribe(box, handler)\n\t\t\tthis.invokeBoxHandler(box(), watchedBox)\n\t\t\treturn unsub\n\t\t} else {\n\t\t\thandler(box)\n\t\t\treturn () => {\n\t\t\t\t// noop!\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate callResizeHandlers(): void {\n\t\tif(!this.resizeHandlers){\n\t\t\treturn\n\t\t}\n\t\tconst w = this.element.clientWidth\n\t\tconst h = this.element.clientHeight\n\t\tif(this.lastKnownSize){\n\t\t\tif(this.lastKnownSize.w === w && this.lastKnownSize.h === h){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.lastKnownSize.w = w\n\t\t\tthis.lastKnownSize.h = h\n\t\t} else {\n\t\t\tthis.lastKnownSize = {w, h}\n\t\t}\n\n\t\tfor(const handler of this.resizeHandlers){\n\t\t\thandler()\n\t\t}\n\t}\n\n\tprivate updateResizeObserver(): void {\n\t\tif(this.isInDom && this.resizeHandlers){\n\t\t\tif(!this.resizeObserver){\n\t\t\t\tthis.lastKnownSize = {w: this.element.clientWidth, h: this.element.clientHeight}\n\t\t\t\tthis.resizeObserver = new ResizeObserver(this.callResizeHandlers.bind(this))\n\t\t\t\tthis.resizeObserver.observe(this.element)\n\t\t\t}\n\t\t} else if(this.resizeObserver){\n\t\t\tthis.resizeObserver.unobserve(this.element)\n\t\t\tthis.resizeObserver.disconnect()\n\t\t\tthis.resizeObserver = null\n\t\t\tthis.lastKnownSize = null\n\t\t}\n\t}\n\n\tonResize(handler: () => void): () => void {\n\t\tif(!this.resizeHandlers){\n\t\t\tthis.resizeHandlers = []\n\t\t}\n\t\tthis.resizeHandlers.push(handler)\n\n\t\tthis.updateResizeObserver()\n\n\t\treturn () => {\n\t\t\tthis.resizeHandlers = this.resizeHandlers?.filter(x => x !== handler) ?? null\n\t\t\tif(this.removedHandlers?.length === 0){\n\t\t\t\tthis.resizeHandlers = null\n\t\t\t\tthis.updateResizeObserver()\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nconst binderStorage = makeNodeDataAttacher<BinderImpl>(\"__binder_of_this_node\")\nconst mutationBinder = new MutationBinder(binderStorage)\n\nexport function getBinder(el: Node): Binder {\n\tmutationBinder.init()\n\tlet binder = binderStorage.get(el)\n\tif(!binder){\n\t\tbinder = new BinderImpl(el)\n\t\tbinderStorage.set(el, binder)\n\t}\n\treturn binder\n}\n\n// yeah, not very effective\n// though in real applications removal of something from watch list is not frequent operation\n// so, whatever\nfunction dropItemFromArray<T>(arr: T[] | null, item: T): T[] | null {\n\tif(!arr || (arr.length === 1 && arr[0] === item)){\n\t\treturn null\n\t}\n\tconst result = [] as T[]\n\tfor(let i = 0; i < arr.length; i++){\n\t\tconst el = arr[i]!\n\t\tif(el !== item){\n\t\t\tresult.push(el)\n\t\t}\n\t}\n\treturn result\n}\n\nfunction nodeIsInDom(node: Node): boolean {\n\tlet parent = node.parentNode\n\twhile(parent){\n\t\tif(parent === document.body){\n\t\t\treturn true\n\t\t}\n\t\tparent = parent.parentNode\n\t}\n\treturn false\n}\n\nfunction fireAll(handlers: (() => void)[] | null): void {\n\tif(!handlers){\n\t\treturn\n\t}\n\tfor(let i = 0; i < handlers.length; i++){\n\t\thandlers[i]!()\n\t}\n}","type SubscriberHandlerFn<T = unknown> = (value: T) => void\ntype UnsubscribeFn = () => void\n\n\ninterface RBoxFields<T>{\n\t/** Subscribe to receive new value every time it changes\n\t * Returns function that will remove the subscription */\n\tsubscribe(handler: SubscriberHandlerFn<T>): UnsubscribeFn\n\n\t/** Get a box that will update every time value of this box updates\n\t * It is different from `viewBox(mapper)` because mapped box will only depend on source box\n\t * (`viewBox(mapper)` will depend on all the boxes that mapper calls, which may be more than just this) */\n\tmap<R>(mapper: (value: T) => R): RBox<R>\n\n\t/* Those methods are similar to wbox's ones, just those produce readonly boxes */\n\tprop<K extends keyof T>(propKey: K): RBox<T[K]>\n\twrapElements<E, K>(this: RBox<E[]>, getKey: (element: E) => K): RBox<RBox<E>[]>\n}\ntype RBoxCallSignature<T> = () => T\n\n/** Readonly box. You can only look at the value and subscribe to it, but not change that value directly.\n * Behind this interface could be writeable box, or viewBox, or something else entirely. */\nexport type RBox<T> = RBoxCallSignature<T> & RBoxFields<T>\n\n\ninterface WBoxFields<T> extends RBoxFields<T>{\n\t/** Make property box, a box that contains a value of a property of an object of the value from the current box.\n\t * New box will be linked with the source box, so they will update accordingly. */\n\tprop<K extends keyof T>(propKey: K): WBox<T[K]>\n\n\t/** If this box contains array, make a rbox that contains each element of this array wrapped in box\n\t *\n\t * Elements are bound to the values, not to the indices, so if the array is reordered - same values will stay in the same boxes\n\t * Similarity of values is checked by keys. Key is what @param getKey returns.\n\t * The only constraint on what key should be is it should be unique across the array. And it is compared by value.\n\t * So you can have object-keys, they just must be the same objects every time, otherwise it won't work well.\n\t * If original array is shrinked, excess boxes are detached from it and will always throw on read/write of the value,\n\t * even if array grows again with values having same keys.\n\t *\n\t * Can behave weirdly/inconsistently if there are no subscribers to this box or children boxes. */\n\twrapElements<E, K>(this: WBox<E[]>, getKey: (element: E) => K): RBox<WBox<E>[]>\n\n\t/** This really helps Typescript sometimes better infer stuff */\n\treadonly thisHelpsTypings?: true\n}\ntype WBoxCallSignature<T> = RBoxCallSignature<T> & ((newValue: T) => T)\n\n/** Writeable box. Box that you can put value in, as well as look at value inside it and subscribe to it. */\nexport type WBox<T> = WBoxCallSignature<T> & WBoxFields<T>\n\n\nexport type RBoxOrValue<T> = T | RBox<T>\nexport type MaybeRBoxed<T> = [T] extends [RBox<unknown>] ? T : T | RBox<T>\nexport type WBoxOrValue<T> = T | WBox<T>\n\n/** Make a simple writeable box */\nexport const box: <T>(value: T) => WBox<T> = makeValueBox\n/** Make a viewBox, a box that recalculates its value each time any of dependencies changed\n * In most of cases you can safely omit @param explicitDependencyList\n * dependency list will be inferred automatically for you from the computing function */\nexport const viewBox: <T>(computingFn: () => T, explicitDependencyList?: readonly RBox<unknown>[]) => RBox<T> = makeViewBox\n\nexport function isWBox<T>(x: unknown): x is WBox<T> {\n\treturn x instanceof ValueBox\n}\n\nexport function isRBox<T>(x: unknown): x is RBox<T> {\n\treturn x instanceof BoxBase\n}\n\nexport function unbox<T>(x: RBox<T> | T): T\nexport function unbox<T>(x: RBox<T> | T | undefined): T | undefined\nexport function unbox<T>(x: RBox<T> | T | null): T | null\nexport function unbox<T>(x: RBox<T> | T | null | undefined): T | null | undefined\nexport function unbox<T>(x: RBox<T> | T): T {\n\treturn isRBox(x) ? x() : x\n}\n\n\n/*\n============================================================================================\n====== Here public part of box interface ends. Below are gory implementation details. ======\n============================================================================================\n*/\n\ntype AnyBoxImpl<T> = ViewBox<T> | ValueBox<T>\n\ntype NoValue = symbol\nconst noValue: NoValue = Symbol()\n\ninterface ExternalSubscriber<T>{\n\tlastKnownRevision: number\n\tlastKnownValue: T\n\thandler: SubscriberHandlerFn<T>\n}\n\ninterface InternalSubscriber<T> extends ExternalSubscriber<T>{\n\t// those props are here to compare if we should notify when pushing updates\n\tbox: RBoxBase<unknown>\n}\n\n/** Stack of boxes that are currently computing their value\n * Each box that can possibly want to call other boxes should put an item on top of the stack\n * That way, proper dependency graph can be built */\nclass BoxNotificationStack {\n\tprivate notificationStack: (Set<AnyBoxImpl<unknown>> | null)[] = []\n\twithAccessNotifications<R>(action: () => R, onAccess: Set<AnyBoxImpl<unknown>> | null): R {\n\t\tthis.notificationStack.push(onAccess)\n\t\tlet result: R\n\t\ttry {\n\t\t\tresult = action()\n\t\t} finally {\n\t\t\tthis.notificationStack.pop()\n\t\t}\n\t\treturn result\n\t}\n\n\tnotifyOnAccess<T>(v: AnyBoxImpl<T>): void {\n\t\tconst stackTop = this.notificationStack[this.notificationStack.length - 1]\n\t\tif(stackTop){\n\t\t\tstackTop.add(v as AnyBoxImpl<unknown>)\n\t\t}\n\t}\n}\n\n/** Having a function and a prototype, make a function with this prototype and its properties\n * Unfortunately, this implies that constructor of the parent function cannot be called on the function\n * because since ES6 classes can't be called like regular functions and there is no known workaround\n * But any properties defined on the prototype will be copied to the function instance, so it's not too bad\n * Also the function won't receive proper `this` object. This can be done at the cost of performance; I don't need it that hard */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction addPrototypeToFunction<R, A extends never[], F extends (this: null, ...args: A) => R, I extends object>(fn: F, obj: I): I & F {\n\tObject.setPrototypeOf(fn, Object.getPrototypeOf(obj)) // set up the prototype\n\tObject.assign(fn, obj) // clone the properties\n\treturn fn as I & F\n}\n\n\nconst notificationStack = new BoxNotificationStack()\n\n/** Base for every Box */\nabstract class BoxBase<T> {\n\n\t/** Revision is incremented each time value changes\n\t *\n\t * This value must never be visible outside of this box.\n\t * It can only be used to prevent repeated calls of subscribers.\n\t *\n\t * It is very tempting to use revision number to check if value is changed or not\n\t * However, it can go wrong when value does not change until you explicitly check\n\t * For example, consider viewBox that depends on viewBox\n\t * When there is no subscribers, first viewBox will never change, regardless of its sources\n\t * And if you're only relying on revision number to check if it is changed, you'll be wrong */\n\tprivate revision = 1\n\n\t/** Internal subscribers are subscribers that make up a graph of boxes */\n\tprivate internalSubscribers = new Set<InternalSubscriber<T>>()\n\t/** External subscribers are subscribers that receive data outside of boxes graph */\n\tprivate externalSubscribers = new Set<ExternalSubscriber<T>>()\n\n\tconstructor(public value: T | NoValue) {}\n\n\thaveSubscribers(): boolean {\n\t\treturn this.internalSubscribers.size > 0 || this.externalSubscribers.size > 0\n\t}\n\n\t/** After box is disposed, it should not be used anymore\n\t * This is reserved for very special cases and cannot really be used on any kind of box */\n\tdispose(): void {\n\t\tthis.value = noValue\n\t\tfor(const sub of this.internalSubscribers){\n\t\t\tsub.box.dispose()\n\t\t}\n\t}\n\n\tdoSubscribe<B>(external: boolean, handler: SubscriberHandlerFn<T>, box?: RBoxBase<B>): UnsubscribeFn {\n\t\tconst value = this.value\n\t\tif(value === noValue){\n\t\t\tthrow new Error(\"Cannot subscribe to box: no value!\")\n\t\t}\n\n\t\tif(external){\n\t\t\tconst sub: ExternalSubscriber<T> = {\n\t\t\t\thandler,\n\t\t\t\tlastKnownRevision: this.revision,\n\t\t\t\tlastKnownValue: value as T\n\t\t\t}\n\t\t\tthis.externalSubscribers.add(sub)\n\t\t\treturn () => {\n\t\t\t\tthis.externalSubscribers.delete(sub)\n\t\t\t}\n\t\t} else {\n\t\t\tif(!box){\n\t\t\t\tthrow new Error(\"Assertion failed\")\n\t\t\t}\n\t\t\tconst sub: InternalSubscriber<T> = {\n\t\t\t\thandler, box: box as RBoxBase<unknown>,\n\t\t\t\tlastKnownRevision: this.revision,\n\t\t\t\tlastKnownValue: value as T\n\t\t\t}\n\t\t\tthis.internalSubscribers.add(sub)\n\t\t\treturn () => this.internalSubscribers.delete(sub)\n\t\t}\n\t}\n\n\tsubscribe(handler: SubscriberHandlerFn<T>): UnsubscribeFn {\n\t\treturn this.doSubscribe(true, handler)\n\t}\n\n\ttryChangeValue<B>(value: T, box?: RBoxBase<B>): void {\n\t\t// yes, objects can be changed without the change of reference, so this check will fail on such change\n\t\t// it is explicit decision. that way, better performance can be achieved.\n\t\t// because it's much better to explicitly ask user to tell us if something is changed or not\n\t\t// (by cloning the object, changing the clone and setting the clone back into the box)\n\t\t// otherwise (in cases of large box graphs) it may lead to awfully degraded performance\n\t\tconst valueChanged = this.value !== value\n\t\tthis.value = value\n\t\tif(valueChanged){\n\t\t\tthis.revision++\n\t\t\tthis.notify(value, box)\n\t\t}\n\t}\n\n\tnotify<B>(value: T, box: RBoxBase<B> | undefined): void {\n\t\tconst valueRevision = this.revision\n\n\t\tfor(const sub of this.internalSubscribers){\n\t\t\t// if the notification came from the same box - we should not notify it again\n\t\t\tif(sub.box === box){\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tthis.maybeCallSubscriber(sub, value, valueRevision)\n\t\t}\n\n\t\tif(valueRevision < this.revision){\n\t\t\t// this simple cutoff will only work well for external subscribers\n\t\t\t// for anything else there is a risk of not invoking a subscriber at all\n\t\t\t// (this check is a simple optimisation and can be turned off without noticeable change in behaviour)\n\t\t\treturn\n\t\t}\n\n\t\tfor(const sub of this.externalSubscribers){\n\t\t\tthis.maybeCallSubscriber(sub, value, valueRevision)\n\t\t}\n\n\t}\n\n\tprivate maybeCallSubscriber(sub: ExternalSubscriber<T>, value: T, valueRevision: number): void {\n\t\tif(sub.lastKnownRevision > valueRevision){\n\t\t\treturn\n\t\t}\n\n\t\t// revision update should be strictly BEFORE content diff cutoff\n\t\t// because if we detect that value is the same and there is previous notify iteration running with different value,\n\t\t// then, without updating revision, that older iteration will invoke the handler with outdated value\n\t\t// which is big no-no\n\t\tsub.lastKnownRevision = valueRevision\n\t\tif(sub.lastKnownValue === value){\n\t\t\treturn\n\t\t}\n\t\tsub.lastKnownValue = value\n\t\tsub.handler(value)\n\t}\n\n\tmap<R>(this: RBox<T>, mapper: (value: T) => R): RBox<R> {\n\t\treturn makeViewBox(() => mapper(this()), [this])\n\t}\n\n\twrapElements<E, K>(this: ViewBox<E[]> | ValueBox<E[]>, getKey: (element: E) => K): ViewBox<ValueBox<E>[]> {\n\t\treturn makeViewBoxByClassInstance<ValueBox<E>[], ArrayValueWrapViewBox<E, K>>(new ArrayValueWrapViewBox(this, getKey))\n\t}\n\n}\n\ntype RBoxBase<T> = BoxBase<T> & RBox<T>\n\n/** Just a box that just contains value */\nclass ValueBox<T> extends (BoxBase as {\n\tnew<T>(value: T | NoValue): BoxBase<T> & WBoxCallSignature<T> & RBoxCallSignature<T>\n})<T> implements WBoxFields<T> {\n\n\tprop<K extends keyof T>(propKey: K): WBox<T[K]> {\n\t\t// by the way, I could store propbox in some sort of map in the parent valuebox\n\t\t// and later, if someone asks for propbox for the same field, I'll give them the same propbox\n\t\t// this will simplify data logistics a little and possibly reduce memory consumption\n\t\t// however, I don't want to do that because it's relatively rare case - to have two propboxes on same field at the same time\n\t\t// and storing a reference to them in the parent will make them uneligible for GC, which is not very good\n\t\t// (not very bad either, there's a finite amount of them. but it's still something to avoid)\n\t\tif(Array.isArray(this.value)){\n\t\t\tthrow new Error(\"You should not use prop() to get values of elements of the array. Use wrapElements() instead.\")\n\t\t}\n\t\treturn makeUpstreamBox(new FixedPropValueBox(this, propKey))\n\t}\n\n}\n\n/** Box that is subscribed to one other box only when it has its own subscriber(s)\n * Usually that other box is viewed as upstream; source of data that this box is derived from */\nabstract class ValueBoxWithUpstream<T, U = unknown, B extends ValueBox<U> = ValueBox<U>> extends ValueBox<T> {\n\n\tprivate upstreamUnsub: UnsubscribeFn | null = null\n\tconstructor(readonly upstream: B, value: T | NoValue) {\n\t\tsuper(value)\n\t}\n\n\tprotected abstract extractValueFromUpstream(upstreamObject: U): T\n\tprotected abstract buildUpstreamValue(value: T): U\n\n\tprotected fetchValueFromUpstream(): T {\n\t\treturn this.extractValueFromUpstream(this.getUpstreamValue())\n\t}\n\n\tprotected shouldBeSubscribed(): boolean {\n\t\treturn this.haveSubscribers()\n\t}\n\n\tprotected doOnUpstreamChange(upstreamValue: U): void {\n\t\tconst ourValue = this.extractValueFromUpstream(upstreamValue)\n\t\tthis.tryChangeValue(ourValue, this.upstream)\n\t}\n\n\tprotected notifyUpstreamOnChange(value: T): void {\n\t\tconst upstreamObject = this.buildUpstreamValue(value)\n\t\tthis.upstream.tryChangeValue(upstreamObject, this)\n\t}\n\n\tprotected getUpstreamValue(): U {\n\t\t// if we are called from view calc function - we should prevent view to access our upstream box\n\t\t// so view will only subscribe to this box, but not to the parent\n\t\treturn notificationStack.withAccessNotifications(this.upstream, null)\n\t}\n\n\tgetBoxValue(): T {\n\t\t// just checking if we have value before returning it is not enough\n\t\t// sometimes when we have value we can be not subscribed\n\t\t// that means that our value can be outdated and we need to fetch new one regardless\n\t\tif(this.value !== noValue && this.upstreamUnsub !== null){\n\t\t\treturn this.value as T\n\t\t} else {\n\t\t\treturn this.fetchValueFromUpstream()\n\t\t}\n\t}\n\n\ttryUpdateUpstreamSub(): void {\n\t\tconst shouldBeSub = this.shouldBeSubscribed()\n\t\tif(shouldBeSub && !this.upstreamUnsub){\n\t\t\tthis.subToUpstream()\n\t\t} else if(!shouldBeSub && this.upstreamUnsub){\n\t\t\tthis.unsubFromUpstream()\n\t\t}\n\t}\n\n\tprivate unsubFromUpstream() {\n\t\tif(!this.upstreamUnsub){\n\t\t\tthrow new Error(\"Assertion failed\")\n\t\t}\n\t\tthis.upstreamUnsub()\n\t\tthis.upstreamUnsub = null\n\t\tthis.value = this.getEmptyValue()\n\t}\n\n\tprivate subToUpstream(): void {\n\t\tif(this.upstreamUnsub){\n\t\t\tthrow new Error(\"Assertion failed\")\n\t\t}\n\t\tif(this.value === noValue){\n\t\t\tthis.value = this.getBoxValue()\n\t\t}\n\t\tthis.upstreamUnsub = this.upstream.doSubscribe(false, this.doOnUpstreamChange.bind(this), this)\n\t}\n\n\toverride doSubscribe<B>(external: boolean, handler: SubscriberHandlerFn<T>, box?: RBoxBase<B>): UnsubscribeFn {\n\t\tif(this.value === noValue){\n\t\t\tthis.value = this.getBoxValue()\n\t\t}\n\t\tconst unsub = super.doSubscribe(external, handler, box)\n\t\tthis.tryUpdateUpstreamSub()\n\t\treturn () => {\n\t\t\tunsub()\n\t\t\tthis.tryUpdateUpstreamSub()\n\t\t}\n\t}\n\n\toverride notify<B>(value: T, box: RBoxBase<B> | undefined): void {\n\t\t// it's kinda out of place, but anyway\n\t\t// if this box have no subscribers - it should never store value\n\t\t// because it also don't subscribe to upstream in that case (because amount of subscriptions should be minimised)\n\t\tif(!this.shouldBeSubscribed()){\n\t\t\tthis.value = this.getEmptyValue()\n\t\t}\n\n\t\t// this is also a little out of place\n\t\t// think of this block as a notification to parent that child value is changed\n\t\t// (although this is not conventional call to subscription)\n\t\tif(box as unknown !== this.upstream){\n\t\t\tthis.notifyUpstreamOnChange(value)\n\t\t}\n\n\t\tsuper.notify(value, box)\n\t}\n\n\tprotected getEmptyValue(): T | NoValue {\n\t\treturn noValue\n\t}\n\n}\n\nclass FixedPropValueBox<U, K extends keyof U> extends ValueBoxWithUpstream<U[K], U> {\n\n\tconstructor(upstream: ValueBox<U>, protected readonly propKey: K) {\n\t\tsuper(upstream, noValue)\n\t}\n\n\tprotected override extractValueFromUpstream(upstreamObject: U): U[K] {\n\t\treturn upstreamObject[this.propKey]\n\t}\n\n\tprotected override buildUpstreamValue(value: U[K]): U {\n\t\tconst upstreamObject = this.getUpstreamValue()\n\t\tif(Array.isArray(upstreamObject)){\n\t\t\tthrow new Error(`Upstream object is an array! Cannot properly clone it to set the property \"${this.propKey.toString()}\" value.`)\n\t\t}\n\t\treturn {\n\t\t\t...upstreamObject,\n\t\t\t[this.propKey]: value\n\t\t}\n\t}\n\n}\n\nfunction makeUpstreamBox<T, U, B>(instance: ValueBoxWithUpstream<T, U> & B): ValueBoxWithUpstream<T, U> & B {\n\n\tfunction upstreamValueBox(...args: T[]): T {\n\t\tif(args.length === 0){\n\t\t\tnotificationStack.notifyOnAccess(result)\n\t\t} else {\n\t\t\tresult.tryChangeValue(args[0]!)\n\t\t}\n\n\t\treturn result.getBoxValue()\n\t}\n\n\tconst result = addPrototypeToFunction(upstreamValueBox, instance)\n\n\treturn result\n}\n\nfunction makeValueBox<T>(value: T): ValueBox<T> {\n\n\tfunction valueBox(...args: T[]): T {\n\t\tif(args.length < 1){\n\t\t\tnotificationStack.notifyOnAccess(result)\n\t\t} else {\n\t\t\tresult.tryChangeValue(args[0]!)\n\t\t}\n\n\t\tif(result.value === noValue){\n\t\t\t// should never happen\n\t\t\tthrow new Error(\"After executing valueBox the value is absent!\")\n\t\t}\n\n\t\treturn result.value as T\n\t}\n\n\tconst result = addPrototypeToFunction(valueBox, new ValueBox(value))\n\n\treturn result\n}\n\n\nabstract class ViewBox<T> extends (BoxBase as {\n\tnew<T>(value: T | NoValue): BoxBase<T> & RBoxCallSignature<T>\n})<T> implements RBoxFields<T> {\n\n\t/*\n\tHere it gets a little tricky.\n\tLifetime of the view is by definition lower than lifetime of values it depends on\n\t(because those values are referenced through closure expression of the view)\n\tBut when every external reference to the view is gone, it should be eligible to get GCed\n\twhich is not possible if it stays subscribed, because subscription will hold a reference to the view\n\t(it is btw typical \"lapsed listeners\" problem)\n\n\tTo avoid this we employ the following tactics:\n\t1. view don't store ANYTHING when noone is subscribed (no list of dependencies, no value, nothing)\n\tin this mode view just calls computing function when asked for the value\n\t2. when we HAVE subscribers to view - value is stored, list of dependencies is stored\n\tview returns stored value when asked for value in this mode\n\n\tThis way, you only need to remove all subscribers from view for it to be eligible to be GCed\n\t*/\n\tprivate subDisposers: UnsubscribeFn[] = []\n\tprivate onDependencyListUpdated: null | (() => void) = null\n\n\tprivate boundCalcVal: (() => T) | null = null\n\tprotected abstract calculateValue(): T\n\n\tconstructor(private readonly explicitDependencyList: readonly RBox<unknown>[] | undefined) {\n\t\tsuper(noValue)\n\t}\n\n\tprivate subDispose(): void {\n\t\tthis.subDisposers.forEach(x => x())\n\t\tthis.subDisposers.length = 0\n\t}\n\n\tprivate shouldRecalcValue(): boolean {\n\t\tif(this.value === noValue){\n\t\t\treturn true // no value? let's recalculate\n\t\t}\n\n\t\tif(this.subDisposers.length === 0){\n\t\t\t// we are not subscribed to anyone\n\t\t\t// that means calcFunction either is constant expression, or depends on some plain variables that can change\n\t\t\t// better recalculate\n\t\t\treturn true\n\t\t}\n\n\t\treturn false // we have value, no need to do anything\n\t}\n\n\tprivate recalcValueAndResubscribe(forceSubscribe: boolean): void {\n\t\t// we preserve list of our old subscriptions to drop them only at the end of the method\n\t\t// we do that because some box implementations can change its internal state dramatically when they have 0 subs\n\t\t// and to prevent them going back and forth, we first create new subscribers, and only then let go old ones\n\t\tconst oldSubDisposers = [...this.subDisposers]\n\n\t\tlet newValue: T\n\t\tlet depList: readonly AnyBoxImpl<unknown>[]\n\t\tconst calc = this.boundCalcVal ||= this.calculateValue.bind(this)\n\t\tif(!this.explicitDependencyList){\n\t\t\tconst boxesAccessed = new Set<AnyBoxImpl<unknown>>()\n\t\t\tnewValue = notificationStack.withAccessNotifications(calc, boxesAccessed)\n\t\t\tdepList = [...boxesAccessed]\n\t\t} else {\n\t\t\tnewValue = notificationStack.withAccessNotifications(calc, null)\n\t\t\tdepList = this.explicitDependencyList as AnyBoxImpl<unknown>[]\n\t\t}\n\n\t\t// we can safely not pass a box here\n\t\t// because box is only used to prevent notifications to go back to original box\n\t\t// and we should never be subscribed to itself, because it's not really possible\n\t\tthis.tryChangeValue(newValue)\n\n\t\t// this check is here because as a result of recalculation we may lose all of our subscribers\n\t\t// and therefore we don't need to be subscribed to anything anymore\n\t\t// (that's the case with array wrap)\n\t\tif(forceSubscribe || this.haveSubscribers()){\n\t\t\tif(depList.length > 0){\n\t\t\t\tconst doOnDependencyUpdated = this.onDependencyListUpdated ||= () => this.recalcValueAndResubscribe(false)\n\t\t\t\tfor(let i = 0; i < depList.length; i++){\n\t\t\t\t\tthis.subDisposers.push(depList[i]!.doSubscribe(false, doOnDependencyUpdated, this))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = noValue\n\t\t}\n\t\tfor(const subDisposer of oldSubDisposers){\n\t\t\tsubDisposer()\n\t\t}\n\t\t// ew. maybe there is some more efficient structure for that...?\n\t\tthis.subDisposers = this.subDisposers.slice(oldSubDisposers.length)\n\t}\n\n\toverride doSubscribe<B>(external: boolean, handler: SubscriberHandlerFn<T>, box?: RBoxBase<B> | undefined): UnsubscribeFn {\n\t\tif(!this.haveSubscribers()){\n\t\t\t// because we must have a value before doSubscribe can be called\n\t\t\t// and also we will have a sub right now, might as well prepare for that\n\t\t\tthis.recalcValueAndResubscribe(true)\n\t\t}\n\t\tconst unsub = super.doSubscribe(external, handler, box)\n\t\treturn () => {\n\t\t\tunsub()\n\t\t\tif(!this.haveSubscribers()){\n\t\t\t\tthis.subDispose()\n\t\t\t\tthis.value = noValue\n\t\t\t}\n\t\t}\n\t}\n\n\tgetValue(): T {\n\t\tnotificationStack.notifyOnAccess(this)\n\n\t\tif(!this.shouldRecalcValue()){\n\t\t\treturn this.value as T\n\t\t}\n\n\t\tconst calc = this.boundCalcVal ||= this.calculateValue.bind(this)\n\t\treturn notificationStack.withAccessNotifications(calc, null)\n\t}\n\n\tprop<K extends keyof T>(propKey: K): RBox<T[K]> {\n\t\treturn this.map(v => v[propKey])\n\t}\n\n}\n\nclass ComputingFnViewBox<T> extends ViewBox<T> {\n\n\tconstructor(protected readonly calculateValue: () => T, explicitDependencyList: readonly RBox<unknown>[] | undefined) {\n\t\tsuper(explicitDependencyList)\n\t}\n\n}\n\nfunction makeViewBox<T>(computingFn: () => T, explicitDependencyList?: readonly RBox<unknown>[]): ViewBox<T> {\n\treturn makeViewBoxByClassInstance<T, ViewBox<T>>(new ComputingFnViewBox(computingFn, explicitDependencyList))\n}\n\nfunction makeViewBoxByClassInstance<T, B extends ViewBox<T>>(instance: B): B {\n\tfunction viewBox(): T {\n\t\treturn result.getValue()\n\t}\n\n\tconst result = addPrototypeToFunction(viewBox, instance)\n\treturn result\n}\n\nclass ArrayValueWrapViewBox<T, K> extends ViewBox<ValueBox<T>[]> {\n\n\tprivate readonly childMap = new Map<K, ArrayElementValueBox<T, K>>()\n\n\tconstructor(readonly upstream: ViewBox<T[]> | ValueBox<T[]>, private readonly getKey: (value: T) => K) {\n\t\tsuper([upstream])\n\t}\n\n\tprotected override calculateValue(): ValueBox<T>[] {\n\t\tif(typeof(this) !== \"function\"){\n\t\t\tthrow new Error(\"Assertion failed\")\n\t\t}\n\t\tconst outdatedKeys = new Set(this.childMap.keys())\n\n\t\tconst upstreamArray = notificationStack.withAccessNotifications(this.upstream, null)\n\t\tif(!Array.isArray(upstreamArray)){\n\t\t\tthrow new Error(\"Assertion failed: upstream value is not array for array-wrap box\")\n\t\t}\n\t\tconst result = upstreamArray.map((item, index) => {\n\t\t\tconst key = this.getKey(item)\n\t\t\tlet box = this.childMap.get(key)\n\t\t\tif(box){\n\t\t\t\tif(!outdatedKeys.has(key)){\n\t\t\t\t\tthrow new Error(\"Constraint violated, key is not unique: \" + key)\n\t\t\t\t}\n\t\t\t\tbox.index = index\n\t\t\t\tbox.tryChangeValue(item, this)\n\t\t\t} else {\n\t\t\t\tbox = makeUpstreamBox(new ArrayElementValueBox(key, index, item, this))\n\t\t\t\tthis.childMap.set(key, box)\n\t\t\t}\n\n\t\t\toutdatedKeys.delete(key)\n\n\t\t\treturn box\n\t\t})\n\n\t\tfor(const key of outdatedKeys){\n\t\t\tconst box = this.childMap.get(key)!\n\t\t\tbox.dispose()\n\t\t\tthis.childMap.delete(key)\n\t\t}\n\n\t\treturn result\n\t}\n\n\ttryUpdateChildrenValues(): void {\n\t\tthis.calculateValue()\n\t}\n\n\tnotifyValueChanged(value: T, box: ArrayElementValueBox<T, K>): void {\n\t\tif(!isWBox(this.upstream)){\n\t\t\t// should be prevented by typechecker anyway\n\t\t\tthrow new Error(\"You cannot change the value of upstream array in readonly box through wrap-box\")\n\t\t}\n\n\t\tconst key = this.getKey(value)\n\t\tconst existingBox = this.childMap.get(key)\n\t\tconst oldBoxKey = box.key\n\t\tif(!existingBox){\n\t\t\tthis.childMap.delete(box.key)\n\t\t\tthis.childMap.set(key, box)\n\t\t\tbox.key = key\n\t\t} else if(existingBox !== box){\n\t\t\tthrow new Error(\"Constraint violated, key is not unique: \" + key)\n\t\t}\n\n\t\t// Q: why do we search for key here?\n\t\t// A: see explaination in element wrap impl\n\t\t// (in short, index could change between updates, that's why we don't rely on them)\n\t\tlet upstreamValue = notificationStack.withAccessNotifications(this.upstream, null)\n\t\tupstreamValue = [...upstreamValue]\n\t\tlet index = -1\n\t\tif(this.haveSubscribers()){\n\t\t\t// if we are subscribed - we can use index, it is guaranteed to be consistent with the upstream\n\t\t\t// it is optimisation anyway; if it will cause trouble - we always can just search for the key every time\n\t\t\tindex = box.index\n\t\t} else {\n\t\t\tfor(let i = 0; i < upstreamValue.length; i++){\n\t\t\t\tconst item = upstreamValue[i]!\n\t\t\t\tconst itemKey = this.getKey(item)\n\t\t\t\tif(itemKey === oldBoxKey){\n\t\t\t\t// we can just break on the first found key, I'm just all about assertions\n\t\t\t\t// btw maybe this assertion will break some of legitimate use cases..?\n\t\t\t\t\tif(index >= 0){\n\t\t\t\t\t\tthrow new Error(\"Constraint violated, key is not unique: \" + oldBoxKey)\n\t\t\t\t\t}\n\t\t\t\t\tindex = i\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(index < 0){\n\t\t\t\t// value with old key is not found\n\t\t\t\t// that means the box was detached before it received an update\n\t\t\t\tbox.dispose()\n\t\t\t\tbox.throwDetachedError()\n\t\t\t}\n\t\t}\n\n\t\tupstreamValue[index] = value\n\t\tthis.upstream.tryChangeValue(upstreamValue, this)\n\t}\n\n}\n\nclass ArrayElementValueBox<T, K> extends ValueBoxWithUpstream<T, ValueBox<T>[], ArrayValueWrapViewBox<T, K>> {\n\n\tprivate disposed = false\n\n\tconstructor(public key: K, public index: number, value: T, upstream: ArrayValueWrapViewBox<T, K>) {\n\t\tsuper(upstream, value)\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposed = true\n\t\t// update of sub may or may not set empty value (if there is no sub)\n\t\t// let's set it explicitly\n\t\tthis.value = noValue\n\t\tthis.tryUpdateUpstreamSub()\n\t\tsuper.dispose()\n\t}\n\n\tprotected override shouldBeSubscribed(): boolean {\n\t\treturn !this.disposed && super.shouldBeSubscribed()\n\t}\n\n\tprotected override fetchValueFromUpstream(): T {\n\t\t// this is bad, but I don't see a better solution\n\t\t// thing is, when you're not subscribed - you have absolutely zero guarantees that upstream did not change\n\t\t// (and you can't be always subscribed because it will create memory leak)\n\t\t// this has two consequences:\n\t\t// 1. you can't rely that `index` stays the same\n\t\t// (so you cannot just grab upstream, take value on the index and expect it to be the value you're after)\n\t\t// 2. you can't rely that your value is still in the array at all\n\t\t// (so you may become detached at arbitrary moment, possibly with outdated value)\n\t\t// we combat those two consequences with following countermeasures:\n\t\t// 1. when we need to get the value, we ALWAYS receive value from wrapper box. no exceptions.\n\t\t// alternative to that will be grabbing upstream array, iterating over each item and checking for key equality\n\t\t// but this will be terrible for performance\n\t\t// 2. we forbid accessing detached values at all\n\t\t// this is bad because two things: it can unexpectedly break, and it is inconsistent\n\t\t// I mean, who knows when exactly value disappeared from upstream array if we was not subscribed to it?\n\t\t// noone knows! and by that reason box may become detached (if update happened during absence of value),\n\t\t// or not (if it did not happen, or happened after value with the same key appears in array again)\n\t\t// what can go wrong, usage-wise?\n\t\t// well, if user stores element wrapper boxes - he should be prepared that sometimes they can throw\n\t\tthis.checkNotDisposed()\n\t\tthis.upstream.tryUpdateChildrenValues()\n\t\tthis.checkNotDisposed() // second check, we may become disposed after update\n\t\treturn this.value as T\n\t}\n\n\tprivate checkNotDisposed(): void {\n\t\tif(this.disposed){\n\t\t\tthis.throwDetachedError()\n\t\t}\n\t}\n\n\tthrowDetachedError(): void {\n\t\tthrow new Error(\"Element wrap box for key \" + anythingToString(this.key) + \" is no longer attached to an upstream box, because upstream box does not have this key, or did not have this key in some time in the past after this box was created.\")\n\t}\n\n\tprotected override extractValueFromUpstream(): T {\n\t\tthrow new Error(\"This method should never be called on this box\")\n\t}\n\n\tprotected override buildUpstreamValue(): ValueBox<T>[] {\n\t\tthrow new Error(\"This method should never be called on this box\")\n\t}\n\n\tprotected override doOnUpstreamChange(): void {\n\t\t// nothing. upstream will put value into this box by itself\n\t\t// element box must never subscribe to upstream-of-upstream array-box directly, or pull values by itself\n\t\t// this way its index can sometimes be outdated and he can pull wrong value from upstream\n\t\t// instead, element box must force parent view to subscribe to upstream\n\t\t// so parent view can handle down proper index and value at the same time\n\t\t// so, we still subscribe to upstream, just so it is subscribed to upstream-of-upstream and deliver updates\n\t}\n\n\tprotected notifyUpstreamOnChange(value: T): void {\n\t\tthis.checkNotDisposed()\n\t\tthis.upstream.notifyValueChanged(value, this)\n\t}\n\n\tprotected override getEmptyValue(): NoValue | T {\n\t\treturn this.disposed ? noValue : this.value\n\t}\n\n}\n\nfunction anythingToString(x: unknown): string {\n\tif(typeof(x) === \"symbol\"){\n\t\treturn x.toString()\n\t} else {\n\t\treturn x + \"\"\n\t}\n}","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j2ESO\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1Mamc\"))]).then(() => parcelRequire('hppz9'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"GZYYe\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j2ESO\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1XIBz\"))]).then(() => parcelRequire('1KmVa'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j2ESO\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7kKo2\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"lebhK\"))]).then(() => parcelRequire('aFKcI'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same link element twice (e.g. if it was already in the HTML)\n    var existingLinks = document.getElementsByTagName('link');\n\n    if ([].concat(existingLinks).some(function isCurrentBundle(link) {\n      return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n    })) {\n      resolve();\n      return;\n    }\n\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = bundle;\n\n    link.onerror = function (e) {\n      link.onerror = link.onload = null;\n      link.remove();\n      reject(e);\n    };\n\n    link.onload = function () {\n      link.onerror = link.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(link);\n  });\n});","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"GZYYe\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j2ESO\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"euz4T\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bqwwZ\"))]).then(() => parcelRequire('jfwrQ'));","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j2ESO\")), require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k7EvP\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"lWyzW\"))]).then(() => parcelRequire('jfUgO'));","import {BinderImpl} from \"common/binder/binder\"\nimport {NodeDataAttacher} from \"common/node_data_attacher\"\n\nexport class MutationBinder {\n\tprivate observer: MutationObserver | null = null\n\n\tconstructor(private readonly binders: NodeDataAttacher<BinderImpl>) {}\n\n\tinit(): void {\n\t\tif(!this.observer){\n\t\t\tthis.observer = new MutationObserver(this.doWithRecords.bind(this))\n\t\t\tthis.observer.observe(document.body, {childList: true, subtree: true})\n\t\t}\n\t}\n\n\tprivate collectEligibleNodes(nodes: Node[]): Set<Node> {\n\t\tconst result = new Set<Node>()\n\t\twhile(true){\n\t\t\tconst node = nodes.pop()\n\t\t\tif(!node){\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif(this.binders.has(node)){\n\t\t\t\tresult.add(node)\n\t\t\t}\n\t\t\tconst children = node.childNodes\n\t\t\tfor(let i = 0; i < children.length; i++){\n\t\t\t\tnodes.push(children[i]!)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate doWithRecords(records: MutationRecord[]): void {\n\t\tconst addedNodesArr = [] as Node[]\n\t\tconst removedNodesArr = [] as Node[]\n\t\tfor(let i = 0; i < records.length; i++){\n\t\t\tconst record = records[i]!\n\t\t\tfor(let j = 0; j < record.addedNodes.length; j++){\n\t\t\t\taddedNodesArr.push(record.addedNodes[j]!)\n\t\t\t}\n\t\t\tfor(let j = 0; j < record.addedNodes.length; j++){\n\t\t\t\tremovedNodesArr.push(record.removedNodes[j]!)\n\t\t\t}\n\t\t}\n\n\t\tconst addedNodes = this.collectEligibleNodes(addedNodesArr)\n\t\tconst removedNodes = this.collectEligibleNodes(removedNodesArr)\n\n\t\t// TODO: can optimise here maybe? to not check twice for nodes that was both inserted and removed\n\t\t// also this whole algo feels slow\n\t\tfor(const node of addedNodes){\n\t\t\tif(removedNodes.has(node)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.binders.get(node)!.fireNodeInserted()\n\t\t}\n\n\t\tfor(const node of removedNodes){\n\t\t\tif(addedNodes.has(node)){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.binders.get(node)!.fireNodeRemoved()\n\t\t}\n\t}\n}","export interface NodeDataAttacher<T> {\n\tget(node: Node): T | undefined\n\tset(node: Node, value: T): void\n\tdelete(node: Node): boolean\n\thas(node: Node): boolean\n}\n\nexport function makeNodeDataAttacher<T>(key: string): NodeDataAttacher<T> {\n\treturn typeof(WeakMap) === \"undefined\" ? new PropNodeDataAttacher(key) : new WeakMapNodeDataAttacher()\n}\n\nclass WeakMapNodeDataAttacher<T> implements NodeDataAttacher<T> {\n\n\tprivate readonly map = new WeakMap<Node, T>()\n\n\tget(node: Node): T | undefined {\n\t\treturn this.map.get(node)\n\t}\n\n\tset(node: Node, value: T): void {\n\t\tthis.map.set(node, value)\n\t}\n\n\tdelete(node: Node): boolean {\n\t\treturn this.map.delete(node)\n\t}\n\n\thas(node: Node): boolean {\n\t\treturn this.map.has(node)\n\t}\n\n}\n\n// fallback for when weakmap is not available\nclass PropNodeDataAttacher<T> implements NodeDataAttacher<T> {\n\n\tconstructor(readonly key: string) {}\n\n\tget(node: Node): T | undefined {\n\t\treturn (node as Node & Record<string, T>)[this.key]\n\t}\n\n\tset(node: Node, value: T): void {\n\t\t(node as Node & Record<string, T>)[this.key] = value\n\t}\n\n\tdelete(node: Node): boolean {\n\t\tconst hasValue = this.has(node)\n\t\tdelete(node as Node & Record<string, T>)[this.key]\n\t\treturn hasValue\n\t}\n\n\thas(node: Node): boolean {\n\t\treturn this.key in node\n\t}\n\n}","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","export interface ContentTag {\n\treadonly id: ContentTagId\n\treadonly name: string\n\treadonly description: string\n}\n\nconst _tags = {\n\tsimulation: {\n\t\tname: \"Simulation\",\n\t\tdescription: \"Simplified recreation of real life patterns, regularities and effects.\"\n\t},\n\tart: {\n\t\tname: \"Art\",\n\t\tdescription: \"By my definition art is something that is created with purpose of evoking emotions.\"\n\t},\n\tthreejs: {\n\t\tname: \"THREE.js\",\n\t\tdescription: \"Visual composition that uses THREE.js to render.\"\n\t},\n\toimojs: {\n\t\tname: \"Oimo.js\",\n\t\tdescription: \"Physical simulation using Oimo.js engine.\"\n\t},\n\ttool: {\n\t\tname: \"Tool\",\n\t\tdescription: \"A thing that helps achieving some goals.\"\n\t},\n\tcss: {\n\t\tname: \"CSS\",\n\t\tdescription: \"Advanced techniques of using CSS.\"\n\t},\n\twebgl: {\n\t\tname: \"WebGL\",\n\t\tdescription: \"Usage of WebGL.\"\n\t},\n\tsvg: {\n\t\tname: \"SVG\",\n\t\tdescription: \"Usage of SVG.\"\n\t},\n\tevolution: {\n\t\tname: \"Evolution\",\n\t\tdescription: \"Demonstration of evolution.\"\n\t},\n\tgame: {\n\t\tname: \"Game\",\n\t\tdescription: \"Interactive piece of enternainment.\"\n\t}\n}\n\nexport const contentTags = (() => {\n\tconst res: Record<string, ContentTag> = {}\n\tfor(const id in _tags){\n\t\tres[id] = {..._tags[id as ContentTagId], id: id as ContentTagId}\n\t}\n\treturn res as {readonly [id in ContentTagId]: ContentTag}\n})()\n\nexport type ContentTagId = keyof typeof _tags","@import \"/src/website/style/common\";\n\n.countdown {\n\topacity: 0.5;\n\n\tcircle {\n\t\tfill: none;\n\n\t\t&:first-child {\n\t\t\tstroke: $font-color;\n\t\t}\n\n\t\t&:last-child {\n\t\t\tstroke: $foreground-secondary-color;\n\t\t\tanimation: arc 1s linear;\n\t\t\trotate: -90deg;\n\t\t}\n\t}\n}\n\n@keyframes arc {\n\t0% { stroke-dashoffset: 0px }\n}",".sketchPage {\n\twidth: 100vw;\n\theight: 100vh;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.sketchRoot {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\toverflow: hidden;\n}","type DOMEventEmitter<K, E> = {\n\taddEventListener(name: K, handler: (e: E) => void): void\n}\n\ntype DOMEventEmitterWithError<K, E> = DOMEventEmitter<K, E> & {\n\taddEventListener(name: \"error\", handler: (e: ErrorEvent) => void): void\n}\n\nexport function waitDOMEvent<K, E, I extends DOMEventEmitterWithError<K, E>>(obj: I, name: K): Promise<E> {\n\treturn new Promise((ok, bad) => {\n\t\tobj.addEventListener(\"error\", err => bad(new Error(err.message)))\n\t\tobj.addEventListener(name, e => ok(e))\n\t})\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dfdLN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"j4vlb\")).toString();","import {box, WBox} from \"common/box\"\n\nlet titleBox: WBox<string> | null = null\n\nexport function getTitleBox(): WBox<string> {\n\tif(!titleBox){\n\t\ttitleBox = box(document.title)\n\n\t\ttitleBox.subscribe(value => document.title = value)\n\t}\n\n\treturn titleBox\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aCsz7\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8314W\")).toString();","import {box, WBox} from \"common/box\"\n\nlet locationHashBox: WBox<string> | null = null\n\nexport function getLocationHashBox(): WBox<string> {\n\tif(!locationHashBox){\n\t\tconst b = locationHashBox = box(fixHash(window.location.hash))\n\n\t\twindow.addEventListener(\"hashchange\", () => b(fixHash(window.location.hash)))\n\t\tb.subscribe(value => {\n\t\t\tif(value === \"\"){\n\t\t\t\tif(window.location.hash && typeof(history) !== \"undefined\"){\n\t\t\t\t\t// removes this annoying \"#\"\n\t\t\t\t\thistory.pushState(\"\", document.title, window.location.pathname + window.location.search)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst hash = \"#\" + value\n\t\t\t// not sure if this check is actually making any difference\n\t\t\tif(window.location.hash !== hash){\n\t\t\t\twindow.location.hash = hash\n\t\t\t}\n\t\t})\n\t}\n\n\treturn locationHashBox\n}\n\nfunction fixHash(rawHash: string): string {\n\treturn rawHash.replace(/^#/, \"\")\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fprpQ\")).toString();","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {ContentTag, contentTags} from \"website/content_tags\"\nimport fallingCubesThumb from \"sketches/falling_cubes/thumb.png\"\nimport starTravelThumb from \"sketches/star_travel/thumb.png\"\nimport timerThumb from \"sketches/timer/thumb.png\"\nimport squaremix3dThumb from \"sketches/squaremix_3d/thumb.png\"\nimport notImplementedThumb from \"./default_thumbnail.png\"\n\nexport interface SketchDescription {\n\treadonly id: SketchId\n\treadonly name: string\n\treadonly description: string\n\treadonly date: Date\n\treadonly tags: readonly ContentTag[]\n\treadonly inspiration?: ContentReference[]\n\treadonly usedContent?: ContentReference[]\n\tcode(): Promise<SketchObject>\n\treadonly hidden?: boolean\n\treadonly thumbnail: string\n}\n\ninterface SketchObject {\n\tmain(root: HTMLElement): void\n}\n\nexport interface ContentReference {\n\treadonly description?: string\n\treadonly url?: string\n}\n\nconst _sketches = {\n\tdigger: {\n\t\tname: \"Digger\",\n\t\tdescription: \"Game about excavation of useful minerals.\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Old DOS game\",\n\t\t\turl: \"https://www.youtube.com/watch?v=l0yQfyJlqdA\"\n\t\t}],\n\t\tdate: new Date(2022, 7, 9),\n\t\ttags: [contentTags.game, contentTags.svg],\n\t\thidden: true,\n\t\tcode: () => import(\"sketches/digger/digger\"),\n\t\tthumbnail: notImplementedThumb\n\t},\n\n\tfalling_cubes: {\n\t\tname: \"Falling cubes\",\n\t\tdescription: \"Animation of falling cubes\",\n\t\tinspiration: [{\n\t\t\tdescription: \"A gif without clear source\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 27),\n\t\ttags: [contentTags.threejs, contentTags.oimojs],\n\t\tcode: () => import(\"sketches/falling_cubes/falling_cubes\"),\n\t\tthumbnail: fallingCubesThumb\n\t},\n\n\ttimer: {\n\t\tname: \"Timer\",\n\t\tdescription: \"Time counter with some settings\",\n\t\tinspiration: [{\n\t\t\tdescription: \"A question from chat\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 27),\n\t\ttags: [contentTags.tool],\n\t\tcode: () => import(\"sketches/timer/timer\"),\n\t\tthumbnail: timerThumb\n\t},\n\n\tsquaremix_3d: {\n\t\tname: \"Square mix\",\n\t\tdescription: \"3D-mixing animation of an image\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Some video without clear source\"\n\t\t}],\n\t\tusedContent: [{\n\t\t\tdescription: \"Photo by Jonny Gios\",\n\t\t\turl: \"https://unsplash.com/photos/B78XB_9xe6E\"\n\t\t}],\n\t\tdate: new Date(2022, 2, 25),\n\t\ttags: [contentTags.threejs],\n\t\tcode: () => import(\"sketches/squaremix_3d/squaremix_3d\"),\n\t\tthumbnail: squaremix3dThumb\n\t},\n\n\tstar_travel: {\n\t\tname: \"Star travel\",\n\t\tdescription: \"Flight through the galaxy!\",\n\t\tinspiration: [{\n\t\t\tdescription: \"Old Windows screensaver\",\n\t\t\turl: \"https://www.youtube.com/watch?v=teFHZRpH5Pw\"\n\t\t}],\n\t\tdate: new Date(2021, 8, 18),\n\t\ttags: [contentTags.art, contentTags.svg, contentTags.css],\n\t\tcode: () => import(\"sketches/star_travel/star_travel\"),\n\t\tthumbnail: starTravelThumb\n\t}\n}\n\nexport const sketchDescriptions = (() => {\n\tconst res: Record<string, SketchDescription> = {}\n\tfor(const id in _sketches){\n\t\tres[id] = {..._sketches[id as SketchId], id: id as SketchId}\n\t}\n\treturn res as {readonly [id in SketchId]: SketchDescription}\n})()\n\nexport type SketchId = keyof typeof _sketches","import {svgTag} from \"common/tag\"\nimport * as css from \"./countdown_timer.module.scss\"\n\nexport function CountdownTimer(time: number): Element {\n\tconst size = 50\n\tconst stroke = 5\n\tconst radius = (size / 2) - stroke\n\tconst len = 2 * Math.PI * radius\n\n\tconst root = svgTag({\n\t\ttagName: \"svg\",\n\t\tattrs: {width: size, height: size, viewBox: `${-size / 2} ${-size / 2} ${size} ${size}`},\n\t\tclass: css.countdown\n\t}, [\n\t\tsvgTag({tagName: \"circle\", attrs: {r: radius, \"stroke-width\": stroke}}),\n\t\tsvgTag({tagName: \"circle\",\n\t\t\tattrs: {\n\t\t\t\tr: radius,\n\t\t\t\t\"stroke-width\": stroke,\n\t\t\t\t\"stroke-dasharray\": len,\n\t\t\t\t\"stroke-dashoffset\": -len + \"px\",\n\t\t\t\t\"animation-duration\": (time / 1000) + \"s\"\n\t\t\t}})\n\t])\n\n\treturn root\n}","import {tag} from \"common/tag\"\nimport {ContentReference, SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_info_button.module.scss\"\n\nconst td = (x: number) => x < 10 ? \"0\" + x : \"\" + x\n\nconst formatDate = (date: Date) => `${date.getFullYear()}.${td(date.getMonth() + 1)}.${td(date.getDate())}`\n\nfunction renderContentRefList(title: string, items: ContentReference[]): HTMLElement {\n\tconst line = tag({class: \"sketch-info-line\", text: `${title}:`})\n\titems.forEach(item => {\n\t\tlet subline: HTMLElement\n\t\tconst text = item.description ?? item.url ?? \"???\"\n\t\tif(item.url){\n\t\t\tsubline = tag({tagName: \"a\", attrs: {href: item.url, target: \"_blank\", rel: \"noopener noreferrer\"}, text})\n\t\t} else {\n\t\t\tsubline = tag({text})\n\t\t}\n\t\tsubline.className = css.sketchInfoSubline ?? \"\"\n\t\tline.appendChild(subline)\n\t})\n\treturn line\n}\n\nexport function SketchInfoButton(d: SketchDescription): HTMLElement {\n\tconst button = tag({class: css.sketchInfoButton, text: \"i\"})\n\tbutton.addEventListener(\"click\", () => {\n\t\tconst block = tag({class: css.sketchInfoBlock})\n\n\t\tblock.appendChild(tag({text: d.name}))\n\t\tblock.appendChild(tag({text: d.description}))\n\t\tblock.appendChild(tag({tagName: \"hr\"}))\n\t\tblock.appendChild(tag({text: `Created at: ${formatDate(d.date)}`}))\n\t\t// TODO: links here\n\t\tblock.appendChild(tag({text: `Tags: ${d.tags.map(tag => tag.name).join(\", \")}`}))\n\n\t\tif(d.inspiration){\n\t\t\tblock.appendChild(renderContentRefList(\"Inspired with\", d.inspiration))\n\t\t}\n\n\t\tif(d.usedContent){\n\t\t\tblock.appendChild(renderContentRefList(\"Used content\", d.usedContent))\n\t\t}\n\n\t\tblock.appendChild(tag({tagName: \"hr\"}))\n\t\tblock.appendChild(tag({tagName: \"button\", text: \"Close\", on: {click: () => block.remove()}}))\n\n\t\tbutton.after(block)\n\t})\n\tdocument.body.appendChild(button)\n\treturn button\n}","@import \"/src/website/style/vars\";\n@import \"/src/website/style/common\";\n\n.sketchInfoButton {\n\tborder-radius: 100%;\n\tborder: 3px solid #fff;\n\topacity: 0.75;\n\tposition: absolute;\n\ttop: 0.5rem;\n\tleft: 0.5rem;\n\tcursor: pointer;\n\ttransition: 0.25s;\n\twidth: 2rem;\n    height: 2rem;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.25rem;\n    color: $font-color;\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n\n}\n\n.sketchInfoBlock {\n\t@extend .foreground-block;\n\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tcolor: $font-color;\n\tpadding: 0.5em;\n\tfont-weight: normal;\n\tborder-width: 0 2px 2px 0;\n\tline-height: 1.5em;\n\n\ta {\n\t\t@extend .text-stroke;\n\n\t\tcolor: $font-color;\n\t\ttext-decoration: none;\n\t}\n\n\thr {\n\t\theight: 0;\n\t\tborder-bottom: 2px solid $font-color;\n\t}\n\n\tbutton {\n\t\t@extend .text-stroke;\n\n\t\tbackground-color: $foreground-secondary-color;\n\t\tcolor: $font-color;\n\t\tborder: 0;\n\t\tfont-size: inherit;\n\t\tpadding: 0.35em 1.25em 0.25em 1.25em;\n\t\tcursor: pointer;\n\t}\n}\n\n.sketchInfoSubline {\n\tmargin-left: 0.5em;\n\tdisplay: block;\n}","import {MainPage} from \"website/controls/main_page\"\nimport {SketchPage} from \"website/controls/sketch_page\"\nimport {RouteDescription, Router} from \"website/router\"\nimport {sketchDescriptions, SketchId} from \"website/sketches\"\n\nexport function sketchRouteById(id: SketchId): `sketch/${SketchId}` {\n\treturn `sketch/${id}`\n}\n\nconst sketchRoutes = (() => {\n\tconst res: Record<string, RouteDescription> = {}\n\tfor(const id in sketchDescriptions){\n\t\tconst sketch = sketchDescriptions[id as SketchId]\n\t\tres[sketchRouteById(id as SketchId)] = {\n\t\t\trender: () => SketchPage(sketch),\n\t\t\ttitle: sketch.name\n\t\t}\n\t}\n\treturn res as {readonly [route in ReturnType<typeof sketchRouteById>]: RouteDescription}\n})()\n\nconst staticRoutes = {\n\t\"\": {\n\t\ttitle: \"Nartallax's personal website\",\n\t\trender: MainPage\n\t}\n}\n\nexport const routes = {\n\t...sketchRoutes,\n\t...staticRoutes\n}\n\nexport const router = new Router<keyof typeof routes>(routes, \"\")","import {tag} from \"common/tag\"\nimport {SketchBlock} from \"website/controls/sketch_block\"\nimport {sketchDescriptions} from \"website/sketches\"\nimport * as css from \"./main_page.module.scss\"\n\nexport function MainPage(): HTMLElement {\n\treturn tag({class: css.sketchesContainer},\n\t\tObject.values(sketchDescriptions)\n\t\t\t.filter(sketch => !sketch.hidden)\n\t\t\t.map(sketch => SketchBlock(sketch))\n\t)\n}",".sketchesContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: flex-start;\n\tjustify-content: center;\n\tmargin: 1.5rem;\n}","import {getTitleBox} from \"common/get_title_box\"\nimport {getLocationHashBox} from \"common/location_hash_box\"\n\nexport type RouteDescription = {\n\ttitle: string\n\trender(): Element\n}\n\nexport type RouteMap<R extends string> = {readonly [route in R]: RouteDescription}\n\ntype RouteArgumentValue = string | boolean\ntype RouteArgs = Record<string, RouteArgumentValue>\n\nexport class Router<R extends string> {\n\n\tprivate readonly hashBox = getLocationHashBox()\n\tprivate readonly titleBox = getTitleBox()\n\tprivate root: Element | null = null\n\tprivate currentArgs: RouteArgs = {}\n\n\tconstructor(private readonly routes: RouteMap<R>, private readonly defaultRoute: R) {\n\t}\n\n\tstartAt(root: Element): void {\n\t\tif(this.root){\n\t\t\tthrow new Error(\"Router already started\")\n\t\t}\n\t\tthis.root = root\n\t\tthis.hashBox.subscribe(() => this.checkHash())\n\t\tthis.checkHash()\n\t}\n\n\tformRouteURL(route: R, args?: RouteArgs): string {\n\t\tconst base = (window.location + \"\").replace(/#.*?$/, \"\")\n\t\tconst hash = this.formHash(route, args ?? {})\n\t\treturn !hash ? base : base + \"#\" + hash\n\t}\n\n\tgoTo(route: R, args?: RouteArgs): void {\n\t\tthis.hashBox(this.formHash(route, args ?? {}))\n\t}\n\n\tgetArgument(name: string): RouteArgumentValue | undefined {\n\t\treturn this.currentArgs[name]\n\t}\n\n\tprivate checkHash(): void {\n\t\tconst [route, args] = this.parseHash(this.hashBox())\n\n\t\tconst description = this.routes[route]\n\t\tif(!description){\n\t\t\tthis.hashBox(this.defaultRoute)\n\t\t\treturn\n\t\t}\n\n\t\tthis.currentArgs = args\n\t\treturn this.renderRoute(description)\n\t}\n\n\tprivate parseHash(hash: string): [R, RouteArgs] {\n\t\tconst args: RouteArgs = {}\n\t\tconst [routePart, argsPart] = hash.split(\"?\")\n\t\tif(argsPart){\n\t\t\tfor(const kv of argsPart.split(\"&\")){\n\t\t\t\tconst [k, v] = kv.split(\"=\").map(part => decodeURIComponent(part))\n\t\t\t\tif(!k){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\targs[k] = v ?? true\n\t\t\t}\n\t\t}\n\n\t\treturn [routePart as R, args]\n\t}\n\n\tprivate formHash(route: R, args: RouteArgs): string {\n\t\tlet result: string = route\n\t\tlet first = true\n\t\tfor(const [k, v] of Object.entries(args)){\n\t\t\tif(v === false){\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tresult += first ? ((first = false), \"?\") : \"&\"\n\t\t\tresult += encodeURIComponent(k)\n\t\t\tif(v !== true){\n\t\t\t\tresult += \"=\" + encodeURIComponent(v + \"\")\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tprivate renderRoute(description: RouteDescription): void {\n\t\tconst {title, render} = description\n\t\tif(!this.root){\n\t\t\tthrow new Error(\"Router not started\")\n\t\t}\n\n\t\twhile(this.root.firstChild){\n\t\t\tthis.root.firstChild.remove()\n\t\t}\n\t\tthis.root.appendChild(render())\n\t\tthis.titleBox(title)\n\t}\n\n}","import {tag} from \"common/tag\"\nimport {SketchInfoButton} from \"website/controls/sketch_info_button\"\nimport {router} from \"website/routes\"\nimport {SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_page.module.scss\"\n\nexport const noSketchInfoOnSketchPageArgName = \"no_sketch_info\"\n\nexport function SketchPage(sketch: SketchDescription): HTMLElement {\n\tconst root = tag({class: css.sketchRoot})\n\n\tconst noSketchInfo = router.getArgument(noSketchInfoOnSketchPageArgName);\n\n\t(async() => {\n\t\ttry {\n\t\t\tconst code = await sketch.code()\n\t\t\tcode.main(root)\n\t\t} catch(e){\n\t\t\tconsole.log(e)\n\t\t\troot.textContent = \"Failed to load sketch.\"\n\t\t}\n\t})()\n\n\treturn tag({class: css.sketchRoot}, [\n\t\troot,\n\t\tnoSketchInfo ? null : SketchInfoButton(sketch)\n\t])\n}","import {tag} from \"common/tag\"\nimport {waitDOMEvent} from \"common/wait_dom_event\"\nimport {CountdownTimer} from \"website/controls/countdown_timer\"\nimport {noSketchInfoOnSketchPageArgName} from \"website/controls/sketch_page\"\nimport {router, sketchRouteById} from \"website/routes\"\nimport {SketchDescription} from \"website/sketches\"\nimport * as css from \"./sketch_block.module.scss\"\n\nexport function SketchBlock(sketch: SketchDescription): HTMLElement {\n\n\tconst imgContainer = tag({class: css.imgContainer}, [\n\t\ttag({tagName: \"img\", attrs: {src: sketch.thumbnail, alt: sketch.description}})\n\t])\n\n\tconst root = tag({\n\t\tclass: css.sketch,\n\t\ton: {click: () => router.goTo(sketchRouteById(sketch.id))}\n\t}, [\n\t\timgContainer,\n\t\ttag({class: css.sketchTitle, text: sketch.name})\n\t])\n\n\tlet timer: Timer | null = null\n\troot.addEventListener(\"mouseenter\", () => {\n\t\tif(timer){\n\t\t\treturn\n\t\t}\n\t\ttimer = runSketchTimer(sketch, imgContainer, 1500)\n\t}, {passive: true})\n\n\troot.addEventListener(\"mouseleave\", () => {\n\t\ttimer?.stop()\n\t\ttimer = null\n\t}, {passive: true})\n\n\treturn root\n}\n\ninterface Timer {\n\tstop(): void\n}\n\nfunction runSketchTimer(sketch: SketchDescription, container: HTMLElement, time: number): Timer {\n\tlet stopped = false\n\tlet timerEl: HTMLElement | null = null\n\tlet sketchFrame: HTMLIFrameElement | null = null\n\n\tfunction cleanup() {\n\t\ttimerEl?.remove()\n\t\tsketchFrame?.remove()\n\t}\n\n\t(async() => {\n\t\ttimerEl = tag({\n\t\t\tclass: css.timerBackground,\n\t\t\tstyle: {animationDuration: ((time / 4) / 1000) + \"s\"}\n\t\t}, [\n\t\t\tCountdownTimer(time)\n\t\t])\n\t\tcontainer.appendChild(timerEl)\n\n\t\tawait sleep(time / 2)\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\n\t\tconst url = router.formRouteURL(sketchRouteById(sketch.id), {[noSketchInfoOnSketchPageArgName]: true})\n\t\tsketchFrame = tag({\n\t\t\ttagName: \"iframe\",\n\t\t\tclass: css.sketchPreview,\n\t\t\tattrs: {src: url}\n\t\t})\n\t\tcontainer.appendChild(sketchFrame)\n\t\tawait Promise.all([\n\t\t\tsleep(time / 2),\n\t\t\twaitDOMEvent(sketchFrame, \"load\")\n\t\t])\n\t\tif(stopped){\n\t\t\treturn\n\t\t}\n\n\t\tsketchFrame.classList.add(css.completed ?? \"\")\n\t\t// timerEl?.remove()\n\t})()\n\n\treturn {stop: () => {\n\t\tstopped = true\n\t\tcleanup()\n\t}}\n}\n\nfunction sleep(ms: number): Promise<void> {\n\treturn new Promise(ok => setTimeout(ok, ms))\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bOWbs\\\":\\\"index.9414091f.js\\\",\\\"dfdLN\\\":\\\"thumb.895f5cc7.png\\\",\\\"aCsz7\\\":\\\"thumb.77a5726d.png\\\",\\\"j4vlb\\\":\\\"thumb.33c39890.png\\\",\\\"fprpQ\\\":\\\"thumb.c40fe0b7.png\\\",\\\"8314W\\\":\\\"default_thumbnail.11ebbe69.png\\\",\\\"1Mamc\\\":\\\"digger.a7d6b2ee.js\\\",\\\"j2ESO\\\":\\\"digger.784383d6.js\\\",\\\"1XIBz\\\":\\\"falling_cubes.1e4a9fa4.js\\\",\\\"9I2D8\\\":\\\"orange_square.cef03ba2.png\\\",\\\"GZYYe\\\":\\\"falling_cubes.d3068e69.js\\\",\\\"lebhK\\\":\\\"timer.68bd9806.js\\\",\\\"7kKo2\\\":\\\"timer.7e662a0d.css\\\",\\\"bqwwZ\\\":\\\"squaremix_3d.f18da565.js\\\",\\\"6fzAl\\\":\\\"pine_forest.bc33757d.png\\\",\\\"euz4T\\\":\\\"squaremix_3d.5214cf99.css\\\",\\\"lWyzW\\\":\\\"star_travel.d6c08d49.js\\\",\\\"k7EvP\\\":\\\"star_travel.0db4ef9f.css\\\",\\\"bQr1K\\\":\\\"index.02e8ca24.css\\\"}\"));","import {router} from \"website/routes\"\n// https://github.com/parcel-bundler/parcel/issues/8716\n// this really should be included in index.html\nimport * as css from \"./style/global.module.scss\"\n\nfunction main(): void {\n\tvoid css\n\tconst appRoot = document.getElementById(\"app\")\n\tif(!appRoot){\n\t\tthrow new Error(\"No app root!\")\n\t}\n\trouter.startAt(appRoot)\n}\n\nmain()"],"names":["$50612ea8d7db7099$export$ec6bc36c360d4313","$50612ea8d7db7099$export$ae3eb07ef96eb9d8","$50612ea8d7db7099$export$e60e6cc176320a45","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$ec1a4e88f7232e38$var$noValue","Symbol","$ec1a4e88f7232e38$export$f1c386966361cb4b","constructor","el","insertedHandlers","removedHandlers","watchedBoxes","resizeObserver","resizeHandlers","lastKnownSize","this","isInDom","node","parent","parentNode","document","body","$ec1a4e88f7232e38$var$nodeIsInDom","element","Element","onNodeInserted","handler","push","onNodeRemoved","onNodeInsertedOnce","wrappedHandler","clearOnNodeInserted","onNodeRemovedOnce","clearOnNodeRemoved","$ec1a4e88f7232e38$var$dropItemFromArray","fireNodeInserted","boxes","box","value","lastKnownValue","invokeBoxHandler","subToBox","updateResizeObserver","$ec1a4e88f7232e38$var$fireAll","fireNodeRemoved","unsub","subscribe","v","_subscribe","watchedBox","watch","watchAndRun","$hsvBG","isRBox","callResizeHandlers","w","clientWidth","h","clientHeight","ResizeObserver","bind","observe","unobserve","disconnect","onResize","filter","x","$ec1a4e88f7232e38$var$binderStorage","$gc7tN","makeNodeDataAttacher","$ec1a4e88f7232e38$var$mutationBinder","$aCiCs","MutationBinder","$ec1a4e88f7232e38$export$cea74a7209884f00","init","binder","get","set","arr","item","result","handlers","$f5c28d2dcb4e1f77$export$827f4ee28efc37","$f5c28d2dcb4e1f77$var$addPrototypeToFunction","args","$f5c28d2dcb4e1f77$var$notificationStack","notifyOnAccess","tryChangeValue","$f5c28d2dcb4e1f77$var$noValue","$f5c28d2dcb4e1f77$var$ValueBox","$f5c28d2dcb4e1f77$export$74473745afe6cecc","$f5c28d2dcb4e1f77$var$BoxBase","$f5c28d2dcb4e1f77$export$c1d3dacf4f169228","fn","obj","setPrototypeOf","getPrototypeOf","assign","notificationStack","withAccessNotifications","action","onAccess","pop","stackTop","add","revision","internalSubscribers","Set","externalSubscribers","haveSubscribers","size","dispose","sub","doSubscribe","external","lastKnownRevision","delete","sub1","valueChanged","notify","valueRevision","maybeCallSubscriber","map","mapper","$f5c28d2dcb4e1f77$var$makeViewBox","wrapElements","getKey","$f5c28d2dcb4e1f77$var$makeViewBoxByClassInstance","$f5c28d2dcb4e1f77$var$ArrayValueWrapViewBox","prop","propKey","Array","isArray","$f5c28d2dcb4e1f77$var$makeUpstreamBox","$f5c28d2dcb4e1f77$var$FixedPropValueBox","$f5c28d2dcb4e1f77$var$ValueBoxWithUpstream","upstream","super","upstreamUnsub","fetchValueFromUpstream","extractValueFromUpstream","getUpstreamValue","shouldBeSubscribed","doOnUpstreamChange","upstreamValue","ourValue","notifyUpstreamOnChange","upstreamObject","buildUpstreamValue","getBoxValue","tryUpdateUpstreamSub","shouldBeSub","subToUpstream","unsubFromUpstream","getEmptyValue","toString","instance","$f5c28d2dcb4e1f77$var$ViewBox","explicitDependencyList","subDisposers","onDependencyListUpdated","boundCalcVal","subDispose","forEach","shouldRecalcValue","recalcValueAndResubscribe","forceSubscribe","oldSubDisposers","newValue","depList","calc","calculateValue","boxesAccessed","doOnDependencyUpdated","subDisposer","slice","getValue","$f5c28d2dcb4e1f77$var$ComputingFnViewBox","computingFn","childMap","Map","outdatedKeys","upstreamArray","index","key","has","$f5c28d2dcb4e1f77$var$ArrayElementValueBox","tryUpdateChildrenValues","notifyValueChanged","existingBox","oldBoxKey","throwDetachedError","disposed","checkNotDisposed","module","exports","Promise","all","import","parcelRequire","resolve","then","URL","meta","url","$lovBw","bundle","reject","existingLinks","getElementsByTagName","concat","some","link","href","rel","indexOf","createElement","onerror","e","onload","remove","appendChild","$695512ce11bf5a1b$export$7140fce7acc49c5c","binders","observer","MutationObserver","doWithRecords","childList","subtree","collectEligibleNodes","nodes","children","childNodes","records","addedNodesArr","removedNodesArr","record","j","addedNodes","j1","removedNodes","node1","$8a7ba224764c5aa0$export$cfd492373f61d2e7","WeakMap","$8a7ba224764c5aa0$var$PropNodeDataAttacher","$8a7ba224764c5aa0$var$WeakMapNodeDataAttacher","hasValue","$f9345ad2c034f768$var$cachedBundles","$f9345ad2c034f768$var$cachedPreloads","$f9345ad2c034f768$var$cachedPrefetches","$f9345ad2c034f768$var$getCache","type","loader","cache","apply","arguments","catch","$cc3d98a157040476$var$_tags","simulation","name","description","art","threejs","oimojs","tool","css","webgl","svg","evolution","game","$cc3d98a157040476$export$47082abbc0af17a1","res","$6dbf32604ddb433c$export$250edc47c8b9bcda","$391ab960b5de8fc4$export$9d1bf630f3954f4c","ok","bad","addEventListener","err","message","$1925b7f41a90027c$exports","$3032e6c47096a6bf$exports","$7ba39f8f74bb16db$var$titleBox","$8e643948a580f526$exports","$bc85951f2b6a236c$exports","$2ba5277830cf9310$var$locationHashBox","$2ba5277830cf9310$export$24f7ae8818cce0ab","b","$2ba5277830cf9310$var$fixHash","window","location","hash","history","pushState","title","pathname","search","rawHash","replace","$d698a4afa57f054f$exports","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","parts","callback","$hIDiW","getBinder","makeClassnameAndCallTheCallback","bool","classname","unbox","classname1","join","$4c0fbf616468c6ce$var$resolveArgs","a","$4c0fbf616468c6ce$var$populateTag","tagBase","text","textContent","on","evtName","passive","capture","k","attrs","removeAttribute","setAttribute","vv","setChildren","childTags","newChildren","childTag","insertBefore","$4c0fbf616468c6ce$var$updateChildren","class","classList","$4c0fbf616468c6ce$export$2b067c6666111485","tagName","style","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$84f20594402ef630$var$_sketches","digger","inspiration","date","Date","tags","hidden","code","thumbnail","$parcel$interopDefault","falling_cubes","timer","squaremix_3d","usedContent","star_travel","$84f20594402ef630$export$da62565e78407c06","$45b32a36a8bb979b$export$5a0af15366b01c51","time","len","Math","PI","width","height","viewBox","r","$251d3f1e864a093c$var$td","$251d3f1e864a093c$var$renderContentRefList","items","line","subline","target","className","$251d3f1e864a093c$export$e96b0cc86697ef4f","d","button","block","getFullYear","getMonth","getDate","tag","click","after","$687723d5a963eec5$export$ec4993ac24624814","$687723d5a963eec5$export$66b32f6f30eb4b4","sketch","render","$fdc73c545616147a$export$1b7a87d0522895ac","values","$7f82397446221d45$export$f17c5c5bd65f8652","$687723d5a963eec5$export$5375cda95f0b0eb4","routes","defaultRoute","hashBox","titleBox","root","currentArgs","startAt","checkHash","formRouteURL","route","base","formHash","goTo","getArgument","parseHash","renderRoute","routePart","argsPart","split","kv","part","decodeURIComponent","first","entries","encodeURIComponent","firstChild","$fdc73c545616147a$export$eb15f45eafa2a838","noSketchInfo","main","console","log","imgContainer","src","alt","container","stopped","timerEl","sketchFrame","cleanup","animationDuration","$7f82397446221d45$var$sleep","stop","$7f82397446221d45$var$runSketchTimer","ms","setTimeout","register","JSON","parse","appRoot","getElementById","$f026dfee1ec1271b$var$main"],"version":3,"file":"index.9414091f.js.map"}