{"mappings":"mXAAA,IAAAA,EAAAC,EAAA,S,8EAWA,IAAIC,EAA+B,KAC/BC,EAAmC,KAEvCC,eAAeC,EAAKC,GACnB,MAAMC,EAAWD,EAAKE,wBAEtBF,EAAKG,UAAUC,IAAIC,EAAAL,MAAY,IAE5BJ,IACFA,EAAIU,SACJV,EAAM,MAEPA,GAAM,EAAAW,EAAAC,KAAI,CAACC,QAAS,MAAOC,MAAO,CAACC,IAAKC,EAAAC,IAAQC,MAAOT,EAAAU,eACpDd,EAASe,MAAQf,EAASgB,OAhBX,KACC,KAgBlBrB,EAAIsB,MAAMC,SAAW,QAErBvB,EAAIsB,MAAME,UAAY,QAEvBpB,EAAKqB,YAAYzB,SACX,EAAA0B,EAAAC,cAAa3B,EAAK,QAExB,IAAI4B,GAAW,EAEf,MAAMC,EAAU7B,EAAIM,wBACdwB,EAASD,EAAQT,MAAQf,EAASe,MAClCW,EAASF,EAAQR,OAAShB,EAASgB,OACnCW,EAAQ,IAAIlC,EAAAmC,MACZC,EAAS,IAAIpC,EAAAqC,oBAAyB,GAAOL,EAAQ,GAAMA,GAAQ,GAAOC,EAAQ,GAAMA,EAAQ,GAAK,KAC3GG,EAAOE,SAASC,EAAI,EACpBH,EAAOE,SAASE,EAAIJ,EAAOE,SAASG,EAAI,EACxCL,EAAOM,OAAO,EAAG,EAAG,GACpBN,EAAOO,QAAQC,KAAKC,IAEpB,MAAMC,EAAaf,EAAQR,OAAS,IAAM,EAAI,IAAM,GAC9CwB,EAAeH,KAAKI,KAAKjB,EAAQR,OAASuB,GAC1CG,EAAYL,KAAKI,KAAKjB,EAAQT,MAAQwB,GAEtCI,EAAW,IAAIlD,EAAAmD,cAErBD,EAASE,QAAQ7C,EAASe,MAAOf,EAASgB,QAE1C,MAAM8B,EAAgB,IAAIrD,EAAAsD,cACpBC,QAAgBF,EAAcG,UAAUtD,EAAIe,KAC5CwC,EAAW,IAAIzD,EAAA0D,kBAAwB,CAACC,IAAKJ,IAcnDnD,eAAewD,IACd,IAAG9B,EAAH,CAGAA,GAAW,EACX,IACC,MAAM+B,EAAS,IAAIC,EAAgBf,EAAcE,EAAWf,EAAOuB,EAAUrB,GAAQ,IAAMc,EAASa,OAAO7B,EAAOE,WAC5GyB,EAAOG,KAGd,CAFA,QACClC,GAAW,CACZ,CARC,CASF,CAvBG3B,IACFA,EAAOS,SACPT,EAAS,MAEVA,EAAS+C,EAASe,WAClB9D,EAAOM,UAAUC,IAAIC,EAAAuD,iBAAuB,IAC5ChE,EAAIiE,MAAMhE,GACVA,EAAOiE,iBAAiB,QAASR,GACjC1D,EAAIU,SAEJgD,GAcD,CAEO,SAASS,EAAK/D,GACpBD,EAAKC,IAEL,EAAAgE,EAAAC,WAAUjE,GAAMkE,UAAS,EAAAC,EAAAC,UAAS,KAAK,IAAMrE,EAAKC,KACnD,CAEA,MAAMwD,EAMLa,YACkB5B,EACAE,EACAf,EACAuB,EACArB,EACA2B,G,kBALAhB,E,eACAE,E,WACAf,E,cACAuB,E,YACArB,E,YACA2B,E,KATDa,aAAe,GAW/BC,KAAKC,WAAaD,KAAKE,sBAAsBhC,EAAcE,GAC3D4B,KAAKG,MAAQ,IAAIhF,EAAAiF,MACjBJ,KAAK3C,MAAMxB,IAAImE,KAAKG,MACrB,CAEA5E,YA6HD,IAA8B8E,EAA4BC,EA5HxDN,KAAKO,wBA4HuBF,EA1HD,EAAI,EA0HyBC,EA1HtBE,IACjCR,KAAKG,MAAMM,SAAS7C,EAAIG,KAAMC,GAAK,GAAM,EAAKwC,EAAY,GAC1DR,KAAKzC,OAAOkD,SAAS/C,EAAIK,KAAMC,GAAK,GAAMwC,EAAW,GACrDR,KAAKd,QAAM,EAwHN,IAAIwB,SAAQ,CAACC,EAAIC,KACvB,IAAIJ,EAAW,EACXK,EAAiBC,KAAKC,MAC1B,MAAMC,EAAiB,KACtB,MAAMC,EAAaH,KAAKC,MACxB,IACCT,EAAUvC,KAAKmD,IAAI,EAAGV,GAIvB,CAHE,MAAMW,GAEP,YADAP,EAAIO,EAEL,CACGX,EAAW,EACbY,sBAAsBJ,GAEtBL,IAEDH,GAAYH,IAAuBY,EAAaJ,GAAkB,KAClEA,EAAiBI,CAAA,EAElBD,GAAA,KAxIAhB,KAAKqB,SACN,CAEQnB,sBAAsBoB,EAAiBC,GAC9C,MAEMC,EAAS,IAAIC,MAAMH,GACzB,IAAI,IAAII,EAAI,EAAGA,EAAIJ,EAASI,IAAI,CAC/B,MAAMC,EAASH,EAAOE,GAAK,IAAID,MAAMF,GACrC,IAAI,IAAIK,EAAI,EAAGA,EAAIL,EAAMK,IAAI,CAE5B,IAAIC,EAAQP,EAAWI,EAPH,GAMiC,EAAjB3D,KAAM+D,SAAgB,GAE1DD,EAAQ9D,KAAKmD,IAAI,EAAGnD,KAAKgE,IAAI,EAAGhE,KAAKiE,MAAMH,GAASP,IACpDK,EAAOC,GAAKC,CACb,CACD,CAEA,OAAOL,CACR,CAEQjB,kBACP,IAAI,IAAI5C,EAAI,EAAGA,EAAIqC,KAAKC,WAAWgC,OAAQtE,IAC1C,IAAI,IAAIC,EAAI,EAAGA,EAAIoC,KAAKC,WAAWtC,GAAIsE,OAAQrE,IAC9CoC,KAAKkC,qBAAqBvE,EAAGC,EAAGoC,KAAKC,WAAWtC,GAAIC,IAItD,MAAMuE,EAAQnC,KAAKoC,kBAAkB,EAAG,EAAG,EAAG,GAC9CD,EAAME,YAAW,IACjBF,EAAMG,YAAW,IACjBH,EAAMI,YAAW,IACjBJ,EAAMK,SAASzE,KAAKC,GAAK,EAC1B,CAEQkE,qBAAqBvE,EAAWC,EAAWlB,GAClDsD,KAAKyC,YAAY9E,EAAGC,EAAGlB,GACvBsD,KAAK0C,aAAa/E,EAAGC,EAAGlB,EACzB,CAEQgG,aAAa/E,EAAWC,EAAWlB,GAC1C,GAAc,IAAXA,EACF,OAED,MAAMyF,EAAQnC,KAAKoC,kBAClB,EAAI1F,EAAQ,EACZkB,EAAIoC,KAAK5B,WAAYR,EAAI,GAAKoC,KAAK5B,WAGpC+D,EAAMK,SAASzE,KAAKC,GAAK,GAEzBmE,EAAME,WAAW,GAAM3F,GACvByF,EAAMG,WAAW1E,EAAIoC,KAAK5B,UAAY,IACtC+D,EAAMI,aAAa5E,EAAI,GAAKqC,KAAK9B,aAAe,GACjD,CAEQuE,YAAY9E,EAAWC,EAAWlB,GACzC,MAAMyF,EAAQnC,KAAKoC,kBAClBzE,EAAIqC,KAAK9B,cAAeP,EAAI,GAAKqC,KAAK9B,aACtCN,EAAIoC,KAAK5B,WAAYR,EAAI,GAAKoC,KAAK5B,WACnC,GAGD+D,EAAME,WAAW1E,EAAIqC,KAAK9B,aAAe,IACzCiE,EAAMG,WAAW1E,EAAIoC,KAAK5B,UAAY,IACtC+D,EAAMI,WAAW,GAAM7F,EACxB,CAEQ0F,kBAAkBO,EAAcC,EAAeC,EAAaC,EAAgBC,GAAS,GAC5F,MAAMC,EAAO,IAAI7H,EAAA8H,cACjBjD,KAAKD,aAAamD,KAAKF,GACvB,MAAMb,EAAQ,IAAIhH,EAAAgI,KAAWH,EAAMhD,KAAKpB,UAElCwE,EAAKJ,EAAKK,WAAWD,GAC3B,GAAIL,EAKG,CACN,MAAMO,EAAI,EAAIT,EAAKjB,EAAI,EAAIkB,EACrBS,EAAIZ,EAAMa,EAAIZ,EACpB,IAAI,IAAIa,EAAI,EAAGA,EAAIL,EAAGM,MAAOD,IACV,IAAfL,EAAGO,KAAKF,GACQ,IAAfL,EAAGQ,KAAKH,GACVL,EAAGS,MAAMJ,EAAGH,EAAGC,GAEfH,EAAGS,MAAMJ,EAAG7B,EAAG2B,GAEQ,IAAfH,EAAGQ,KAAKH,GACjBL,EAAGS,MAAMJ,EAAGH,EAAGE,GAEfJ,EAAGS,MAAMJ,EAAG7B,EAAG4B,EAGlB,MApBC,IAAI,IAAIM,EAAI,EAAGA,EAAIV,EAAGM,MAAOI,IAC5BV,EAAGW,KAAKD,EAAkB,IAAfV,EAAGO,KAAKG,GAAWnB,EAAOC,GACrCQ,EAAGY,KAAKF,EAAkB,IAAfV,EAAGQ,KAAKE,GAAWjB,EAAMC,GAmBtCM,EAAGa,aAAc,EAEjB,MAAMC,EAAUtB,EAAQD,EAAMwB,EAAUrB,EAASD,EAC3CuB,EAAMpB,EAAKK,WAAW5F,SAC5B,IAAI,IAAI4G,EAAI,EAAGA,EAAID,EAAIV,MAAOW,IAC7BD,EAAIL,KAAKM,EAAGD,EAAIT,KAAKU,GAAK,EAAI,EAAIH,GAClCE,EAAIJ,KAAKK,EAAGD,EAAIR,KAAKS,GAAK,EAAI,EAAIF,GAKnC,OAHAC,EAAIH,aAAc,EAClBjE,KAAKG,MAAMtE,IAAIsG,GAERA,CACR,CAEQd,UACPrB,KAAKD,aAAauE,SAAQ3G,GAAKA,EAAE0D,YACjCrB,KAAKD,aAAakC,OAAS,EAC3BjC,KAAK3C,MAAMtB,OAAOiE,KAAKG,MACxB,E,sCC7NM,SAASoE,EAA6DC,EAAQC,GACpF,OAAO,IAAI/D,SAAQ,CAACC,EAAIC,KACvB4D,EAAIjF,iBAAiB,SAASmF,GAAO9D,EAAI,IAAI+D,MAAMD,EAAIE,YACvDJ,EAAIjF,iBAAiBkF,GAAMtD,GAAKR,EAAGQ,IAAA,GAErC,C,kICbA,IAAA1B,EAAArE,EAAA,S,0BA+BA,SAASyJ,EAAeC,EAAoBtB,GAC3C,OAAIsB,EAEMrD,MAAMsD,QAAQD,KAAM,EAAAE,EAAAC,QAAOH,GAC7B,CAAC,CAAC,EAAQA,GAEV,CAACA,EAAQtB,GAJT,CAAC,CAAC,EAAQA,EAMnB,CAEA,SAAS0B,EAAiCC,EAAkBC,EAAmCC,GAC9F,IAAIC,EAAwB,KAE5B,GAAGF,EAAYG,KAAK,CACnB,MAAMA,EAAOH,EAAYG,MACtB,EAAAP,EAAAC,QAAOM,KACRD,KAAW,EAAA7F,EAAAC,WAAUyF,IAAUK,MAAuBD,GAAMA,IAC5DJ,EAAQM,YAAcF,EAAO,MAG/BJ,EAAQM,aAAc,EAAAT,EAAAU,OAAMH,GAAQ,EACrC,CAEA,GAAGH,EAAYO,GACd,IAAI,MAAMC,KAAWR,EAAYO,GAAG,CACnC,MAAME,EAAUT,EAAYO,GAAGC,GAK/BT,EAAQ5F,iBAAiBqG,EAASC,EAAgB,CAACC,SAAS,EAAMC,SAAS,GAC5E,CAGD,IAAI,MAAMC,KAAKZ,EAAYjJ,MAAM,CAChC,MAAM8J,EAAIb,EAAYjJ,MAAM6J,IACzB,EAAAhB,EAAAC,QAAOgB,KACRX,KAAW,EAAA7F,EAAAC,WAAUyF,IAAUK,MAA0CS,GAAGA,IACzEA,QACFd,EAAQe,gBAAgBF,GAExBb,EAAQgB,aAAaH,EAAGC,EAAI,OAI/B,MAAMG,GAAK,EAAApB,EAAAU,OAAMO,GACdA,SACFd,EAAQgB,aAAaH,EAAGI,EAAK,GAE/B,CAEA,GAAGf,EAAS,CACX,MAAMgB,EAAehB,IACpB,MAAMiB,EAAYjB,EAASkB,QAAO5I,KAAOA,KAuE5C,SAAwB6I,EAAiBC,GACxC,IAAI,IAAI3C,EAAI,EAAGA,EAAI2C,EAAYxE,OAAQ6B,IAAI,CAC1C,MAAM4C,EAAWD,EAAY3C,GACvBnG,EAAI6I,EAAOG,WAAW7C,GACzBnG,IAAM+I,IAGN/I,EACF6I,EAAOI,aAAaF,EAAU/I,GAE9B6I,EAAO1J,YAAY4J,GAErB,CAEA,KAAMF,EAAOG,WAAWF,EAAYxE,SACnCuE,EAAOG,WAAWF,EAAYxE,QAASlG,QAEzC,CAvFG8K,CAAe1B,EAASmB,EAAA,GAGtB,EAAAtB,EAAAC,QAAOI,KACRC,KAAW,EAAA7F,EAAAC,WAAUyF,IAAUK,MAAMH,GAAUA,IAC/CgB,EAAYhB,EAAA,IAGdgB,GAAY,EAAArB,EAAAU,OAAML,GACnB,CAYA,OAVGD,EAAY7I,QACd+I,GAAS,EAAAwB,EAAAC,eACRzB,EACAH,EACAC,EAAY7I,OAEZyK,GAAa7B,EAAQvJ,UAAUqL,MAAQD,KACnC1B,GAGCA,CACR,CAOO,SAAS4B,EAAmDpC,EAAwCtB,GAC1G,MAAO4B,EAAaC,GAAYR,EAAYC,EAAGtB,GAEzC2B,EAAUgC,SAASC,cAAchC,EAAYlJ,SAAW,OAE9D,IAAIoJ,EAASJ,EAAYC,EAASC,EAAaC,GAE/C,GAAGD,EAAYzI,MACd,IAAI,MAAMqJ,KAAKZ,EAAYzI,MAAM,CAChC,MAAMsJ,EAAIb,EAAYzI,MAAMqJ,IACzB,EAAAhB,EAAAC,QAAOgB,KACRX,KAAW,EAAA7F,EAAAC,WAAUyF,IAAUK,MAAuBS,GAAGA,IACzDd,EAAQxI,MAAMqJ,GAAKC,EAAI,MAGzBd,EAAQxI,MAAMqJ,IAAK,EAAAhB,EAAAU,OAAMN,EAAYzI,MAAMqJ,IAAO,EACnD,CAGD,OAAOb,CACR,CAOO,SAASkC,EAAmDvC,EAAuCtB,GACzG,MAAO4B,EAAaC,GAAYR,EAAYC,EAAGtB,GAEzC2B,EAAUgC,SAASG,gBAAgB,6BAA8BlC,EAAYlJ,SAAW,KAQ9F,MAN2B,QAAxBkJ,EAAYlJ,SACdiJ,EAAQoC,eAAe,gCAAiC,cAAe,gCAGxErC,EAAYC,EAASC,EAAaC,GAE3BF,CACR,C,2ECzJA,IAAA1F,EAAArE,EAAA,S,aAOO,SAASoM,EAAclC,EAAuBmC,EAAYC,EAAuBC,GACvF,MAAMC,EAAMnG,MAAMsD,QAAQ2C,GAASA,EAAQ,CAACA,GAC5C,IAAI,MAAMG,KAAQD,EACjB,IAAG,EAAA5C,EAAAC,QAAO4C,IACRvC,KAAW,EAAA7F,EAAAC,WAAU+H,IAAOjC,MAAMqC,EAAMC,QACnC,GAAGD,GAAyB,iBAAVA,EACxB,IAAI,MAAME,KAAOF,EAAK,CACrB,MAAMG,EAAOH,EAAKE,IACf,EAAA/C,EAAAC,QAAO+C,KACR1C,KAAW,EAAA7F,EAAAC,WAAU+H,IAAOjC,MAAMwC,EAAMF,EAE3C,CAIF,SAASA,IACR,MAAMtG,EAAS,GACf,IAAI,MAAMqG,KAAQD,EACjB,GAAGC,GAAyB,iBAAVA,EACjB,IAAI,MAAMb,KAAaa,GACnB,EAAA7C,EAAAU,OAAMmC,EAAKb,KACbxF,EAAO0B,KAAK8D,OAGR,CACN,MAAMiB,GAAY,EAAAjD,EAAAU,OAAMmC,GACrBI,GACFzG,EAAO0B,KAAK+E,EAEd,CAEDN,EAASnG,EAAO0G,KAAK,KACtB,CAIA,OAFAJ,IAEOxC,CACR,C,sCC5CA,IAAA6C,EACAC,EACAC,E,kIAFAF,EAAoC,yBACpCC,EAAiC,sBACjCC,EAAyB,a,sCCFzBC,EAAAC,QAAiB,IAAAC,IAAoBpN,EAAA,SAAAqN,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,U,sCCsB5F,IAAAC,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdnF,EAAI,EAAGA,EAAIoF,EAAKjH,OAAQ6B,IAC/BkF,EAAQE,EAAKpF,IAAMmF,EAAMC,EAAKpF,GAElC,EAaAiF,EAXA,SAAiBK,GACf,IAAIC,EAAWL,EAAQI,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAI1E,MAAM,oCAAsCyE,GAGxD,OAAOC,CACT,C,sCCpBO,SAASC,EAASC,EAAc1D,GACtC,IAAI2D,EAA8C,KAElD,MAAO,KACFA,IACHA,EAAQC,YAAW,KAClBD,EAAQ,KACR3D,GAAA,GACE0D,GAAA,CAGN,C","sources":["src/sketches/squaremix_3d/squaremix_3d.ts","src/common/wait_dom_event.ts","src/common/tag.ts","src/common/classname.ts","src/sketches/squaremix_3d/squaremix_3d.module.scss","node_modules/@parcel/runtime-js/lib/runtime-c41bfbec62fc9b8f.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/common/debounce.ts"],"sourcesContent":["import * as THREE from \"three\"\nimport {waitDOMEvent} from \"common/wait_dom_event\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./squaremix_3d.module.scss\"\nimport {getBinder} from \"common/binder/binder\"\nimport image from \"./pine_forest.png\"\nimport {debounce} from \"common/debounce\"\n\nconst imageWidth = 1920\nconst imageHeight = 1080\n\nlet img: HTMLImageElement | null = null\nlet canvas: HTMLCanvasElement | null = null\n\nasync function init(root: HTMLElement): Promise<void> {\n\tconst bodyRect = root.getBoundingClientRect()\n\n\troot.classList.add(css.root ?? \"\")\n\n\tif(img){\n\t\timg.remove()\n\t\timg = null\n\t}\n\timg = tag({tagName: \"img\", attrs: {src: image}, class: css.initialImage})\n\tif(bodyRect.width / bodyRect.height > imageWidth / imageHeight){\n\t\timg.style.maxWidth = \"100vw\"\n\t} else {\n\t\timg.style.maxHeight = \"100vh\"\n\t}\n\troot.appendChild(img)\n\tawait waitDOMEvent(img, \"load\")\n\n\tlet isActive = false\n\n\tconst imgRect = img.getBoundingClientRect()\n\tconst xRatio = imgRect.width / bodyRect.width\n\tconst yRatio = imgRect.height / bodyRect.height\n\tconst scene = new THREE.Scene()\n\tconst camera = new THREE.OrthographicCamera(-0.5 / xRatio, 0.5 / xRatio, -0.5 / yRatio, 0.5 / yRatio, 0.1, 1000)\n\tcamera.position.z = 2\n\tcamera.position.x = camera.position.y = 0\n\tcamera.lookAt(0, 0, 0)\n\tcamera.rotateZ(Math.PI)\n\n\tconst squareSize = imgRect.height / 100 > 8 ? 100 : 25\n\tconst columnsCount = Math.ceil(imgRect.height / squareSize)\n\tconst rowsCount = Math.ceil(imgRect.width / squareSize)\n\n\tconst renderer = new THREE.WebGLRenderer()\n\t// renderer.setSize(rect.width, rect.height)\n\trenderer.setSize(bodyRect.width, bodyRect.height)\n\n\tconst textureLoader = new THREE.TextureLoader()\n\tconst texture = await textureLoader.loadAsync(img.src)\n\tconst material = new THREE.MeshBasicMaterial({map: texture})\n\n\tif(canvas){\n\t\tcanvas.remove()\n\t\tcanvas = null\n\t}\n\tcanvas = renderer.domElement\n\tcanvas.classList.add(css.squaremixCanvas ?? \"\")\n\timg.after(canvas)\n\tcanvas.addEventListener(\"click\", runAction)\n\timg.remove()\n\n\trunAction()\n\n\tasync function runAction(): Promise<void> {\n\t\tif(isActive){\n\t\t\treturn\n\t\t}\n\t\tisActive = true\n\t\ttry {\n\t\t\tconst action = new TransformAction(columnsCount, rowsCount, scene, material, camera, () => renderer.render(scene, camera))\n\t\t\tawait action.run()\n\t\t} finally {\n\t\t\tisActive = false\n\t\t}\n\t}\n}\n\nexport function main(root: HTMLElement): void {\n\tinit(root)\n\n\tgetBinder(root).onResize(debounce(250, () => init(root)))\n}\n\nclass TransformAction {\n\n\tprivate readonly colHeights: number[][]\n\tprivate readonly disposeables = [] as {dispose(): void}[]\n\tprivate readonly group: THREE.Group\n\n\tconstructor(\n\t\tprivate readonly columnsCount: number,\n\t\tprivate readonly rowsCount: number,\n\t\tprivate readonly scene: THREE.Scene,\n\t\tprivate readonly material: THREE.Material,\n\t\tprivate readonly camera: THREE.Camera,\n\t\tprivate readonly render: () => void\n\t) {\n\t\tthis.colHeights = this.generateColumnHeights(columnsCount, rowsCount)\n\t\tthis.group = new THREE.Group()\n\t\tthis.scene.add(this.group)\n\t}\n\n\tasync run(): Promise<void> {\n\t\tthis.generateObjects()\n\n\t\tawait forEachFrameProgress(1 / 4, progress => {\n\t\t\tthis.group.rotation.y = (Math.PI / 2) * ((1 - progress) + 2)\n\t\t\tthis.camera.rotation.z = (Math.PI / 2) * (progress + 2)\n\t\t\tthis.render()\n\t\t})\n\n\t\tthis.dispose()\n\t}\n\n\tprivate generateColumnHeights(columns: number, rows: number): number[][] {\n\t\tconst maxDerivation = 3\n\n\t\tconst result = new Array(columns) as number[][]\n\t\tfor(let c = 0; c < columns; c++){\n\t\t\tconst column = result[c] = new Array(rows) as number[]\n\t\t\tfor(let r = 0; r < rows; r++){\n\t\t\t\tconst derivation = maxDerivation * ((Math.random() * 2) - 1) // +- maxDerivation\n\t\t\t\tlet depth = (columns - c) + derivation\n\t\t\t\tdepth = Math.min(1, Math.max(0, Math.round(depth) / columns))\n\t\t\t\tcolumn[r] = depth\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tprivate generateObjects(): void {\n\t\tfor(let x = 0; x < this.colHeights.length; x++){\n\t\t\tfor(let y = 0; y < this.colHeights[x]!.length; y++){\n\t\t\t\tthis.generateColumnObject(x, y, this.colHeights[x]![y]!)\n\t\t\t}\n\t\t}\n\n\t\tconst plane = this.makeAddSlicePlane(0, 1, 0, 1)\n\t\tplane.translateX(-0.5)\n\t\tplane.translateY(-0.5)\n\t\tplane.translateZ(-0.5)\n\t\tplane.rotateY(-Math.PI / 2)\n\t}\n\n\tprivate generateColumnObject(x: number, y: number, height: number): void {\n\t\tthis.addTopPlane(x, y, height)\n\t\tthis.addSidePlane(x, y, height)\n\t}\n\n\tprivate addSidePlane(x: number, y: number, height: number): void {\n\t\tif(height === 0){\n\t\t\treturn\n\t\t}\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\t1 - height, 1,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount\n\t\t)\n\n\t\tplane.rotateY(-Math.PI / 2)\n\n\t\tplane.translateX(0.5 - height)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(-(x + 1) / this.columnsCount + 0.5)\n\t}\n\n\tprivate addTopPlane(x: number, y: number, height: number): void {\n\t\tconst plane = this.makeAddSlicePlane(\n\t\t\tx / this.columnsCount, (x + 1) / this.columnsCount,\n\t\t\ty / this.rowsCount, (y + 1) / this.rowsCount,\n\t\t\ttrue\n\t\t)\n\n\t\tplane.translateX(x / this.columnsCount - 0.5)\n\t\tplane.translateY(y / this.rowsCount - 0.5)\n\t\tplane.translateZ(0.5 - height)\n\t}\n\n\tprivate makeAddSlicePlane(left: number, right: number, top: number, bottom: number, rotate = false): THREE.Object3D {\n\t\tconst geom = new THREE.PlaneGeometry()\n\t\tthis.disposeables.push(geom)\n\t\tconst plane = new THREE.Mesh(geom, this.material)\n\n\t\tconst uv = geom.attributes.uv!\n\t\tif(!rotate){\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tuv.setX(i, uv.getX(i) === 0 ? left : right)\n\t\t\t\tuv.setY(i, uv.getY(i) === 0 ? top : bottom)\n\t\t\t}\n\t\t} else {\n\t\t\tconst l = 1 - top, r = 1 - bottom\n\t\t\tconst t = left, b = right\n\t\t\tfor(let i = 0; i < uv.count; i++){\n\t\t\t\tif(uv.getX(i) === 0){\n\t\t\t\t\tif(uv.getY(i) === 0){\n\t\t\t\t\t\tuv.setXY(i, l, t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuv.setXY(i, r, t)\n\t\t\t\t\t}\n\t\t\t\t} else if(uv.getY(i) === 0){\n\t\t\t\t\tuv.setXY(i, l, b)\n\t\t\t\t} else {\n\t\t\t\t\tuv.setXY(i, r, b)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tuv.needsUpdate = true\n\n\t\tconst xOffset = right - left, yOffset = bottom - top\n\t\tconst pos = geom.attributes.position!\n\t\tfor(let i = 0; i < pos.count; i++){\n\t\t\tpos.setX(i, pos.getX(i) < 0 ? 0 : xOffset)\n\t\t\tpos.setY(i, pos.getY(i) < 0 ? 0 : yOffset)\n\t\t}\n\t\tpos.needsUpdate = true\n\t\tthis.group.add(plane)\n\n\t\treturn plane\n\t}\n\n\tprivate dispose(): void {\n\t\tthis.disposeables.forEach(x => x.dispose())\n\t\tthis.disposeables.length = 0\n\t\tthis.scene.remove(this.group)\n\t}\n}\n\nfunction forEachFrameProgress(incrementPerSecond: number, doOnFrame: (progress: number) => void): Promise<void> {\n\treturn new Promise((ok, bad) => {\n\t\tlet progress = 0\n\t\tlet prevFrameStart = Date.now()\n\t\tconst wrappedHandler = () => {\n\t\t\tconst frameStart = Date.now()\n\t\t\ttry {\n\t\t\t\tdoOnFrame(Math.min(1, progress))\n\t\t\t} catch(e){\n\t\t\t\tbad(e)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(progress < 1){\n\t\t\t\trequestAnimationFrame(wrappedHandler)\n\t\t\t} else {\n\t\t\t\tok()\n\t\t\t}\n\t\t\tprogress += incrementPerSecond * ((frameStart - prevFrameStart) / 1000)\n\t\t\tprevFrameStart = frameStart\n\t\t}\n\t\twrappedHandler()\n\t})\n}","type DOMEventEmitter<K, E> = {\n\taddEventListener(name: K, handler: (e: E) => void): void\n}\n\ntype DOMEventEmitterWithError<K, E> = DOMEventEmitter<K, E> & {\n\taddEventListener(name: \"error\", handler: (e: ErrorEvent) => void): void\n}\n\nexport function waitDOMEvent<K, E, I extends DOMEventEmitterWithError<K, E>>(obj: I, name: K): Promise<E> {\n\treturn new Promise((ok, bad) => {\n\t\tobj.addEventListener(\"error\", err => bad(new Error(err.message)))\n\t\tobj.addEventListener(name, e => ok(e))\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}",".squaremixCanvas {\n\tcursor: pointer;\n}\n\n.initialImage {\n\twidth: auto;\n\theight: auto;\n}\n\n.root {\n\toverflow: hidden;\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6fzAl\")).toString();","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export function debounce(time: number, handler: () => void): () => void {\n\tlet timer: ReturnType<typeof setTimeout> | null = null\n\n\treturn () => {\n\t\tif(!timer){\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t}, time)\n\t\t}\n\t}\n}"],"names":["$ilwiq","parcelRequire","$5d7ba6b915d16345$var$img","$5d7ba6b915d16345$var$canvas","async","$5d7ba6b915d16345$var$init","root","bodyRect","getBoundingClientRect","classList","add","$Z93qb","remove","$aCP3q","tag","tagName","attrs","src","$parcel$interopDefault","$6eZYS","class","initialImage","width","height","style","maxWidth","maxHeight","appendChild","$iO5IN","waitDOMEvent","isActive","imgRect","xRatio","yRatio","scene","Scene","camera","OrthographicCamera","position","z","x","y","lookAt","rotateZ","Math","PI","squareSize","columnsCount","ceil","rowsCount","renderer","WebGLRenderer","setSize","textureLoader","TextureLoader","texture","loadAsync","material","MeshBasicMaterial","map","runAction","action","$5d7ba6b915d16345$var$TransformAction","render","run","domElement","squaremixCanvas","after","addEventListener","$5d7ba6b915d16345$export$f22da7240b7add18","$hIDiW","getBinder","onResize","$euaFP","debounce","constructor","disposeables","this","colHeights","generateColumnHeights","group","Group","incrementPerSecond","doOnFrame","generateObjects","progress","rotation","Promise","ok","bad","prevFrameStart","Date","now","wrappedHandler","frameStart","min","e","requestAnimationFrame","dispose","columns","rows","result","Array","c","column","r","depth","random","max","round","length","generateColumnObject","plane","makeAddSlicePlane","translateX","translateY","translateZ","rotateY","addTopPlane","addSidePlane","left","right","top","bottom","rotate","geom","PlaneGeometry","push","Mesh","uv","attributes","l","t","b","i1","count","getX","getY","setXY","i","setX","setY","needsUpdate","xOffset","yOffset","pos","i2","forEach","$391ab960b5de8fc4$export$9d1bf630f3954f4c","obj","name","err","Error","message","$4c0fbf616468c6ce$var$resolveArgs","a","isArray","$hsvBG","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","text","watch","textContent","unbox","on","evtName","handler","passive","capture","k","v","removeAttribute","setAttribute","vv","setChildren","childTags","filter","parent","newChildren","childTag","childNodes","insertBefore","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","classname","value","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","classname1","join","$0b7cb8977c54d631$export$638b348249e76df2","$0b7cb8977c54d631$export$b86e5322c7744a","$0b7cb8977c54d631$export$e8e78c978b129247","module","exports","URL","resolve","import","meta","url","toString","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","$1fa5674b28854650$export$61fc7d43ac8f84b0","time","timer","setTimeout"],"version":3,"file":"squaremix_3d.74e828e6.js.map"}