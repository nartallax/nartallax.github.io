{"mappings":"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","sources":["src/sketches/timer/timer.ts","src/sketches/timer/timer.module.scss"],"sourcesContent":["import {tag} from \"@nartallax/cardboard-dom\"\nimport * as css from \"./timer.module.scss\"\n\nconst twoDigis = (x: number): string => x < 10 ? \"0\" + x : \"\" + x\nconst threeDigits = (x: number): string => x < 10 ? \"00\" + x : x < 100 ? \"0\" + x : \"\" + x\n\nfunction formatTime(time: number): string {\n\tif(time < 0){\n\t\treturn \"-\" + formatTime(-time)\n\t}\n\tconst ms = time % 1000\n\ttime = Math.floor(time / 1000)\n\n\tconst s = time % 60\n\ttime = Math.floor(time / 60)\n\n\tconst m = time % 60\n\tconst h = Math.floor(time / 60)\n\treturn `${twoDigis(h)}:${twoDigis(m)}:${twoDigis(s)}.${threeDigits(ms)}`\n}\n\nfunction formatTimeShort(time: number): string {\n\tlet result = formatTime(time).replace(/^[0:]+/, \"\") // lol\n\tif(result.startsWith(\".\")){\n\t\tresult = \"0\" + result\n\t}\n\treturn result\n}\n\nfunction intOrZero(x: string): number {\n\tconst result = parseInt(x)\n\tif(Number.isNaN(result) || !Number.isFinite(result)){\n\t\treturn 0\n\t} else {\n\t\treturn result\n\t}\n}\n\nfunction parseTime(time: string): number {\n\tconst parts = time.split(\":\")\n\tlet msec = 0\n\tif(parts.length > 0){\n\t\tconst lastPart = parts[parts.length - 1]!\n\t\tconst secParts = lastPart.split(\".\")\n\t\tif(secParts.length === 2){\n\t\t\tconst [secondsPart, msecPart] = secParts\n\t\t\tparts[parts.length - 1] = secondsPart!\n\t\t\tmsec += intOrZero(msecPart!)\n\t\t}\n\t}\n\n\tlet mult = 1000\n\tfor(let i = parts.length - 1; i >= 0; i--){\n\t\tconst part = parts[i]!\n\t\tmsec += intOrZero(part) * mult\n\t\tmult *= 60\n\t}\n\treturn msec\n}\n\nfunction onAnyChange(input: HTMLInputElement, handler: (value: string) => void): void {\n\tlet lastValue = input.value\n\tconst wrappedHandler = () => {\n\t\tconst value = input.value\n\t\tif(value !== lastValue){\n\t\t\tlastValue = value\n\t\t\thandler(value)\n\t\t}\n\t}\n\tinput.addEventListener(\"change\", wrappedHandler)\n\tinput.addEventListener(\"mousedown\", wrappedHandler)\n\tinput.addEventListener(\"mouseup\", wrappedHandler)\n\tinput.addEventListener(\"keydown\", wrappedHandler)\n\tinput.addEventListener(\"keyup\", wrappedHandler)\n}\n\nexport function main(root: HTMLElement): void {\n\troot.classList.add(css.timerRoot ?? \"\")\n\tconst wrap = tag({class: css.wrap})\n\n\tconst timeEl = tag({class: css.timer})\n\twrap.appendChild(timeEl)\n\n\tconst resetBtn = tag({tag: \"button\", class: css.button}, [\"reset\"])\n\tresetBtn.addEventListener(\"click\", () => {\n\t\ttimeAcc = 0\n\t\tupdateText()\n\t})\n\twrap.appendChild(resetBtn)\n\n\tconst pauseBtn = tag({tag: \"button\", class: css.button}, [\"pause\"])\n\tpauseBtn.addEventListener(\"click\", () => {\n\t\tif(paused){\n\t\t\tpaused = false\n\t\t\tpauseBtn.value = \"pause\"\n\t\t} else {\n\t\t\tpaused = true\n\t\t\tpauseBtn.value = \"unpause\"\n\t\t}\n\t})\n\twrap.appendChild(pauseBtn)\n\n\tconst speedBlock = tag({class: css.speedBlock}, [\"Speed: \"])\n\tconst speedInput = tag({tag: \"input\", attrs: {type: \"number\", value: 1}, class: css.speedInput})\n\tonAnyChange(speedInput, () => {\n\t\tconst parsed = parseFloat(speedInput.value)\n\t\tif(Number.isNaN(parsed) || !Number.isFinite(parsed)){\n\t\t\tconsole.warn(\"Bad speed value: \" + JSON.stringify(speedInput.value) + \": cannot parse\")\n\t\t\treturn\n\t\t}\n\t\tspeed = parsed\n\t})\n\tspeedBlock.appendChild(speedInput)\n\twrap.appendChild(speedBlock)\n\n\n\tconst addTimeBlock = tag()\n\tconst addTimeButton = tag({tag: \"button\", class: css.button}, [\"Add time\"])\n\taddTimeButton.addEventListener(\"click\", () => {\n\t\ttimeAcc += parseTime(addTimeInput.value)\n\t\tupdateText()\n\t})\n\taddTimeBlock.appendChild(addTimeButton)\n\tconst addTimeInput = tag({tag: \"input\", attrs: {type: \"string\", value: \"5:00.000\"}, class: css.speedInput})\n\taddTimeInput.addEventListener(\"blur\", () => {\n\t\taddTimeInput.value = formatTimeShort(parseTime(addTimeInput.value))\n\t})\n\taddTimeBlock.appendChild(addTimeInput)\n\n\twrap.appendChild(addTimeBlock)\n\n\troot.appendChild(wrap)\n\n\tfunction updateText(): void {\n\t\ttimeEl.textContent = formatTime(Math.round(timeAcc))\n\t}\n\n\tlet timeAcc = 0\n\tlet paused = false\n\tlet speed = 1\n\tlet lastUpdateTime = Date.now()\n\tconst updateTimer = () => {\n\t\trequestAnimationFrame(updateTimer)\n\t\tconst now = Date.now()\n\t\tconst dTime = (now - lastUpdateTime) * speed\n\t\tlastUpdateTime = now\n\t\tif(!paused){\n\t\t\ttimeAcc += dTime\n\t\t\tupdateText()\n\t\t}\n\t}\n\tupdateTimer()\n}",".timerRoot {\n\tbackground: #222;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.wrap {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.timer {\n\tfont-size: 5vw;\n\tcolor: #ccc;\n\tfont-family: 'courier new';\n}\n\n.speedInput, \n.button {\n\tfont-size: 2vw;\n\tcolor: #aaa;\n\tborder: 2px solid #aaa;\n\tbackground: #444;\n\tcursor: pointer;\n\ttransition: 0.25s;\n\tborder-radius: 3px;\n\n\tmargin: 0.5vw;\n}\n\n.speedInput:hover, \n.resetButton:hover {\n\tcolor: #fff;\n\tborder-color: #fff;\n\tbackground: #888;\n}\n\n.speedBlock {\n\tmargin: 0.5vw;\n\tfont-size: 2vw;\n\tcolor: #ccc;\n}\n\n.speedInput {\n\tmax-width: 5em;\n}"],"names":["$7sHgZ","parcelRequire","$85fafec3b85dd8b2$var$twoDigis","x","$85fafec3b85dd8b2$var$formatTime","time","ms","s","Math","floor","m","h","$85fafec3b85dd8b2$var$intOrZero","result","parseInt","Number","isNaN","isFinite","$85fafec3b85dd8b2$var$parseTime","parts","split","msec","length","secParts","secondsPart","msecPart","mult","i","$85fafec3b85dd8b2$export$f22da7240b7add18","root","classList","add","$g0JTA","timerRoot","wrap","tag","class","timeEl","timer","appendChild","resetBtn","button","addEventListener","timeAcc","updateText","pauseBtn","paused","value","speedBlock","speedInput","attrs","type","input","handler","lastValue","wrappedHandler","$85fafec3b85dd8b2$var$onAnyChange","parsed","parseFloat","speed","console","warn","JSON","stringify","addTimeBlock","addTimeButton","addTimeInput","textContent","round","replace","startsWith","$85fafec3b85dd8b2$var$formatTimeShort","lastUpdateTime","Date","now","updateTimer","requestAnimationFrame","dTime","$ba803f58ba7028d1$export$4997ffc0176396a6","$ba803f58ba7028d1$export$fd786f21a988b067","$ba803f58ba7028d1$export$2ba01fb71ed41cb6","$ba803f58ba7028d1$export$df1e6181cc5665bb","$ba803f58ba7028d1$export$ac48f81997917406","$ba803f58ba7028d1$export$9dc4ecf953986f04"],"version":3,"file":"timer.7625787a.js.map"}