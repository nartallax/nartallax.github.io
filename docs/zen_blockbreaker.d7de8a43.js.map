{"mappings":"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","sources":["src/sketches/zen_blockbreaker/zen_blockbreaker.ts","src/sketches/zen_blockbreaker/bottom_bar.ts","src/common/bottom_bar/bottom_bar.ts","src/common/tag.ts","src/common/classname.ts","src/common/bottom_bar/bottom_bar.module.scss","src/common/slider/slider.ts","src/common/input_utils.ts","src/common/slider/slider.module.scss","src/common/textblock.ts","src/common/color_utils.ts","src/sketches/zen_blockbreaker/zen_blockbreaker_impl.ts","src/common/cycled_request_animation_frame.ts","src/lib/matterjs/matter.js","src/sketches/zen_blockbreaker/ball_tail.ts","src/common/timed_queue.ts","src/common/queue.ts"],"sourcesContent":["import {getBinder} from \"common/binder/binder\"\nimport {box} from \"common/box\"\nimport {makeBottomBar} from \"sketches/zen_blockbreaker/bottom_bar\"\nimport {ZenBlockbreaker} from \"sketches/zen_blockbreaker/zen_blockbreaker_impl\"\n\nconst blockColors = [0x000000, 0x53bc01, 0xffeb03, 0xffa801, 0xf93a1d, 0xe21a5f, 0x572c62, 0xa1ccd3, 0x006898]\n\nexport function main(rootContainer: HTMLElement): void {\n\tconst initialTicksPerFrame = 3\n\tconst speedMult = 0.5 / initialTicksPerFrame\n\tconst sideCount = 4\n\n\tconst speed = box(initialTicksPerFrame)\n\tgetBinder(rootContainer).watch(speed, speed => blockbreaker.setTicksPerFrame(speed))\n\n\tconst stats = new Array(sideCount).fill(null).map(() => box(0))\n\tconst contentContainer = makeBottomBar({\n\t\tspeed,\n\t\tcolors: blockColors,\n\t\tstats,\n\t\troot: rootContainer\n\t})\n\n\tconst rect = contentContainer.getBoundingClientRect()\n\tconst screenSpacePx = rect.width * rect.height\n\tconst blockSizePx = Math.floor(Math.sqrt(screenSpacePx) / 25)\n\n\tconst blockbreaker: ZenBlockbreaker = new ZenBlockbreaker({\n\t\tticksPerFrame: initialTicksPerFrame,\n\t\tballSpeed: speedMult * ((rect.height + rect.width) / blockSizePx),\n\t\t// TODO: think about something more interesting here. fill the whole screen with the board..?\n\t\t// also block size may be related to DPI\n\t\tblockSizePx,\n\t\theight: Math.floor(rect.height / blockSizePx),\n\t\twidth: Math.floor(rect.width / blockSizePx),\n\t\tsideCount,\n\t\tonStatsChange: () => {\n\t\t\tfor(const [color, stat] of blockbreaker.stats){\n\t\t\t\tstats[color - 1]!(stat)\n\t\t\t}\n\t\t},\n\t\tcolors: blockColors,\n\t\trender: \"svg\",\n\t\ttailLength: 1 * initialTicksPerFrame\n\t})\n\tcontentContainer.appendChild(blockbreaker.root)\n\n\tblockbreaker.run()\n}\n","import {makeBottomBarredScreenContainer} from \"common/bottom_bar/bottom_bar\"\nimport {RBox, WBox} from \"common/box\"\nimport {Slider} from \"common/slider/slider\"\nimport {tag} from \"common/tag\"\nimport {Textblock} from \"common/textblock\"\n\ninterface Props {\n\treadonly speed: WBox<number>\n\treadonly stats: RBox<number>[]\n\tcolors: readonly number[]\n\troot: HTMLElement\n}\n\nexport const makeBottomBar = (props: Props): HTMLElement => {\n\n\tconst slider = Slider({\n\t\tlabel: \"Speed\",\n\t\tmin: 0,\n\t\tmax: 25,\n\t\tvalue: props.speed,\n\t\tstep: 1\n\t})\n\n\tconst stats = tag({\n\t\tstyle: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"row\",\n\t\t\tgap: \"1rem\",\n\t\t\tfontWeight: \"bold\",\n\t\t\theight: \"1.25em\"\n\t\t}\n\t}, props.stats.map((stat, i) => Textblock({\n\t\tvalue: stat,\n\t\tcolor: props.colors[i + 1],\n\t\tbold: true,\n\t\toverflow: \"hidden\",\n\t\twidth: \"3em\"\n\t})))\n\n\treturn makeBottomBarredScreenContainer({\n\t\tcontents: [slider, stats],\n\t\tparent: props.root\n\t})\n}","import {tag} from \"common/tag\"\nimport * as css from \"./bottom_bar.module.scss\"\n\ninterface Props {\n\tparent: HTMLElement\n\tcontents: HTMLElement[]\n}\n\n// this will return not the container itself, but the element you can add other stuff to\nexport const makeBottomBarredScreenContainer = (props: Props): HTMLElement => {\n\tconst bar = tag({class: css.bottomBar}, props.contents)\n\tconst contentContainer = tag({class: css.contentContainer})\n\tconst wrap = tag({class: css.pageContainer}, [contentContainer, bar])\n\n\tprops.parent.appendChild(wrap)\n\n\treturn contentContainer\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","@import \"/src/website/style/vars\";\n\n.bottomBar {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tflex: 0 0 auto;\n\tcolumn-gap: 2rem;\n\trow-gap: 0.5rem;\n\tpadding: 0.5rem;\n\talign-items: center;\n\tbackground-color: $foreground-secondary-color;\n\talign-self: stretch;\n}\n\n.pageContainer {\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.contentContainer {\n\tflex: 1 1 0;\n}\n","import {getBinder} from \"common/binder/binder\"\nimport {box, isRBox, MaybeRBoxed, WBox} from \"common/box\"\nimport {addCursorMoveHandler, pointerEventsToClientCoords} from \"common/input_utils\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./slider.module.scss\"\n\ninterface Props {\n\treadonly min: MaybeRBoxed<number>\n\treadonly max: MaybeRBoxed<number>\n\treadonly step?: number\n\treadonly value: WBox<number>\n\treadonly label?: MaybeRBoxed<string>\n\treadonly labelWidth?: MaybeRBoxed<number | string>\n}\n\nexport const Slider = (props: Props): HTMLElement => {\n\tconst min = isRBox(props.min) ? props.min : box(props.min)\n\tconst max = isRBox(props.max) ? props.max : box(props.max)\n\n\tconst handle = tag({class: css.handle})\n\tconst handleContainer = tag({class: css.handleContainer}, [handle])\n\tlet root = tag({class: css.slider}, [handleContainer])\n\tif(props.label){\n\t\tconst labelWidth = isRBox(props.labelWidth) ? props.labelWidth : box(props.labelWidth)\n\t\troot = tag({class: css.sliderRoot}, [\n\t\t\ttag({\n\t\t\t\tclass: css.label,\n\t\t\t\ttext: props.label,\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: labelWidth.map(x => typeof(x) === \"number\" ? x + \"px\" : x ?? \"\")\n\t\t\t\t}\n\t\t\t}),\n\t\t\troot\n\t\t])\n\t}\n\n\tfunction updateHandlePos(newValue: number): void {\n\t\thandle.style.left = (((newValue - min()) / (max() - min())) * 100) + \"%\"\n\t}\n\n\tfunction setValueByEvent(e: MouseEvent | TouchEvent): void {\n\t\tconst coords = pointerEventsToClientCoords(e)\n\t\tconst contRect = handleContainer.getBoundingClientRect()\n\n\t\tlet progress = (coords.x - contRect.left) / contRect.width\n\t\tprogress = Math.min(1, Math.max(0, progress))\n\t\tlet newValue = (progress * (max() - min())) + min()\n\t\tif(props.step){\n\t\t\tnewValue = Math.round(newValue / props.step) * props.step\n\t\t}\n\n\t\tprops.value(newValue)\n\t}\n\n\taddCursorMoveHandler({\n\t\telement: handle,\n\t\tonMove: setValueByEvent\n\t})\n\n\tconst onSliderBodyClick = (e: MouseEvent | TouchEvent) => {\n\t\tif(e.target === handle){\n\t\t\treturn\n\t\t}\n\n\t\tsetValueByEvent(e)\n\t}\n\n\troot.addEventListener(\"click\", onSliderBodyClick)\n\n\tconst binder = getBinder(root)\n\tbinder.watchAndRun(props.value, value => updateHandlePos(value))\n\tbinder.watchAndRun(max, max => {\n\t\tif(props.value() > max){\n\t\t\tprops.value(max)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value())\n\t\t}\n\t})\n\tbinder.watchAndRun(min, min => {\n\t\tif(props.value() < min){\n\t\t\tprops.value(min)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value())\n\t\t}\n\t})\n\n\treturn root\n}","export function pointerEventsToClientCoords(e: MouseEvent | TouchEvent): {x: number, y: number} {\n\tif(isTouchEvent(e)){\n\t\tconst touch = e.touches[0]!\n\t\treturn {\n\t\t\tx: touch.clientX,\n\t\t\ty: touch.clientY\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t}\n}\n\nexport function pointerEventsToOffsetCoords(e: MouseEvent | TouchEvent): {x: number, y: number} | null {\n\tif(!(e.target instanceof HTMLElement)){\n\t\treturn null\n\t}\n\n\tconst rect = e.target.getBoundingClientRect() // performance may suck, but whatever\n\tconst coords = pointerEventsToClientCoords(e)\n\tcoords.x -= rect.left\n\tcoords.y -= rect.top\n\treturn coords\n}\n\nexport function isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n\treturn !!(e as TouchEvent).touches\n}\n\ntype CursorMoveHandlerParams = {\n\treadonly element: HTMLElement\n\tonMove(e: MouseEvent | TouchEvent): void\n\t/** If true, onMove will be invoked when down event happen */\n\treadonly downIsMove?: boolean\n\t/** If true, onMove will be invoked when up event happen */\n\treadonly upIsMove?: boolean\n}\n\n/** This is a good way to add a mousemove handler to an element */\nexport function addCursorMoveHandler(params: CursorMoveHandlerParams): void {\n\n\tconst onDown = (e: MouseEvent | TouchEvent) => {\n\t\twindow.addEventListener(\"mousemove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"touchmove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"mouseup\", onUp, {passive: true})\n\t\twindow.addEventListener(\"touchend\", onUp, {passive: true})\n\t\tif(params.downIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tconst onUp = (e: MouseEvent | TouchEvent) => {\n\t\twindow.removeEventListener(\"mousemove\", params.onMove)\n\t\twindow.removeEventListener(\"touchmove\", params.onMove)\n\t\twindow.removeEventListener(\"mouseup\", onUp)\n\t\twindow.removeEventListener(\"touchend\", onUp)\n\t\tif(params.upIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tparams.element.addEventListener(\"mousedown\", onDown, {passive: true})\n\tparams.element.addEventListener(\"touchstart\", onDown, {passive: true})\n}\n\nexport function preventContextMenu(el: HTMLElement): void {\n\tel.addEventListener(\"contextmenu\", e => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\treturn false\n\t})\n}","@import \"/src/website/style/vars\";\n\n.sliderRoot {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: stretch;\n\tgap: 0.5rem;\n}\n\n.slider {\n\tbackground-color: $background-color;\n\tborder: 3px solid $font-color;\n\tborder-radius: 3px;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.handleContainer {\n\tflex: 1 1 auto;\n\tposition: relative;\n\theight: 100%;\n\tmargin: 0 0.5em;\n\tmin-width: 15rem;\n\tmin-height: 1.25em;\n}\n\n.handle {\n\tbox-sizing: border-box;\n\twidth: 1rem;\n\tcursor: pointer;\n\tborder: 3px solid $font-color;\n\tborder-top-width: 0;\n\tborder-bottom-width: 0;\n\tbackground-color: $font-color;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\ttransform: translateX(-50%);\n}\n\n.label {\n\toverflow: hidden;\n\tflex: 0 0 auto;\n\tcolor: $font-color;\n\ttext-align: right;\n}","import {box, isRBox, MaybeRBoxed} from \"common/box\"\nimport {rgbNumberToColorString} from \"common/color_utils\"\nimport {tag} from \"common/tag\"\n\ninterface Props {\n\treadonly value: MaybeRBoxed<string | number>\n\treadonly color?: MaybeRBoxed<string | number>\n\treadonly width?: MaybeRBoxed<string | number>\n\treadonly bold?: MaybeRBoxed<boolean>\n\treadonly overflow?: MaybeRBoxed<\"hidden\" | \"auto\">\n}\n\nexport const Textblock = (props: Props): HTMLElement => {\n\tconst color = isRBox(props.color) ? props.color : box(props.color)\n\tconst bold = isRBox(props.bold) ? props.bold : box(props.bold)\n\tconst width = isRBox(props.width) ? props.width : box(props.width)\n\treturn tag({\n\t\ttext: props.value,\n\t\tstyle: {\n\t\t\tcolor: color.map(color => typeof(color) === \"number\" ? rgbNumberToColorString(color) : color ?? \"\"),\n\t\t\tfontWeight: bold.map(bold => bold ? \"bold\" : \"normal\"),\n\t\t\twidth: width.map(width => typeof(width) === \"number\" ? width + \"px\" : width ?? \"\"),\n\t\t\toverflow: props.overflow\n\t\t}\n\t})\n}","function twoHex(x: number): string {\n\treturn (x > 0xf ? \"\" : \"0\") + x.toString(16)\n}\n\nexport function colorNumberTo3Components(color: number): [r: number, g: number, b: number] {\n\tconst r = (color >> 16) & 0xff,\n\t\tg = (color >> 8) & 0xff,\n\t\tb = (color >> 0) & 0xff\n\treturn [r, g, b]\n}\n\nexport function color3ComponentsToNumber(components: [r: number, g: number, b: number]): number {\n\tconst [r, g, b] = components\n\treturn (r << 16) | (g << 8) | b\n}\n\nexport function rgbToHsl(color: number): number {\n\tlet [r, g, b] = colorNumberTo3Components(color)\n\t// Make r, g, and b fractions of 1\n\tr /= 255\n\tg /= 255\n\tb /= 255\n\n\t// Find greatest and smallest channel values\n\tconst cmin = Math.min(r, g, b),\n\t\tcmax = Math.max(r, g, b),\n\t\tdelta = cmax - cmin\n\tlet h = 0,\n\t\ts = 0,\n\t\tl = 0\n\n\t// Calculate hue\n\t// No difference\n\tif(delta === 0){\n\t\th = 0\n\t} else if(cmax === r){\n\t\t// Red is max\n\t\th = ((g - b) / delta) % 6\n\t} else if(cmax === g){\n\t\t// Green is max\n\t\th = (b - r) / delta + 2\n\t} else {\n\t\t// Blue is max\n\t\th = (r - g) / delta + 4\n\t}\n\n\th = Math.round(h * 60)\n\n\t// Make negative hues positive behind 360°\n\tif(h < 0){\n\t\th += 360\n\t}\n\n\t// Calculate lightness\n\tl = (cmax + cmin) / 2\n\n\t// Calculate saturation\n\ts = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n\t// Multiply l and s by 100\n\ts = +(s * 100).toFixed(1)\n\tl = +(l * 100).toFixed(1)\n\n\treturn color3ComponentsToNumber([(h / 360) * 255, (s / 100) * 255, (l / 100) * 255])\n}\n\nexport function hslToRgb(hsl: number): number {\n\tlet [h, s, l] = colorNumberTo3Components(hsl)\n\th /= 255\n\ts /= 255\n\tl /= 255\n\tlet r: number, g: number, b: number\n\n\tif(s === 0){\n\t\tr = g = b = l // achromatic\n\t} else {\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tr = hueToRgb(p, q, h + 1 / 3)\n\t\tg = hueToRgb(p, q, h)\n\t\tb = hueToRgb(p, q, h - 1 / 3)\n\t}\n\n\treturn color3ComponentsToNumber([Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)])\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n\tif(t < 0){\n\t\tt += 1\n\t}\n\tif(t > 1){\n\t\tt -= 1\n\t}\n\tif(t < 1 / 6){\n\t\treturn p + (q - p) * 6 * t\n\t}\n\tif(t < 1 / 2){\n\t\treturn q\n\t}\n\tif(t < 2 / 3){\n\t\treturn p + (q - p) * (2 / 3 - t) * 6\n\t}\n\treturn p\n}\n\nexport function rgbNumberToColorString(rgb: number): string {\n\tconst b = rgb & 0xff\n\trgb >>= 8\n\tconst g = rgb & 0xff\n\trgb >>= 8\n\tconst r = rgb & 0xff\n\n\treturn \"#\" + twoHex(r) + twoHex(g) + twoHex(b)\n}\n\nexport function transformColorHsl(colorRgb: number, transform: (hsl: [number, number, number]) => [number, number, number]): number {\n\tconst transformResult = transform(\n\t\tcolorNumberTo3Components(\n\t\t\trgbToHsl(colorRgb)\n\t\t)\n\t)\n\ttransformResult[0] = Math.max(0, Math.min(255, Math.round(transformResult[0])))\n\ttransformResult[1] = Math.max(0, Math.min(255, Math.round(transformResult[1])))\n\ttransformResult[2] = Math.max(0, Math.min(255, Math.round(transformResult[2])))\n\treturn hslToRgb(\n\t\tcolor3ComponentsToNumber(\n\t\t\ttransformResult\n\t\t)\n\t)\n}","import {rgbNumberToColorString, transformColorHsl} from \"common/color_utils\"\nimport {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {svgTag, tag} from \"common/tag\"\nimport * as Matter from \"lib/matterjs/matter\"\nimport {BallTail} from \"sketches/zen_blockbreaker/ball_tail\"\n\ninterface Params {\n\treadonly ticksPerFrame: number\n\treadonly blockSizePx: number\n\treadonly width: number // blocks\n\treadonly height: number // blocks\n\treadonly ballSpeed: number // blocks per second\n\treadonly sideCount: number\n\treadonly colors: readonly number[]\n\treadonly render: \"matterjs\" | \"svg\"\n\treadonly tailLength: number // seconds\n\tonStatsChange(): void\n}\n\ninterface Ball {\n\treadonly body: Matter.Body\n\treadonly el: SVGCircleElement | null\n\treadonly color: number\n\treadonly tail: BallTail | null\n}\n\ninterface Block {\n\treadonly body: Matter.Body\n\treadonly el: SVGRectElement | null\n\tcolor: number\n}\n\n/** Multiplier of matter.js scale\n * matter.js starts to work weird if numbers are small\n * so we multiply those numbers by this value */\nconst matterMul = 100\n\nexport class ZenBlockbreaker {\n\treadonly root: HTMLElement\n\tprivate readonly matter: Matter.Engine\n\tprivate render: Matter.Render | null = null\n\tprivate svg: SVGSVGElement | null = null\n\tprivate ticksPerFrame: number\n\treadonly stats = new Map<number, number>()\n\treadonly balls: Ball[] = []\n\tprivate readonly blockColors: readonly number[]\n\tprivate timePassed = 0\n\n\tconstructor(private readonly params: Params) {\n\t\tthis.blockColors = this.params.colors.map(color => transformColorHsl(color,\n\t\t\t([h, s, l]) => [h, s * 0.75, l * 0.9]\n\t\t))\n\n\t\tthis.root = tag()\n\n\t\tthis.ticksPerFrame = params.ticksPerFrame\n\t\tthis.matter = Matter.Engine.create({\n\t\t\tgravity: {x: 0, y: 0},\n\t\t\tenableSleeping: true\n\t\t})\n\n\t\tif(this.params.render === \"matterjs\"){\n\t\t\tthis.makeMatterjsRender()\n\t\t} else {\n\t\t\tthis.makeSvgRender()\n\t\t}\n\n\t\tthis.makeWalls()\n\t\tthis.makeBlocks()\n\t\tthis.makeBalls()\n\n\t\tMatter.Events.on(this.matter, \"collisionEnd\", (e: Matter.IEventCollision<Matter.Engine>) => {\n\t\t\tfor(const pair of e.pairs){\n\t\t\t\tthis.processCollision(pair)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate makeSvgRender(): void {\n\t\tthis.svg = svgTag({tagName: \"svg\"})\n\t\tthis.svg.setAttribute(\"width\", this.params.width + \"\")\n\t\tthis.svg.setAttribute(\"height\", this.params.height + \"\")\n\t\tthis.svg.setAttribute(\"viewBox\", `0 0 ${this.params.width} ${this.params.height}`)\n\t\tthis.svg.style.width = (this.params.width * this.params.blockSizePx) + \"px\"\n\t\tthis.svg.style.height = (this.params.height * this.params.blockSizePx) + \"px\"\n\t\tthis.root.appendChild(this.svg)\n\t}\n\n\tprivate makeMatterjsRender(): void {\n\t\tthis.render = Matter.Render.create({\n\t\t\telement: this.root,\n\t\t\tengine: this.matter,\n\t\t\toptions: {\n\t\t\t\twidth: this.params.width * this.params.blockSizePx,\n\t\t\t\theight: this.params.height * this.params.blockSizePx,\n\t\t\t\twireframes: false\n\t\t\t}\n\t\t})\n\t\tMatter.Render.lookAt(this.render, {\n\t\t\tmin: {x: 0, y: 0},\n\t\t\tmax: {x: this.params.width * matterMul, y: this.params.height * matterMul}\n\t\t})\n\t}\n\n\tsetTicksPerFrame(ticksPerFrame: number): void {\n\t\tthis.ticksPerFrame = ticksPerFrame\n\t}\n\n\tprivate makeBlocks(): void {\n\t\tconst cx = this.params.width / 2\n\t\tconst cy = this.params.height / 2\n\t\tfor(let x = 0; x < this.params.width; x++){\n\t\t\tfor(let y = 0; y < this.params.height; y++){\n\t\t\t\tconst bx = x + 0.5\n\t\t\t\tconst by = y + 0.5\n\t\t\t\tconst angle = Math.atan2(by - cy, bx - cx)\n\n\t\t\t\tlet part = angle / (Math.PI * 2)\n\t\t\t\twhile(part < 0){\n\t\t\t\t\tpart++\n\t\t\t\t}\n\t\t\t\tpart *= this.params.sideCount\n\t\t\t\tpart = Math.floor(part)\n\n\t\t\t\tconst color = part + 1\n\t\t\t\tthis.makeBlock(bx, by, color)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate makeBalls(): void {\n\t\tconst partSector = (Math.PI * 2) / this.params.sideCount\n\t\tfor(let part = 0; part < this.params.sideCount; part++){\n\t\t\tconst angle = (part + 0.5) * partSector\n\t\t\tconst sin = Math.sin(angle)\n\t\t\tconst cos = Math.cos(angle)\n\t\t\tconst distanceToHWall = Math.abs(Math.abs(cos) < 0.01 ? this.params.height / 2 : (this.params.width / 2) / cos)\n\t\t\tconst distanceToWWall = Math.abs(Math.abs(sin) < 0.01 ? this.params.width / 2 : (this.params.height / 2) / sin)\n\t\t\tconst distanceToWall = Math.min(distanceToHWall, distanceToWWall)\n\t\t\tconst distanceToBall = Math.abs(distanceToWall / 2)\n\t\t\tconst x = (distanceToBall * cos) + this.params.width / 2\n\t\t\tconst y = (distanceToBall * sin) + this.params.height / 2\n\t\t\tthis.makeBall(x, y, part + 1)\n\t\t}\n\t}\n\n\tprivate processCollision(collision: Matter.Pair): void {\n\t\tconst ball = this.getBallFromCollision(collision)\n\t\tif(!ball){\n\t\t\t// what?\n\t\t\treturn\n\t\t}\n\n\t\tconst velocityAngle = Math.atan2(ball.body.velocity.y, ball.body.velocity.x)\n\t\t// if we don't do this - ball will gradually lose speed, which is bad\n\t\t// yes, everything has restitution = 1 and friction = 0\n\t\t// but the very nature of incremental simulations is lossy, no way around this\n\t\tthis.setBallSpeed(ball, velocityAngle)\n\n\t\tconst block = this.getBlockFromCollision(collision)\n\t\tif(!block){\n\t\t\t// wall?\n\t\t\treturn\n\t\t}\n\t\tthis.setBlockColor(block, block.color, ball.color)\n\t\tthis.params.onStatsChange()\n\t}\n\n\tprivate setBallSpeed(ball: Ball, angle: number): void {\n\t\tMatter.Body.setVelocity(ball.body, {\n\t\t\tx: Math.cos(angle) * this.params.ballSpeed,\n\t\t\ty: Math.sin(angle) * this.params.ballSpeed\n\t\t})\n\t}\n\n\tprivate makeBlock(x: number, y: number, color: number): void {\n\t\tconst body = Matter.Bodies.rectangle(x * matterMul, y * matterMul, 1 * matterMul, 1 * matterMul, {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {\n\t\t\t\tfillStyle: \"black\"\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tlabel: `Block at ${x},${y}`,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 0,\n\t\t\t\tmask: 0\n\t\t\t}\n\t\t})\n\t\tMatter.Composite.add(this.matter.world, [body])\n\n\t\tlet block: Block = {body, color, el: null}\n\t\tif(this.params.render === \"svg\"){\n\t\t\tconst el = svgTag({tagName: \"rect\",\n\t\t\t\tattrs: {\n\t\t\t\t\tfill: \"block\",\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tx: x - 0.5,\n\t\t\t\t\ty: y - 0.5\n\t\t\t\t}})\n\t\t\tthis.svg!.appendChild(el)\n\n\t\t\tblock = {...block, el}\n\t\t}\n\n\t\tbody.plugin.block = block\n\n\t\tthis.setBlockColor(block, null, color)\n\t}\n\n\tprivate setBlockColor(block: Block, oldColor: number | null, newColor: number): void {\n\t\tif(oldColor !== null){\n\t\t\tthis.stats.set(oldColor, (this.stats.get(oldColor) ?? 0) - 1)\n\t\t}\n\t\tthis.stats.set(newColor, (this.stats.get(newColor) ?? 0) + 1)\n\n\t\tblock.color = newColor\n\t\tblock.body.collisionFilter.category = 1 << newColor\n\t\tblock.body.collisionFilter.mask = 0x8fffffff & (~(1 << newColor))\n\n\t\tconst colorStr = rgbNumberToColorString(this.blockColors[newColor]!)\n\t\tif(this.params.render === \"matterjs\"){\n\t\t\tblock.body.render.fillStyle = colorStr\n\t\t} else {\n\t\t\tblock.el!.style.fill = colorStr\n\t\t}\n\t}\n\n\tprivate getBlockFromCollision(pair: Matter.Pair): Block | null {\n\t\treturn this.getBlock(pair.bodyA) ?? this.getBlock(pair.bodyB)\n\t}\n\n\tprivate getBlock(block: Matter.Body): Block | null {\n\t\treturn block.plugin.block ?? null\n\t}\n\n\tprivate makeBall(x: number, y: number, color: number): void {\n\t\tconst colorRgbSrc = this.params.colors[color]!\n\t\tconst colorStr = rgbNumberToColorString(transformColorHsl(colorRgbSrc,\n\t\t\t([h, s, l]) => [h, s * 1.1, l * 1.25]\n\t\t))\n\n\t\tconst body = Matter.Bodies.circle(x * matterMul, y * matterMul, 0.5 * matterMul, {\n\t\t\tisStatic: false,\n\t\t\trender: {\n\t\t\t\tfillStyle: colorStr\n\t\t\t},\n\t\t\trestitution: 1,\n\t\t\tfriction: 0,\n\t\t\tfrictionAir: 0,\n\t\t\tfrictionStatic: 0,\n\t\t\tlabel: \"Ball \" + color,\n\t\t\tcollisionFilter: {\n\t\t\t\tgroup: 0,\n\t\t\t\tcategory: 1 << color,\n\t\t\t\tmask: 0x8fffffff & (~(1 << color))\n\t\t\t}\n\t\t})\n\n\t\tMatter.Composite.add(this.matter.world, [body])\n\n\t\tlet ball: Ball = {body, color, el: null, tail: null}\n\n\t\tif(this.params.render === \"svg\"){\n\t\t\tconst tailColor = rgbNumberToColorString(transformColorHsl(colorRgbSrc,\n\t\t\t\t([h, s, l]) => [h, s * 0.9, l * 0.9]\n\t\t\t))\n\t\t\tconst tail = new BallTail(this.params.tailLength, tailColor)\n\t\t\tthis.svg!.appendChild(tail.el)\n\n\t\t\tconst el = svgTag({tagName: \"circle\", attrs: {\n\t\t\t\tcx: x, cy: y, r: 0.5, fill: colorStr\n\t\t\t}})\n\t\t\tthis.svg!.appendChild(el)\n\n\t\t\tball = {...ball, el, tail}\n\t\t}\n\n\t\tbody.plugin.ball = ball\n\t\tthis.balls.push(ball)\n\n\t\tconst angle = Math.random() * Math.PI * 2\n\t\tthis.setBallSpeed(ball, angle)\n\t}\n\n\tprivate getBallFromCollision(pair: Matter.Pair): Ball | null {\n\t\treturn this.getBall(pair.bodyA) ?? this.getBall(pair.bodyB)\n\t}\n\n\tprivate getBall(body: Matter.Body): Ball | null {\n\t\treturn body.plugin.ball ?? null\n\t}\n\n\tprivate makeWalls(): void {\n\t\tconst wallThickness = 10\n\t\tconst wallProps: Matter.IChamferableBodyDefinition = {\n\t\t\tisStatic: true,\n\t\t\tisSleeping: true,\n\t\t\trender: {fillStyle: \"black\"},\n\t\t\trestitution: 1,\n\t\t\tlabel: \"wall\"\n\t\t}\n\t\tMatter.Composite.add(this.matter.world, [\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, (-wallThickness / 2) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(this.params.width / 2) * matterMul, ((wallThickness / 2) + this.params.height) * matterMul,\n\t\t\t\t(this.params.width + (wallThickness * 2)) * matterMul, wallThickness * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t(-wallThickness / 2) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t),\n\t\t\tMatter.Bodies.rectangle(\n\t\t\t\t((wallThickness / 2) + this.params.width) * matterMul, (this.params.height / 2) * matterMul,\n\t\t\t\twallThickness * matterMul, (this.params.height + (wallThickness * 2)) * matterMul,\n\t\t\t\twallProps\n\t\t\t)\n\t\t])\n\t}\n\n\trun(): void {\n\t\tif(this.render){\n\t\t\tMatter.Render.run(this.render)\n\t\t}\n\t\tconst stop = cycledRequestAnimationFrame(this.root, delta => {\n\t\t\tdelta /= 1000 // delta in seconds\n\t\t\tif(delta > 0.1){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tfor(let i = 0; i < this.ticksPerFrame; i++){\n\t\t\t\t\tthis.timePassed += delta\n\t\t\t\t\tMatter.Engine.update(this.matter, delta * 1000)\n\t\t\t\t\tif(this.params.render === \"svg\"){\n\t\t\t\t\t\tthis.updateBallElements()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(e){\n\t\t\t\tstop()\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}, () => {\n\t\t\tif(this.render){\n\t\t\t\tMatter.Render.stop(this.render)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate updateBallElements(): void {\n\t\tfor(const ball of this.balls){\n\t\t\tconst x = ball.body.position.x / matterMul\n\t\t\tconst y = ball.body.position.y / matterMul\n\n\t\t\tconst el = ball.el!\n\t\t\tel.setAttribute(\"cx\", x + \"\")\n\t\t\tel.setAttribute(\"cy\", y + \"\")\n\n\t\t\tball.tail!.update(this.timePassed, x, y)\n\t\t}\n\t}\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function\n * Unmounting root also stops it */\nexport function cycledRequestAnimationFrame(root: HTMLElement | SVGElement, handler: (delta: number) => void, onStop?: () => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\tonStop?.()\n\t\t\treturn\n\t\t}\n\t\tif(!root.isConnected){\n\t\t\tonStop?.()\n\t\t\tstopped = true\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","/* !\nThis is alpha-something build of matter.js with some alterations\nthose alterations are related to bugfixes and optimizations\noriginal license below\n\n * matter-js 0.18.0-alpha+0eeceb5 by @liabru\n * Experimental pre-release build.\n *   http://brm.io/matter-js/\n * License MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === \"object\" && typeof module === \"object\"){\n\t\tmodule.exports = factory()\n\t} else if(typeof define === \"function\" && define.amd){\n\t\tdefine(\"Matter\", [], factory)\n\t} else if(typeof exports === \"object\"){\n\t\texports[\"Matter\"] = factory()\n\t} else {\n\t\troot[\"Matter\"] = factory()\n\t}\n})(this, function() {\n\treturn /** ****/ (function(modules) { // webpackBootstrap\n\t\t/** ****/ \t// The module cache\n\t\t/** ****/ \tvar installedModules = {}\n\t\t/** ****/\n\t\t/** ****/ \t// The require function\n\t\t/** ****/ \tfunction __webpack_require__(moduleId) {\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Check if module is in cache\n\t\t\t/** ****/ \t\tif(installedModules[moduleId]){\n\t\t\t\t/** ****/ \t\t\treturn installedModules[moduleId].exports\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\t// Create a new module (and put it into the cache)\n\t\t\t/** ****/ \t\tvar module = installedModules[moduleId] = {\n\t\t\t\t/** ****/ \t\t\ti: moduleId,\n\t\t\t\t/** ****/ \t\t\tl: false,\n\t\t\t\t/** ****/ \t\t\texports: {}\n\t\t\t\t/** ****/}\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Execute the module function\n\t\t\t/** ****/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__)\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Flag the module as loaded\n\t\t\t/** ****/ \t\tmodule.l = true\n\t\t\t/** ****/\n\t\t\t/** ****/ \t\t// Return the exports of the module\n\t\t\t/** ****/ \t\treturn module.exports\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// expose the modules object (__webpack_modules__)\n\t\t/** ****/ \t__webpack_require__.m = modules\n\t\t/** ****/\n\t\t/** ****/ \t// expose the module cache\n\t\t/** ****/ \t__webpack_require__.c = installedModules\n\t\t/** ****/\n\t\t/** ****/ \t// define getter function for harmony exports\n\t\t/** ****/ \t__webpack_require__.d = function(exports, name, getter) {\n\t\t\t/** ****/ \t\tif(!__webpack_require__.o(exports, name)){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, name, {enumerable: true, get: getter})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// define __esModule on exports\n\t\t/** ****/ \t__webpack_require__.r = function(exports) {\n\t\t\t/** ****/ \t\tif(typeof Symbol !== \"undefined\" && Symbol.toStringTag){\n\t\t\t\t/** ****/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, {value: \"Module\"})\n\t\t\t\t/** ****/ \t\t}\n\t\t\t/** ****/ \t\tObject.defineProperty(exports, \"__esModule\", {value: true})\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// create a fake namespace object\n\t\t/** ****/ \t// mode & 1: value is a module id, require it\n\t\t/** ****/ \t// mode & 2: merge all properties of value into the ns\n\t\t/** ****/ \t// mode & 4: return value when already ns object\n\t\t/** ****/ \t// mode & 8|1: behave like require\n\t\t/** ****/ \t__webpack_require__.t = function(value, mode) {\n\t\t\t/** ****/ \t\tif(mode & 1){\n\t\t\t\tvalue = __webpack_require__(value)\n\t\t\t}\n\t\t\t/** ****/ \t\tif(mode & 8){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tif((mode & 4) && typeof value === \"object\" && value && value.__esModule){\n\t\t\t\treturn value\n\t\t\t}\n\t\t\t/** ****/ \t\tvar ns = Object.create(null)\n\t\t\t/** ****/ \t\t__webpack_require__.r(ns)\n\t\t\t/** ****/ \t\tObject.defineProperty(ns, \"default\", {enumerable: true, value: value})\n\t\t\t/** ****/ \t\tif(mode & 2 && typeof value !== \"string\"){\n\t\t\t\tfor(var key in value){\n\t\t\t\t\t__webpack_require__.d(ns, key, function(key) {\n\t\t\t\t\t\treturn value[key]\n\t\t\t\t\t}.bind(null, key))\n\t\t\t\t}\n\t\t\t}\n\t\t\t/** ****/ \t\treturn ns\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t\t/** ****/ \t__webpack_require__.n = function(module) {\n\t\t\t/** ****/ \t\tvar getter = module && module.__esModule\n\t\t\t/** ****/ \t\t\t? function getDefault() {\n\t\t\t\t\treturn module[\"default\"]\n\t\t\t\t}\n\t\t\t/** ****/ \t\t\t: function getModuleExports() {\n\t\t\t\t\treturn module\n\t\t\t\t}\n\t\t\t/** ****/ \t\t__webpack_require__.d(getter, \"a\", getter)\n\t\t\t/** ****/ \t\treturn getter\n\t\t\t/** ****/ \t}\n\t\t/** ****/\n\t\t/** ****/ \t// Object.prototype.hasOwnProperty.call\n\t\t/** ****/ \t__webpack_require__.o = function(object, property) {\n\t\t\treturn Object.prototype.hasOwnProperty.call(object, property)\n\t\t}\n\t\t/** ****/\n\t\t/** ****/ \t// __webpack_public_path__\n\t\t/** ****/ \t__webpack_require__.p = \"\"\n\t\t/** ****/\n\t\t/** ****/\n\t\t/** ****/ \t// Load entry module and return exports\n\t\t/** ****/ \treturn __webpack_require__(__webpack_require__.s = 21)\n\t\t/** ****/ })\n\t/** **********************************************************************/\n\t/** ****/ ([\n\t\t/* 0 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\n\t\t\tvar Common = {}\n\n\t\t\tmodule.exports = Common;\n\n\t\t\t(function() {\n\n\t\t\t\tCommon._nextId = 0\n\t\t\t\tCommon._seed = 0\n\t\t\t\tCommon._nowStartTime = +(new Date())\n\t\t\t\tCommon._warnedOnce = {}\n\t\t\t\tCommon._decomp = null\n\n\t\t\t\t/**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n\t\t\t\tCommon.extend = function(obj, deep) {\n\t\t\t\t\tvar argsStart,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tdeepClone\n\n\t\t\t\t\tif(typeof deep === \"boolean\"){\n\t\t\t\t\t\targsStart = 2\n\t\t\t\t\t\tdeepClone = deep\n\t\t\t\t\t} else {\n\t\t\t\t\t\targsStart = 1\n\t\t\t\t\t\tdeepClone = true\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = argsStart; i < arguments.length; i++){\n\t\t\t\t\t\tvar source = arguments[i]\n\n\t\t\t\t\t\tif(source){\n\t\t\t\t\t\t\tfor(var prop in source){\n\t\t\t\t\t\t\t\tif(deepClone && source[prop] && source[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\tif(!obj[prop] || obj[prop].constructor === Object){\n\t\t\t\t\t\t\t\t\t\tobj[prop] = obj[prop] || {}\n\t\t\t\t\t\t\t\t\t\tCommon.extend(obj[prop], deepClone, source[prop])\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tobj[prop] = source[prop]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n\t\t\t\tCommon.clone = function(obj, deep) {\n\t\t\t\t\treturn Common.extend({}, deep, obj)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n\t\t\t\tCommon.keys = function(obj) {\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\treturn Object.keys(obj)\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tvar keys = []\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tkeys.push(key)\n\t\t\t\t\t}\n\t\t\t\t\treturn keys\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n\t\t\t\tCommon.values = function(obj) {\n\t\t\t\t\tvar values = []\n\n\t\t\t\t\tif(Object.keys){\n\t\t\t\t\t\tvar keys = Object.keys(obj)\n\t\t\t\t\t\tfor(var i = 0; i < keys.length; i++){\n\t\t\t\t\t\t\tvalues.push(obj[keys[i]])\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn values\n\t\t\t\t\t}\n\n\t\t\t\t\t// avoid hasOwnProperty for performance\n\t\t\t\t\tfor(var key in obj){\n\t\t\t\t\t\tvalues.push(obj[key])\n\t\t\t\t\t}\n\t\t\t\t\treturn values\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n\t\t\t\tCommon.get = function(obj, path, begin, end) {\n\t\t\t\t\tpath = path.split(\".\").slice(begin, end)\n\n\t\t\t\t\tfor(var i = 0; i < path.length; i += 1){\n\t\t\t\t\t\tobj = obj[path[i]]\n\t\t\t\t\t}\n\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n\t\t\t\tCommon.set = function(obj, path, val, begin, end) {\n\t\t\t\t\tvar parts = path.split(\".\").slice(begin, end)\n\t\t\t\t\tCommon.get(obj, path, 0, -1)[parts[parts.length - 1]] = val\n\t\t\t\t\treturn val\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n\t\t\t\tCommon.shuffle = function(array) {\n\t\t\t\t\tfor(var i = array.length - 1; i > 0; i--){\n\t\t\t\t\t\tvar j = Math.floor(Common.random() * (i + 1))\n\t\t\t\t\t\tvar temp = array[i]\n\t\t\t\t\t\tarray[i] = array[j]\n\t\t\t\t\t\tarray[j] = temp\n\t\t\t\t\t}\n\t\t\t\t\treturn array\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n\t\t\t\tCommon.choose = function(choices) {\n\t\t\t\t\treturn choices[Math.floor(Common.random() * choices.length)]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n\t\t\t\tCommon.isElement = function(obj) {\n\t\t\t\t\tif(typeof HTMLElement !== \"undefined\"){\n\t\t\t\t\t\treturn obj instanceof HTMLElement\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!(obj && obj.nodeType && obj.nodeName)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n\t\t\t\tCommon.isArray = function(obj) {\n\t\t\t\t\treturn Object.prototype.toString.call(obj) === \"[object Array]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n\t\t\t\tCommon.isFunction = function(obj) {\n\t\t\t\t\treturn typeof obj === \"function\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n\t\t\t\tCommon.isPlainObject = function(obj) {\n\t\t\t\t\treturn typeof obj === \"object\" && obj.constructor === Object\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n\t\t\t\tCommon.isString = function(obj) {\n\t\t\t\t\treturn toString.call(obj) === \"[object String]\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n\t\t\t\tCommon.clamp = function(value, min, max) {\n\t\t\t\t\tif(value < min){\n\t\t\t\t\t\treturn min\n\t\t\t\t\t}\n\t\t\t\t\tif(value > max){\n\t\t\t\t\t\treturn max\n\t\t\t\t\t}\n\t\t\t\t\treturn value\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n\t\t\t\tCommon.sign = function(value) {\n\t\t\t\t\treturn value < 0 ? -1 : 1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n\t\t\t\tCommon.now = function() {\n\t\t\t\t\tif(typeof window !== \"undefined\" && window.performance){\n\t\t\t\t\t\tif(window.performance.now){\n\t\t\t\t\t\t\treturn window.performance.now()\n\t\t\t\t\t\t} else if(window.performance.webkitNow){\n\t\t\t\t\t\t\treturn window.performance.webkitNow()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Date.now){\n\t\t\t\t\t\treturn Date.now()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (new Date()) - Common._nowStartTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n\t\t\t\tCommon.random = function(min, max) {\n\t\t\t\t\tmin = (typeof min !== \"undefined\") ? min : 0\n\t\t\t\t\tmax = (typeof max !== \"undefined\") ? max : 1\n\t\t\t\t\treturn min + _seededRandom() * (max - min)\n\t\t\t\t}\n\n\t\t\t\tvar _seededRandom = function() {\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Linear_congruential_generator\n\t\t\t\t\tCommon._seed = (Common._seed * 9301 + 49297) % 233280\n\t\t\t\t\treturn Common._seed / 233280\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n\t\t\t\tCommon.colorToNumber = function(colorString) {\n\t\t\t\t\tcolorString = colorString.replace(\"#\", \"\")\n\n\t\t\t\t\tif(colorString.length == 3){\n\t\t\t\t\t\tcolorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn parseInt(colorString, 16)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n\t\t\t\tCommon.logLevel = 1\n\n\t\t\t\t/**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.log = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.log.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.info = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 2){\n\t\t\t\t\t\tconsole.info.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warn = function() {\n\t\t\t\t\tif(console && Common.logLevel > 0 && Common.logLevel <= 3){\n\t\t\t\t\t\tconsole.warn.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n\t\t\t\tCommon.warnOnce = function() {\n\t\t\t\t\tvar message = Array.prototype.slice.call(arguments).join(\" \")\n\n\t\t\t\t\tif(!Common._warnedOnce[message]){\n\t\t\t\t\t\tCommon.warn(message)\n\t\t\t\t\t\tCommon._warnedOnce[message] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n\t\t\t\tCommon.deprecated = function(obj, prop, warning) {\n\t\t\t\t\tobj[prop] = Common.chain(function() {\n\t\t\t\t\t\tCommon.warnOnce(\"🔅 deprecated 🔅\", warning)\n\t\t\t\t\t}, obj[prop])\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n\t\t\t\tCommon.nextId = function() {\n\t\t\t\t\treturn Common._nextId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n\t\t\t\tCommon.indexOf = function(haystack, needle) {\n\t\t\t\t\tif(haystack.indexOf){\n\t\t\t\t\t\treturn haystack.indexOf(needle)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < haystack.length; i++){\n\t\t\t\t\t\tif(haystack[i] === needle){\n\t\t\t\t\t\t\treturn i\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n\t\t\t\tCommon.map = function(list, func) {\n\t\t\t\t\tif(list.map){\n\t\t\t\t\t\treturn list.map(func)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mapped = []\n\n\t\t\t\t\tfor(var i = 0; i < list.length; i += 1){\n\t\t\t\t\t\tmapped.push(func(list[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\treturn mapped\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n\t\t\t\tCommon.topologicalSort = function(graph) {\n\t\t\t\t\t// https://github.com/mgechev/javascript-algorithms\n\t\t\t\t\t// Copyright (c) Minko Gechev (MIT license)\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar result = [],\n\t\t\t\t\t\tvisited = [],\n\t\t\t\t\t\ttemp = []\n\n\t\t\t\t\tfor(var node in graph){\n\t\t\t\t\t\tif(!visited[node] && !temp[node]){\n\t\t\t\t\t\t\tCommon._topologicalSort(node, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\tCommon._topologicalSort = function(node, visited, temp, graph, result) {\n\t\t\t\t\tvar neighbors = graph[node] || []\n\t\t\t\t\ttemp[node] = true\n\n\t\t\t\t\tfor(var i = 0; i < neighbors.length; i += 1){\n\t\t\t\t\t\tvar neighbor = neighbors[i]\n\n\t\t\t\t\t\tif(temp[neighbor]){\n\t\t\t\t\t\t\t// skip circular dependencies\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!visited[neighbor]){\n\t\t\t\t\t\t\tCommon._topologicalSort(neighbor, visited, temp, graph, result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttemp[node] = false\n\t\t\t\t\tvisited[node] = true\n\n\t\t\t\t\tresult.push(node)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n\t\t\t\tCommon.chain = function() {\n\t\t\t\t\tvar funcs = []\n\n\t\t\t\t\tfor(var i = 0; i < arguments.length; i += 1){\n\t\t\t\t\t\tvar func = arguments[i]\n\n\t\t\t\t\t\tif(func._chained){\n\t\t\t\t\t\t\t// flatten already chained functions\n\t\t\t\t\t\t\tfuncs.push.apply(funcs, func._chained)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfuncs.push(func)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar chain = function() {\n\t\t\t\t\t\t// https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n\t\t\t\t\t\tvar lastResult,\n\t\t\t\t\t\t\targs = new Array(arguments.length)\n\n\t\t\t\t\t\tfor(var i = 0, l = arguments.length; i < l; i++){\n\t\t\t\t\t\t\targs[i] = arguments[i]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(i = 0; i < funcs.length; i += 1){\n\t\t\t\t\t\t\tvar result = funcs[i].apply(lastResult, args)\n\n\t\t\t\t\t\t\tif(typeof result !== \"undefined\"){\n\t\t\t\t\t\t\t\tlastResult = result\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastResult\n\t\t\t\t\t}\n\n\t\t\t\t\tchain._chained = funcs\n\n\t\t\t\t\treturn chain\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathBefore = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tCommon.get(base, path)\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tCommon.chainPathAfter = function(base, path, func) {\n\t\t\t\t\treturn Common.set(base, path, Common.chain(\n\t\t\t\t\t\tCommon.get(base, path),\n\t\t\t\t\t\tfunc\n\t\t\t\t\t))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n\t\t\t\tCommon.setDecomp = function(decomp) {\n\t\t\t\t\tCommon._decomp = decomp\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n\t\t\t\tCommon.getDecomp = function() {\n\t\t\t\t\t// get user provided decomp if set\n\t\t\t\t\tvar decomp = Common._decomp\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// otherwise from window global\n\t\t\t\t\t\tif(!decomp && typeof window !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = window.decomp\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise from node global\n\t\t\t\t\t\tif(!decomp && typeof global !== \"undefined\"){\n\t\t\t\t\t\t\tdecomp = global.decomp\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e){\n\t\t\t\t\t\t// decomp not available\n\t\t\t\t\t\tdecomp = null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn decomp\n\t\t\t\t}\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 1 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\n\t\t\tvar Bounds = {}\n\n\t\t\tmodule.exports = Bounds;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n\t\t\t\tBounds.create = function(vertices) {\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: 0, y: 0},\n\t\t\t\t\t\tmax: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(vertices){\n\t\t\t\t\t\tBounds.update(bounds, vertices)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bounds\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n\t\t\t\tBounds.update = function(bounds, vertices, velocity) {\n\t\t\t\t\tbounds.min.x = Infinity\n\t\t\t\t\tbounds.max.x = -Infinity\n\t\t\t\t\tbounds.min.y = Infinity\n\t\t\t\t\tbounds.max.y = -Infinity\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar vertex = vertices[i]\n\t\t\t\t\t\tif(vertex.x > bounds.max.x){\n\t\t\t\t\t\t\tbounds.max.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.x < bounds.min.x){\n\t\t\t\t\t\t\tbounds.min.x = vertex.x\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y > bounds.max.y){\n\t\t\t\t\t\t\tbounds.max.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vertex.y < bounds.min.y){\n\t\t\t\t\t\t\tbounds.min.y = vertex.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(velocity){\n\t\t\t\t\t\tif(velocity.x > 0){\n\t\t\t\t\t\t\tbounds.max.x += velocity.x\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.x += velocity.x\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(velocity.y > 0){\n\t\t\t\t\t\t\tbounds.max.y += velocity.y\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbounds.min.y += velocity.y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n\t\t\t\tBounds.contains = function(bounds, point) {\n\t\t\t\t\treturn point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n\t\t\t\tBounds.overlaps = function(boundsA, boundsB) {\n\t\t\t\t\treturn (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n\t\t\t\tBounds.translate = function(bounds, vector) {\n\t\t\t\t\tbounds.min.x += vector.x\n\t\t\t\t\tbounds.max.x += vector.x\n\t\t\t\t\tbounds.min.y += vector.y\n\t\t\t\t\tbounds.max.y += vector.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n\t\t\t\tBounds.shift = function(bounds, position) {\n\t\t\t\t\tvar deltaX = bounds.max.x - bounds.min.x,\n\t\t\t\t\t\tdeltaY = bounds.max.y - bounds.min.y\n\n\t\t\t\t\tbounds.min.x = position.x\n\t\t\t\t\tbounds.max.x = position.x + deltaX\n\t\t\t\t\tbounds.min.y = position.y\n\t\t\t\t\tbounds.max.y = position.y + deltaY\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 2 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n\t\t\t// TUDDO: consider params for reusing vector objects\n\n\t\t\tvar Vector = {}\n\n\t\t\tmodule.exports = Vector;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n\t\t\t\tVector.create = function(x, y) {\n\t\t\t\t\treturn {x: x || 0, y: y || 0}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n\t\t\t\tVector.clone = function(vector) {\n\t\t\t\t\treturn {x: vector.x, y: vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n\t\t\t\tVector.magnitude = function(vector) {\n\t\t\t\t\treturn Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n\t\t\t\tVector.magnitudeSquared = function(vector) {\n\t\t\t\t\treturn (vector.x * vector.x) + (vector.y * vector.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n\t\t\t\tVector.rotate = function(vector, angle, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = vector.x * cos - vector.y * sin\n\t\t\t\t\toutput.y = vector.x * sin + vector.y * cos\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n\t\t\t\tVector.rotateAbout = function(vector, angle, point, output) {\n\t\t\t\t\tvar cos = Math.cos(angle), sin = Math.sin(angle)\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\tvar x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin)\n\t\t\t\t\toutput.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos)\n\t\t\t\t\toutput.x = x\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n\t\t\t\tVector.normalise = function(vector) {\n\t\t\t\t\tvar magnitude = Vector.magnitude(vector)\n\t\t\t\t\tif(magnitude === 0){\n\t\t\t\t\t\treturn {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\treturn {x: vector.x / magnitude, y: vector.y / magnitude}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n\t\t\t\tVector.dot = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n\t\t\t\tVector.cross = function(vectorA, vectorB) {\n\t\t\t\t\treturn (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n\t\t\t\tVector.cross3 = function(vectorA, vectorB, vectorC) {\n\t\t\t\t\treturn (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n\t\t\t\tVector.add = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x + vectorB.x\n\t\t\t\t\toutput.y = vectorA.y + vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n\t\t\t\tVector.sub = function(vectorA, vectorB, output) {\n\t\t\t\t\tif(!output){\n\t\t\t\t\t\toutput = {}\n\t\t\t\t\t}\n\t\t\t\t\toutput.x = vectorA.x - vectorB.x\n\t\t\t\t\toutput.y = vectorA.y - vectorB.y\n\t\t\t\t\treturn output\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n\t\t\t\tVector.mult = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x * scalar, y: vector.y * scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n\t\t\t\tVector.div = function(vector, scalar) {\n\t\t\t\t\treturn {x: vector.x / scalar, y: vector.y / scalar}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n\t\t\t\tVector.perp = function(vector, negate) {\n\t\t\t\t\tnegate = negate === true ? -1 : 1\n\t\t\t\t\treturn {x: negate * -vector.y, y: negate * vector.x}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n\t\t\t\tVector.neg = function(vector) {\n\t\t\t\t\treturn {x: -vector.x, y: -vector.y}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n\t\t\t\tVector.angle = function(vectorA, vectorB) {\n\t\t\t\t\treturn Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n\t\t\t\tVector._temp = [\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create(),\n\t\t\t\t\tVector.create()\n\t\t\t\t]\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 3 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\n\t\t\tvar Vertices = {}\n\n\t\t\tmodule.exports = Vertices\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n\t\t\t\tVertices.create = function(points, body) {\n\t\t\t\t\tvar vertices = []\n\n\t\t\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\t\t\tvar point = points[i],\n\t\t\t\t\t\t\tvertex = {\n\t\t\t\t\t\t\t\tx: point.x,\n\t\t\t\t\t\t\t\ty: point.y,\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tbody: body,\n\t\t\t\t\t\t\t\tisInternal: false\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertices.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.fromPath = function(path, body) {\n\t\t\t\t\tvar pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n\t\t\t\t\t\tpoints = []\n\n\t\t\t\t\tpath.replace(pathPattern, function(match, x, y) {\n\t\t\t\t\t\tpoints.push({x: parseFloat(x), y: parseFloat(y)})\n\t\t\t\t\t})\n\n\t\t\t\t\treturn Vertices.create(points, body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n\t\t\t\tVertices.centre = function(vertices) {\n\t\t\t\t\tvar area = Vertices.area(vertices, true),\n\t\t\t\t\t\tcentre = {x: 0, y: 0},\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\ttemp,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tj = (i + 1) % vertices.length\n\t\t\t\t\t\tcross = Vector.cross(vertices[i], vertices[j])\n\t\t\t\t\t\ttemp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross)\n\t\t\t\t\t\tcentre = Vector.add(centre, temp)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(centre, 6 * area)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n\t\t\t\tVertices.mean = function(vertices) {\n\t\t\t\t\tvar average = {x: 0, y: 0}\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\taverage.x += vertices[i].x\n\t\t\t\t\t\taverage.y += vertices[i].y\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Vector.div(average, vertices.length)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n\t\t\t\tVertices.area = function(vertices, signed) {\n\t\t\t\t\tvar area = 0,\n\t\t\t\t\t\tj = vertices.length - 1\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tarea += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y)\n\t\t\t\t\t\tj = i\n\t\t\t\t\t}\n\n\t\t\t\t\tif(signed){\n\t\t\t\t\t\treturn area / 2\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.abs(area) / 2\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n\t\t\t\tVertices.inertia = function(vertices, mass) {\n\t\t\t\t\tvar numerator = 0,\n\t\t\t\t\t\tdenominator = 0,\n\t\t\t\t\t\tv = vertices,\n\t\t\t\t\t\tcross,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find the polygon's moment of inertia, using second moment of area\n\t\t\t\t\t// from equations at http://www.physicsforums.com/showthread.php?t=25293\n\t\t\t\t\tfor(var n = 0; n < v.length; n++){\n\t\t\t\t\t\tj = (n + 1) % v.length\n\t\t\t\t\t\tcross = Math.abs(Vector.cross(v[j], v[n]))\n\t\t\t\t\t\tnumerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]))\n\t\t\t\t\t\tdenominator += cross\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (mass / 6) * (numerator / denominator)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n\t\t\t\tVertices.translate = function(vertices, vector, scalar) {\n\t\t\t\t\tscalar = typeof scalar !== \"undefined\" ? scalar : 1\n\n\t\t\t\t\tvar verticesLength = vertices.length,\n\t\t\t\t\t\ttranslateX = vector.x * scalar,\n\t\t\t\t\t\ttranslateY = vector.y * scalar,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertices[i].x += translateX\n\t\t\t\t\t\tvertices[i].y += translateY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n\t\t\t\tVertices.rotate = function(vertices, angle, point) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle),\n\t\t\t\t\t\tpointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\tdx,\n\t\t\t\t\t\tdy,\n\t\t\t\t\t\ti\n\n\t\t\t\t\tfor(i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdx = vertex.x - pointX\n\t\t\t\t\t\tdy = vertex.y - pointY\n\t\t\t\t\t\tvertex.x = pointX + (dx * cos - dy * sin)\n\t\t\t\t\t\tvertex.y = pointY + (dx * sin + dy * cos)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n\t\t\t\tVertices.contains = function(vertices, point) {\n\t\t\t\t\tvar pointX = point.x,\n\t\t\t\t\t\tpointY = point.y,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tvertex = vertices[verticesLength - 1],\n\t\t\t\t\t\tnextVertex\n\n\t\t\t\t\tfor(var i = 0; i < verticesLength; i++){\n\t\t\t\t\t\tnextVertex = vertices[i]\n\n\t\t\t\t\t\tif((pointX - vertex.x) * (nextVertex.y - vertex.y)\n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertex = nextVertex\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n\t\t\t\tVertices.scale = function(vertices, scaleX, scaleY, point) {\n\t\t\t\t\tif(scaleX === 1 && scaleY === 1){\n\t\t\t\t\t\treturn vertices\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint = point || Vertices.centre(vertices)\n\n\t\t\t\t\tvar vertex,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvertex = vertices[i]\n\t\t\t\t\t\tdelta = Vector.sub(vertex, point)\n\t\t\t\t\t\tvertices[i].x = point.x + delta.x * scaleX\n\t\t\t\t\t\tvertices[i].y = point.y + delta.y * scaleY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n\t\t\t\tVertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n\t\t\t\t\tif(typeof radius === \"number\"){\n\t\t\t\t\t\tradius = [radius]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tradius = radius || [8]\n\t\t\t\t\t}\n\n\t\t\t\t\t// quality defaults to -1, which is auto\n\t\t\t\t\tquality = (typeof quality !== \"undefined\") ? quality : -1\n\t\t\t\t\tqualityMin = qualityMin || 2\n\t\t\t\t\tqualityMax = qualityMax || 14\n\n\t\t\t\t\tvar newVertices = []\n\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n\t\t\t\t\t\t\tvertex = vertices[i],\n\t\t\t\t\t\t\tnextVertex = vertices[(i + 1) % vertices.length],\n\t\t\t\t\t\t\tcurrentRadius = radius[i < radius.length ? i : radius.length - 1]\n\n\t\t\t\t\t\tif(currentRadius === 0){\n\t\t\t\t\t\t\tnewVertices.push(vertex)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar prevNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: vertex.y - prevVertex.y,\n\t\t\t\t\t\t\ty: prevVertex.x - vertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar nextNormal = Vector.normalise({\n\t\t\t\t\t\t\tx: nextVertex.y - vertex.y,\n\t\t\t\t\t\t\ty: vertex.x - nextVertex.x\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tvar diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n\t\t\t\t\t\t\tradiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n\t\t\t\t\t\t\tmidNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n\t\t\t\t\t\t\tscaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius))\n\n\t\t\t\t\t\tvar precision = quality\n\n\t\t\t\t\t\tif(quality === -1){\n\t\t\t\t\t\t\t// automatically decide precision\n\t\t\t\t\t\t\tprecision = Math.pow(currentRadius, 0.32) * 1.75\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprecision = Common.clamp(precision, qualityMin, qualityMax)\n\n\t\t\t\t\t\t// use an even value for precision, more likely to reduce axes by using symmetry\n\t\t\t\t\t\tif(precision % 2 === 1){\n\t\t\t\t\t\t\tprecision += 1\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n\t\t\t\t\t\t\ttheta = alpha / precision\n\n\t\t\t\t\t\tfor(var j = 0; j < precision; j++){\n\t\t\t\t\t\t\tnewVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newVertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n\t\t\t\tVertices.clockwiseSort = function(vertices) {\n\t\t\t\t\tvar centre = Vertices.mean(vertices)\n\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\treturn Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn vertices\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n\t\t\t\tVertices.isConvex = function(vertices) {\n\t\t\t\t\t// http://paulbourke.net/geometry/polygonmesh/\n\t\t\t\t\t// Copyright (c) Paul Bourke (use permitted)\n\n\t\t\t\t\tvar flag = 0,\n\t\t\t\t\t\tn = vertices.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tz\n\n\t\t\t\t\tif(n < 3){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < n; i++){\n\t\t\t\t\t\tj = (i + 1) % n\n\t\t\t\t\t\tk = (i + 2) % n\n\t\t\t\t\t\tz = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y)\n\t\t\t\t\t\tz -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x)\n\n\t\t\t\t\t\tif(z < 0){\n\t\t\t\t\t\t\tflag |= 1\n\t\t\t\t\t\t} else if(z > 0){\n\t\t\t\t\t\t\tflag |= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(flag === 3){\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flag !== 0){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n\t\t\t\tVertices.hull = function(vertices) {\n\t\t\t\t\t// http://geomalgorithms.com/a10-_hull-1.html\n\n\t\t\t\t\tvar upper = [],\n\t\t\t\t\t\tlower = [],\n\t\t\t\t\t\tvertex,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// sort vertices on x-axis (y-axis for ties)\n\t\t\t\t\tvertices = vertices.slice(0)\n\t\t\t\t\tvertices.sort(function(vertexA, vertexB) {\n\t\t\t\t\t\tvar dx = vertexA.x - vertexB.x\n\t\t\t\t\t\treturn dx !== 0 ? dx : vertexA.y - vertexB.y\n\t\t\t\t\t})\n\n\t\t\t\t\t// build lower hull\n\t\t\t\t\tfor(i = 0; i < vertices.length; i += 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tlower.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlower.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// build upper hull\n\t\t\t\t\tfor(i = vertices.length - 1; i >= 0; i -= 1){\n\t\t\t\t\t\tvertex = vertices[i]\n\n\t\t\t\t\t\twhile(upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0){\n\t\t\t\t\t\t\tupper.pop()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tupper.push(vertex)\n\t\t\t\t\t}\n\n\t\t\t\t\t// concatenation of the lower and upper hulls gives the convex hull\n\t\t\t\t\t// omit last points because they are repeated at the beginning of the other list\n\t\t\t\t\tupper.pop()\n\t\t\t\t\tlower.pop()\n\n\t\t\t\t\treturn upper.concat(lower)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 4 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\n\t\t\tvar Events = {}\n\n\t\t\tmodule.exports = Events\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.on = function(object, eventNames, callback) {\n\t\t\t\t\tvar names = eventNames.split(\" \"),\n\t\t\t\t\t\tname\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\tobject.events = object.events || {}\n\t\t\t\t\t\tobject.events[name] = object.events[name] || []\n\t\t\t\t\t\tobject.events[name].push(callback)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn callback\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n\t\t\t\tEvents.off = function(object, eventNames, callback) {\n\t\t\t\t\tif(!eventNames){\n\t\t\t\t\t\tobject.events = {}\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle Events.off(object, callback)\n\t\t\t\t\tif(typeof eventNames === \"function\"){\n\t\t\t\t\t\tcallback = eventNames\n\t\t\t\t\t\teventNames = Common.keys(object.events).join(\" \")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar names = eventNames.split(\" \")\n\n\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\tvar callbacks = object.events[names[i]],\n\t\t\t\t\t\t\tnewCallbacks = []\n\n\t\t\t\t\t\tif(callback && callbacks){\n\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\tif(callbacks[j] !== callback){\n\t\t\t\t\t\t\t\t\tnewCallbacks.push(callbacks[j])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject.events[names[i]] = newCallbacks\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n\t\t\t\tEvents.trigger = function(object, eventNames, event) {\n\t\t\t\t\tvar names,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tcallbacks,\n\t\t\t\t\t\teventClone\n\n\t\t\t\t\tvar events = object.events\n\n\t\t\t\t\tif(events && Common.keys(events).length > 0){\n\t\t\t\t\t\tif(!event){\n\t\t\t\t\t\t\tevent = {}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnames = eventNames.split(\" \")\n\n\t\t\t\t\t\tfor(var i = 0; i < names.length; i++){\n\t\t\t\t\t\t\tname = names[i]\n\t\t\t\t\t\t\tcallbacks = events[name]\n\n\t\t\t\t\t\t\tif(callbacks){\n\t\t\t\t\t\t\t\teventClone = Common.clone(event, false)\n\t\t\t\t\t\t\t\teventClone.name = name\n\t\t\t\t\t\t\t\teventClone.source = object\n\n\t\t\t\t\t\t\t\tfor(var j = 0; j < callbacks.length; j++){\n\t\t\t\t\t\t\t\t\tcallbacks[j].apply(object, [eventClone])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 5 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n*\n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\n\t\t\tvar Composite = {}\n\n\t\t\tmodule.exports = Composite\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n\t\t\t\tComposite.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"composite\",\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\tisModified: false,\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tconstraints: [],\n\t\t\t\t\t\tcomposites: [],\n\t\t\t\t\t\tlabel: \"Composite\",\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tcache: {\n\t\t\t\t\t\t\tallBodies: null,\n\t\t\t\t\t\t\tallConstraints: null,\n\t\t\t\t\t\t\tallComposites: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n\t\t\t\tComposite.setModified = function(composite, isModified, updateParents, updateChildren) {\n\t\t\t\t\tcomposite.isModified = isModified\n\n\t\t\t\t\tif(isModified && composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = null\n\t\t\t\t\t\tcomposite.cache.allConstraints = null\n\t\t\t\t\t\tcomposite.cache.allComposites = null\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateParents && composite.parent){\n\t\t\t\t\t\tComposite.setModified(composite.parent, isModified, updateParents, updateChildren)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(updateChildren){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tvar childComposite = composite.composites[i]\n\t\t\t\t\t\t\tComposite.setModified(childComposite, isModified, updateParents, updateChildren)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n\t\t\t\tComposite.add = function(composite, object) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeAdd\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\t// skip adding compound parts\n\t\t\t\t\t\t\t\tif(obj.parent !== obj){\n\t\t\t\t\t\t\t\t\tCommon.warn(\"Composite.add: skipped adding a compound body part (you must add its parent instead)\")\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tComposite.addBody(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.addComposite(composite, obj)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterAdd\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n\t\t\t\tComposite.remove = function(composite, object, deep) {\n\t\t\t\t\tvar objects = [].concat(object)\n\n\t\t\t\t\tEvents.trigger(composite, \"beforeRemove\", {object: object})\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tvar obj = objects[i]\n\n\t\t\t\t\t\tswitch(obj.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\t\tComposite.removeBody(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\t\tComposite.removeComposite(composite, obj, deep)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mouseConstraint\":\n\t\t\t\t\t\t\t\tComposite.removeConstraint(composite, obj.constraint)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(composite, \"afterRemove\", {object: object})\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n\t\t\t\tComposite.addComposite = function(compositeA, compositeB) {\n\t\t\t\t\tcompositeA.composites.push(compositeB)\n\t\t\t\t\tcompositeB.parent = compositeA\n\t\t\t\t\tComposite.setModified(compositeA, true, true, false)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n\t\t\t\tComposite.removeComposite = function(compositeA, compositeB, deep) {\n\t\t\t\t\tvar position = Common.indexOf(compositeA.composites, compositeB)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeCompositeAt(compositeA, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < compositeA.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeComposite(compositeA.composites[i], compositeB, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n\t\t\t\tComposite.removeCompositeAt = function(composite, position) {\n\t\t\t\t\tcomposite.composites.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n\t\t\t\tComposite.addBody = function(composite, body) {\n\t\t\t\t\tcomposite.bodies.push(body)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBody = function(composite, body, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.bodies, body)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeBodyAt(composite, position)\n\n\t\t\t\t\t\t// remove sleeping to allow pair removal\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeBody(composite.composites[i], body, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n\t\t\t\tComposite.removeBodyAt = function(composite, position) {\n\t\t\t\t\tcomposite.bodies.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n\t\t\t\tComposite.addConstraint = function(composite, constraint) {\n\t\t\t\t\tcomposite.constraints.push(constraint)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraint = function(composite, constraint, deep) {\n\t\t\t\t\tvar position = Common.indexOf(composite.constraints, constraint)\n\t\t\t\t\tif(position !== -1){\n\t\t\t\t\t\tComposite.removeConstraintAt(composite, position)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.removeConstraint(composite.composites[i], constraint, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n\t\t\t\tComposite.removeConstraintAt = function(composite, position) {\n\t\t\t\t\tcomposite.constraints.splice(position, 1)\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n\t\t\t\tComposite.clear = function(composite, keepStatic, deep) {\n\t\t\t\t\tif(deep){\n\t\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\t\tComposite.clear(composite.composites[i], keepStatic, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(keepStatic){\n\t\t\t\t\t\tcomposite.bodies = composite.bodies.filter(function(body) {\n\t\t\t\t\t\t\treturn body.isStatic\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomposite.bodies.length = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.constraints.length = 0\n\t\t\t\t\tcomposite.composites.length = 0\n\n\t\t\t\t\tComposite.setModified(composite, true, true, false)\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n\t\t\t\tComposite.allBodies = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allBodies){\n\t\t\t\t\t\treturn composite.cache.allBodies\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bodies = [].concat(composite.bodies)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tbodies = bodies.concat(Composite.allBodies(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allBodies = bodies\n\t\t\t\t\t}\n\n\t\t\t\t\treturn bodies\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n\t\t\t\tComposite.allConstraints = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allConstraints){\n\t\t\t\t\t\treturn composite.cache.allConstraints\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraints = [].concat(composite.constraints)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tconstraints = constraints.concat(Composite.allConstraints(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allConstraints = constraints\n\t\t\t\t\t}\n\n\t\t\t\t\treturn constraints\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n\t\t\t\tComposite.allComposites = function(composite) {\n\t\t\t\t\tif(composite.cache && composite.cache.allComposites){\n\t\t\t\t\t\treturn composite.cache.allComposites\n\t\t\t\t\t}\n\n\t\t\t\t\tvar composites = [].concat(composite.composites)\n\n\t\t\t\t\tfor(var i = 0; i < composite.composites.length; i++){\n\t\t\t\t\t\tcomposites = composites.concat(Composite.allComposites(composite.composites[i]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(composite.cache){\n\t\t\t\t\t\tcomposite.cache.allComposites = composites\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composites\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n\t\t\t\tComposite.get = function(composite, id, type) {\n\t\t\t\t\tvar objects,\n\t\t\t\t\t\tobject\n\n\t\t\t\t\tswitch(type){\n\t\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\t\tobjects = Composite.allBodies(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"constraint\":\n\t\t\t\t\t\t\tobjects = Composite.allConstraints(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"composite\":\n\t\t\t\t\t\t\tobjects = Composite.allComposites(composite).concat(composite)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!objects){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = objects.filter(function(object) {\n\t\t\t\t\t\treturn object.id.toString() === id.toString()\n\t\t\t\t\t})\n\n\t\t\t\t\treturn object.length === 0 ? null : object[0]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n\t\t\t\tComposite.move = function(compositeA, objects, compositeB) {\n\t\t\t\t\tComposite.remove(compositeA, objects)\n\t\t\t\t\tComposite.add(compositeB, objects)\n\t\t\t\t\treturn compositeA\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n\t\t\t\tComposite.rebase = function(composite) {\n\t\t\t\t\tvar objects = Composite.allBodies(composite)\n\t\t\t\t\t\t.concat(Composite.allConstraints(composite))\n\t\t\t\t\t\t.concat(Composite.allComposites(composite))\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i++){\n\t\t\t\t\t\tobjects[i].id = Common.nextId()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.translate = function(composite, translation, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tBody.translate(bodies[i], translation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.rotate = function(composite, rotation, point, recursive) {\n\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\tbodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.rotate(body, rotation)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n\t\t\t\tComposite.scale = function(composite, scaleX, scaleY, point, recursive) {\n\t\t\t\t\tvar bodies = recursive ? Composite.allBodies(composite) : composite.bodies\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + dx * scaleX,\n\t\t\t\t\t\t\ty: point.y + dy * scaleY\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.scale(body, scaleX, scaleY)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n\t\t\t\tComposite.bounds = function(composite) {\n\t\t\t\t\tvar bodies = Composite.allBodies(composite),\n\t\t\t\t\t\tvertices = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\tvertices.push(body.bounds.min, body.bounds.max)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bounds.create(vertices)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n\t\t\t\t/**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 6 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\n\t\t\tvar Body = {}\n\n\t\t\tmodule.exports = Body\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Render = __webpack_require__(16)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11);\n\n\t\t\t(function() {\n\n\t\t\t\tBody._inertiaScale = 4\n\t\t\t\tBody._nextCollidingGroupId = 1\n\t\t\t\tBody._nextNonCollidingGroupId = -1\n\t\t\t\tBody._nextCategory = 0x0001\n\n\t\t\t\t/**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n\t\t\t\tBody.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tid: Common.nextId(),\n\t\t\t\t\t\ttype: \"body\",\n\t\t\t\t\t\tlabel: \"Body\",\n\t\t\t\t\t\tparts: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L 40 0 L 40 40 L 0 40\"),\n\t\t\t\t\t\tposition: {x: 0, y: 0},\n\t\t\t\t\t\tforce: {x: 0, y: 0},\n\t\t\t\t\t\ttorque: 0,\n\t\t\t\t\t\tpositionImpulse: {x: 0, y: 0},\n\t\t\t\t\t\tconstraintImpulse: {x: 0, y: 0, angle: 0},\n\t\t\t\t\t\ttotalContacts: 0,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tangularSpeed: 0,\n\t\t\t\t\t\tvelocity: {x: 0, y: 0},\n\t\t\t\t\t\tangularVelocity: 0,\n\t\t\t\t\t\tisSensor: false,\n\t\t\t\t\t\tisStatic: false,\n\t\t\t\t\t\tisSleeping: false,\n\t\t\t\t\t\tmotion: 0,\n\t\t\t\t\t\tsleepThreshold: 60,\n\t\t\t\t\t\tdensity: 0.001,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tfriction: 0.1,\n\t\t\t\t\t\tfrictionStatic: 0.5,\n\t\t\t\t\t\tfrictionAir: 0.01,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tslop: 0.05,\n\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tstrokeStyle: null,\n\t\t\t\t\t\t\tfillStyle: null,\n\t\t\t\t\t\t\tlineWidth: null,\n\t\t\t\t\t\t\tsprite: {\n\t\t\t\t\t\t\t\txScale: 1,\n\t\t\t\t\t\t\t\tyScale: 1,\n\t\t\t\t\t\t\t\txOffset: 0,\n\t\t\t\t\t\t\t\tyOffset: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevents: null,\n\t\t\t\t\t\tbounds: null,\n\t\t\t\t\t\tchamfer: null,\n\t\t\t\t\t\tcircleRadius: 0,\n\t\t\t\t\t\tpositionPrev: null,\n\t\t\t\t\t\tanglePrev: 0,\n\t\t\t\t\t\tparent: null,\n\t\t\t\t\t\taxes: null,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\t_original: null\n\t\t\t\t\t}\n\n\t\t\t\t\tvar body = Common.extend(defaults, options)\n\n\t\t\t\t\t_initProperties(body, options)\n\n\t\t\t\t\treturn body\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n\t\t\t\tBody.nextGroup = function(isNonColliding) {\n\t\t\t\t\tif(isNonColliding){\n\t\t\t\t\t\treturn Body._nextNonCollidingGroupId--\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body._nextCollidingGroupId++\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n\t\t\t\tBody.nextCategory = function() {\n\t\t\t\t\tBody._nextCategory = Body._nextCategory << 1\n\t\t\t\t\treturn Body._nextCategory\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n\t\t\t\tvar _initProperties = function(body, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\t// init required properties (order is important)\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\tbounds: body.bounds || Bounds.create(body.vertices),\n\t\t\t\t\t\tpositionPrev: body.positionPrev || Vector.clone(body.position),\n\t\t\t\t\t\tanglePrev: body.anglePrev || body.angle,\n\t\t\t\t\t\tvertices: body.vertices,\n\t\t\t\t\t\tparts: body.parts || [body],\n\t\t\t\t\t\tisStatic: body.isStatic,\n\t\t\t\t\t\tisSleeping: body.isSleeping,\n\t\t\t\t\t\tparent: body.parent || body\n\t\t\t\t\t})\n\n\t\t\t\t\tVertices.rotate(body.vertices, body.angle, body.position)\n\t\t\t\t\tAxes.rotate(body.axes, body.angle)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\n\t\t\t\t\t// allow options to override the automatically calculated properties\n\t\t\t\t\tBody.set(body, {\n\t\t\t\t\t\taxes: options.axes || body.axes,\n\t\t\t\t\t\tarea: options.area || body.area,\n\t\t\t\t\t\tmass: options.mass || body.mass,\n\t\t\t\t\t\tinertia: options.inertia || body.inertia\n\t\t\t\t\t})\n\n\t\t\t\t\t// render properties\n\t\t\t\t\tvar defaultFillStyle = (body.isStatic ? \"#14151f\" : Common.choose([\"#f19648\", \"#f5d259\", \"#f55a3c\", \"#063e7b\", \"#ececd1\"])),\n\t\t\t\t\t\tdefaultStrokeStyle = body.isStatic ? \"#555\" : \"#ccc\",\n\t\t\t\t\t\tdefaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0\n\t\t\t\t\tbody.render.fillStyle = body.render.fillStyle || defaultFillStyle\n\t\t\t\t\tbody.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle\n\t\t\t\t\tbody.render.lineWidth = body.render.lineWidth || defaultLineWidth\n\t\t\t\t\tbody.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x)\n\t\t\t\t\tbody.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n\t\t\t\tBody.set = function(body, settings, value) {\n\t\t\t\t\tvar property\n\n\t\t\t\t\tif(typeof settings === \"string\"){\n\t\t\t\t\t\tproperty = settings\n\t\t\t\t\t\tsettings = {}\n\t\t\t\t\t\tsettings[property] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(property in settings){\n\t\t\t\t\t\tif(!Object.prototype.hasOwnProperty.call(settings, property)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = settings[property]\n\t\t\t\t\t\tswitch(property){\n\n\t\t\t\t\t\t\tcase \"isStatic\":\n\t\t\t\t\t\t\t\tBody.setStatic(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"isSleeping\":\n\t\t\t\t\t\t\t\tSleeping.set(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"mass\":\n\t\t\t\t\t\t\t\tBody.setMass(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"density\":\n\t\t\t\t\t\t\t\tBody.setDensity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"inertia\":\n\t\t\t\t\t\t\t\tBody.setInertia(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"vertices\":\n\t\t\t\t\t\t\t\tBody.setVertices(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"position\":\n\t\t\t\t\t\t\t\tBody.setPosition(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angle\":\n\t\t\t\t\t\t\t\tBody.setAngle(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"velocity\":\n\t\t\t\t\t\t\t\tBody.setVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"angularVelocity\":\n\t\t\t\t\t\t\t\tBody.setAngularVelocity(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"parts\":\n\t\t\t\t\t\t\t\tBody.setParts(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"centre\":\n\t\t\t\t\t\t\t\tBody.setCentre(body, value)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbody[property] = value\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n\t\t\t\tBody.setStatic = function(body, isStatic) {\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.isStatic = isStatic\n\n\t\t\t\t\t\tif(isStatic){\n\t\t\t\t\t\t\tpart._original = {\n\t\t\t\t\t\t\t\trestitution: part.restitution,\n\t\t\t\t\t\t\t\tfriction: part.friction,\n\t\t\t\t\t\t\t\tmass: part.mass,\n\t\t\t\t\t\t\t\tinertia: part.inertia,\n\t\t\t\t\t\t\t\tdensity: part.density,\n\t\t\t\t\t\t\t\tinverseMass: part.inverseMass,\n\t\t\t\t\t\t\t\tinverseInertia: part.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpart.restitution = 0\n\t\t\t\t\t\t\tpart.friction = 1\n\t\t\t\t\t\t\tpart.mass = part.inertia = part.density = Infinity\n\t\t\t\t\t\t\tpart.inverseMass = part.inverseInertia = 0\n\n\t\t\t\t\t\t\tpart.positionPrev.x = part.position.x\n\t\t\t\t\t\t\tpart.positionPrev.y = part.position.y\n\t\t\t\t\t\t\tpart.anglePrev = part.angle\n\t\t\t\t\t\t\tpart.angularVelocity = 0\n\t\t\t\t\t\t\tpart.speed = 0\n\t\t\t\t\t\t\tpart.angularSpeed = 0\n\t\t\t\t\t\t\tpart.motion = 0\n\t\t\t\t\t\t} else if(part._original){\n\t\t\t\t\t\t\tpart.restitution = part._original.restitution\n\t\t\t\t\t\t\tpart.friction = part._original.friction\n\t\t\t\t\t\t\tpart.mass = part._original.mass\n\t\t\t\t\t\t\tpart.inertia = part._original.inertia\n\t\t\t\t\t\t\tpart.density = part._original.density\n\t\t\t\t\t\t\tpart.inverseMass = part._original.inverseMass\n\t\t\t\t\t\t\tpart.inverseInertia = part._original.inverseInertia\n\n\t\t\t\t\t\t\tpart._original = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n\t\t\t\tBody.setMass = function(body, mass) {\n\t\t\t\t\tvar moment = body.inertia / (body.mass / 6)\n\t\t\t\t\tbody.inertia = moment * (mass / 6)\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\n\t\t\t\t\tbody.mass = mass\n\t\t\t\t\tbody.inverseMass = 1 / body.mass\n\t\t\t\t\tbody.density = body.mass / body.area\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n\t\t\t\tBody.setDensity = function(body, density) {\n\t\t\t\t\tBody.setMass(body, density * body.area)\n\t\t\t\t\tbody.density = density\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the moment of inertia (i.e. second moment of area) of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n\t\t\t\tBody.setInertia = function(body, inertia) {\n\t\t\t\t\tbody.inertia = inertia\n\t\t\t\t\tbody.inverseInertia = 1 / body.inertia\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n\t\t\t\tBody.setVertices = function(body, vertices) {\n\t\t\t\t\t// change vertices\n\t\t\t\t\tif(vertices[0].body === body){\n\t\t\t\t\t\tbody.vertices = vertices\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.vertices = Vertices.create(vertices, body)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update properties\n\t\t\t\t\tbody.axes = Axes.fromVertices(body.vertices)\n\t\t\t\t\tbody.area = Vertices.area(body.vertices)\n\t\t\t\t\tBody.setMass(body, body.density * body.area)\n\n\t\t\t\t\t// orient vertices around the centre of mass at origin (0, 0)\n\t\t\t\t\tvar centre = Vertices.centre(body.vertices)\n\t\t\t\t\tVertices.translate(body.vertices, centre, -1)\n\n\t\t\t\t\t// update inertia while vertices are at origin (0, 0)\n\t\t\t\t\tBody.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass))\n\n\t\t\t\t\t// update geometry\n\t\t\t\t\tVertices.translate(body.vertices, body.position)\n\t\t\t\t\tBounds.update(body.bounds, body.vertices, body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n\t\t\t\tBody.setParts = function(body, parts, autoHull) {\n\t\t\t\t\tvar i\n\n\t\t\t\t\t// add all the parts, ensuring that the first part is always the parent body\n\t\t\t\t\tparts = parts.slice(0)\n\t\t\t\t\tbody.parts.length = 0\n\t\t\t\t\tbody.parts.push(body)\n\t\t\t\t\tbody.parent = body\n\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tvar part = parts[i]\n\t\t\t\t\t\tif(part !== body){\n\t\t\t\t\t\t\tpart.parent = body\n\t\t\t\t\t\t\tbody.parts.push(part)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(body.parts.length === 1){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tautoHull = typeof autoHull !== \"undefined\" ? autoHull : true\n\n\t\t\t\t\t// find the convex hull of all parts to set on the parent body\n\t\t\t\t\tif(autoHull){\n\t\t\t\t\t\tvar vertices = []\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvertices = vertices.concat(parts[i].vertices)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tVertices.clockwiseSort(vertices)\n\n\t\t\t\t\t\tvar hull = Vertices.hull(vertices),\n\t\t\t\t\t\t\thullCentre = Vertices.centre(hull)\n\n\t\t\t\t\t\tBody.setVertices(body, hull)\n\t\t\t\t\t\tVertices.translate(body.vertices, hullCentre)\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tvar total = Body._totalProperties(body)\n\n\t\t\t\t\tbody.area = total.area\n\t\t\t\t\tbody.parent = body\n\t\t\t\t\tbody.position.x = total.centre.x\n\t\t\t\t\tbody.position.y = total.centre.y\n\t\t\t\t\tbody.positionPrev.x = total.centre.x\n\t\t\t\t\tbody.positionPrev.y = total.centre.y\n\n\t\t\t\t\tBody.setMass(body, total.mass)\n\t\t\t\t\tBody.setInertia(body, total.inertia)\n\t\t\t\t\tBody.setPosition(body, total.centre)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set the centre of mass of the body.\n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n\t\t\t\tBody.setCentre = function(body, centre, relative) {\n\t\t\t\t\tif(!relative){\n\t\t\t\t\t\tbody.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x)\n\t\t\t\t\t\tbody.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y)\n\t\t\t\t\t\tbody.position.x = centre.x\n\t\t\t\t\t\tbody.position.y = centre.y\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.positionPrev.x += centre.x\n\t\t\t\t\t\tbody.positionPrev.y += centre.y\n\t\t\t\t\t\tbody.position.x += centre.x\n\t\t\t\t\t\tbody.position.y += centre.y\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n\t\t\t\tBody.setPosition = function(body, position) {\n\t\t\t\t\tvar delta = Vector.sub(position, body.position)\n\t\t\t\t\tbody.positionPrev.x += delta.x\n\t\t\t\t\tbody.positionPrev.y += delta.y\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.position.x += delta.x\n\t\t\t\t\t\tpart.position.y += delta.y\n\t\t\t\t\t\tVertices.translate(part.vertices, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n\t\t\t\tBody.setAngle = function(body, angle) {\n\t\t\t\t\tvar delta = angle - body.angle\n\t\t\t\t\tbody.anglePrev += delta\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\t\t\t\t\t\tpart.angle += delta\n\t\t\t\t\t\tVertices.rotate(part.vertices, delta, body.position)\n\t\t\t\t\t\tAxes.rotate(part.axes, delta)\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tVector.rotateAbout(part.position, delta, body.position, part.position)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n\t\t\t\tBody.setVelocity = function(body, velocity) {\n\t\t\t\t\tbody.positionPrev.x = body.position.x - velocity.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y - velocity.y\n\t\t\t\t\tbody.velocity.x = velocity.x\n\t\t\t\t\tbody.velocity.y = velocity.y\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n\t\t\t\tBody.setAngularVelocity = function(body, velocity) {\n\t\t\t\t\tbody.anglePrev = body.angle - velocity\n\t\t\t\t\tbody.angularVelocity = velocity\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n\t\t\t\tBody.translate = function(body, translation) {\n\t\t\t\t\tBody.setPosition(body, Vector.add(body.position, translation))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.rotate = function(body, rotation, point) {\n\t\t\t\t\tif(!point){\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar cos = Math.cos(rotation),\n\t\t\t\t\t\t\tsin = Math.sin(rotation),\n\t\t\t\t\t\t\tdx = body.position.x - point.x,\n\t\t\t\t\t\t\tdy = body.position.y - point.y\n\n\t\t\t\t\t\tBody.setPosition(body, {\n\t\t\t\t\t\t\tx: point.x + (dx * cos - dy * sin),\n\t\t\t\t\t\t\ty: point.y + (dx * sin + dy * cos)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tBody.setAngle(body, body.angle + rotation)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n\t\t\t\tBody.scale = function(body, scaleX, scaleY, point) {\n\t\t\t\t\tvar totalArea = 0,\n\t\t\t\t\t\ttotalInertia = 0\n\n\t\t\t\t\tpoint = point || body.position\n\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\t// scale vertices\n\t\t\t\t\t\tVertices.scale(part.vertices, scaleX, scaleY, point)\n\n\t\t\t\t\t\t// update properties\n\t\t\t\t\t\tpart.axes = Axes.fromVertices(part.vertices)\n\t\t\t\t\t\tpart.area = Vertices.area(part.vertices)\n\t\t\t\t\t\tBody.setMass(part, body.density * part.area)\n\n\t\t\t\t\t\t// update inertia (requires vertices to be at origin)\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: -part.position.x, y: -part.position.y})\n\t\t\t\t\t\tBody.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass))\n\t\t\t\t\t\tVertices.translate(part.vertices, {x: part.position.x, y: part.position.y})\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\ttotalArea += part.area\n\t\t\t\t\t\t\ttotalInertia += part.inertia\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// scale position\n\t\t\t\t\t\tpart.position.x = point.x + (part.position.x - point.x) * scaleX\n\t\t\t\t\t\tpart.position.y = point.y + (part.position.y - point.y) * scaleY\n\n\t\t\t\t\t\t// update bounds\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle parent body\n\t\t\t\t\tif(body.parts.length > 1){\n\t\t\t\t\t\tbody.area = totalArea\n\n\t\t\t\t\t\tif(!body.isStatic){\n\t\t\t\t\t\t\tBody.setMass(body, body.density * totalArea)\n\t\t\t\t\t\t\tBody.setInertia(body, totalInertia)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle circles\n\t\t\t\t\tif(body.circleRadius){\n\t\t\t\t\t\tif(scaleX === scaleY){\n\t\t\t\t\t\t\tbody.circleRadius *= scaleX\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// body is no longer a circle\n\t\t\t\t\t\t\tbody.circleRadius = null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n\t\t\t\tBody.update = function(body, deltaTime, timeScale, correction) {\n\t\t\t\t\tvar deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2)\n\n\t\t\t\t\t// from the previous step\n\t\t\t\t\tvar frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n\t\t\t\t\t\tvelocityPrevX = body.position.x - body.positionPrev.x,\n\t\t\t\t\t\tvelocityPrevY = body.position.y - body.positionPrev.y\n\n\t\t\t\t\t// update velocity with Verlet integration\n\t\t\t\t\tbody.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared\n\t\t\t\t\tbody.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared\n\n\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\tbody.positionPrev.y = body.position.y\n\t\t\t\t\tbody.position.x += body.velocity.x\n\t\t\t\t\tbody.position.y += body.velocity.y\n\n\t\t\t\t\t// update angular velocity with Verlet integration\n\t\t\t\t\tbody.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared\n\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\tbody.angle += body.angularVelocity\n\n\t\t\t\t\t// track speed and acceleration\n\t\t\t\t\tbody.speed = Vector.magnitude(body.velocity)\n\t\t\t\t\tbody.angularSpeed = Math.abs(body.angularVelocity)\n\n\t\t\t\t\t// transform the body geometry\n\t\t\t\t\tfor(var i = 0; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i]\n\n\t\t\t\t\t\tVertices.translate(part.vertices, body.velocity)\n\n\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\tpart.position.x += body.velocity.x\n\t\t\t\t\t\t\tpart.position.y += body.velocity.y\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.angularVelocity !== 0){\n\t\t\t\t\t\t\tVertices.rotate(part.vertices, body.angularVelocity, body.position)\n\t\t\t\t\t\t\tAxes.rotate(part.axes, body.angularVelocity)\n\t\t\t\t\t\t\tif(i > 0){\n\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, body.angularVelocity, body.position, part.position)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n\t\t\t\tBody.applyForce = function(body, position, force) {\n\t\t\t\t\tbody.force.x += force.x\n\t\t\t\t\tbody.force.y += force.y\n\t\t\t\t\tvar offset = {x: position.x - body.position.x, y: position.y - body.position.y}\n\t\t\t\t\tbody.torque += offset.x * force.y - offset.y * force.x\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n\t\t\t\tBody._totalProperties = function(body) {\n\t\t\t\t\t// from equations at:\n\t\t\t\t\t// https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n\t\t\t\t\t// http://output.to/sideway/default.asp?qno=121100087\n\n\t\t\t\t\tvar properties = {\n\t\t\t\t\t\tmass: 0,\n\t\t\t\t\t\tarea: 0,\n\t\t\t\t\t\tinertia: 0,\n\t\t\t\t\t\tcentre: {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// sum the properties of all compound parts of the parent body\n\t\t\t\t\tfor(var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++){\n\t\t\t\t\t\tvar part = body.parts[i],\n\t\t\t\t\t\t\tmass = part.mass !== Infinity ? part.mass : 1\n\n\t\t\t\t\t\tproperties.mass += mass\n\t\t\t\t\t\tproperties.area += part.area\n\t\t\t\t\t\tproperties.inertia += part.inertia\n\t\t\t\t\t\tproperties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass))\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.centre = Vector.div(properties.centre, properties.mass)\n\n\t\t\t\t\treturn properties\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n\t\t\t\t/**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n\t\t\t\t/**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n\t\t\t\t/**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n\t\t\t\t/**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n\t\t\t\t/**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 7 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\n\t\t\tvar Sleeping = {}\n\n\t\t\tmodule.exports = Sleeping\n\n\t\t\tvar Events = __webpack_require__(4);\n\n\t\t\t(function() {\n\n\t\t\t\tSleeping._motionWakeThreshold = 0.18 // 0.18 originally\n\t\t\t\tSleeping._motionSleepThreshold = 0.08 // 0.08\n\t\t\t\tSleeping._minBias = 0.9\n\n\t\t\t\t/**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.update = function(bodies, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// update bodies sleeping status\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\t// motion = (body.speed + body.angularSpeed) > 1e-12 ? 1 : 0\n\t\t\t\t\t\t\tmotion = (body.speed * body.speed) * 10000 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = (body.speed * body.speed) * 100 + body.angularSpeed * body.angularSpeed * 100000\n\t\t\t\t\t\t\t// motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed\n\n\t\t\t\t\t\t// FIX: originally, if body had force applied - motion is not recalculated\n\t\t\t\t\t\t// this is WRONG, because motion can also be used to wakeup other bodies\n\t\t\t\t\t\t// so I always set motion\n\t\t\t\t\t\tvar minMotion = Math.min(body.motion, motion),\n\t\t\t\t\t\t\tmaxMotion = Math.max(body.motion, motion)\n\n\t\t\t\t\t\t// biased average motion estimation between frames\n\t\t\t\t\t\tbody.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion\n\n\t\t\t\t\t\t// wake up bodies if they have a force applied\n\t\t\t\t\t\tif(body.force.x !== 0 || body.force.y !== 0){\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor){\n\t\t\t\t\t\t\tbody.sleepCounter += 1\n\n\t\t\t\t\t\t\tif(body.sleepCounter >= body.sleepThreshold){\n\t\t\t\t\t\t\t\tSleeping.set(body, true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(body.sleepCounter > 0){\n\t\t\t\t\t\t\tbody.sleepCounter -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tSleeping.afterCollisions = function(pairs, timeScale) {\n\t\t\t\t\tvar timeFactor = timeScale * timeScale * timeScale\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tfor(var i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\t// don't wake inactive pairs\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.bodyA.parent,\n\t\t\t\t\t\t\tbodyB = collision.bodyB.parent\n\n\t\t\t\t\t\t// don't wake if at least one body is static\n\t\t\t\t\t\tif((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bodyA.isSleeping || bodyB.isSleeping){\n\t\t\t\t\t\t\tvar sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n\t\t\t\t\t\t\t\tmovingBody = sleepingBody === bodyA ? bodyB : bodyA\n\n\t\t\t\t\t\t\tif(!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor){\n\t\t\t\t\t\t\t\tSleeping.set(sleepingBody, false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n\t\t\t\tSleeping.set = function(body, isSleeping) {\n\t\t\t\t\tvar wasSleeping = body.isSleeping\n\n\t\t\t\t\tif(isSleeping){\n\t\t\t\t\t\tbody.isSleeping = true\n\t\t\t\t\t\tbody.sleepCounter = body.sleepThreshold\n\n\t\t\t\t\t\tbody.positionImpulse.x = 0\n\t\t\t\t\t\tbody.positionImpulse.y = 0\n\n\t\t\t\t\t\tbody.positionPrev.x = body.position.x\n\t\t\t\t\t\tbody.positionPrev.y = body.position.y\n\n\t\t\t\t\t\tbody.anglePrev = body.angle\n\t\t\t\t\t\tbody.speed = 0\n\t\t\t\t\t\tbody.angularSpeed = 0\n\t\t\t\t\t\tbody.motion = 0\n\n\t\t\t\t\t\tif(!wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepStart\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.isSleeping = false\n\t\t\t\t\t\tbody.sleepCounter = 0\n\n\t\t\t\t\t\tif(wasSleeping){\n\t\t\t\t\t\t\tEvents.trigger(body, \"sleepEnd\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 8 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\n\t\t\tvar Collision = {}\n\n\t\t\tmodule.exports = Collision\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Pair = __webpack_require__(9);\n\n\t\t\t(function() {\n\t\t\t\tvar _supports = []\n\n\t\t\t\tvar _overlapAB = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\tvar _overlapBA = {\n\t\t\t\t\toverlap: 0,\n\t\t\t\t\taxis: null\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n\t\t\t\tCollision.create = function(bodyA, bodyB) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpair: null,\n\t\t\t\t\t\tcollided: false,\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tparentA: bodyA.parent,\n\t\t\t\t\t\tparentB: bodyB.parent,\n\t\t\t\t\t\tdepth: 0,\n\t\t\t\t\t\tnormal: {x: 0, y: 0},\n\t\t\t\t\t\ttangent: {x: 0, y: 0},\n\t\t\t\t\t\tpenetration: {x: 0, y: 0},\n\t\t\t\t\t\tsupports: []\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n\t\t\t\tCollision.collides = function(bodyA, bodyB, pairs) {\n\t\t\t\t\tCollision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes)\n\n\t\t\t\t\tif(_overlapAB.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tCollision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes)\n\n\t\t\t\t\tif(_overlapBA.overlap <= 0){\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t// reuse collision records for gc efficiency\n\t\t\t\t\tvar pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n\t\t\t\t\t\tcollision\n\n\t\t\t\t\tif(!pair){\n\t\t\t\t\t\tcollision = Collision.create(bodyA, bodyB)\n\t\t\t\t\t\tcollision.collided = true\n\t\t\t\t\t\tcollision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB\n\t\t\t\t\t\tcollision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA\n\t\t\t\t\t\tcollision.parentA = collision.bodyA.parent\n\t\t\t\t\t\tcollision.parentB = collision.bodyB.parent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t}\n\n\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar minOverlap\n\n\t\t\t\t\tif(_overlapAB.overlap < _overlapBA.overlap){\n\t\t\t\t\t\tminOverlap = _overlapAB\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminOverlap = _overlapBA\n\t\t\t\t\t}\n\n\t\t\t\t\tvar normal = collision.normal,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tminAxis = minOverlap.axis,\n\t\t\t\t\t\tminAxisX = minAxis.x,\n\t\t\t\t\t\tminAxisY = minAxis.y\n\n\t\t\t\t\t// ensure normal is facing away from bodyA\n\t\t\t\t\tif(minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0){\n\t\t\t\t\t\tnormal.x = minAxisX\n\t\t\t\t\t\tnormal.y = minAxisY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormal.x = -minAxisX\n\t\t\t\t\t\tnormal.y = -minAxisY\n\t\t\t\t\t}\n\n\t\t\t\t\tcollision.tangent.x = -normal.y\n\t\t\t\t\tcollision.tangent.y = normal.x\n\n\t\t\t\t\tcollision.depth = minOverlap.overlap\n\n\t\t\t\t\tcollision.penetration.x = normal.x * collision.depth\n\t\t\t\t\tcollision.penetration.y = normal.y * collision.depth\n\n\t\t\t\t\t// find support points, there is always either exactly one or two\n\t\t\t\t\tvar supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n\t\t\t\t\t\tsupportCount = 0\n\n\t\t\t\t\t// find the supports from bodyB that are inside bodyA\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[0])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Vertices.contains(bodyA.vertices, supportsB[1])){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[1]\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the supports from bodyA that are inside bodyB\n\t\t\t\t\tif(supportCount < 2){\n\t\t\t\t\t\tvar supportsA = Collision._findSupports(bodyB, bodyA, normal, -1)\n\n\t\t\t\t\t\tif(Vertices.contains(bodyB.vertices, supportsA[0])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[0]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])){\n\t\t\t\t\t\t\tsupports[supportCount++] = supportsA[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// account for the edge case of overlapping but no vertex containment\n\t\t\t\t\tif(supportCount === 0){\n\t\t\t\t\t\tsupports[supportCount++] = supportsB[0]\n\t\t\t\t\t}\n\n\t\t\t\t\t// update supports array size\n\t\t\t\t\tsupports.length = supportCount\n\n\t\t\t\t\treturn collision\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n\t\t\t\tCollision._overlapAxes = function(result, verticesA, verticesB, axes) {\n\t\t\t\t\tvar verticesALength = verticesA.length,\n\t\t\t\t\t\tverticesBLength = verticesB.length,\n\t\t\t\t\t\tverticesAX = verticesA[0].x,\n\t\t\t\t\t\tverticesAY = verticesA[0].y,\n\t\t\t\t\t\tverticesBX = verticesB[0].x,\n\t\t\t\t\t\tverticesBY = verticesB[0].y,\n\t\t\t\t\t\taxesLength = axes.length,\n\t\t\t\t\t\toverlapMin = Number.MAX_VALUE,\n\t\t\t\t\t\toverlapAxisNumber = 0,\n\t\t\t\t\t\toverlap,\n\t\t\t\t\t\toverlapAB,\n\t\t\t\t\t\toverlapBA,\n\t\t\t\t\t\tdot,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < axesLength; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\taxisX = axis.x,\n\t\t\t\t\t\t\taxisY = axis.y,\n\t\t\t\t\t\t\tminA = verticesAX * axisX + verticesAY * axisY,\n\t\t\t\t\t\t\tminB = verticesBX * axisX + verticesBY * axisY,\n\t\t\t\t\t\t\tmaxA = minA,\n\t\t\t\t\t\t\tmaxB = minB\n\n\t\t\t\t\t\tfor(j = 1; j < verticesALength; j += 1){\n\t\t\t\t\t\t\tdot = verticesA[j].x * axisX + verticesA[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxA){\n\t\t\t\t\t\t\t\tmaxA = dot\n\t\t\t\t\t\t\t} else if(dot < minA){\n\t\t\t\t\t\t\t\tminA = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor(j = 1; j < verticesBLength; j += 1){\n\t\t\t\t\t\t\tdot = verticesB[j].x * axisX + verticesB[j].y * axisY\n\n\t\t\t\t\t\t\tif(dot > maxB){\n\t\t\t\t\t\t\t\tmaxB = dot\n\t\t\t\t\t\t\t} else if(dot < minB){\n\t\t\t\t\t\t\t\tminB = dot\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlapAB = maxA - minB\n\t\t\t\t\t\toverlapBA = maxB - minA\n\t\t\t\t\t\toverlap = overlapAB < overlapBA ? overlapAB : overlapBA\n\n\t\t\t\t\t\tif(overlap < overlapMin){\n\t\t\t\t\t\t\toverlapMin = overlap\n\t\t\t\t\t\t\toverlapAxisNumber = i\n\n\t\t\t\t\t\t\tif(overlap <= 0){\n\t\t\t\t\t\t\t\t// can not be intersecting\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.axis = axes[overlapAxisNumber]\n\t\t\t\t\tresult.overlap = overlapMin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n\t\t\t\tCollision._projectToAxis = function(projection, vertices, axis) {\n\t\t\t\t\tvar min = vertices[0].x * axis.x + vertices[0].y * axis.y,\n\t\t\t\t\t\tmax = min\n\n\t\t\t\t\tfor(var i = 1; i < vertices.length; i += 1){\n\t\t\t\t\t\tvar dot = vertices[i].x * axis.x + vertices[i].y * axis.y\n\n\t\t\t\t\t\tif(dot > max){\n\t\t\t\t\t\t\tmax = dot\n\t\t\t\t\t\t} else if(dot < min){\n\t\t\t\t\t\t\tmin = dot\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprojection.min = min\n\t\t\t\t\tprojection.max = max\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n\t\t\t\tCollision._findSupports = function(bodyA, bodyB, normal, direction) {\n\t\t\t\t\tvar vertices = bodyB.vertices,\n\t\t\t\t\t\tverticesLength = vertices.length,\n\t\t\t\t\t\tbodyAPositionX = bodyA.position.x,\n\t\t\t\t\t\tbodyAPositionY = bodyA.position.y,\n\t\t\t\t\t\tnormalX = normal.x * direction,\n\t\t\t\t\t\tnormalY = normal.y * direction,\n\t\t\t\t\t\tnearestDistance = Number.MAX_VALUE,\n\t\t\t\t\t\tvertexA,\n\t\t\t\t\t\tvertexB,\n\t\t\t\t\t\tvertexC,\n\t\t\t\t\t\tdistance,\n\t\t\t\t\t\tj\n\n\t\t\t\t\t// find deepest vertex relative to the axis\n\t\t\t\t\tfor(j = 0; j < verticesLength; j += 1){\n\t\t\t\t\t\tvertexB = vertices[j]\n\t\t\t\t\t\tdistance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y)\n\n\t\t\t\t\t\t// convex hill-climbing\n\t\t\t\t\t\tif(distance < nearestDistance){\n\t\t\t\t\t\t\tnearestDistance = distance\n\t\t\t\t\t\t\tvertexA = vertexB\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// measure next vertex\n\t\t\t\t\tvertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength]\n\t\t\t\t\tnearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y)\n\n\t\t\t\t\t// compare with previous vertex\n\t\t\t\t\tvertexB = vertices[(vertexA.index + 1) % verticesLength]\n\t\t\t\t\tif(normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance){\n\t\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t\t_supports[1] = vertexB\n\n\t\t\t\t\t\treturn _supports\n\t\t\t\t\t}\n\n\t\t\t\t\t_supports[0] = vertexA\n\t\t\t\t\t_supports[1] = vertexC\n\n\t\t\t\t\treturn _supports\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     *\n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     *\n     * @property bodyA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     *\n     * @property bodyB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     *\n     * @property parentA\n     * @type body\n     */\n\n\t\t\t\t/**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     *\n     * @property parentB\n     * @type body\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * An array of body vertices that represent the support points in the collision.\n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 9 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\n\t\t\tvar Pair = {}\n\n\t\t\tmodule.exports = Pair\n\n\t\t\tvar Contact = __webpack_require__(17);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n\t\t\t\tPair.create = function(collision, timestamp) {\n\t\t\t\t\tvar bodyA = collision.bodyA,\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\tvar pair = {\n\t\t\t\t\t\tid: Pair.id(bodyA, bodyB),\n\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\tcollision: collision,\n\t\t\t\t\t\tcontacts: [],\n\t\t\t\t\t\tactiveContacts: [],\n\t\t\t\t\t\tseparation: 0,\n\t\t\t\t\t\tisActive: true,\n\t\t\t\t\t\tconfirmedActive: true,\n\t\t\t\t\t\tisSensor: bodyA.isSensor || bodyB.isSensor,\n\t\t\t\t\t\ttimeCreated: timestamp,\n\t\t\t\t\t\ttimeUpdated: timestamp,\n\t\t\t\t\t\tinverseMass: 0,\n\t\t\t\t\t\tfriction: 0,\n\t\t\t\t\t\tfrictionStatic: 0,\n\t\t\t\t\t\trestitution: 0,\n\t\t\t\t\t\tslop: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tPair.update(pair, collision, timestamp)\n\n\t\t\t\t\treturn pair\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.update = function(pair, collision, timestamp) {\n\t\t\t\t\tvar contacts = pair.contacts,\n\t\t\t\t\t\tsupports = collision.supports,\n\t\t\t\t\t\tactiveContacts = pair.activeContacts,\n\t\t\t\t\t\tparentA = collision.parentA,\n\t\t\t\t\t\tparentB = collision.parentB,\n\t\t\t\t\t\tparentAVerticesLength = parentA.vertices.length\n\n\t\t\t\t\tpair.isActive = true\n\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\tpair.collision = collision\n\t\t\t\t\tpair.separation = collision.depth\n\t\t\t\t\tpair.inverseMass = parentA.inverseMass + parentB.inverseMass\n\t\t\t\t\tpair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction\n\t\t\t\t\tpair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic\n\t\t\t\t\tpair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution\n\t\t\t\t\tpair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop\n\n\t\t\t\t\tcollision.pair = pair\n\t\t\t\t\tactiveContacts.length = 0\n\n\t\t\t\t\tfor(var i = 0; i < supports.length; i++){\n\t\t\t\t\t\tvar support = supports[i],\n\t\t\t\t\t\t\tcontactId = support.body === parentA ? support.index : parentAVerticesLength + support.index,\n\t\t\t\t\t\t\tcontact = contacts[contactId]\n\n\t\t\t\t\t\tif(contact){\n\t\t\t\t\t\t\tactiveContacts.push(contact)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveContacts.push(contacts[contactId] = Contact.create(support))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n\t\t\t\tPair.setActive = function(pair, isActive, timestamp) {\n\t\t\t\t\tif(isActive){\n\t\t\t\t\t\tpair.isActive = true\n\t\t\t\t\t\tpair.timeUpdated = timestamp\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpair.isActive = false\n\t\t\t\t\t\tpair.activeContacts.length = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n\t\t\t\tPair.id = function(bodyA, bodyB) {\n\t\t\t\t\tif(bodyA.id < bodyB.id){\n\t\t\t\t\t\treturn \"A\" + bodyA.id + \"B\" + bodyB.id\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn \"A\" + bodyB.id + \"B\" + bodyA.id\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 10 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n\t\t\tvar Constraint = {}\n\n\t\t\tmodule.exports = Constraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Axes = __webpack_require__(11)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tConstraint._warming = 0.4\n\t\t\t\tConstraint._torqueDampen = 1\n\t\t\t\tConstraint._minLength = 0.000001\n\n\t\t\t\t/**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n\t\t\t\tConstraint.create = function(options) {\n\t\t\t\t\tvar constraint = options\n\n\t\t\t\t\t// if bodies defined but no points, use body centre\n\t\t\t\t\tif(constraint.bodyA && !constraint.pointA){\n\t\t\t\t\t\tconstraint.pointA = {x: 0, y: 0}\n\t\t\t\t\t}\n\t\t\t\t\tif(constraint.bodyB && !constraint.pointB){\n\t\t\t\t\t\tconstraint.pointB = {x: 0, y: 0}\n\t\t\t\t\t}\n\n\t\t\t\t\t// calculate static length using initial world space points\n\t\t\t\t\tvar initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n\t\t\t\t\t\tinitialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n\t\t\t\t\t\tlength = Vector.magnitude(Vector.sub(initialPointA, initialPointB))\n\n\t\t\t\t\tconstraint.length = typeof constraint.length !== \"undefined\" ? constraint.length : length\n\n\t\t\t\t\t// option defaults\n\t\t\t\t\tconstraint.id = constraint.id || Common.nextId()\n\t\t\t\t\tconstraint.label = constraint.label || \"Constraint\"\n\t\t\t\t\tconstraint.type = \"constraint\"\n\t\t\t\t\tconstraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7)\n\t\t\t\t\tconstraint.damping = constraint.damping || 0\n\t\t\t\t\tconstraint.angularStiffness = constraint.angularStiffness || 0\n\t\t\t\t\tconstraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA\n\t\t\t\t\tconstraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB\n\t\t\t\t\tconstraint.plugin = {}\n\n\t\t\t\t\t// render\n\t\t\t\t\tvar render = {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\t\tstrokeStyle: \"#ffffff\",\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\tanchors: true\n\t\t\t\t\t}\n\n\t\t\t\t\tif(constraint.length === 0 && constraint.stiffness > 0.1){\n\t\t\t\t\t\trender.type = \"pin\"\n\t\t\t\t\t\trender.anchors = false\n\t\t\t\t\t} else if(constraint.stiffness < 0.9){\n\t\t\t\t\t\trender.type = \"spring\"\n\t\t\t\t\t}\n\n\t\t\t\t\tconstraint.render = Common.extend(render, constraint.render)\n\n\t\t\t\t\treturn constraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.preSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.position.x += impulse.x\n\t\t\t\t\t\tbody.position.y += impulse.y\n\t\t\t\t\t\tbody.angle += impulse.angle\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solveAll = function(constraints, timeScale) {\n\t\t\t\t\t// Solve fixed constraints first.\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tvar constraint = constraints[i],\n\t\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n\t\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(fixedA || fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Solve free constraints last.\n\t\t\t\t\tfor(i = 0; i < constraints.length; i += 1){\n\t\t\t\t\t\tconstraint = constraints[i]\n\t\t\t\t\t\tfixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic)\n\t\t\t\t\t\tfixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic)\n\n\t\t\t\t\t\tif(!fixedA && !fixedB){\n\t\t\t\t\t\t\tConstraint.solve(constraints[i], timeScale)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n\t\t\t\tConstraint.solve = function(constraint, timeScale) {\n\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\tpointA = constraint.pointA,\n\t\t\t\t\t\tpointB = constraint.pointB\n\n\t\t\t\t\tif(!bodyA && !bodyB){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tVector.rotate(pointA, bodyA.angle - constraint.angleA, pointA)\n\t\t\t\t\t\tconstraint.angleA = bodyA.angle\n\t\t\t\t\t}\n\n\t\t\t\t\t// update reference angle\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tVector.rotate(pointB, bodyB.angle - constraint.angleB, pointB)\n\t\t\t\t\t\tconstraint.angleB = bodyB.angle\n\t\t\t\t\t}\n\n\t\t\t\t\tvar pointAWorld = pointA,\n\t\t\t\t\t\tpointBWorld = pointB\n\n\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, pointA)\n\t\t\t\t\t}\n\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, pointB)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar delta = Vector.sub(pointAWorld, pointBWorld),\n\t\t\t\t\t\tcurrentLength = Vector.magnitude(delta)\n\n\t\t\t\t\t// prevent singularity\n\t\t\t\t\tif(currentLength < Constraint._minLength){\n\t\t\t\t\t\tcurrentLength = Constraint._minLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// solve distance constraint with Gauss-Siedel method\n\t\t\t\t\tvar difference = (currentLength - constraint.length) / currentLength,\n\t\t\t\t\t\tstiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n\t\t\t\t\t\tforce = Vector.mult(delta, difference * stiffness),\n\t\t\t\t\t\tmassTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n\t\t\t\t\t\tinertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n\t\t\t\t\t\tresistanceTotal = massTotal + inertiaTotal,\n\t\t\t\t\t\ttorque,\n\t\t\t\t\t\tshare,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tnormalVelocity,\n\t\t\t\t\t\trelativeVelocity\n\n\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\tvar zero = Vector.create()\n\t\t\t\t\t\tnormal = Vector.div(delta, currentLength)\n\n\t\t\t\t\t\trelativeVelocity = Vector.sub(\n\t\t\t\t\t\t\tbodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n\t\t\t\t\t\t\tbodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tnormalVelocity = Vector.dot(normal, relativeVelocity)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyA && !bodyA.isStatic){\n\t\t\t\t\t\tshare = bodyA.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyA.constraintImpulse.x -= force.x * share\n\t\t\t\t\t\tbodyA.constraintImpulse.y -= force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyA.position.x -= force.x * share\n\t\t\t\t\t\tbodyA.position.y -= force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyA.constraintImpulse.angle -= torque\n\t\t\t\t\t\tbodyA.angle -= torque\n\t\t\t\t\t}\n\n\t\t\t\t\tif(bodyB && !bodyB.isStatic){\n\t\t\t\t\t\tshare = bodyB.inverseMass / massTotal\n\n\t\t\t\t\t\t// keep track of applied impulses for post solving\n\t\t\t\t\t\tbodyB.constraintImpulse.x += force.x * share\n\t\t\t\t\t\tbodyB.constraintImpulse.y += force.y * share\n\n\t\t\t\t\t\t// apply forces\n\t\t\t\t\t\tbodyB.position.x += force.x * share\n\t\t\t\t\t\tbodyB.position.y += force.y * share\n\n\t\t\t\t\t\t// apply damping\n\t\t\t\t\t\tif(constraint.damping){\n\t\t\t\t\t\t\tbodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share\n\t\t\t\t\t\t\tbodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply torque\n\t\t\t\t\t\ttorque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness)\n\t\t\t\t\t\tbodyB.constraintImpulse.angle += torque\n\t\t\t\t\t\tbodyB.angle += torque\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n\t\t\t\tConstraint.postSolveAll = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\timpulse = body.constraintImpulse\n\n\t\t\t\t\t\tif(body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tSleeping.set(body, false)\n\n\t\t\t\t\t\t// update geometry and reset\n\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\tVertices.translate(part.vertices, impulse)\n\n\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\tpart.position.x += impulse.x\n\t\t\t\t\t\t\t\tpart.position.y += impulse.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(impulse.angle !== 0){\n\t\t\t\t\t\t\t\tVertices.rotate(part.vertices, impulse.angle, body.position)\n\t\t\t\t\t\t\t\tAxes.rotate(part.axes, impulse.angle)\n\t\t\t\t\t\t\t\tif(j > 0){\n\t\t\t\t\t\t\t\t\tVector.rotateAbout(part.position, impulse.angle, body.position, part.position)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tBounds.update(part.bounds, part.vertices, body.velocity)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// dampen the cached impulse for warming next step\n\t\t\t\t\t\timpulse.angle *= Constraint._warming\n\t\t\t\t\t\timpulse.x *= Constraint._warming\n\t\t\t\t\t\timpulse.y *= Constraint._warming\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointAWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyA ? constraint.bodyA.position.x : 0)\n                + (constraint.pointA ? constraint.pointA.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyA ? constraint.bodyA.position.y : 0)\n                + (constraint.pointA ? constraint.pointA.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n\t\t\t\tConstraint.pointBWorld = function(constraint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: (constraint.bodyB ? constraint.bodyB.position.x : 0)\n                + (constraint.pointB ? constraint.pointB.x : 0),\n\t\t\t\t\t\ty: (constraint.bodyB ? constraint.bodyB.position.y : 0)\n                + (constraint.pointB ? constraint.pointB.y : 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n\t\t\t\t/**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n\t\t\t\t/**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 11 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\n\t\t\tvar Axes = {}\n\n\t\t\tmodule.exports = Axes\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n\t\t\t\tAxes.fromVertices = function(vertices) {\n\t\t\t\t\tvar axes = {}\n\n\t\t\t\t\t// find the unique axes, using edge normal gradients\n\t\t\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\t\t\tvar j = (i + 1) % vertices.length,\n\t\t\t\t\t\t\tnormal = Vector.normalise({\n\t\t\t\t\t\t\t\tx: vertices[j].y - vertices[i].y,\n\t\t\t\t\t\t\t\ty: vertices[i].x - vertices[j].x\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tgradient = (normal.y === 0) ? Infinity : (normal.x / normal.y)\n\n\t\t\t\t\t\t// limit precision\n\t\t\t\t\t\tgradient = gradient.toFixed(3).toString()\n\t\t\t\t\t\taxes[gradient] = normal\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.values(axes)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n\t\t\t\tAxes.rotate = function(axes, angle) {\n\t\t\t\t\tif(angle === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cos = Math.cos(angle),\n\t\t\t\t\t\tsin = Math.sin(angle)\n\n\t\t\t\t\tfor(var i = 0; i < axes.length; i++){\n\t\t\t\t\t\tvar axis = axes[i],\n\t\t\t\t\t\t\txx\n\t\t\t\t\t\txx = axis.x * cos - axis.y * sin\n\t\t\t\t\t\taxis.y = axis.x * sin + axis.y * cos\n\t\t\t\t\t\taxis.x = xx\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 12 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n\t\t\t// TUDDO: true circle bodies\n\n\t\t\tvar Bodies = {}\n\n\t\t\tmodule.exports = Bodies\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Vector = __webpack_require__(2);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n\t\t\t\tBodies.rectangle = function(x, y, width, height, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar rectangle = {\n\t\t\t\t\t\tlabel: \"Rectangle Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(\"L 0 0 L \" + width + \" 0 L \" + width + \" \" + height + \" L 0 \" + height)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\trectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, rectangle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n\t\t\t\tBodies.trapezoid = function(x, y, width, height, slope, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tslope *= 0.5\n\t\t\t\t\tvar roof = (1 - (slope * 2)) * width\n\n\t\t\t\t\tvar x1 = width * slope,\n\t\t\t\t\t\tx2 = x1 + roof,\n\t\t\t\t\t\tx3 = x2 + x1,\n\t\t\t\t\t\tverticesPath\n\n\t\t\t\t\tif(slope < 0.5){\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x1 + \" \" + (-height) + \" L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tverticesPath = \"L 0 0 L \" + x2 + \" \" + (-height) + \" L \" + x3 + \" 0\"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar trapezoid = {\n\t\t\t\t\t\tlabel: \"Trapezoid Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(verticesPath)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\ttrapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, trapezoid, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n\t\t\t\tBodies.circle = function(x, y, radius, options, maxSides) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar circle = {\n\t\t\t\t\t\tlabel: \"Circle Body\",\n\t\t\t\t\t\tcircleRadius: radius\n\t\t\t\t\t}\n\n\t\t\t\t\t// approximate circles with polygons until true circles implemented in SAT\n\t\t\t\t\tmaxSides = maxSides || 25\n\t\t\t\t\tvar sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)))\n\n\t\t\t\t\t// optimisation: always use even number of sides (half the number of unique axes)\n\t\t\t\t\tif(sides % 2 === 1){\n\t\t\t\t\t\tsides += 1\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n\t\t\t\tBodies.polygon = function(x, y, sides, radius, options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tif(sides < 3){\n\t\t\t\t\t\treturn Bodies.circle(x, y, radius, options)\n\t\t\t\t\t}\n\n\t\t\t\t\tvar theta = 2 * Math.PI / sides,\n\t\t\t\t\t\tpath = \"\",\n\t\t\t\t\t\toffset = theta * 0.5\n\n\t\t\t\t\tfor(var i = 0; i < sides; i += 1){\n\t\t\t\t\t\tvar angle = offset + (i * theta),\n\t\t\t\t\t\t\txx = Math.cos(angle) * radius,\n\t\t\t\t\t\t\tyy = Math.sin(angle) * radius\n\n\t\t\t\t\t\tpath += \"L \" + xx.toFixed(3) + \" \" + yy.toFixed(3) + \" \"\n\t\t\t\t\t}\n\n\t\t\t\t\tvar polygon = {\n\t\t\t\t\t\tlabel: \"Polygon Body\",\n\t\t\t\t\t\tposition: {x: x, y: y},\n\t\t\t\t\t\tvertices: Vertices.fromPath(path)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.chamfer){\n\t\t\t\t\t\tvar chamfer = options.chamfer\n\t\t\t\t\t\tpolygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n\t\t\t\t\t\t\tchamfer.quality, chamfer.qualityMin, chamfer.qualityMax)\n\t\t\t\t\t\tdelete options.chamfer\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Body.create(Common.extend({}, polygon, options))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Utility to create a compound body based on set(s) of vertices.\n     *\n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js)\n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     *\n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     *\n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     *\n     * Note that automatic conconcave decomposition results are not always optimal.\n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     *\n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     *\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n\t\t\t\tBodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n\t\t\t\t\tvar decomp = Common.getDecomp(),\n\t\t\t\t\t\tcanDecomp,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tisConvex,\n\t\t\t\t\t\tisConcave,\n\t\t\t\t\t\tvertices,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk,\n\t\t\t\t\t\tv,\n\t\t\t\t\t\tz\n\n\t\t\t\t\t// check decomp is as expected\n\t\t\t\t\tcanDecomp = Boolean(decomp && decomp.quickDecomp)\n\n\t\t\t\t\toptions = options || {}\n\t\t\t\t\tparts = []\n\n\t\t\t\t\tflagInternal = typeof flagInternal !== \"undefined\" ? flagInternal : false\n\t\t\t\t\tremoveCollinear = typeof removeCollinear !== \"undefined\" ? removeCollinear : 0.01\n\t\t\t\t\tminimumArea = typeof minimumArea !== \"undefined\" ? minimumArea : 10\n\t\t\t\t\tremoveDuplicatePoints = typeof removeDuplicatePoints !== \"undefined\" ? removeDuplicatePoints : 0.01\n\n\t\t\t\t\t// ensure vertexSets is an array of arrays\n\t\t\t\t\tif(!Common.isArray(vertexSets[0])){\n\t\t\t\t\t\tvertexSets = [vertexSets]\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(v = 0; v < vertexSets.length; v += 1){\n\t\t\t\t\t\tvertices = vertexSets[v]\n\t\t\t\t\t\tisConvex = Vertices.isConvex(vertices)\n\t\t\t\t\t\tisConcave = !isConvex\n\n\t\t\t\t\t\tif(isConcave && !canDecomp){\n\t\t\t\t\t\t\tCommon.warnOnce(\n\t\t\t\t\t\t\t\t\"Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(isConvex || !canDecomp){\n\t\t\t\t\t\t\tif(isConvex){\n\t\t\t\t\t\t\t\tvertices = Vertices.clockwiseSort(vertices)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// fallback to convex hull when decomposition is not possible\n\t\t\t\t\t\t\t\tvertices = Vertices.hull(vertices)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet centre = Vertices.centre(vertices)\n\t\t\t\t\t\t\tcentre = Vector.create(centre.x + x, centre.y + y)\n\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t// Nartallax: this is fix by me.\n\t\t\t\t\t\t\t\t// if I won't do that, part-bodies of the composite body we are trying to create\n\t\t\t\t\t\t\t\t// will be created relative to composite body center,\n\t\t\t\t\t\t\t\t// which is completely wrong, because that mashes all the parts together.\n\t\t\t\t\t\t\t\t// liabru probably just forgot to update it here, this is not the main path\n\t\t\t\t\t\t\t\t// (but it is for us!)\n\n\t\t\t\t\t\t\t\t// position: {x: x, y: y},\n\t\t\t\t\t\t\t\tposition: centre,\n\t\t\t\t\t\t\t\tvertices: vertices\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// initialise a decomposition\n\t\t\t\t\t\t\tvar concave = vertices.map(function(vertex) {\n\t\t\t\t\t\t\t\treturn [vertex.x, vertex.y]\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// vertices are concave and simple, we can decompose into parts\n\t\t\t\t\t\t\tdecomp.makeCCW(concave)\n\t\t\t\t\t\t\tif(removeCollinear !== false){\n\t\t\t\t\t\t\t\tdecomp.removeCollinearPoints(concave, removeCollinear)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(removeDuplicatePoints !== false && decomp.removeDuplicatePoints){\n\t\t\t\t\t\t\t\tdecomp.removeDuplicatePoints(concave, removeDuplicatePoints)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// use the quick decomposition algorithm (Bayazit)\n\t\t\t\t\t\t\tvar decomposed = decomp.quickDecomp(concave)\n\n\t\t\t\t\t\t\t// for each decomposed chunk\n\t\t\t\t\t\t\tfor(i = 0; i < decomposed.length; i++){\n\t\t\t\t\t\t\t\tvar chunk = decomposed[i]\n\n\t\t\t\t\t\t\t\t// convert vertices into the correct structure\n\t\t\t\t\t\t\t\tvar chunkVertices = chunk.map(function(vertices) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: vertices[0],\n\t\t\t\t\t\t\t\t\t\ty: vertices[1]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t// skip small chunks\n\t\t\t\t\t\t\t\tif(minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea){\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// create a compound part\n\t\t\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\t\t\tposition: Vertices.centre(chunkVertices),\n\t\t\t\t\t\t\t\t\tvertices: chunkVertices\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// create body parts\n\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\tparts[i] = Body.create(Common.extend(parts[i], options))\n\t\t\t\t\t}\n\n\t\t\t\t\t// flag internal edges (coincident part edges)\n\t\t\t\t\tif(flagInternal){\n\t\t\t\t\t\tvar coincident_max_dist = 5\n\n\t\t\t\t\t\tfor(i = 0; i < parts.length; i++){\n\t\t\t\t\t\t\tvar partA = parts[i]\n\n\t\t\t\t\t\t\tfor(j = i + 1; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar partB = parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.overlaps(partA.bounds, partB.bounds)){\n\t\t\t\t\t\t\t\t\tvar pav = partA.vertices,\n\t\t\t\t\t\t\t\t\t\tpbv = partB.vertices\n\n\t\t\t\t\t\t\t\t\t// iterate vertices of both parts\n\t\t\t\t\t\t\t\t\tfor(k = 0; k < partA.vertices.length; k++){\n\t\t\t\t\t\t\t\t\t\tfor(z = 0; z < partB.vertices.length; z++){\n\t\t\t\t\t\t\t\t\t\t\t// find distances between the vertices\n\t\t\t\t\t\t\t\t\t\t\tvar da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n\t\t\t\t\t\t\t\t\t\t\t\tdb = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]))\n\n\t\t\t\t\t\t\t\t\t\t\t// if both vertices are very close, consider the edge concident (internal)\n\t\t\t\t\t\t\t\t\t\t\tif(da < coincident_max_dist && db < coincident_max_dist){\n\t\t\t\t\t\t\t\t\t\t\t\tpav[k].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t\tpbv[z].isInternal = true\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(parts.length > 1){\n\t\t\t\t\t\t// create the parent body to be returned, that contains generated compound parts\n\t\t\t\t\t\tbody = Body.create(Common.extend({parts: parts.slice(0)}, options))\n\n\t\t\t\t\t\t// offset such that body.position is at the centre off mass\n\t\t\t\t\t\tBody.setPosition(body, {x: x, y: y})\n\n\t\t\t\t\t\treturn body\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn parts[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 13 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\n\t\t\tvar Mouse = {}\n\n\t\t\tmodule.exports = Mouse\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n\t\t\t\tMouse.create = function(element) {\n\t\t\t\t\tvar mouse = {}\n\n\t\t\t\t\tif(!element){\n\t\t\t\t\t\tCommon.log(\"Mouse.create: element was undefined, defaulting to document.body\", \"warn\")\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.element = element || document.body\n\t\t\t\t\tmouse.absolute = {x: 0, y: 0}\n\t\t\t\t\tmouse.position = {x: 0, y: 0}\n\t\t\t\t\tmouse.mousedownPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.mouseupPosition = {x: 0, y: 0}\n\t\t\t\t\tmouse.offset = {x: 0, y: 0}\n\t\t\t\t\tmouse.scale = {x: 1, y: 1}\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t\tmouse.button = -1\n\t\t\t\t\tmouse.pixelRatio = parseInt(mouse.element.getAttribute(\"data-pixel-ratio\"), 10) || 1\n\n\t\t\t\t\tmouse.sourceEvents = {\n\t\t\t\t\t\tmousemove: null,\n\t\t\t\t\t\tmousedown: null,\n\t\t\t\t\t\tmouseup: null,\n\t\t\t\t\t\tmousewheel: null\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousemove = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.sourceEvents.mousemove = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousedown = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tmouse.button = 0\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.button = event.button\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mousedownPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mousedownPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mousedown = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mouseup = function(event) {\n\t\t\t\t\t\tvar position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t\t\t\t\t\t\ttouches = event.changedTouches\n\n\t\t\t\t\t\tif(touches){\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmouse.button = -1\n\t\t\t\t\t\tmouse.absolute.x = position.x\n\t\t\t\t\t\tmouse.absolute.y = position.y\n\t\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t\t\tmouse.mouseupPosition.x = mouse.position.x\n\t\t\t\t\t\tmouse.mouseupPosition.y = mouse.position.y\n\t\t\t\t\t\tmouse.sourceEvents.mouseup = event\n\t\t\t\t\t}\n\n\t\t\t\t\tmouse.mousewheel = function(event) {\n\t\t\t\t\t\tmouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail))\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t}\n\n\t\t\t\t\tMouse.setElement(mouse, mouse.element)\n\n\t\t\t\t\treturn mouse\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n\t\t\t\tMouse.setElement = function(mouse, element) {\n\t\t\t\t\tmouse.element = element\n\n\t\t\t\t\telement.addEventListener(\"mousemove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"mousedown\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"mouseup\", mouse.mouseup)\n\n\t\t\t\t\telement.addEventListener(\"mousewheel\", mouse.mousewheel)\n\t\t\t\t\telement.addEventListener(\"DOMMouseScroll\", mouse.mousewheel)\n\n\t\t\t\t\telement.addEventListener(\"touchmove\", mouse.mousemove)\n\t\t\t\t\telement.addEventListener(\"touchstart\", mouse.mousedown)\n\t\t\t\t\telement.addEventListener(\"touchend\", mouse.mouseup)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n\t\t\t\tMouse.clearSourceEvents = function(mouse) {\n\t\t\t\t\tmouse.sourceEvents.mousemove = null\n\t\t\t\t\tmouse.sourceEvents.mousedown = null\n\t\t\t\t\tmouse.sourceEvents.mouseup = null\n\t\t\t\t\tmouse.sourceEvents.mousewheel = null\n\t\t\t\t\tmouse.wheelDelta = 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n\t\t\t\tMouse.setOffset = function(mouse, offset) {\n\t\t\t\t\tmouse.offset.x = offset.x\n\t\t\t\t\tmouse.offset.y = offset.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n\t\t\t\tMouse.setScale = function(mouse, scale) {\n\t\t\t\t\tmouse.scale.x = scale.x\n\t\t\t\t\tmouse.scale.y = scale.y\n\t\t\t\t\tmouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x\n\t\t\t\t\tmouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n\t\t\t\tMouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n\t\t\t\t\tvar elementBounds = element.getBoundingClientRect(),\n\t\t\t\t\t\trootNode = (document.documentElement || document.body.parentNode || document.body),\n\t\t\t\t\t\tscrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n\t\t\t\t\t\tscrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n\t\t\t\t\t\ttouches = event.changedTouches,\n\t\t\t\t\t\tx, y\n\n\t\t\t\t\tif(touches){\n\t\t\t\t\t\tx = touches[0].pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = touches[0].pageY - elementBounds.top - scrollY\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = event.pageX - elementBounds.left - scrollX\n\t\t\t\t\t\ty = event.pageY - elementBounds.top - scrollY\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n\t\t\t\t\t\ty: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 14 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\n\t\t\tvar Detector = {}\n\n\t\t\tmodule.exports = Detector\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Collision = __webpack_require__(8);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n\t\t\t\tDetector.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbodies: [],\n\t\t\t\t\t\tpairs: null\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n\t\t\t\tDetector.setBodies = function(detector, bodies) {\n\t\t\t\t\tdetector.bodies = bodies.slice(0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n\t\t\t\tDetector.clear = function(detector) {\n\t\t\t\t\tdetector.bodies = []\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     *\n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n\t\t\t\tDetector.collisions = function(detector) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tpairs = detector.pairs,\n\t\t\t\t\t\tbodies = detector.bodies,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tcanCollide = Detector.canCollide,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tbodies.sort(Detector._compareBoundsX)\n\n\t\t\t\t\tfor(i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tboundsA = bodyA.bounds,\n\t\t\t\t\t\t\tboundXMax = bodyA.bounds.max.x,\n\t\t\t\t\t\t\tboundYMax = bodyA.bounds.max.y,\n\t\t\t\t\t\t\tboundYMin = bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsASingle = partsALength === 1\n\n\t\t\t\t\t\tfor(j = i + 1; j < bodiesLength; j++){\n\t\t\t\t\t\t\tvar bodyB = bodies[j],\n\t\t\t\t\t\t\t\tboundsB = bodyB.bounds\n\n\t\t\t\t\t\t\tif(boundsB.min.x > boundXMax){\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(boundYMax < boundsB.min.y || boundYMin > boundsB.max.y){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar partsBLength = bodyB.parts.length\n\n\t\t\t\t\t\t\tif(partsASingle && partsBLength === 1){\n\t\t\t\t\t\t\t\tvar collision = collides(bodyA, bodyB, pairs)\n\n\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar partsAStart = partsALength > 1 ? 1 : 0,\n\t\t\t\t\t\t\t\t\tpartsBStart = partsBLength > 1 ? 1 : 0\n\n\t\t\t\t\t\t\t\tfor(var k = partsAStart; k < partsALength; k++){\n\t\t\t\t\t\t\t\t\tvar partA = bodyA.parts[k],\n\t\t\t\t\t\t\t\t\t\tboundsA = partA.bounds\n\n\t\t\t\t\t\t\t\t\tfor(var z = partsBStart; z < partsBLength; z++){\n\t\t\t\t\t\t\t\t\t\tvar partB = bodyB.parts[z],\n\t\t\t\t\t\t\t\t\t\t\tboundsB = partB.bounds\n\n\t\t\t\t\t\t\t\t\t\tif(boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y){\n\t\t\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar collision = collides(partA, partB, pairs)\n\n\t\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n\t\t\t\tDetector.canCollide = function(filterA, filterB) {\n\t\t\t\t\tif(filterA.group === filterB.group && filterA.group !== 0){\n\t\t\t\t\t\treturn filterA.group > 0\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n\t\t\t\tDetector._compareBoundsX = function(bodyA, bodyB) {\n\t\t\t\t\treturn bodyA.bounds.min.x - bodyB.bounds.min.x\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     *\n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n\t\t\t\t/**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 15 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\n\t\t\tvar Plugin = {}\n\n\t\t\tmodule.exports = Plugin\n\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tPlugin._registry = {}\n\n\t\t\t\t/**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n\t\t\t\tPlugin.register = function(plugin) {\n\t\t\t\t\tif(!Plugin.isPlugin(plugin)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"does not implement all required fields.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(plugin.name in Plugin._registry){\n\t\t\t\t\t\tvar registered = Plugin._registry[plugin.name],\n\t\t\t\t\t\t\tpluginVersion = Plugin.versionParse(plugin.version).number,\n\t\t\t\t\t\t\tregisteredVersion = Plugin.versionParse(registered.version).number\n\n\t\t\t\t\t\tif(pluginVersion > registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"was upgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t\t} else if(pluginVersion < registeredVersion){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(registered), \"can not be downgraded to\", Plugin.toString(plugin))\n\t\t\t\t\t\t} else if(plugin !== registered){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.register:\", Plugin.toString(plugin), \"is already registered to different plugin object\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPlugin._registry[plugin.name] = plugin\n\t\t\t\t\t}\n\n\t\t\t\t\treturn plugin\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n\t\t\t\tPlugin.resolve = function(dependency) {\n\t\t\t\t\treturn Plugin._registry[Plugin.dependencyParse(dependency).name]\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n\t\t\t\tPlugin.toString = function(plugin) {\n\t\t\t\t\treturn typeof plugin === \"string\" ? plugin : (plugin.name || \"anonymous\") + \"@\" + (plugin.version || plugin.range || \"0.0.0\")\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n\t\t\t\tPlugin.isPlugin = function(obj) {\n\t\t\t\t\treturn obj && obj.name && obj.version && obj.install\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isUsed = function(module, name) {\n\t\t\t\t\treturn module.used.indexOf(name) > -1\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n\t\t\t\tPlugin.isFor = function(plugin, module) {\n\t\t\t\t\tvar parsed = plugin.for && Plugin.dependencyParse(plugin.for)\n\t\t\t\t\treturn !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n\t\t\t\tPlugin.use = function(module, plugins) {\n\t\t\t\t\tmodule.uses = (module.uses || []).concat(plugins || [])\n\n\t\t\t\t\tif(module.uses.length === 0){\n\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(module), \"does not specify any dependencies to install.\")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar dependencies = Plugin.dependencies(module),\n\t\t\t\t\t\tsortedDependencies = Common.topologicalSort(dependencies),\n\t\t\t\t\t\tstatus = []\n\n\t\t\t\t\tfor(var i = 0; i < sortedDependencies.length; i += 1){\n\t\t\t\t\t\tif(sortedDependencies[i] === module.name){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar plugin = Plugin.resolve(sortedDependencies[i])\n\n\t\t\t\t\t\tif(!plugin){\n\t\t\t\t\t\t\tstatus.push(\"❌ \" + sortedDependencies[i])\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(Plugin.isUsed(module, plugin.name)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!Plugin.isFor(plugin, module)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"is for\", plugin.for, \"but installed on\", Plugin.toString(module) + \".\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin.install){\n\t\t\t\t\t\t\tplugin.install(module)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.use:\", Plugin.toString(plugin), \"does not specify an install function.\")\n\t\t\t\t\t\t\tplugin._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(plugin._warned){\n\t\t\t\t\t\t\tstatus.push(\"🔶 \" + Plugin.toString(plugin))\n\t\t\t\t\t\t\tdelete plugin._warned\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus.push(\"✅ \" + Plugin.toString(plugin))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodule.used.push(plugin.name)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(status.length > 0){\n\t\t\t\t\t\tCommon.info(status.join(\"  \"))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n\t\t\t\tPlugin.dependencies = function(module, tracked) {\n\t\t\t\t\tvar parsedBase = Plugin.dependencyParse(module),\n\t\t\t\t\t\tname = parsedBase.name\n\n\t\t\t\t\ttracked = tracked || {}\n\n\t\t\t\t\tif(name in tracked){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tmodule = Plugin.resolve(module) || module\n\n\t\t\t\t\ttracked[name] = Common.map(module.uses || [], function(dependency) {\n\t\t\t\t\t\tif(Plugin.isPlugin(dependency)){\n\t\t\t\t\t\t\tPlugin.register(dependency)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parsed = Plugin.dependencyParse(dependency),\n\t\t\t\t\t\t\tresolved = Plugin.resolve(dependency)\n\n\t\t\t\t\t\tif(resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(resolved), \"does not satisfy\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsed), \"used by\", Plugin.toString(parsedBase) + \".\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tresolved._warned = true\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t} else if(!resolved){\n\t\t\t\t\t\t\tCommon.warn(\n\t\t\t\t\t\t\t\t\"Plugin.dependencies:\", Plugin.toString(dependency), \"used by\",\n\t\t\t\t\t\t\t\tPlugin.toString(parsedBase), \"could not be resolved.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tmodule._warned = true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn parsed.name\n\t\t\t\t\t})\n\n\t\t\t\t\tfor(var i = 0; i < tracked[name].length; i += 1){\n\t\t\t\t\t\tPlugin.dependencies(tracked[name][i], tracked)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tracked\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n\t\t\t\tPlugin.dependencyParse = function(dependency) {\n\t\t\t\t\tif(Common.isString(dependency)){\n\t\t\t\t\t\tvar pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/\n\n\t\t\t\t\t\tif(!pattern.test(dependency)){\n\t\t\t\t\t\t\tCommon.warn(\"Plugin.dependencyParse:\", dependency, \"is not a valid dependency string.\")\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: dependency.split(\"@\")[0],\n\t\t\t\t\t\t\trange: dependency.split(\"@\")[1] || \"*\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: dependency.name,\n\t\t\t\t\t\trange: dependency.range || dependency.version\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n\t\t\t\tPlugin.versionParse = function(range) {\n\t\t\t\t\tvar pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/\n\n\t\t\t\t\tif(!pattern.test(range)){\n\t\t\t\t\t\tCommon.warn(\"Plugin.versionParse:\", range, \"is not a valid version or range.\")\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parts = pattern.exec(range)\n\t\t\t\t\tvar major = Number(parts[4])\n\t\t\t\t\tvar minor = Number(parts[5])\n\t\t\t\t\tvar patch = Number(parts[6])\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisRange: Boolean(parts[1] || parts[2]),\n\t\t\t\t\t\tversion: parts[3],\n\t\t\t\t\t\trange: range,\n\t\t\t\t\t\toperator: parts[1] || parts[2] || \"\",\n\t\t\t\t\t\tmajor: major,\n\t\t\t\t\t\tminor: minor,\n\t\t\t\t\t\tpatch: patch,\n\t\t\t\t\t\tparts: [major, minor, patch],\n\t\t\t\t\t\tprerelease: parts[7],\n\t\t\t\t\t\tnumber: major * 1e8 + minor * 1e4 + patch\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n\t\t\t\tPlugin.versionSatisfies = function(version, range) {\n\t\t\t\t\trange = range || \"*\"\n\n\t\t\t\t\tvar r = Plugin.versionParse(range),\n\t\t\t\t\t\tv = Plugin.versionParse(version)\n\n\t\t\t\t\tif(r.isRange){\n\t\t\t\t\t\tif(r.operator === \"*\" || version === \"*\"){\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">\"){\n\t\t\t\t\t\t\treturn v.number > r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \">=\"){\n\t\t\t\t\t\t\treturn v.number >= r.number\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"~\"){\n\t\t\t\t\t\t\treturn v.major === r.major && v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(r.operator === \"^\"){\n\t\t\t\t\t\t\tif(r.major > 0){\n\t\t\t\t\t\t\t\treturn v.major === r.major && v.number >= r.number\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(r.minor > 0){\n\t\t\t\t\t\t\t\treturn v.minor === r.minor && v.patch >= r.patch\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn v.patch === r.patch\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn version === range || version === \"*\"\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 16 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\n\t\t\tvar Render = {}\n\n\t\t\tmodule.exports = Render\n\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Mouse = __webpack_require__(13);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback) {\n                                      \twindow.setTimeout(function() {\n                                      \t\tcallback(Common.now())\n                                      \t}, 1000 / 60)\n                                      }\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tRender._goodFps = 30\n\t\t\t\tRender._goodDelta = 1000 / 60\n\n\t\t\t\t/**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n\t\t\t\tRender.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tengine: null,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tcanvas: null,\n\t\t\t\t\t\tmouse: null,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\thistorySize: 60,\n\t\t\t\t\t\t\tdelta: 0,\n\t\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\t\tlastTime: 0,\n\t\t\t\t\t\t\tlastTimestamp: 0,\n\t\t\t\t\t\t\tlastElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsed: 0,\n\t\t\t\t\t\t\ttimestampElapsedHistory: [],\n\t\t\t\t\t\t\tengineDeltaHistory: [],\n\t\t\t\t\t\t\tengineElapsedHistory: [],\n\t\t\t\t\t\t\telapsedHistory: []\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\twidth: 800,\n\t\t\t\t\t\t\theight: 600,\n\t\t\t\t\t\t\tpixelRatio: 1,\n\t\t\t\t\t\t\tbackground: \"#14151f\",\n\t\t\t\t\t\t\twireframeBackground: \"#14151f\",\n\t\t\t\t\t\t\thasBounds: !!options.bounds,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\twireframes: true,\n\t\t\t\t\t\t\tshowSleeping: true,\n\t\t\t\t\t\t\tshowDebug: false,\n\t\t\t\t\t\t\tshowStats: false,\n\t\t\t\t\t\t\tshowPerformance: false,\n\t\t\t\t\t\t\tshowBounds: false,\n\t\t\t\t\t\t\tshowVelocity: false,\n\t\t\t\t\t\t\tshowCollisions: false,\n\t\t\t\t\t\t\tshowSeparations: false,\n\t\t\t\t\t\t\tshowAxes: false,\n\t\t\t\t\t\t\tshowPositions: false,\n\t\t\t\t\t\t\tshowAngleIndicator: false,\n\t\t\t\t\t\t\tshowIds: false,\n\t\t\t\t\t\t\tshowVertexNumbers: false,\n\t\t\t\t\t\t\tshowConvexHulls: false,\n\t\t\t\t\t\t\tshowInternalEdges: false,\n\t\t\t\t\t\t\tshowMousePosition: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar render = Common.extend(defaults, options)\n\n\t\t\t\t\tif(render.canvas){\n\t\t\t\t\t\trender.canvas.width = render.options.width || render.canvas.width\n\t\t\t\t\t\trender.canvas.height = render.options.height || render.canvas.height\n\t\t\t\t\t}\n\n\t\t\t\t\trender.mouse = options.mouse\n\t\t\t\t\trender.engine = options.engine\n\t\t\t\t\trender.canvas = render.canvas || _createCanvas(render.options.width, render.options.height)\n\t\t\t\t\trender.context = render.canvas.getContext(\"2d\")\n\t\t\t\t\trender.textures = {}\n\n\t\t\t\t\trender.bounds = render.bounds || {\n\t\t\t\t\t\tmin: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmax: {\n\t\t\t\t\t\t\tx: render.canvas.width,\n\t\t\t\t\t\t\ty: render.canvas.height\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\trender.controller = Render\n\t\t\t\t\trender.options.showBroadphase = false\n\n\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\tRender.setPixelRatio(render, render.options.pixelRatio)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(Common.isElement(render.element)){\n\t\t\t\t\t\trender.element.appendChild(render.canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn render\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n\t\t\t\tRender.run = function(render) {\n\t\t\t\t\t(function loop(time) {\n\t\t\t\t\t\trender.frameRequestId = _requestAnimationFrame(loop)\n\n\t\t\t\t\t\t_updateTiming(render, time)\n\n\t\t\t\t\t\tRender.world(render, time)\n\n\t\t\t\t\t\tif(render.options.showStats || render.options.showDebug){\n\t\t\t\t\t\t\tRender.stats(render, render.context, time)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(render.options.showPerformance || render.options.showDebug){\n\t\t\t\t\t\t\tRender.performance(render, render.context, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n\t\t\t\tRender.stop = function(render) {\n\t\t\t\t\t_cancelAnimationFrame(render.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n\t\t\t\tRender.setPixelRatio = function(render, pixelRatio) {\n\t\t\t\t\tvar options = render.options,\n\t\t\t\t\t\tcanvas = render.canvas\n\n\t\t\t\t\tif(pixelRatio === \"auto\"){\n\t\t\t\t\t\tpixelRatio = _getPixelRatio(canvas)\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.pixelRatio = pixelRatio\n\t\t\t\t\tcanvas.setAttribute(\"data-pixel-ratio\", pixelRatio)\n\t\t\t\t\tcanvas.width = options.width * pixelRatio\n\t\t\t\t\tcanvas.height = options.height * pixelRatio\n\t\t\t\t\tcanvas.style.width = options.width + \"px\"\n\t\t\t\t\tcanvas.style.height = options.height + \"px\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n\t\t\t\tRender.lookAt = function(render, objects, padding, center) {\n\t\t\t\t\tcenter = typeof center !== \"undefined\" ? center : true\n\t\t\t\t\tobjects = Common.isArray(objects) ? objects : [objects]\n\t\t\t\t\tpadding = padding || {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}\n\n\t\t\t\t\t// find bounds of all objects\n\t\t\t\t\tvar bounds = {\n\t\t\t\t\t\tmin: {x: Infinity, y: Infinity},\n\t\t\t\t\t\tmax: {x: -Infinity, y: -Infinity}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < objects.length; i += 1){\n\t\t\t\t\t\tvar object = objects[i],\n\t\t\t\t\t\t\tmin = object.bounds ? object.bounds.min : (object.min || object.position || object),\n\t\t\t\t\t\t\tmax = object.bounds ? object.bounds.max : (object.max || object.position || object)\n\n\t\t\t\t\t\tif(min && max){\n\t\t\t\t\t\t\tif(min.x < bounds.min.x){\n\t\t\t\t\t\t\t\tbounds.min.x = min.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.x > bounds.max.x){\n\t\t\t\t\t\t\t\tbounds.max.x = max.x\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(min.y < bounds.min.y){\n\t\t\t\t\t\t\t\tbounds.min.y = min.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(max.y > bounds.max.y){\n\t\t\t\t\t\t\t\tbounds.max.y = max.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find ratios\n\t\t\t\t\tvar width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n\t\t\t\t\t\theight = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n\t\t\t\t\t\tviewHeight = render.canvas.height,\n\t\t\t\t\t\tviewWidth = render.canvas.width,\n\t\t\t\t\t\touterRatio = viewWidth / viewHeight,\n\t\t\t\t\t\tinnerRatio = width / height,\n\t\t\t\t\t\tscaleX = 1,\n\t\t\t\t\t\tscaleY = 1\n\n\t\t\t\t\t// find scale factor\n\t\t\t\t\tif(innerRatio > outerRatio){\n\t\t\t\t\t\tscaleY = innerRatio / outerRatio\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscaleX = outerRatio / innerRatio\n\t\t\t\t\t}\n\n\t\t\t\t\t// enable bounds\n\t\t\t\t\trender.options.hasBounds = true\n\n\t\t\t\t\t// position and size\n\t\t\t\t\trender.bounds.min.x = bounds.min.x\n\t\t\t\t\trender.bounds.max.x = bounds.min.x + width * scaleX\n\t\t\t\t\trender.bounds.min.y = bounds.min.y\n\t\t\t\t\trender.bounds.max.y = bounds.min.y + height * scaleY\n\n\t\t\t\t\t// center\n\t\t\t\t\tif(center){\n\t\t\t\t\t\trender.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5\n\t\t\t\t\t\trender.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t\trender.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5\n\t\t\t\t\t}\n\n\t\t\t\t\t// padding\n\t\t\t\t\trender.bounds.min.x -= padding.x\n\t\t\t\t\trender.bounds.max.x -= padding.x\n\t\t\t\t\trender.bounds.min.y -= padding.y\n\t\t\t\t\trender.bounds.max.y -= padding.y\n\n\t\t\t\t\t// update mouse\n\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.startViewTransform = function(render) {\n\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\trender.context.setTransform(\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleX, 0, 0,\n\t\t\t\t\t\trender.options.pixelRatio / boundsScaleY, 0, 0\n\t\t\t\t\t)\n\n\t\t\t\t\trender.context.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n\t\t\t\tRender.endViewTransform = function(render) {\n\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n\t\t\t\tRender.world = function(render, time) {\n\t\t\t\t\tvar startTime = Common.now(),\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tcanvas = render.canvas,\n\t\t\t\t\t\tcontext = render.context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\ttiming = render.timing\n\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world),\n\t\t\t\t\t\tbackground = options.wireframes ? options.wireframeBackground : options.background,\n\t\t\t\t\t\tbodies = [],\n\t\t\t\t\t\tconstraints = [],\n\t\t\t\t\t\ti\n\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: engine.timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"beforeRender\", event)\n\n\t\t\t\t\t// apply background if it has changed\n\t\t\t\t\tif(render.currentBackground !== background){\n\t\t\t\t\t\t_applyBackground(render, background)\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear the canvas with a transparent fill, to allow the canvas background to show\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-in\"\n\t\t\t\t\tcontext.fillStyle = \"transparent\"\n\t\t\t\t\tcontext.fillRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\tcontext.globalCompositeOperation = \"source-over\"\n\n\t\t\t\t\t// handle bounds\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// filter out bodies that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allBodies.length; i++){\n\t\t\t\t\t\t\tvar body = allBodies[i]\n\t\t\t\t\t\t\tif(Bounds.overlaps(body.bounds, render.bounds)){\n\t\t\t\t\t\t\t\tbodies.push(body)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// filter out constraints that are not in view\n\t\t\t\t\t\tfor(i = 0; i < allConstraints.length; i++){\n\t\t\t\t\t\t\tvar constraint = allConstraints[i],\n\t\t\t\t\t\t\t\tbodyA = constraint.bodyA,\n\t\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\t\tpointAWorld = constraint.pointA,\n\t\t\t\t\t\t\t\tpointBWorld = constraint.pointB\n\n\t\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\t\tpointAWorld = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tpointBWorld = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!pointAWorld || !pointBWorld){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld)){\n\t\t\t\t\t\t\t\tconstraints.push(constraint)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the view\n\t\t\t\t\t\tRender.startViewTransform(render)\n\n\t\t\t\t\t\t// update mouse\n\t\t\t\t\t\tif(render.mouse){\n\t\t\t\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n\t\t\t\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraints = allConstraints\n\t\t\t\t\t\tbodies = allBodies\n\n\t\t\t\t\t\tif(render.options.pixelRatio !== 1){\n\t\t\t\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!options.wireframes || (engine.enableSleeping && options.showSleeping)){\n\t\t\t\t\t\t// fully featured rendering of bodies\n\t\t\t\t\t\tRender.bodies(render, bodies, context)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(options.showConvexHulls){\n\t\t\t\t\t\t\tRender.bodyConvexHulls(render, bodies, context)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// optimised method for wireframes only\n\t\t\t\t\t\tRender.bodyWireframes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showBounds){\n\t\t\t\t\t\tRender.bodyBounds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showAxes || options.showAngleIndicator){\n\t\t\t\t\t\tRender.bodyAxes(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showPositions){\n\t\t\t\t\t\tRender.bodyPositions(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVelocity){\n\t\t\t\t\t\tRender.bodyVelocity(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showIds){\n\t\t\t\t\t\tRender.bodyIds(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showSeparations){\n\t\t\t\t\t\tRender.separations(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showCollisions){\n\t\t\t\t\t\tRender.collisions(render, engine.pairs.list, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showVertexNumbers){\n\t\t\t\t\t\tRender.vertexNumbers(render, bodies, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.showMousePosition){\n\t\t\t\t\t\tRender.mousePosition(render, render.mouse, context)\n\t\t\t\t\t}\n\n\t\t\t\t\tRender.constraints(constraints, context)\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\t// revert view transforms\n\t\t\t\t\t\tRender.endViewTransform(render)\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(render, \"afterRender\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\ttiming.lastElapsed = Common.now() - startTime\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n\t\t\t\tRender.stats = function(render, context, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbodies = Composite.allBodies(world),\n\t\t\t\t\t\tparts = 0,\n\t\t\t\t\t\twidth = 55,\n\t\t\t\t\t\theight = 44,\n\t\t\t\t\t\tx = 0,\n\t\t\t\t\t\ty = 0\n\n\t\t\t\t\t// count parts\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i += 1){\n\t\t\t\t\t\tparts += bodies[i].parts.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// sections\n\t\t\t\t\tvar sections = {\n\t\t\t\t\t\tPart: parts,\n\t\t\t\t\t\tBody: bodies.length,\n\t\t\t\t\t\tCons: Composite.allConstraints(world).length,\n\t\t\t\t\t\tComp: Composite.allComposites(world).length,\n\t\t\t\t\t\tPair: engine.pairs.list.length\n\t\t\t\t\t}\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(x, y, width * 5.5, height)\n\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"top\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\n\t\t\t\t\t// sections\n\t\t\t\t\tfor(var key in sections){\n\t\t\t\t\t\tvar section = sections[key]\n\t\t\t\t\t\t// label\n\t\t\t\t\t\tcontext.fillStyle = \"#aaa\"\n\t\t\t\t\t\tcontext.fillText(key, x + width, y + 8)\n\n\t\t\t\t\t\t// value\n\t\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\t\tcontext.fillText(section, x + width, y + 26)\n\n\t\t\t\t\t\tx += width\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.performance = function(render, context) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\tdeltaHistory = timing.deltaHistory,\n\t\t\t\t\t\telapsedHistory = timing.elapsedHistory,\n\t\t\t\t\t\ttimestampElapsedHistory = timing.timestampElapsedHistory,\n\t\t\t\t\t\tengineDeltaHistory = timing.engineDeltaHistory,\n\t\t\t\t\t\tengineElapsedHistory = timing.engineElapsedHistory,\n\t\t\t\t\t\tlastEngineDelta = engine.timing.lastDelta\n\n\t\t\t\t\tvar deltaMean = _mean(deltaHistory),\n\t\t\t\t\t\telapsedMean = _mean(elapsedHistory),\n\t\t\t\t\t\tengineDeltaMean = _mean(engineDeltaHistory),\n\t\t\t\t\t\tengineElapsedMean = _mean(engineElapsedHistory),\n\t\t\t\t\t\ttimestampElapsedMean = _mean(timestampElapsedHistory),\n\t\t\t\t\t\trateMean = (timestampElapsedMean / deltaMean) || 0,\n\t\t\t\t\t\tfps = (1000 / deltaMean) || 0\n\n\t\t\t\t\tvar graphHeight = 4,\n\t\t\t\t\t\tgap = 12,\n\t\t\t\t\t\twidth = 60,\n\t\t\t\t\t\theight = 34,\n\t\t\t\t\t\tx = 10,\n\t\t\t\t\t\ty = 69\n\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.fillStyle = \"#0e0f19\"\n\t\t\t\t\tcontext.fillRect(0, 50, gap * 4 + width * 5 + 22, height)\n\n\t\t\t\t\t// show FPS\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x, y, width, graphHeight, deltaHistory.length,\n\t\t\t\t\t\tMath.round(fps) + \" fps\",\n\t\t\t\t\t\tfps / Render._goodFps,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (deltaHistory[i] / deltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine delta\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n\t\t\t\t\t\tlastEngineDelta.toFixed(2) + \" dt\",\n\t\t\t\t\t\tRender._goodDelta / lastEngineDelta,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineDeltaHistory[i] / engineDeltaMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show engine update time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n\t\t\t\t\t\tengineElapsedMean.toFixed(2) + \" ut\",\n\t\t\t\t\t\t1 - (engineElapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (engineElapsedHistory[i] / engineElapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show render time\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n\t\t\t\t\t\telapsedMean.toFixed(2) + \" rt\",\n\t\t\t\t\t\t1 - (elapsedMean / Render._goodFps),\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (elapsedHistory[i] / elapsedMean) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\n\t\t\t\t\t// show effective speed\n\t\t\t\t\tRender.status(\n\t\t\t\t\t\tcontext, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length,\n\t\t\t\t\t\trateMean.toFixed(2) + \" x\",\n\t\t\t\t\t\trateMean * rateMean * rateMean,\n\t\t\t\t\t\tfunction(i) {\n\t\t\t\t\t\t\treturn (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n\t\t\t\tRender.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n\t\t\t\t\t// background\n\t\t\t\t\tcontext.strokeStyle = \"#888\"\n\t\t\t\t\tcontext.fillStyle = \"#444\"\n\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\tcontext.fillRect(x, y + 7, width, 1)\n\n\t\t\t\t\t// chart\n\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\tcontext.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2))\n\t\t\t\t\tfor(var i = 0; i < width; i += 1){\n\t\t\t\t\t\tcontext.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0))\n\t\t\t\t\t}\n\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t// indicator\n\t\t\t\t\tcontext.fillStyle = \"hsl(\" + Common.clamp(25 + 95 * indicator, 0, 120) + \",100%,60%)\"\n\t\t\t\t\tcontext.fillRect(x, y - 7, 4, 4)\n\n\t\t\t\t\t// label\n\t\t\t\t\tcontext.font = \"12px Arial\"\n\t\t\t\t\tcontext.textBaseline = \"middle\"\n\t\t\t\t\tcontext.textAlign = \"right\"\n\t\t\t\t\tcontext.fillStyle = \"#eee\"\n\t\t\t\t\tcontext.fillText(label, x + width, y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.constraints = function(constraints, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tfor(var i = 0; i < constraints.length; i++){\n\t\t\t\t\t\tvar constraint = constraints[i]\n\n\t\t\t\t\t\tif(!constraint.render.visible || !constraint.pointA || !constraint.pointB){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\n\t\t\t\t\t\tif(bodyA){\n\t\t\t\t\t\t\tstart = Vector.add(bodyA.position, constraint.pointA)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstart = constraint.pointA\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.type === \"pin\"){\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(bodyB){\n\t\t\t\t\t\t\t\tend = Vector.add(bodyB.position, constraint.pointB)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tend = constraint.pointB\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.moveTo(start.x, start.y)\n\n\t\t\t\t\t\t\tif(constraint.render.type === \"spring\"){\n\t\t\t\t\t\t\t\tvar delta = Vector.sub(end, start),\n\t\t\t\t\t\t\t\t\tnormal = Vector.perp(Vector.normalise(delta)),\n\t\t\t\t\t\t\t\t\tcoils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n\t\t\t\t\t\t\t\t\toffset\n\n\t\t\t\t\t\t\t\tfor(var j = 1; j < coils; j += 1){\n\t\t\t\t\t\t\t\t\toffset = j % 2 === 0 ? 1 : -1\n\n\t\t\t\t\t\t\t\t\tc.lineTo(\n\t\t\t\t\t\t\t\t\t\tstart.x + delta.x * (j / coils) + normal.x * offset * 4,\n\t\t\t\t\t\t\t\t\t\tstart.y + delta.y * (j / coils) + normal.y * offset * 4\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(end.x, end.y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.lineWidth){\n\t\t\t\t\t\t\tc.lineWidth = constraint.render.lineWidth\n\t\t\t\t\t\t\tc.strokeStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(constraint.render.anchors){\n\t\t\t\t\t\t\tc.fillStyle = constraint.render.strokeStyle\n\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.arc(end.x, end.y, 3, 0, 2 * Math.PI)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodies = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tshowInternalEdges = options.showInternalEdges || !options.wireframes,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tif(!part.render.visible){\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(options.showSleeping && body.isSleeping){\n\t\t\t\t\t\t\t\tc.globalAlpha = 0.5 * part.render.opacity\n\t\t\t\t\t\t\t} else if(part.render.opacity !== 1){\n\t\t\t\t\t\t\t\tc.globalAlpha = part.render.opacity\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(part.render.sprite && part.render.sprite.texture && !options.wireframes){\n\t\t\t\t\t\t\t\t// part sprite\n\t\t\t\t\t\t\t\tvar sprite = part.render.sprite,\n\t\t\t\t\t\t\t\t\ttexture = _getTexture(render, sprite.texture)\n\n\t\t\t\t\t\t\t\tc.translate(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\tc.rotate(part.angle)\n\n\t\t\t\t\t\t\t\tc.drawImage(\n\t\t\t\t\t\t\t\t\ttexture,\n\t\t\t\t\t\t\t\t\ttexture.width * -sprite.xOffset * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * -sprite.yOffset * sprite.yScale,\n\t\t\t\t\t\t\t\t\ttexture.width * sprite.xScale,\n\t\t\t\t\t\t\t\t\ttexture.height * sprite.yScale\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t// revert translation, hopefully faster than save / restore\n\t\t\t\t\t\t\t\tc.rotate(-part.angle)\n\t\t\t\t\t\t\t\tc.translate(-part.position.x, -part.position.y)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// part polygon\n\t\t\t\t\t\t\t\tif(part.circleRadius){\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.beginPath()\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\t\t\tfor(var j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!options.wireframes){\n\t\t\t\t\t\t\t\t\tc.fillStyle = part.render.fillStyle\n\n\t\t\t\t\t\t\t\t\tif(part.render.lineWidth){\n\t\t\t\t\t\t\t\t\t\tc.lineWidth = part.render.lineWidth\n\t\t\t\t\t\t\t\t\t\tc.strokeStyle = part.render.strokeStyle\n\t\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tc.fill()\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\t\t\t\t\tc.stroke()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.globalAlpha = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyWireframes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tshowInternalEdges = render.options.showInternalEdges,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render all bodies\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\n\t\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y)\n\n\t\t\t\t\t\t\tfor(j = 1; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tif(!part.vertices[j - 1].isInternal || showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(part.vertices[j].isInternal && !showInternalEdges){\n\t\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"#bbb\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyConvexHulls = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render convex hulls\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible || body.parts.length === 1){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.vertices[0].x, body.vertices[0].y)\n\n\t\t\t\t\t\tfor(j = 1; j < body.vertices.length; j++){\n\t\t\t\t\t\t\tc.lineTo(body.vertices[j].x, body.vertices[j].y)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.lineTo(body.vertices[0].x, body.vertices[0].y)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.vertexNumbers = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(k = parts.length > 1 ? 1 : 0; k < parts.length; k++){\n\t\t\t\t\t\t\tvar part = parts[k]\n\t\t\t\t\t\t\tfor(j = 0; j < part.vertices.length; j++){\n\t\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.2)\"\n\t\t\t\t\t\t\t\tc.fillText(i + \"_\" + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.mousePosition = function(render, mouse, context) {\n\t\t\t\t\tvar c = context\n\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\t\t\tc.fillText(mouse.position.x + \"  \" + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyBounds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\t\tfor(var j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\t\tc.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,255,255,0.08)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(0,0,0,0.1)\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyAxes = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tparts = body.parts\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(options.showAxes){\n\t\t\t\t\t\t\t// render all axes\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\tvar axis = part.axes[k]\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\t\tpart = parts[j]\n\t\t\t\t\t\t\t\tfor(k = 0; k < part.axes.length; k++){\n\t\t\t\t\t\t\t\t\t// render a single axis indicator\n\t\t\t\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y)\n\t\t\t\t\t\t\t\t\tc.lineTo((part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,\n\t\t\t\t\t\t\t\t\t\t(part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"indianred\"\n\t\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255, 255, 255, 0.4)\"\n\t\t\t\t\t\tc.globalCompositeOperation = \"overlay\"\n\t\t\t\t\t\tc.lineWidth = 2\n\t\t\t\t\t}\n\n\t\t\t\t\tc.stroke()\n\t\t\t\t\tc.globalCompositeOperation = \"source-over\"\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyPositions = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\tengine = render.engine,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tk\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render current positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle compound parts\n\t\t\t\t\t\tfor(k = 0; k < body.parts.length; k++){\n\t\t\t\t\t\t\tpart = body.parts[k]\n\t\t\t\t\t\t\tc.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"indianred\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"rgba(0,0,0,0.5)\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render previous positions\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\tif(body.render.visible){\n\t\t\t\t\t\t\tc.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false)\n\t\t\t\t\t\t\tc.closePath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tc.fillStyle = \"rgba(255,165,0,0.8)\"\n\t\t\t\t\tc.fill()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyVelocity = function(render, bodies, context) {\n\t\t\t\t\tvar c = context\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(!body.render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(body.position.x, body.position.y)\n\t\t\t\t\t\tc.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2)\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 3\n\t\t\t\t\tc.strokeStyle = \"cornflowerblue\"\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.bodyIds = function(render, bodies, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tif(!bodies[i].render.visible){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar parts = bodies[i].parts\n\t\t\t\t\t\tfor(j = parts.length > 1 ? 1 : 0; j < parts.length; j++){\n\t\t\t\t\t\t\tvar part = parts[j]\n\t\t\t\t\t\t\tc.font = \"12px Arial\"\n\t\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.5)\"\n\t\t\t\t\t\t\tc.fillText(part.id, part.position.x + 10, part.position.y - 10)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.collisions = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision positions\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tfor(j = 0; j < pair.activeContacts.length; j++){\n\t\t\t\t\t\t\tvar contact = pair.activeContacts[j],\n\t\t\t\t\t\t\t\tvertex = contact.vertex\n\t\t\t\t\t\t\tc.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.fillStyle = \"rgba(255,255,255,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.fillStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.fill()\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render collision normals\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\n\t\t\t\t\t\tif(pair.activeContacts.length > 0){\n\t\t\t\t\t\t\tvar normalPosX = pair.activeContacts[0].vertex.x,\n\t\t\t\t\t\t\t\tnormalPosY = pair.activeContacts[0].vertex.y\n\n\t\t\t\t\t\t\tif(pair.activeContacts.length === 2){\n\t\t\t\t\t\t\t\tnormalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2\n\t\t\t\t\t\t\t\tnormalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true){\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc.lineTo(normalPosX, normalPosY)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.7)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\n\t\t\t\t\tc.lineWidth = 1\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.separations = function(render, pairs, context) {\n\t\t\t\t\tvar c = context,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tcorrected,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tc.beginPath()\n\n\t\t\t\t\t// render separations\n\t\t\t\t\tfor(i = 0; i < pairs.length; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.bodyA\n\t\t\t\t\t\tbodyB = collision.bodyB\n\n\t\t\t\t\t\tvar k = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyB.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyB.position.x, bodyB.position.y)\n\t\t\t\t\t\tc.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k)\n\n\t\t\t\t\t\tk = 1\n\n\t\t\t\t\t\tif(!bodyB.isStatic && !bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(bodyA.isStatic){\n\t\t\t\t\t\t\tk = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.moveTo(bodyA.position.x, bodyA.position.y)\n\t\t\t\t\t\tc.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.wireframes){\n\t\t\t\t\t\tc.strokeStyle = \"rgba(255,165,0,0.5)\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.strokeStyle = \"orange\"\n\t\t\t\t\t}\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n\t\t\t\tRender.inspector = function(inspector, context) {\n\t\t\t\t\tvar engine = inspector.engine,\n\t\t\t\t\t\tselected = inspector.selected,\n\t\t\t\t\t\trender = inspector.render,\n\t\t\t\t\t\toptions = render.options,\n\t\t\t\t\t\tbounds\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\t\t\t\tboundsScaleY = boundsHeight / render.options.height\n\n\t\t\t\t\t\tcontext.scale(1 / boundsScaleX, 1 / boundsScaleY)\n\t\t\t\t\t\tcontext.translate(-render.bounds.min.x, -render.bounds.min.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < selected.length; i++){\n\t\t\t\t\t\tvar item = selected[i].data\n\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.9)\"\n\t\t\t\t\t\tcontext.setLineDash([1, 2])\n\n\t\t\t\t\t\tswitch(item.type){\n\n\t\t\t\t\t\t\tcase \"body\":\n\n\t\t\t\t\t\t\t\t// render body selections\n\t\t\t\t\t\t\t\tbounds = item.bounds\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n\t\t\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6))\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\tcase \"constraint\":\n\n\t\t\t\t\t\t\t\t// render constraint selections\n\t\t\t\t\t\t\t\tvar point = item.pointA\n\t\t\t\t\t\t\t\tif(item.bodyA){\n\t\t\t\t\t\t\t\t\tpoint = item.pointB\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\t\t\tcontext.arc(point.x, point.y, 10, 0, 2 * Math.PI)\n\t\t\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\t\t\tcontext.stroke()\n\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.setLineDash([])\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\t// render selection region\n\t\t\t\t\tif(inspector.selectStart !== null){\n\t\t\t\t\t\tcontext.translate(0.5, 0.5)\n\t\t\t\t\t\tcontext.lineWidth = 1\n\t\t\t\t\t\tcontext.strokeStyle = \"rgba(255,165,0,0.6)\"\n\t\t\t\t\t\tcontext.fillStyle = \"rgba(255,165,0,0.1)\"\n\t\t\t\t\t\tbounds = inspector.selectBounds\n\t\t\t\t\t\tcontext.beginPath()\n\t\t\t\t\t\tcontext.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n\t\t\t\t\t\t\tMath.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y))\n\t\t\t\t\t\tcontext.closePath()\n\t\t\t\t\t\tcontext.stroke()\n\t\t\t\t\t\tcontext.fill()\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(options.hasBounds){\n\t\t\t\t\t\tcontext.setTransform(1, 0, 0, 1, 0, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n\t\t\t\tvar _updateTiming = function(render, time) {\n\t\t\t\t\tvar engine = render.engine,\n\t\t\t\t\t\ttiming = render.timing,\n\t\t\t\t\t\thistorySize = timing.historySize,\n\t\t\t\t\t\ttimestamp = engine.timing.timestamp\n\n\t\t\t\t\ttiming.delta = time - timing.lastTime || Render._goodDelta\n\t\t\t\t\ttiming.lastTime = time\n\n\t\t\t\t\ttiming.timestampElapsed = timestamp - timing.lastTimestamp || 0\n\t\t\t\t\ttiming.lastTimestamp = timestamp\n\n\t\t\t\t\ttiming.deltaHistory.unshift(timing.delta)\n\t\t\t\t\ttiming.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineDeltaHistory.unshift(engine.timing.lastDelta)\n\t\t\t\t\ttiming.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize)\n\n\t\t\t\t\ttiming.timestampElapsedHistory.unshift(timing.timestampElapsed)\n\t\t\t\t\ttiming.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.engineElapsedHistory.unshift(engine.timing.lastElapsed)\n\t\t\t\t\ttiming.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize)\n\n\t\t\t\t\ttiming.elapsedHistory.unshift(timing.lastElapsed)\n\t\t\t\t\ttiming.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n\t\t\t\tvar _mean = function(values) {\n\t\t\t\t\tvar result = 0\n\t\t\t\t\tfor(var i = 0; i < values.length; i += 1){\n\t\t\t\t\t\tresult += values[i]\n\t\t\t\t\t}\n\t\t\t\t\treturn (result / values.length) || 0\n\t\t\t\t}\n\n\t\t\t\t/**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n\t\t\t\tvar _createCanvas = function(width, height) {\n\t\t\t\t\tvar canvas = document.createElement(\"canvas\")\n\t\t\t\t\tcanvas.width = width\n\t\t\t\t\tcanvas.height = height\n\t\t\t\t\tcanvas.oncontextmenu = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\tcanvas.onselectstart = function() {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn canvas\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n\t\t\t\tvar _getPixelRatio = function(canvas) {\n\t\t\t\t\tvar context = canvas.getContext(\"2d\"),\n\t\t\t\t\t\tdevicePixelRatio = window.devicePixelRatio || 1,\n\t\t\t\t\t\tbackingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1\n\n\t\t\t\t\treturn devicePixelRatio / backingStorePixelRatio\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n\t\t\t\tvar _getTexture = function(render, imagePath) {\n\t\t\t\t\tvar image = render.textures[imagePath]\n\n\t\t\t\t\tif(image){\n\t\t\t\t\t\treturn image\n\t\t\t\t\t}\n\n\t\t\t\t\timage = render.textures[imagePath] = new Image()\n\t\t\t\t\timage.src = imagePath\n\n\t\t\t\t\treturn image\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n\t\t\t\tvar _applyBackground = function(render, background) {\n\t\t\t\t\tvar cssBackground = background\n\n\t\t\t\t\tif(/(jpg|gif|png)$/.test(background)){\n\t\t\t\t\t\tcssBackground = \"url(\" + background + \")\"\n\t\t\t\t\t}\n\n\t\t\t\t\trender.canvas.style.background = cssBackground\n\t\t\t\t\trender.canvas.style.backgroundSize = \"contain\"\n\t\t\t\t\trender.currentBackground = background\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @deprecated\n     * @property controller\n     * @type render\n     */\n\n\t\t\t\t/**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n\t\t\t\t/**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n\t\t\t\t/**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n\t\t\t\t/**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n\t\t\t\t/**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n\t\t\t\t/**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n\t\t\t\t/**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n\t\t\t\t/**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable all debug information overlays together.\n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the engine stats info overlay.\n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable performance charts.\n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 17 */\n\t\t/***/ (function(module, exports) {\n\n\t\t\t/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\n\t\t\tvar Contact = {}\n\n\t\t\tmodule.exports = Contact;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n\t\t\t\tContact.create = function(vertex) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvertex: vertex,\n\t\t\t\t\t\tnormalImpulse: 0,\n\t\t\t\t\t\ttangentImpulse: 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 18 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\n\t\t\tvar Engine = {}\n\n\t\t\tmodule.exports = Engine\n\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Resolver = __webpack_require__(19)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Pairs = __webpack_require__(20)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n\t\t\t\tEngine.create = function(options) {\n\t\t\t\t\toptions = options || {}\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tpositionIterations: 6,\n\t\t\t\t\t\tvelocityIterations: 4,\n\t\t\t\t\t\tconstraintIterations: 2,\n\t\t\t\t\t\tenableSleeping: false,\n\t\t\t\t\t\tevents: [],\n\t\t\t\t\t\tplugin: {},\n\t\t\t\t\t\tgravity: {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 1,\n\t\t\t\t\t\t\tscale: 0.001\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttiming: {\n\t\t\t\t\t\t\ttimestamp: 0,\n\t\t\t\t\t\t\ttimeScale: 1,\n\t\t\t\t\t\t\tlastDelta: 0,\n\t\t\t\t\t\t\tlastElapsed: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar engine = Common.extend(defaults, options)\n\n\t\t\t\t\tengine.world = options.world || Composite.create({label: \"World\"})\n\t\t\t\t\tengine.pairs = options.pairs || Pairs.create()\n\t\t\t\t\tengine.detector = options.detector || Detector.create()\n\n\t\t\t\t\t// for temporary back compatibility only\n\t\t\t\t\tengine.grid = {buckets: []}\n\t\t\t\t\tengine.world.gravity = engine.gravity\n\t\t\t\t\tengine.broadphase = engine.grid\n\t\t\t\t\tengine.metrics = {}\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n\t\t\t\tEngine.update = function(engine, delta, correction) {\n\t\t\t\t\tvar startTime = Common.now()\n\n\t\t\t\t\tdelta = delta || 1000 / 60\n\t\t\t\t\tcorrection = correction || 1\n\n\t\t\t\t\tvar world = engine.world,\n\t\t\t\t\t\tdetector = engine.detector,\n\t\t\t\t\t\tpairs = engine.pairs,\n\t\t\t\t\t\ttiming = engine.timing,\n\t\t\t\t\t\ttimestamp = timing.timestamp,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// increment timestamp\n\t\t\t\t\ttiming.timestamp += delta * timing.timeScale\n\t\t\t\t\ttiming.lastDelta = delta * timing.timeScale\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(engine, \"beforeUpdate\", event)\n\n\t\t\t\t\t// get all bodies and all constraints in the world\n\t\t\t\t\tvar allBodies = Composite.allBodies(world),\n\t\t\t\t\t\tallConstraints = Composite.allConstraints(world)\n\n\t\t\t\t\t// update the detector bodies if they have changed\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tDetector.setBodies(detector, allBodies)\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset all composite modified flags\n\t\t\t\t\tif(world.isModified){\n\t\t\t\t\t\tComposite.setModified(world, false, false, true)\n\t\t\t\t\t}\n\n\t\t\t\t\t// update sleeping if enabled\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.update(allBodies, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// apply gravity to all bodies\n\t\t\t\t\tEngine._bodiesApplyGravity(allBodies, engine.gravity)\n\n\t\t\t\t\t// update all body position and rotation by integration\n\t\t\t\t\tEngine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds)\n\n\t\t\t\t\t// update all constraints (first pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// find all collisions\n\t\t\t\t\tdetector.pairs = engine.pairs\n\t\t\t\t\tvar collisions = Detector.collisions(detector)\n\n\t\t\t\t\t// update collision pairs\n\t\t\t\t\tPairs.update(pairs, collisions, timestamp)\n\n\t\t\t\t\t// wake up bodies involved in collisions\n\t\t\t\t\tif(engine.enableSleeping){\n\t\t\t\t\t\tSleeping.afterCollisions(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionStart.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionStart\", {pairs: pairs.collisionStart})\n\t\t\t\t\t}\n\n\t\t\t\t\t// iteratively resolve position between collisions\n\t\t\t\t\tResolver.preSolvePosition(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.positionIterations; i++){\n\t\t\t\t\t\tResolver.solvePosition(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tResolver.postSolvePosition(allBodies)\n\n\t\t\t\t\t// update all constraints (second pass)\n\t\t\t\t\tConstraint.preSolveAll(allBodies)\n\t\t\t\t\tfor(i = 0; i < engine.constraintIterations; i++){\n\t\t\t\t\t\tConstraint.solveAll(allConstraints, timing.timeScale)\n\t\t\t\t\t}\n\t\t\t\t\tConstraint.postSolveAll(allBodies)\n\n\t\t\t\t\t// iteratively resolve velocity between collisions\n\t\t\t\t\tResolver.preSolveVelocity(pairs.list)\n\t\t\t\t\tfor(i = 0; i < engine.velocityIterations; i++){\n\t\t\t\t\t\tResolver.solveVelocity(pairs.list, timing.timeScale)\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger collision events\n\t\t\t\t\tif(pairs.collisionActive.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionActive\", {pairs: pairs.collisionActive})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(pairs.collisionEnd.length > 0){\n\t\t\t\t\t\tEvents.trigger(engine, \"collisionEnd\", {pairs: pairs.collisionEnd})\n\t\t\t\t\t}\n\n\t\t\t\t\t// clear force buffers\n\t\t\t\t\tEngine._bodiesClearForces(allBodies)\n\n\t\t\t\t\tEvents.trigger(engine, \"afterUpdate\", event)\n\n\t\t\t\t\t// log the time elapsed computing this update\n\t\t\t\t\tengine.timing.lastElapsed = Common.now() - startTime\n\n\t\t\t\t\treturn engine\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n\t\t\t\tEngine.merge = function(engineA, engineB) {\n\t\t\t\t\tCommon.extend(engineA, engineB)\n\n\t\t\t\t\tif(engineB.world){\n\t\t\t\t\t\tengineA.world = engineB.world\n\n\t\t\t\t\t\tEngine.clear(engineA)\n\n\t\t\t\t\t\tvar bodies = Composite.allBodies(engineA.world)\n\n\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\tvar body = bodies[i]\n\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\tbody.id = Common.nextId()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n\t\t\t\tEngine.clear = function(engine) {\n\t\t\t\t\tPairs.clear(engine.pairs)\n\t\t\t\t\tDetector.clear(engine.detector)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n\t\t\t\tEngine._bodiesClearForces = function(bodies) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\t// reset force buffers\n\t\t\t\t\t\tbody.force.x = 0\n\t\t\t\t\t\tbody.force.y = 0\n\t\t\t\t\t\tbody.torque = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n\t\t\t\tEngine._bodiesApplyGravity = function(bodies, gravity) {\n\t\t\t\t\tvar gravityScale = typeof gravity.scale !== \"undefined\" ? gravity.scale : 0.001\n\n\t\t\t\t\tif((gravity.x === 0 && gravity.y === 0) || gravityScale === 0){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// apply gravity\n\t\t\t\t\t\tbody.force.y += body.mass * gravity.y * gravityScale\n\t\t\t\t\t\tbody.force.x += body.mass * gravity.x * gravityScale\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n\t\t\t\tEngine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isStatic || body.isSleeping){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tBody.update(body, deltaTime, timeScale, correction)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n\t\t\t\t/**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n\t\t\t\t/**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n\t\t\t\t/**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n\t\t\t\t/**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n\t\t\t\t/**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n\t\t\t\t/**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n\t\t\t\t/**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n\t\t\t\t/**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n\t\t\t\t/**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n\t\t\t\t/**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 19 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\n\t\t\tvar Resolver = {}\n\n\t\t\tmodule.exports = Resolver\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\tResolver._restingThresh = 4\n\t\t\t\tResolver._restingThreshTangent = 6\n\t\t\t\tResolver._positionDampen = 0.9\n\t\t\t\tResolver._positionWarming = 0.8\n\t\t\t\tResolver._frictionNormalMultiplier = 5\n\n\t\t\t\t/**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolvePosition = function(pairs) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tactiveCount,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find total contacts on each body\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tactiveCount = pair.activeContacts.length\n\t\t\t\t\t\tpair.collision.parentA.totalContacts += activeCount\n\t\t\t\t\t\tpair.collision.parentB.totalContacts += activeCount\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solvePosition = function(pairs, timeScale) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tcontactShare,\n\t\t\t\t\t\tpositionImpulse,\n\t\t\t\t\t\tpositionDampen = Resolver._positionDampen,\n\t\t\t\t\t\tpairsLength = pairs.length\n\n\t\t\t\t\t// find impulses required to resolve penetration\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\n\t\t\t\t\t\t// get current separation between body edges involved in collision\n\t\t\t\t\t\tpair.separation\n                = normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y)\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tpair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcollision = pair.collision\n\t\t\t\t\t\tbodyA = collision.parentA\n\t\t\t\t\t\tbodyB = collision.parentB\n\t\t\t\t\t\tnormal = collision.normal\n\t\t\t\t\t\tpositionImpulse = (pair.separation - pair.slop) * timeScale\n\n\t\t\t\t\t\tif(bodyA.isStatic || bodyB.isStatic){\n\t\t\t\t\t\t\tpositionImpulse *= 2\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyA.totalContacts\n\t\t\t\t\t\t\tbodyA.positionImpulse.x += normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyA.positionImpulse.y += normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\tcontactShare = positionDampen / bodyB.totalContacts\n\t\t\t\t\t\t\tbodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare\n\t\t\t\t\t\t\tbodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n\t\t\t\tResolver.postSolvePosition = function(bodies) {\n\t\t\t\t\tvar positionWarming = Resolver._positionWarming,\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tverticesTranslate = Vertices.translate,\n\t\t\t\t\t\tboundsUpdate = Bounds.update\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\tpositionImpulse = body.positionImpulse,\n\t\t\t\t\t\t\tpositionImpulseX = positionImpulse.x,\n\t\t\t\t\t\t\tpositionImpulseY = positionImpulse.y,\n\t\t\t\t\t\t\tvelocity = body.velocity\n\n\t\t\t\t\t\t// reset contact count\n\t\t\t\t\t\tbody.totalContacts = 0\n\n\t\t\t\t\t\tif(positionImpulseX !== 0 || positionImpulseY !== 0){\n\t\t\t\t\t\t\t// update body geometry\n\t\t\t\t\t\t\tfor(var j = 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\tverticesTranslate(part.vertices, positionImpulse)\n\t\t\t\t\t\t\t\tboundsUpdate(part.bounds, part.vertices, velocity)\n\t\t\t\t\t\t\t\tpart.position.x += positionImpulseX\n\t\t\t\t\t\t\t\tpart.position.y += positionImpulseY\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// move the body without changing velocity\n\t\t\t\t\t\t\tbody.positionPrev.x += positionImpulseX\n\t\t\t\t\t\t\tbody.positionPrev.y += positionImpulseY\n\n\t\t\t\t\t\t\tif(positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0){\n\t\t\t\t\t\t\t\t// reset cached impulse if the body has velocity along it\n\t\t\t\t\t\t\t\tpositionImpulse.x = 0\n\t\t\t\t\t\t\t\tpositionImpulse.y = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// warm the next iteration\n\t\t\t\t\t\t\t\tpositionImpulse.x *= positionWarming\n\t\t\t\t\t\t\t\tpositionImpulse.y *= positionWarming\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n\t\t\t\tResolver.preSolveVelocity = function(pairs) {\n\t\t\t\t\tvar pairsLength = pairs.length,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar contacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcollision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tnormal = collision.normal,\n\t\t\t\t\t\t\ttangent = collision.tangent\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex,\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse,\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse\n\n\t\t\t\t\t\t\tif(normalImpulse !== 0 || tangentImpulse !== 0){\n\t\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\t\tvar impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n\t\t\t\t\t\t\t\t\timpulseY = normal.y * normalImpulse + tangent.y * tangentImpulse\n\n\t\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\t\tbodyA.anglePrev += bodyA.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\t\tbodyB.anglePrev -= bodyB.inverseInertia * (\n\t\t\t\t\t\t\t\t\t\t(contactVertex.x - bodyB.position.x) * impulseY\n                            - (contactVertex.y - bodyB.position.y) * impulseX\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n\t\t\t\tResolver.solveVelocity = function(pairs, timeScale) {\n\t\t\t\t\tvar timeScaleSquared = timeScale * timeScale,\n\t\t\t\t\t\trestingThresh = Resolver._restingThresh * timeScaleSquared,\n\t\t\t\t\t\tfrictionNormalMultiplier = Resolver._frictionNormalMultiplier,\n\t\t\t\t\t\trestingThreshTangent = Resolver._restingThreshTangent * timeScaleSquared,\n\t\t\t\t\t\tNumberMaxValue = Number.MAX_VALUE,\n\t\t\t\t\t\tpairsLength = pairs.length,\n\t\t\t\t\t\ttangentImpulse,\n\t\t\t\t\t\tmaxFriction,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj\n\n\t\t\t\t\tfor(i = 0; i < pairsLength; i++){\n\t\t\t\t\t\tvar pair = pairs[i]\n\n\t\t\t\t\t\tif(!pair.isActive || pair.isSensor){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar collision = pair.collision,\n\t\t\t\t\t\t\tbodyA = collision.parentA,\n\t\t\t\t\t\t\tbodyB = collision.parentB,\n\t\t\t\t\t\t\tbodyAVelocity = bodyA.velocity,\n\t\t\t\t\t\t\tbodyBVelocity = bodyB.velocity,\n\t\t\t\t\t\t\tnormalX = collision.normal.x,\n\t\t\t\t\t\t\tnormalY = collision.normal.y,\n\t\t\t\t\t\t\ttangentX = collision.tangent.x,\n\t\t\t\t\t\t\ttangentY = collision.tangent.y,\n\t\t\t\t\t\t\tcontacts = pair.activeContacts,\n\t\t\t\t\t\t\tcontactsLength = contacts.length,\n\t\t\t\t\t\t\tcontactShare = 1 / contactsLength,\n\t\t\t\t\t\t\tinverseMassTotal = bodyA.inverseMass + bodyB.inverseMass,\n\t\t\t\t\t\t\tfriction = pair.friction * pair.frictionStatic * frictionNormalMultiplier * timeScaleSquared\n\n\t\t\t\t\t\t// update body velocities\n\t\t\t\t\t\tbodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x\n\t\t\t\t\t\tbodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y\n\t\t\t\t\t\tbodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x\n\t\t\t\t\t\tbodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y\n\t\t\t\t\t\tbodyA.angularVelocity = bodyA.angle - bodyA.anglePrev\n\t\t\t\t\t\tbodyB.angularVelocity = bodyB.angle - bodyB.anglePrev\n\n\t\t\t\t\t\t// resolve each contact\n\t\t\t\t\t\tfor(j = 0; j < contactsLength; j++){\n\t\t\t\t\t\t\tvar contact = contacts[j],\n\t\t\t\t\t\t\t\tcontactVertex = contact.vertex\n\n\t\t\t\t\t\t\tvar offsetAX = contactVertex.x - bodyA.position.x,\n\t\t\t\t\t\t\t\toffsetAY = contactVertex.y - bodyA.position.y,\n\t\t\t\t\t\t\t\toffsetBX = contactVertex.x - bodyB.position.x,\n\t\t\t\t\t\t\t\toffsetBY = contactVertex.y - bodyB.position.y\n\n\t\t\t\t\t\t\tvar velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity,\n\t\t\t\t\t\t\t\tvelocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity\n\n\t\t\t\t\t\t\tvar relativeVelocityX = velocityPointAX - velocityPointBX,\n\t\t\t\t\t\t\t\trelativeVelocityY = velocityPointAY - velocityPointBY\n\n\t\t\t\t\t\t\tvar normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n\t\t\t\t\t\t\t\ttangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY\n\n\t\t\t\t\t\t\t// coulomb friction\n\t\t\t\t\t\t\tvar normalOverlap = pair.separation + normalVelocity\n\t\t\t\t\t\t\tvar normalForce = Math.min(normalOverlap, 1)\n\t\t\t\t\t\t\tnormalForce = normalOverlap < 0 ? 0 : normalForce\n\n\t\t\t\t\t\t\tvar frictionLimit = normalForce * friction\n\n\t\t\t\t\t\t\tif(tangentVelocity > frictionLimit || -tangentVelocity > frictionLimit){\n\t\t\t\t\t\t\t\tmaxFriction = tangentVelocity > 0 ? tangentVelocity : -tangentVelocity\n\t\t\t\t\t\t\t\ttangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleSquared\n\n\t\t\t\t\t\t\t\tif(tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t} else if(tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\ttangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttangentImpulse = tangentVelocity\n\t\t\t\t\t\t\t\tmaxFriction = NumberMaxValue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// account for mass, inertia and contact offset\n\t\t\t\t\t\t\tvar oAcN = offsetAX * normalY - offsetAY * normalX,\n\t\t\t\t\t\t\t\toBcN = offsetBX * normalY - offsetBY * normalX,\n\t\t\t\t\t\t\t\tshare = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN)\n\n\t\t\t\t\t\t\t// raw impulses\n\t\t\t\t\t\t\tvar normalImpulse = (1 + pair.restitution) * normalVelocity * share\n\t\t\t\t\t\t\ttangentImpulse *= share\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(normalVelocity * normalVelocity > restingThresh && normalVelocity < 0){\n\t\t\t\t\t\t\t\t// high normal velocity so clear cached contact normal impulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// impulse constraint tends to 0\n\t\t\t\t\t\t\t\tvar contactNormalImpulse = contact.normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse += normalImpulse\n\t\t\t\t\t\t\t\tcontact.normalImpulse = Math.min(contact.normalImpulse, 0)\n\t\t\t\t\t\t\t\tnormalImpulse = contact.normalImpulse - contactNormalImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// handle high velocity and resting collisions separately\n\t\t\t\t\t\t\tif(tangentVelocity * tangentVelocity > restingThreshTangent){\n\t\t\t\t\t\t\t\t// high tangent velocity so clear cached contact tangent impulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse = 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// solve resting collision constraints using Erin Catto's method (GDC08)\n\t\t\t\t\t\t\t\t// tangent impulse tends to -tangentSpeed or +tangentSpeed\n\t\t\t\t\t\t\t\tvar contactTangentImpulse = contact.tangentImpulse\n\t\t\t\t\t\t\t\tcontact.tangentImpulse += tangentImpulse\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse < -maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = -maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(contact.tangentImpulse > maxFriction){\n\t\t\t\t\t\t\t\t\tcontact.tangentImpulse = maxFriction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttangentImpulse = contact.tangentImpulse - contactTangentImpulse\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// total impulse from contact\n\t\t\t\t\t\t\tvar impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n\t\t\t\t\t\t\t\timpulseY = normalY * normalImpulse + tangentY * tangentImpulse\n\n\t\t\t\t\t\t\t// apply impulse from contact\n\t\t\t\t\t\t\tif(!(bodyA.isStatic || bodyA.isSleeping)){\n\t\t\t\t\t\t\t\tbodyA.positionPrev.x += impulseX * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.positionPrev.y += impulseY * bodyA.inverseMass\n\t\t\t\t\t\t\t\tbodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!(bodyB.isStatic || bodyB.isSleeping)){\n\t\t\t\t\t\t\t\tbodyB.positionPrev.x -= impulseX * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.positionPrev.y -= impulseY * bodyB.inverseMass\n\t\t\t\t\t\t\t\tbodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 20 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\n\t\t\tvar Pairs = {}\n\n\t\t\tmodule.exports = Pairs\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n\t\t\t\tPairs.create = function(options) {\n\t\t\t\t\treturn Common.extend({\n\t\t\t\t\t\ttable: {},\n\t\t\t\t\t\tlist: [],\n\t\t\t\t\t\tcollisionStart: [],\n\t\t\t\t\t\tcollisionActive: [],\n\t\t\t\t\t\tcollisionEnd: []\n\t\t\t\t\t}, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n\t\t\t\tPairs.update = function(pairs, collisions, timestamp) {\n\t\t\t\t\tvar pairsList = pairs.list,\n\t\t\t\t\t\tpairsListLength = pairsList.length,\n\t\t\t\t\t\tpairsTable = pairs.table,\n\t\t\t\t\t\tcollisionsLength = collisions.length,\n\t\t\t\t\t\tcollisionStart = pairs.collisionStart,\n\t\t\t\t\t\tcollisionEnd = pairs.collisionEnd,\n\t\t\t\t\t\tcollisionActive = pairs.collisionActive,\n\t\t\t\t\t\tcollision,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tpairIndex,\n\t\t\t\t\t\tpair,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// clear collision state arrays, but maintain old reference\n\t\t\t\t\tcollisionStart.length = 0\n\t\t\t\t\tcollisionEnd.length = 0\n\t\t\t\t\tcollisionActive.length = 0\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpairsList[i].confirmedActive = false\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(i = 0; i < collisionsLength; i++){\n\t\t\t\t\t\tcollision = collisions[i]\n\t\t\t\t\t\tpair = collision.pair\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\t// pair already exists (but may or may not be active)\n\t\t\t\t\t\t\tif(pair.isActive){\n\t\t\t\t\t\t\t\t// pair exists and is active\n\t\t\t\t\t\t\t\tcollisionActive.push(pair)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// pair exists but was inactive, so a collision has just started again\n\t\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// update the pair\n\t\t\t\t\t\t\tPair.update(pair, collision, timestamp)\n\t\t\t\t\t\t\tpair.confirmedActive = true\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// pair did not exist, create a new pair\n\t\t\t\t\t\t\tpair = Pair.create(collision, timestamp)\n\t\t\t\t\t\t\tpairsTable[pair.id] = pair\n\n\t\t\t\t\t\t\t// push the new pair\n\t\t\t\t\t\t\tcollisionStart.push(pair)\n\t\t\t\t\t\t\tpairsList.push(pair)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// find pairs that are no longer active\n\t\t\t\t\tvar removePairIndex = []\n\t\t\t\t\tpairsListLength = pairsList.length\n\n\t\t\t\t\tfor(i = 0; i < pairsListLength; i++){\n\t\t\t\t\t\tpair = pairsList[i]\n\n\t\t\t\t\t\t// keep pair if it had a collision this update\n\t\t\t\t\t\tif(pair.confirmedActive){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbodyA = pair.collision.bodyA\n\t\t\t\t\t\tbodyB = pair.collision.bodyB\n\n\t\t\t\t\t\t// keep pair if it is sleeping but not both static\n\t\t\t\t\t\tif((bodyA.isSleeping || bodyA.isStatic) && (bodyB.isSleeping || bodyB.isStatic)\n                && !(bodyA.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tPair.setActive(pair, false, timestamp)\n\t\t\t\t\t\tcollisionEnd.push(pair)\n\t\t\t\t\t\tremovePairIndex.push(i)\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove inactive pairs\n\t\t\t\t\tfor(i = 0; i < removePairIndex.length; i++){\n\t\t\t\t\t\tpairIndex = removePairIndex[i] - i\n\t\t\t\t\t\tpair = pairsList[pairIndex]\n\t\t\t\t\t\tpairsList.splice(pairIndex, 1)\n\t\t\t\t\t\tdelete pairsTable[pair.id]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n\t\t\t\tPairs.clear = function(pairs) {\n\t\t\t\t\tpairs.table = {}\n\t\t\t\t\tpairs.list.length = 0\n\t\t\t\t\tpairs.collisionStart.length = 0\n\t\t\t\t\tpairs.collisionActive.length = 0\n\t\t\t\t\tpairs.collisionEnd.length = 0\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 21 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\tvar Matter = module.exports = __webpack_require__(22)\n\n\t\t\tMatter.Axes = __webpack_require__(11)\n\t\t\tMatter.Bodies = __webpack_require__(12)\n\t\t\tMatter.Body = __webpack_require__(6)\n\t\t\tMatter.Bounds = __webpack_require__(1)\n\t\t\tMatter.Collision = __webpack_require__(8)\n\t\t\tMatter.Common = __webpack_require__(0)\n\t\t\tMatter.Composite = __webpack_require__(5)\n\t\t\tMatter.Composites = __webpack_require__(23)\n\t\t\tMatter.Constraint = __webpack_require__(10)\n\t\t\tMatter.Contact = __webpack_require__(17)\n\t\t\tMatter.Detector = __webpack_require__(14)\n\t\t\tMatter.Engine = __webpack_require__(18)\n\t\t\tMatter.Events = __webpack_require__(4)\n\t\t\tMatter.Grid = __webpack_require__(24)\n\t\t\tMatter.Mouse = __webpack_require__(13)\n\t\t\tMatter.MouseConstraint = __webpack_require__(25)\n\t\t\tMatter.Pair = __webpack_require__(9)\n\t\t\tMatter.Pairs = __webpack_require__(20)\n\t\t\tMatter.Plugin = __webpack_require__(15)\n\t\t\tMatter.Query = __webpack_require__(26)\n\t\t\tMatter.Render = __webpack_require__(16)\n\t\t\tMatter.Resolver = __webpack_require__(19)\n\t\t\tMatter.Runner = __webpack_require__(27)\n\t\t\tMatter.SAT = __webpack_require__(28)\n\t\t\tMatter.Sleeping = __webpack_require__(7)\n\t\t\tMatter.Svg = __webpack_require__(29)\n\t\t\tMatter.Vector = __webpack_require__(2)\n\t\t\tMatter.Vertices = __webpack_require__(3)\n\t\t\tMatter.World = __webpack_require__(30)\n\n\t\t\t// temporary back compatibility\n\t\t\tMatter.Engine.run = Matter.Runner.run\n\t\t\tMatter.Common.deprecated(Matter.Engine, \"run\", \"Engine.run ➤ use Matter.Runner.run(engine) instead\")\n\n\n\t\t\t/***/ }),\n\t\t/* 22 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\n\t\t\tvar Matter = {}\n\n\t\t\tmodule.exports = Matter\n\n\t\t\tvar Plugin = __webpack_require__(15)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.name = \"matter-js\"\n\n\t\t\t\t/**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n\t\t\t\tMatter.version = true ? \"0.18.0-alpha+0eeceb5\" : undefined\n\n\t\t\t\t/**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n\t\t\t\tMatter.uses = []\n\n\t\t\t\t/**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n\t\t\t\tMatter.used = []\n\n\t\t\t\t/**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n\t\t\t\tMatter.use = function() {\n\t\t\t\t\tPlugin.use(Matter, Array.prototype.slice.call(arguments))\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.before = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathBefore(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n\t\t\t\tMatter.after = function(path, func) {\n\t\t\t\t\tpath = path.replace(/^Matter./, \"\")\n\t\t\t\t\treturn Common.chainPathAfter(Matter, path, func)\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 23 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\n\t\t\tvar Composites = {}\n\n\t\t\tmodule.exports = Composites\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Body = __webpack_require__(6)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\tvar stack = Composite.create({label: \"Stack\"}),\n\t\t\t\t\t\tx = xx,\n\t\t\t\t\t\ty = yy,\n\t\t\t\t\t\tlastBody,\n\t\t\t\t\t\ti = 0\n\n\t\t\t\t\tfor(var row = 0; row < rows; row++){\n\t\t\t\t\t\tvar maxHeight = 0\n\n\t\t\t\t\t\tfor(var column = 0; column < columns; column++){\n\t\t\t\t\t\t\tvar body = callback(x, y, column, row, lastBody, i)\n\n\t\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\t\tvar bodyHeight = body.bounds.max.y - body.bounds.min.y,\n\t\t\t\t\t\t\t\t\tbodyWidth = body.bounds.max.x - body.bounds.min.x\n\n\t\t\t\t\t\t\t\tif(bodyHeight > maxHeight){\n\t\t\t\t\t\t\t\t\tmaxHeight = bodyHeight\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tBody.translate(body, {x: bodyWidth * 0.5, y: bodyHeight * 0.5})\n\n\t\t\t\t\t\t\t\tx = body.bounds.max.x + columnGap\n\n\t\t\t\t\t\t\t\tComposite.addBody(stack, body)\n\n\t\t\t\t\t\t\t\tlastBody = body\n\t\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tx += columnGap\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty += maxHeight + rowGap\n\t\t\t\t\t\tx = xx\n\t\t\t\t\t}\n\n\t\t\t\t\treturn stack\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n\t\t\t\tComposites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n\t\t\t\t\tvar bodies = composite.bodies\n\n\t\t\t\t\tfor(var i = 1; i < bodies.length; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i - 1],\n\t\t\t\t\t\t\tbodyB = bodies[i],\n\t\t\t\t\t\t\tbodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n\t\t\t\t\t\t\tbodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n\t\t\t\t\t\t\tbodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n\t\t\t\t\t\t\tbodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x\n\n\t\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\t\tbodyA: bodyA,\n\t\t\t\t\t\t\tpointA: {x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA},\n\t\t\t\t\t\t\tbodyB: bodyB,\n\t\t\t\t\t\t\tpointB: {x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar constraint = Common.extend(defaults, options)\n\n\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(constraint))\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Chain\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n\t\t\t\tComposites.mesh = function(composite, columns, rows, crossBrace, options) {\n\t\t\t\t\tvar bodies = composite.bodies,\n\t\t\t\t\t\trow,\n\t\t\t\t\t\tcol,\n\t\t\t\t\t\tbodyA,\n\t\t\t\t\t\tbodyB,\n\t\t\t\t\t\tbodyC\n\n\t\t\t\t\tfor(row = 0; row < rows; row++){\n\t\t\t\t\t\tfor(col = 1; col < columns; col++){\n\t\t\t\t\t\t\tbodyA = bodies[(col - 1) + (row * columns)]\n\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(row > 0){\n\t\t\t\t\t\t\tfor(col = 0; col < columns; col++){\n\t\t\t\t\t\t\t\tbodyA = bodies[col + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\tbodyB = bodies[col + (row * columns)]\n\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyA, bodyB: bodyB}, options)))\n\n\t\t\t\t\t\t\t\tif(crossBrace && col > 0){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col - 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(crossBrace && col < columns - 1){\n\t\t\t\t\t\t\t\t\tbodyC = bodies[(col + 1) + ((row - 1) * columns)]\n\t\t\t\t\t\t\t\t\tComposite.addConstraint(composite, Constraint.create(Common.extend({bodyA: bodyC, bodyB: bodyB}, options)))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcomposite.label += \" Mesh\"\n\n\t\t\t\t\treturn composite\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n\t\t\t\tComposites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t\t\t\t\treturn Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n\t\t\t\t\t\tvar actualRows = Math.min(rows, Math.ceil(columns / 2)),\n\t\t\t\t\t\t\tlastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0\n\n\t\t\t\t\t\tif(row > actualRows){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reverse row order\n\t\t\t\t\t\trow = actualRows - row\n\n\t\t\t\t\t\tvar start = row,\n\t\t\t\t\t\t\tend = columns - 1 - row\n\n\t\t\t\t\t\tif(column < start || column > end){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// retroactively fix the first body's position, since width was unknown\n\t\t\t\t\t\tif(i === 1){\n\t\t\t\t\t\t\tBody.translate(lastBody, {x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar xOffset = lastBody ? column * lastBodyWidth : 0\n\n\t\t\t\t\t\treturn callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t/**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n\t\t\t\tComposites.newtonsCradle = function(xx, yy, number, size, length) {\n\t\t\t\t\tvar newtonsCradle = Composite.create({label: \"Newtons Cradle\"})\n\n\t\t\t\t\tfor(var i = 0; i < number; i++){\n\t\t\t\t\t\tvar separation = 1.9,\n\t\t\t\t\t\t\tcircle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n\t\t\t\t\t\t\t\t{inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1}),\n\t\t\t\t\t\t\tconstraint = Constraint.create({pointA: {x: xx + i * (size * separation), y: yy}, bodyB: circle})\n\n\t\t\t\t\t\tComposite.addBody(newtonsCradle, circle)\n\t\t\t\t\t\tComposite.addConstraint(newtonsCradle, constraint)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newtonsCradle\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"newtonsCradle\", \"Composites.newtonsCradle ➤ moved to newtonsCradle example\")\n\n\t\t\t\t/**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n\t\t\t\tComposites.car = function(xx, yy, width, height, wheelSize) {\n\t\t\t\t\tvar group = Body.nextGroup(true),\n\t\t\t\t\t\twheelBase = 20,\n\t\t\t\t\t\twheelAOffset = -width * 0.5 + wheelBase,\n\t\t\t\t\t\twheelBOffset = width * 0.5 - wheelBase,\n\t\t\t\t\t\twheelYOffset = 0\n\n\t\t\t\t\tvar car = Composite.create({label: \"Car\"}),\n\t\t\t\t\t\tbody = Bodies.rectangle(xx, yy, width, height, {\n\t\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchamfer: {\n\t\t\t\t\t\t\t\tradius: height * 0.5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdensity: 0.0002\n\t\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tgroup: group\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfriction: 0.8\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelA = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelAOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelA,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tvar axelB = Constraint.create({\n\t\t\t\t\t\tbodyB: body,\n\t\t\t\t\t\tpointB: {x: wheelBOffset, y: wheelYOffset},\n\t\t\t\t\t\tbodyA: wheelB,\n\t\t\t\t\t\tstiffness: 1,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t})\n\n\t\t\t\t\tComposite.addBody(car, body)\n\t\t\t\t\tComposite.addBody(car, wheelA)\n\t\t\t\t\tComposite.addBody(car, wheelB)\n\t\t\t\t\tComposite.addConstraint(car, axelA)\n\t\t\t\t\tComposite.addConstraint(car, axelB)\n\n\t\t\t\t\treturn car\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"car\", \"Composites.car ➤ moved to car example\")\n\n\t\t\t\t/**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n\t\t\t\tComposites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n\t\t\t\t\tparticleOptions = Common.extend({inertia: Infinity}, particleOptions)\n\t\t\t\t\tconstraintOptions = Common.extend({stiffness: 0.2, render: {type: \"line\", anchors: false}}, constraintOptions)\n\n\t\t\t\t\tvar softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n\t\t\t\t\t\treturn Bodies.circle(x, y, particleRadius, particleOptions)\n\t\t\t\t\t})\n\n\t\t\t\t\tComposites.mesh(softBody, columns, rows, crossBrace, constraintOptions)\n\n\t\t\t\t\tsoftBody.label = \"Soft Body\"\n\n\t\t\t\t\treturn softBody\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Composites, \"softBody\", \"Composites.softBody ➤ moved to softBody and cloth examples\")\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 24 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\n\t\t\tvar Grid = {}\n\n\t\t\tmodule.exports = Grid\n\n\t\t\tvar Pair = __webpack_require__(9)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n\t\t\t\tGrid.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tbuckets: {},\n\t\t\t\t\t\tpairs: {},\n\t\t\t\t\t\tpairsList: [],\n\t\t\t\t\t\tbucketWidth: 48,\n\t\t\t\t\t\tbucketHeight: 48\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Common.extend(defaults, options)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n\t\t\t\t/**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n\t\t\t\tGrid.update = function(grid, bodies, engine, forceUpdate) {\n\t\t\t\t\tvar i, col, row,\n\t\t\t\t\t\tworld = engine.world,\n\t\t\t\t\t\tbuckets = grid.buckets,\n\t\t\t\t\t\tbucket,\n\t\t\t\t\t\tbucketId,\n\t\t\t\t\t\tgridChanged = false\n\n\t\t\t\t\tfor(i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(body.isSleeping && !forceUpdate){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// temporary back compatibility bounds check\n\t\t\t\t\t\tif(world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar newRegion = Grid._getRegion(grid, body)\n\n\t\t\t\t\t\t// if the body has changed grid region\n\t\t\t\t\t\tif(!body.region || newRegion.id !== body.region.id || forceUpdate){\n\n\t\t\t\t\t\t\tif(!body.region || forceUpdate){\n\t\t\t\t\t\t\t\tbody.region = newRegion\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar union = Grid._regionUnion(newRegion, body.region)\n\n\t\t\t\t\t\t\t// update grid buckets affected by region change\n\t\t\t\t\t\t\t// iterate over the union of both regions\n\t\t\t\t\t\t\tfor(col = union.startCol; col <= union.endCol; col++){\n\t\t\t\t\t\t\t\tfor(row = union.startRow; row <= union.endRow; row++){\n\t\t\t\t\t\t\t\t\tbucketId = Grid._getBucketId(col, row)\n\t\t\t\t\t\t\t\t\tbucket = buckets[bucketId]\n\n\t\t\t\t\t\t\t\t\tvar isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow)\n\n\t\t\t\t\t\t\t\t\tvar isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow)\n\n\t\t\t\t\t\t\t\t\t// remove from old region buckets\n\t\t\t\t\t\t\t\t\tif(!isInsideNewRegion && isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\tif(isInsideOldRegion){\n\t\t\t\t\t\t\t\t\t\t\tif(bucket){\n\t\t\t\t\t\t\t\t\t\t\t\tGrid._bucketRemoveBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// add to new region buckets\n\t\t\t\t\t\t\t\t\tif(body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate){\n\t\t\t\t\t\t\t\t\t\tif(!bucket){\n\t\t\t\t\t\t\t\t\t\t\tbucket = Grid._createBucket(buckets, bucketId)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tGrid._bucketAddBody(grid, bucket, body)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set the new region\n\t\t\t\t\t\t\tbody.region = newRegion\n\n\t\t\t\t\t\t\t// flag changes so we can update pairs\n\t\t\t\t\t\t\tgridChanged = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// update pairs list only if pairs changed (i.e. a body changed region)\n\t\t\t\t\tif(gridChanged){\n\t\t\t\t\t\tgrid.pairsList = Grid._createActivePairsList(grid)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"update\", \"Grid.update ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n\t\t\t\tGrid.clear = function(grid) {\n\t\t\t\t\tgrid.buckets = {}\n\t\t\t\t\tgrid.pairs = {}\n\t\t\t\t\tgrid.pairsList = []\n\t\t\t\t}\n\n\t\t\t\tdeprecated(Grid, \"clear\", \"Grid.clear ➤ replaced by Matter.Detector\")\n\n\t\t\t\t/**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n\t\t\t\tGrid._regionUnion = function(regionA, regionB) {\n\t\t\t\t\tvar startCol = Math.min(regionA.startCol, regionB.startCol),\n\t\t\t\t\t\tendCol = Math.max(regionA.endCol, regionB.endCol),\n\t\t\t\t\t\tstartRow = Math.min(regionA.startRow, regionB.startRow),\n\t\t\t\t\t\tendRow = Math.max(regionA.endRow, regionB.endRow)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n\t\t\t\tGrid._getRegion = function(grid, body) {\n\t\t\t\t\tvar bounds = body.bounds,\n\t\t\t\t\t\tstartCol = Math.floor(bounds.min.x / grid.bucketWidth),\n\t\t\t\t\t\tendCol = Math.floor(bounds.max.x / grid.bucketWidth),\n\t\t\t\t\t\tstartRow = Math.floor(bounds.min.y / grid.bucketHeight),\n\t\t\t\t\t\tendRow = Math.floor(bounds.max.y / grid.bucketHeight)\n\n\t\t\t\t\treturn Grid._createRegion(startCol, endCol, startRow, endRow)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n\t\t\t\tGrid._createRegion = function(startCol, endCol, startRow, endRow) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: startCol + \",\" + endCol + \",\" + startRow + \",\" + endRow,\n\t\t\t\t\t\tstartCol: startCol,\n\t\t\t\t\t\tendCol: endCol,\n\t\t\t\t\t\tstartRow: startRow,\n\t\t\t\t\t\tendRow: endRow\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n\t\t\t\tGrid._getBucketId = function(column, row) {\n\t\t\t\t\treturn \"C\" + column + \"R\" + row\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n\t\t\t\tGrid._createBucket = function(buckets, bucketId) {\n\t\t\t\t\tvar bucket = buckets[bucketId] = []\n\t\t\t\t\treturn bucket\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketAddBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\tbucketLength = bucket.length,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// add new pairs\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\tvar bodyB = bucket[i]\n\n\t\t\t\t\t\tif(body.id === bodyB.id || (body.isStatic && bodyB.isStatic)){\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for Grid.update to work\n\t\t\t\t\t\tvar id = pairId(body, bodyB),\n\t\t\t\t\t\t\tpair = gridPairs[id]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] += 1\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgridPairs[id] = [body, bodyB, 1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to bodies (after pairs, otherwise pairs with self)\n\t\t\t\t\tbucket.push(body)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n\t\t\t\tGrid._bucketRemoveBody = function(grid, bucket, body) {\n\t\t\t\t\tvar gridPairs = grid.pairs,\n\t\t\t\t\t\tpairId = Pair.id,\n\t\t\t\t\t\ti\n\n\t\t\t\t\t// remove from bucket\n\t\t\t\t\tbucket.splice(Common.indexOf(bucket, body), 1)\n\n\t\t\t\t\tvar bucketLength = bucket.length\n\n\t\t\t\t\t// update pair counts\n\t\t\t\t\tfor(i = 0; i < bucketLength; i++){\n\t\t\t\t\t\t// keep track of the number of buckets the pair exists in\n\t\t\t\t\t\t// important for _createActivePairsList to work\n\t\t\t\t\t\tvar pair = gridPairs[pairId(body, bucket[i])]\n\n\t\t\t\t\t\tif(pair){\n\t\t\t\t\t\t\tpair[2] -= 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n\t\t\t\tGrid._createActivePairsList = function(grid) {\n\t\t\t\t\tvar pair,\n\t\t\t\t\t\tgridPairs = grid.pairs,\n\t\t\t\t\t\tpairKeys = Common.keys(gridPairs),\n\t\t\t\t\t\tpairKeysLength = pairKeys.length,\n\t\t\t\t\t\tpairs = [],\n\t\t\t\t\t\tk\n\n\t\t\t\t\t// iterate over grid.pairs\n\t\t\t\t\tfor(k = 0; k < pairKeysLength; k++){\n\t\t\t\t\t\tpair = gridPairs[pairKeys[k]]\n\n\t\t\t\t\t\t// if pair exists in at least one bucket\n\t\t\t\t\t\t// it is a pair that needs further collision testing so push it\n\t\t\t\t\t\tif(pair[2] > 0){\n\t\t\t\t\t\t\tpairs.push(pair)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete gridPairs[pairKeys[k]]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pairs\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 25 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\n\t\t\tvar MouseConstraint = {}\n\n\t\t\tmodule.exports = MouseConstraint\n\n\t\t\tvar Vertices = __webpack_require__(3)\n\t\t\tvar Sleeping = __webpack_require__(7)\n\t\t\tvar Mouse = __webpack_require__(13)\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Detector = __webpack_require__(14)\n\t\t\tvar Constraint = __webpack_require__(10)\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar Bounds = __webpack_require__(1);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n\t\t\t\tMouseConstraint.create = function(engine, options) {\n\t\t\t\t\tvar mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null)\n\n\t\t\t\t\tif(!mouse){\n\t\t\t\t\t\tif(engine && engine.render && engine.render.canvas){\n\t\t\t\t\t\t\tmouse = Mouse.create(engine.render.canvas)\n\t\t\t\t\t\t} else if(options && options.element){\n\t\t\t\t\t\t\tmouse = Mouse.create(options.element)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse = Mouse.create()\n\t\t\t\t\t\t\tCommon.warn(\"MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar constraint = Constraint.create({\n\t\t\t\t\t\tlabel: \"Mouse Constraint\",\n\t\t\t\t\t\tpointA: mouse.position,\n\t\t\t\t\t\tpointB: {x: 0, y: 0},\n\t\t\t\t\t\tlength: 0.01,\n\t\t\t\t\t\tstiffness: 0.1,\n\t\t\t\t\t\tangularStiffness: 1,\n\t\t\t\t\t\trender: {\n\t\t\t\t\t\t\tstrokeStyle: \"#90EE90\",\n\t\t\t\t\t\t\tlineWidth: 3\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\ttype: \"mouseConstraint\",\n\t\t\t\t\t\tmouse: mouse,\n\t\t\t\t\t\telement: null,\n\t\t\t\t\t\tbody: null,\n\t\t\t\t\t\tconstraint: constraint,\n\t\t\t\t\t\tcollisionFilter: {\n\t\t\t\t\t\t\tcategory: 0x0001,\n\t\t\t\t\t\t\tmask: 0xFFFFFFFF,\n\t\t\t\t\t\t\tgroup: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mouseConstraint = Common.extend(defaults, options)\n\n\t\t\t\t\tEvents.on(engine, \"beforeUpdate\", function() {\n\t\t\t\t\t\tvar allBodies = Composite.allBodies(engine.world)\n\t\t\t\t\t\tMouseConstraint.update(mouseConstraint, allBodies)\n\t\t\t\t\t\tMouseConstraint._triggerEvents(mouseConstraint)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn mouseConstraint\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n\t\t\t\tMouseConstraint.update = function(mouseConstraint, bodies) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tconstraint = mouseConstraint.constraint,\n\t\t\t\t\t\tbody = mouseConstraint.body\n\n\t\t\t\t\tif(mouse.button === 0){\n\t\t\t\t\t\tif(!constraint.bodyB){\n\t\t\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\t\t\tbody = bodies[i]\n\t\t\t\t\t\t\t\tif(Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)){\n\t\t\t\t\t\t\t\t\tfor(var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\t\t\t\t\t\t\t\t\t\tif(Vertices.contains(part.vertices, mouse.position)){\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = body\n\t\t\t\t\t\t\t\t\t\t\tconstraint.pointB = {x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y}\n\t\t\t\t\t\t\t\t\t\t\tconstraint.angleB = body.angle\n\n\t\t\t\t\t\t\t\t\t\t\tSleeping.set(body, false)\n\t\t\t\t\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"startdrag\", {mouse: mouse, body: body})\n\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSleeping.set(constraint.bodyB, false)\n\t\t\t\t\t\t\tconstraint.pointA = mouse.position\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstraint.bodyB = mouseConstraint.body = null\n\t\t\t\t\t\tconstraint.pointB = null\n\n\t\t\t\t\t\tif(body){\n\t\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"enddrag\", {mouse: mouse, body: body})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n\t\t\t\tMouseConstraint._triggerEvents = function(mouseConstraint) {\n\t\t\t\t\tvar mouse = mouseConstraint.mouse,\n\t\t\t\t\t\tmouseEvents = mouse.sourceEvents\n\n\t\t\t\t\tif(mouseEvents.mousemove){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousemove\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mousedown){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mousedown\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\tif(mouseEvents.mouseup){\n\t\t\t\t\t\tEvents.trigger(mouseConstraint, \"mouseup\", {mouse: mouse})\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset the mouse state ready for the next step\n\t\t\t\t\tMouse.clearSourceEvents(mouse)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n\t\t\t\t/**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n\t\t\t\t/**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n\t\t\t\t/**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n\t\t\t\t/**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 26 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\n\t\t\tvar Query = {}\n\n\t\t\tmodule.exports = Query\n\n\t\t\tvar Vector = __webpack_require__(2)\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Bodies = __webpack_require__(12)\n\t\t\tvar Vertices = __webpack_require__(3);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.collides = function(body, bodies) {\n\t\t\t\t\tvar collisions = [],\n\t\t\t\t\t\tbodiesLength = bodies.length,\n\t\t\t\t\t\tbounds = body.bounds,\n\t\t\t\t\t\tcollides = Collision.collides,\n\t\t\t\t\t\toverlaps = Bounds.overlaps\n\n\t\t\t\t\tfor(var i = 0; i < bodiesLength; i++){\n\t\t\t\t\t\tvar bodyA = bodies[i],\n\t\t\t\t\t\t\tpartsALength = bodyA.parts.length,\n\t\t\t\t\t\t\tpartsAStart = partsALength === 1 ? 0 : 1\n\n\t\t\t\t\t\tif(overlaps(bodyA.bounds, bounds)){\n\t\t\t\t\t\t\tfor(var j = partsAStart; j < partsALength; j++){\n\t\t\t\t\t\t\t\tvar part = bodyA.parts[j]\n\n\t\t\t\t\t\t\t\tif(overlaps(part.bounds, bounds)){\n\t\t\t\t\t\t\t\t\tvar collision = collides(part, body)\n\n\t\t\t\t\t\t\t\t\tif(collision){\n\t\t\t\t\t\t\t\t\t\tcollisions.push(collision)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n\t\t\t\tQuery.ray = function(bodies, startPoint, endPoint, rayWidth) {\n\t\t\t\t\trayWidth = rayWidth || 1e-100\n\n\t\t\t\t\tvar rayAngle = Vector.angle(startPoint, endPoint),\n\t\t\t\t\t\trayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n\t\t\t\t\t\trayX = (endPoint.x + startPoint.x) * 0.5,\n\t\t\t\t\t\trayY = (endPoint.y + startPoint.y) * 0.5,\n\t\t\t\t\t\tray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {angle: rayAngle}),\n\t\t\t\t\t\tcollisions = Query.collides(ray, bodies)\n\n\t\t\t\t\tfor(var i = 0; i < collisions.length; i += 1){\n\t\t\t\t\t\tvar collision = collisions[i]\n\t\t\t\t\t\tcollision.body = collision.bodyB = collision.bodyA\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collisions\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.region = function(bodies, bounds, outside) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i],\n\t\t\t\t\t\t\toverlaps = Bounds.overlaps(body.bounds, bounds)\n\t\t\t\t\t\tif((overlaps && !outside) || (!overlaps && outside)){\n\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n\t\t\t\tQuery.point = function(bodies, point) {\n\t\t\t\t\tvar result = []\n\n\t\t\t\t\tfor(var i = 0; i < bodies.length; i++){\n\t\t\t\t\t\tvar body = bodies[i]\n\n\t\t\t\t\t\tif(Bounds.contains(body.bounds, point)){\n\t\t\t\t\t\t\tfor(var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++){\n\t\t\t\t\t\t\t\tvar part = body.parts[j]\n\n\t\t\t\t\t\t\t\tif(Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)){\n\t\t\t\t\t\t\t\t\tresult.push(body)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 27 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\n\t\t\tvar Runner = {}\n\n\t\t\tmodule.exports = Runner\n\n\t\t\tvar Events = __webpack_require__(4)\n\t\t\tvar Engine = __webpack_require__(18)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\tvar _requestAnimationFrame,\n\t\t\t\t\t_cancelAnimationFrame\n\n\t\t\t\tif(typeof window !== \"undefined\"){\n\t\t\t\t\t_requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n\n\t\t\t\t\t_cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame\n\t\t\t\t}\n\n\t\t\t\tif(!_requestAnimationFrame){\n\t\t\t\t\tvar _frameTimeout\n\n\t\t\t\t\t_requestAnimationFrame = function(callback) {\n\t\t\t\t\t\t_frameTimeout = setTimeout(function() {\n\t\t\t\t\t\t\tcallback(Common.now())\n\t\t\t\t\t\t}, 1000 / 60)\n\t\t\t\t\t}\n\n\t\t\t\t\t_cancelAnimationFrame = function() {\n\t\t\t\t\t\tclearTimeout(_frameTimeout)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n\t\t\t\tRunner.create = function(options) {\n\t\t\t\t\tvar defaults = {\n\t\t\t\t\t\tfps: 60,\n\t\t\t\t\t\tcorrection: 1,\n\t\t\t\t\t\tdeltaSampleSize: 60,\n\t\t\t\t\t\tcounterTimestamp: 0,\n\t\t\t\t\t\tframeCounter: 0,\n\t\t\t\t\t\tdeltaHistory: [],\n\t\t\t\t\t\ttimePrev: null,\n\t\t\t\t\t\ttimeScalePrev: 1,\n\t\t\t\t\t\tframeRequestId: null,\n\t\t\t\t\t\tisFixed: false,\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\n\t\t\t\t\tvar runner = Common.extend(defaults, options)\n\n\t\t\t\t\trunner.delta = runner.delta || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMin = runner.deltaMin || 1000 / runner.fps\n\t\t\t\t\trunner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5)\n\t\t\t\t\trunner.fps = 1000 / runner.delta\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.run = function(runner, engine) {\n\t\t\t\t\t// create runner if engine is first argument\n\t\t\t\t\tif(typeof runner.positionIterations !== \"undefined\"){\n\t\t\t\t\t\tengine = runner\n\t\t\t\t\t\trunner = Runner.create()\n\t\t\t\t\t}\n\n\t\t\t\t\t(function render(time) {\n\t\t\t\t\t\trunner.frameRequestId = _requestAnimationFrame(render)\n\n\t\t\t\t\t\tif(time && runner.enabled){\n\t\t\t\t\t\t\tRunner.tick(runner, engine, time)\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\n\t\t\t\t\treturn runner\n\t\t\t\t}\n\n\t\t\t\t/**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n\t\t\t\tRunner.tick = function(runner, engine, time) {\n\t\t\t\t\tvar timing = engine.timing,\n\t\t\t\t\t\tcorrection = 1,\n\t\t\t\t\t\tdelta\n\n\t\t\t\t\t// create an event object\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttimestamp: timing.timestamp\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"beforeTick\", event)\n\n\t\t\t\t\tif(runner.isFixed){\n\t\t\t\t\t\t// fixed timestep\n\t\t\t\t\t\tdelta = runner.delta\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// dynamic timestep based on wall clock between calls\n\t\t\t\t\t\tdelta = (time - runner.timePrev) || runner.delta\n\t\t\t\t\t\trunner.timePrev = time\n\n\t\t\t\t\t\t// optimistically filter delta over a few frames, to improve stability\n\t\t\t\t\t\trunner.deltaHistory.push(delta)\n\t\t\t\t\t\trunner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize)\n\t\t\t\t\t\tdelta = Math.min.apply(null, runner.deltaHistory)\n\n\t\t\t\t\t\t// limit delta\n\t\t\t\t\t\tdelta = delta < runner.deltaMin ? runner.deltaMin : delta\n\t\t\t\t\t\tdelta = delta > runner.deltaMax ? runner.deltaMax : delta\n\n\t\t\t\t\t\t// correction for delta\n\t\t\t\t\t\tcorrection = delta / runner.delta\n\n\t\t\t\t\t\t// update engine timing object\n\t\t\t\t\t\trunner.delta = delta\n\t\t\t\t\t}\n\n\t\t\t\t\t// time correction for time scaling\n\t\t\t\t\tif(runner.timeScalePrev !== 0){\n\t\t\t\t\t\tcorrection *= timing.timeScale / runner.timeScalePrev\n\t\t\t\t\t}\n\n\t\t\t\t\tif(timing.timeScale === 0){\n\t\t\t\t\t\tcorrection = 0\n\t\t\t\t\t}\n\n\t\t\t\t\trunner.timeScalePrev = timing.timeScale\n\t\t\t\t\trunner.correction = correction\n\n\t\t\t\t\t// fps counter\n\t\t\t\t\trunner.frameCounter += 1\n\t\t\t\t\tif(time - runner.counterTimestamp >= 1000){\n\t\t\t\t\t\trunner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000)\n\t\t\t\t\t\trunner.counterTimestamp = time\n\t\t\t\t\t\trunner.frameCounter = 0\n\t\t\t\t\t}\n\n\t\t\t\t\tEvents.trigger(runner, \"tick\", event)\n\n\t\t\t\t\t// update\n\t\t\t\t\tEvents.trigger(runner, \"beforeUpdate\", event)\n\t\t\t\t\tEngine.update(engine, delta, correction)\n\t\t\t\t\tEvents.trigger(runner, \"afterUpdate\", event)\n\n\t\t\t\t\tEvents.trigger(runner, \"afterTick\", event)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n\t\t\t\tRunner.stop = function(runner) {\n\t\t\t\t\t_cancelAnimationFrame(runner.frameRequestId)\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n\t\t\t\tRunner.start = function(runner, engine) {\n\t\t\t\t\tRunner.run(runner, engine)\n\t\t\t\t}\n\n\t\t\t\t/*\n    *\n    *  Events Documentation\n    *\n    */\n\n\t\t\t\t/**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n\t\t\t\t/*\n    *\n    *  Properties Documentation\n    *\n    */\n\n\t\t\t\t/**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n\t\t\t\t/**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n\t\t\t\t/**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 28 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\n\t\t\tvar SAT = {}\n\n\t\t\tmodule.exports = SAT\n\n\t\t\tvar Collision = __webpack_require__(8)\n\t\t\tvar Common = __webpack_require__(0)\n\t\t\tvar deprecated = Common.deprecated;\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n\t\t\t\tSAT.collides = function(bodyA, bodyB) {\n\t\t\t\t\treturn Collision.collides(bodyA, bodyB)\n\t\t\t\t}\n\n\t\t\t\tdeprecated(SAT, \"collides\", \"SAT.collides ➤ replaced by Collision.collides\")\n\n\t\t\t})()\n\n\n\t\t\t/***/ }),\n\t\t/* 29 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\n\t\t\tvar Svg = {}\n\n\t\t\tmodule.exports = Svg\n\n\t\t\tvar Bounds = __webpack_require__(1)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n\t\t\t\tSvg.pathToVertices = function(path, sampleLength) {\n\t\t\t\t\tif(typeof window !== \"undefined\" && !(\"SVGPathSeg\" in window)){\n\t\t\t\t\t\tCommon.warn(\"Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.\")\n\t\t\t\t\t}\n\n\t\t\t\t\t// https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n\t\t\t\t\tvar i, il, total, point, segment, segments,\n\t\t\t\t\t\tsegmentsQueue, lastSegment,\n\t\t\t\t\t\tlastPoint, segmentIndex, points = [],\n\t\t\t\t\t\tlx, ly, length = 0, x = 0, y = 0\n\n\t\t\t\t\tsampleLength = sampleLength || 15\n\n\t\t\t\t\tvar addPoint = function(px, py, pathSegType) {\n\t\t\t\t\t\t// all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n\t\t\t\t\t\tvar isRelative = pathSegType % 2 === 1 && pathSegType > 1\n\n\t\t\t\t\t\t// when the last point doesn't equal the current point add the current point\n\t\t\t\t\t\tif(!lastPoint || px != lastPoint.x || py != lastPoint.y){\n\t\t\t\t\t\t\tif(lastPoint && isRelative){\n\t\t\t\t\t\t\t\tlx = lastPoint.x\n\t\t\t\t\t\t\t\tly = lastPoint.y\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlx = 0\n\t\t\t\t\t\t\t\tly = 0\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar point = {\n\t\t\t\t\t\t\t\tx: lx + px,\n\t\t\t\t\t\t\t\ty: ly + py\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// set last point\n\t\t\t\t\t\t\tif(isRelative || !lastPoint){\n\t\t\t\t\t\t\t\tlastPoint = point\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpoints.push(point)\n\n\t\t\t\t\t\t\tx = lx + px\n\t\t\t\t\t\t\ty = ly + py\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar addSegmentPoint = function(segment) {\n\t\t\t\t\t\tvar segType = segment.pathSegTypeAsLetter.toUpperCase()\n\n\t\t\t\t\t\t// skip path ends\n\t\t\t\t\t\tif(segType === \"Z\"){\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// map segment to x and y\n\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\tcase \"M\":\n\t\t\t\t\t\t\tcase \"L\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\t\t\tx = segment.x\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\t\t\ty = segment.y\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddPoint(x, y, segment.pathSegType)\n\t\t\t\t\t}\n\n\t\t\t\t\t// ensure path is absolute\n\t\t\t\t\tSvg._svgPathToAbsolute(path)\n\n\t\t\t\t\t// get total length\n\t\t\t\t\ttotal = path.getTotalLength()\n\n\t\t\t\t\t// queue segments\n\t\t\t\t\tsegments = []\n\t\t\t\t\tfor(i = 0; i < path.pathSegList.numberOfItems; i += 1){\n\t\t\t\t\t\tsegments.push(path.pathSegList.getItem(i))\n\t\t\t\t\t}\n\n\t\t\t\t\tsegmentsQueue = segments.concat()\n\n\t\t\t\t\t// sample through path\n\t\t\t\t\twhile(length < total){\n\t\t\t\t\t\t// get segment at position\n\t\t\t\t\t\tsegmentIndex = path.getPathSegAtLength(length)\n\t\t\t\t\t\tsegment = segments[segmentIndex]\n\n\t\t\t\t\t\t// new segment\n\t\t\t\t\t\tif(segment != lastSegment){\n\t\t\t\t\t\t\twhile(segmentsQueue.length && segmentsQueue[0] != segment){\n\t\t\t\t\t\t\t\taddSegmentPoint(segmentsQueue.shift())\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlastSegment = segment\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add points in between when curving\n\t\t\t\t\t\t// TUDDO: adaptive sampling\n\t\t\t\t\t\tswitch(segment.pathSegTypeAsLetter.toUpperCase()){\n\n\t\t\t\t\t\t\tcase \"C\":\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\tcase \"Q\":\n\t\t\t\t\t\t\tcase \"A\":\n\t\t\t\t\t\t\t\tpoint = path.getPointAtLength(length)\n\t\t\t\t\t\t\t\taddPoint(point.x, point.y, 0)\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// increment by sample value\n\t\t\t\t\t\tlength += sampleLength\n\t\t\t\t\t}\n\n\t\t\t\t\t// add remaining segments not passed by sampling\n\t\t\t\t\tfor(i = 0, il = segmentsQueue.length; i < il; ++i){\n\t\t\t\t\t\taddSegmentPoint(segmentsQueue[i])\n\t\t\t\t\t}\n\n\t\t\t\t\treturn points\n\t\t\t\t}\n\n\t\t\t\tSvg._svgPathToAbsolute = function(path) {\n\t\t\t\t\t// http://phrogz.net/convert-svg-path-to-all-absolute-commands\n\t\t\t\t\t// Copyright (c) Gavin Kistner\n\t\t\t\t\t// http://phrogz.net/js/_ReuseLicense.txt\n\t\t\t\t\t// Modifications: tidy formatting and naming\n\t\t\t\t\tvar x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n\t\t\t\t\t\tx = 0, y = 0, len = segs.numberOfItems\n\n\t\t\t\t\tfor(var i = 0; i < len; ++i){\n\t\t\t\t\t\tvar seg = segs.getItem(i),\n\t\t\t\t\t\t\tsegType = seg.pathSegTypeAsLetter\n\n\t\t\t\t\t\tif(/[MLHVCSQTA]/.test(segType)){\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx = seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty = seg.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(\"x1\" in seg){\n\t\t\t\t\t\t\t\tx1 = x + seg.x1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x2\" in seg){\n\t\t\t\t\t\t\t\tx2 = x + seg.x2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y1\" in seg){\n\t\t\t\t\t\t\t\ty1 = y + seg.y1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y2\" in seg){\n\t\t\t\t\t\t\t\ty2 = y + seg.y2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"x\" in seg){\n\t\t\t\t\t\t\t\tx += seg.x\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"y\" in seg){\n\t\t\t\t\t\t\t\ty += seg.y\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch(segType){\n\n\t\t\t\t\t\t\t\tcase \"m\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"l\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"h\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"v\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"c\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"s\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"q\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"t\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"a\":\n\t\t\t\t\t\t\t\t\tsegs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"z\":\n\t\t\t\t\t\t\t\tcase \"Z\":\n\t\t\t\t\t\t\t\t\tx = x0\n\t\t\t\t\t\t\t\t\ty = y0\n\t\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(segType == \"M\" || segType == \"m\"){\n\t\t\t\t\t\t\tx0 = x\n\t\t\t\t\t\t\ty0 = y\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t})()\n\n\t\t\t/***/ }),\n\t\t/* 30 */\n\t\t/***/ (function(module, exports, __webpack_require__) {\n\n\t\t\t/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\n\t\t\tvar World = {}\n\n\t\t\tmodule.exports = World\n\n\t\t\tvar Composite = __webpack_require__(5)\n\t\t\tvar Common = __webpack_require__(0);\n\n\t\t\t(function() {\n\n\t\t\t\t/**\n     * See above, aliases for back compatibility only\n     */\n\t\t\t\tWorld.create = Composite.create\n\t\t\t\tWorld.add = Composite.add\n\t\t\t\tWorld.remove = Composite.remove\n\t\t\t\tWorld.clear = Composite.clear\n\t\t\t\tWorld.addComposite = Composite.addComposite\n\t\t\t\tWorld.addBody = Composite.addBody\n\t\t\t\tWorld.addConstraint = Composite.addConstraint\n\n\t\t\t})()\n\n\n\t\t\t/***/ })\n\t\t/** ****/ ])\n})","import {svgTag} from \"common/tag\"\nimport {TimedQueue} from \"common/timed_queue\"\n\ninterface Point {\n\tx: number\n\ty: number\n\tangle: number\n}\n\nexport class BallTail {\n\tprivate readonly queue = new TimedQueue<Point>()\n\treadonly el: SVGPathElement\n\n\tconstructor(private readonly timeLimit: number, color: string) {\n\t\tthis.el = svgTag({tagName: \"path\", attrs: {stroke: \"none\", fill: color, \"stroke-width\": \"0.01\"}})\n\t}\n\n\tprivate addPoint(time: number, x: number, y: number): void {\n\t\tconst prevPoint = this.queue.tail\n\t\tconst angle = !prevPoint ? 0 : Math.atan2(prevPoint.y - y, prevPoint.x - x) + Math.PI / 2\n\t\tthis.queue.enqueue(time, {x, y, angle})\n\t}\n\n\tprivate updatePath(): void {\n\t\tlet start = \"\"\n\t\tlet leftSide = \"\"\n\t\tlet rightSide = \"\"\n\t\tconst segments = this.queue.toArray()\n\t\tlet size = 0\n\t\tconst segmentSizeIncrement = 0.5 / segments.length\n\t\tfor(const {x, y, angle} of segments){\n\t\t\tif(!start){\n\t\t\t\tstart = `M ${x} ${y}`\n\t\t\t} else {\n\t\t\t\tconst sin = Math.sin(angle)\n\t\t\t\tconst cos = Math.cos(angle)\n\t\t\t\tleftSide += ` L ${x - cos * size} ${y - sin * size}`\n\t\t\t\trightSide = `L ${x + cos * size} ${y + sin * size}` + rightSide\n\t\t\t}\n\t\t\tsize += segmentSizeIncrement\n\t\t}\n\t\tconst result = start + leftSide + rightSide + \" z\"\n\t\tthis.el.setAttribute(\"d\", result)\n\t}\n\n\tupdate(time: number, x: number, y: number): void {\n\t\tthis.addPoint(time, x, y)\n\t\tthis.queue.dropUntil(time - this.timeLimit)\n\t\tthis.updatePath()\n\t}\n}","import {Queue} from \"common/queue\"\n\n/** A queue that also stores time with items.\n * Is useful when you need to store only last x seconds of something */\nexport class TimedQueue<T> {\n\tprivate readonly items = new Queue<{time: number, item: T}>()\n\n\tenqueue(time: number, item: T): void {\n\t\tthis.items.enqueue({time, item})\n\t}\n\n\tdropUntil(time: number): void {\n\t\twhile(this.items.head && this.items.head.time < time){\n\t\t\tthis.items.dequeue()\n\t\t}\n\t}\n\n\t/** Convert contents of the queue into array.\n\t * Oldest elements go first. */\n\ttoArray(): T[] {\n\t\treturn this.items.toArrayHeadFirst().map(x => x.item)\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.items.head?.item\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.items.tail?.item\n\t}\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.tailNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tmaybeDequeue(): T | undefined {\n\t\tif(!this.headNode){\n\t\t\treturn undefined\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n\ttoArrayHeadFirst(): T[] {\n\t\tconst result: T[] = new Array(this.len)\n\t\tlet node = this.headNode\n\t\tlet i = 0\n\t\twhile(node){\n\t\t\tresult[i++] = node.value\n\t\t\tnode = node.prev\n\t\t}\n\t\treturn result\n\t}\n\n}"],"names":["$hIDiW","parcelRequire","$068d9bf68df70b01$var$blockColors","$068d9bf68df70b01$export$f22da7240b7add18","rootContainer","speed","$hsvBG","box","getBinder","watch","blockbreaker","setTicksPerFrame","stats","Array","fill","map","contentContainer","$cdEIV","makeBottomBar","colors","root","rect","getBoundingClientRect","screenSpacePx","width","height","blockSizePx","Math","floor","sqrt","$5xOdw","ZenBlockbreaker","ticksPerFrame","ballSpeed","onStatsChange","color","stat","render","tailLength","appendChild","run","$kTeo1","$0a7e2ac3f8a08a9e$export$46e1934a20752f73","props","slider","$jmBhk","Slider","label","min","max","value","step","$aCP3q","tag","style","display","flexDirection","gap","fontWeight","i","$d9Hqa","Textblock","bold","overflow","makeBottomBarredScreenContainer","contents","parent","$0b128bc07ced54fa$export$efc4f4afff32aea8","bar","class","$3MmRR","bottomBar","wrap","pageContainer","$4c0fbf616468c6ce$var$resolveArgs","a","b","isArray","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","binder","text","textContent","unbox","on","evtName","handler","addEventListener","passive","capture","k","attrs","v","removeAttribute","setAttribute","vv","setChildren","childTags","filter","x","newChildren","length","childTag","childNodes","insertBefore","remove","$4c0fbf616468c6ce$var$updateChildren","$jM5hi","makeClassname","classname","classList","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","tagName","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","result","push","classname1","join","$2c0797ddc08f9f2b$export$9bfd64464b8f45a7","$2c0797ddc08f9f2b$export$8f981dffec84ba52","$2c0797ddc08f9f2b$export$eebe73d6e99d9049","$1bf0a92f5a0d7095$export$472062a354075cee","handle","$3KaNR","handleContainer","labelWidth","sliderRoot","updateHandlePos","newValue","left","setValueByEvent","e","coords","$ih12A","pointerEventsToClientCoords","contRect","progress","round","addCursorMoveHandler","element","onMove","target","watchAndRun","$070b40bf88f7afea$export$f9e1fc62131d1b82","touches","$070b40bf88f7afea$export$c4dfce035d43d1e0","touch","clientX","y","clientY","$070b40bf88f7afea$export$4eb1c1f17f883a41","HTMLElement","top","$070b40bf88f7afea$export$80eb02ad18c977f1","params","onDown","window","onUp","downIsMove","removeEventListener","upIsMove","$070b40bf88f7afea$export$b3002a74c1b9a5fd","el","preventDefault","stopPropagation","$2b9e0c477a19ae15$export$b38bf4f33e9e4c25","$2b9e0c477a19ae15$export$8f34ce051745d39e","$2b9e0c477a19ae15$export$c19509281e5dc3a3","$2b9e0c477a19ae15$export$1237798dc640739a","$2b9e0c477a19ae15$export$8240c6390807f912","$d28ef00c11afa79c$export$e1c030fab1537e7","$efatB","rgbNumberToColorString","$fa4a5aa5cdd6ce8e$var$twoHex","toString","$fa4a5aa5cdd6ce8e$export$fdc9c29511f1a926","$fa4a5aa5cdd6ce8e$export$79db3ad3d560d193","components","r","g","$fa4a5aa5cdd6ce8e$var$hueToRgb","p","q","t","$fa4a5aa5cdd6ce8e$export$c5ea230d2f55d434","rgb","$fa4a5aa5cdd6ce8e$export$21d90289cdbe307c","colorRgb","transform","transformResult","cmin","cmax","delta","h","s","l","abs","toFixed","$fa4a5aa5cdd6ce8e$export$c85ca4f4753af384","hsl","$fa4a5aa5cdd6ce8e$export$29fb7152bd3f781a","$ad44aa306ac78938$var$matterMul","$ad44aa306ac78938$export$393b7ae2a19d47b6","constructor","svg","Map","balls","timePassed","this","blockColors","transformColorHsl","matter","$7ugw8","Engine","create","gravity","enableSleeping","makeMatterjsRender","makeSvgRender","makeWalls","makeBlocks","makeBalls","Events","pair","pairs","processCollision","svgTag","Render","engine","options","wireframes","lookAt","cx","cy","bx","by","part","atan2","PI","sideCount","makeBlock","partSector","angle","sin","cos","distanceToHWall","distanceToWWall","distanceToWall","distanceToBall","makeBall","collision","ball","getBallFromCollision","velocityAngle","body","velocity","setBallSpeed","block","getBlockFromCollision","setBlockColor","Body","setVelocity","Bodies","rectangle","isStatic","isSleeping","fillStyle","restitution","collisionFilter","group","category","mask","Composite","add","world","plugin","oldColor","newColor","set","get","colorStr","getBlock","bodyA","bodyB","colorRgbSrc","circle","friction","frictionAir","frictionStatic","tail","tailColor","$5ufZV","BallTail","random","getBall","wallProps","wallThickness","stop","$5DUDw","cycledRequestAnimationFrame","update","updateBallElements","position","$6d25a2878a0e4597$export$519e26ca1f10de43","onStop","stopped","prevCallTime","wrappedHandler","time","isConnected","requestAnimationFrame","factory","module","exports","modules","installedModules","__webpack_require__","moduleId","module1","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","Symbol","toStringTag","mode","__esModule","ns","bind","n","object","property","prototype","hasOwnProperty","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","deepClone","arguments","source","prop","clone","keys","values","path","begin","end","split","slice","val","shuffle","array","j","temp","choose","choices","isElement","nodeType","nodeName","isFunction","isPlainObject","isString","clamp","sign","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","concat","info","warn","warnOnce","message","deprecated","warning","chain","nextId","indexOf","haystack","needle","list","func","mapped","topologicalSort","graph","visited","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","$parcel$global","Bounds","vertices","bounds","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","deltaX","deltaY","Vector","magnitude","magnitudeSquared","rotate","output","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","_temp","Vertices","points","index","isInternal","fromPath","match","parseFloat","centre","area","mean","average","signed","inertia","mass","numerator","denominator","verticesLength","translateX","translateY","dx","dy","pointX","pointY","nextVertex","scale","scaleX","scaleY","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","clockwiseSort","sort","vertexA","vertexB","isConvex","z","flag","hull","upper","lower","pop","eventNames","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","id","type","isModified","bodies","constraints","composites","cache","allBodies","allConstraints","allComposites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","sleepCounter","removeConstraintAt","clear","keepStatic","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","angularSpeed","angularVelocity","isSensor","motion","sleepThreshold","density","slop","timeScale","visible","opacity","strokeStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setAngularVelocity","setParts","setCentre","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","afterCollisions","isActive","sleepingBody","movingBody","wasSleeping","Collision","_supports","_overlapAB","_overlapBA","Pair","overlap","axis","collided","parentA","parentB","depth","normal","tangent","penetration","supports","collides","_overlapAxes","minOverlap","table","minAxis","minAxisX","minAxisY","supportsB","_findSupports","supportCount","supportsA","verticesA","verticesB","overlapAB","overlapBA","verticesALength","verticesBLength","verticesAX","verticesAY","verticesBX","verticesBY","axesLength","overlapMin","Number","MAX_VALUE","overlapAxisNumber","axisX","axisY","minA","minB","maxA","maxB","_projectToAxis","projection","direction","vertexC","distance","bodyAPositionX","bodyAPositionY","normalX","normalY","nearestDistance","Contact","timestamp","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","parentAVerticesLength","support","contactId","contact","setActive","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","gradient","xx","trapezoid","slope","verticesPath","x1","x2","x3","maxSides","sides","ceil","polygon","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","partA","partB","pav","pbv","da","db","Mouse","mouse","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","detail","setElement","clearSourceEvents","setOffset","setScale","elementBounds","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","pageY","clientWidth","clientHeight","Detector","setBodies","detector","collisions","bodiesLength","canCollide","_compareBoundsX","boundXMax","boundYMax","boundYMin","bodyAStatic","partsALength","partsASingle","partsBLength","partsBStart","filterA","filterB","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","test","pattern","exec","major","minor","patch","isRange","operator","prerelease","_requestAnimationFrame","_cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","canvas","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","showSleeping","showDebug","showStats","showPerformance","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","controller","showBroadphase","setPixelRatio","loop","_updateTiming","_getPixelRatio","padding","center","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","startTime","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","sections","Part","Cons","Comp","font","textBaseline","textAlign","section","fillText","lastEngineDelta","lastDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","rateMean","fps","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","start","arc","closePath","coils","globalAlpha","texture","_getTexture","drawImage","normalPosX","normalPosY","inspector","selected","data","setLineDash","selectStart","selectBounds","unshift","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","normalImpulse","tangentImpulse","Resolver","Pairs","positionIterations","velocityIterations","constraintIterations","grid","buckets","broadphase","metrics","_bodiesApplyGravity","_bodiesUpdate","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","activeCount","pairsLength","contactShare","positionDampen","positionWarming","verticesTranslate","boundsUpdate","positionImpulseX","positionImpulseY","contactsLength","contactVertex","impulseX","impulseY","maxFriction","timeScaleSquared","restingThresh","frictionNormalMultiplier","restingThreshTangent","NumberMaxValue","bodyAVelocity","bodyBVelocity","tangentX","tangentY","inverseMassTotal","offsetAX","offsetAY","offsetBX","offsetBY","velocityPointAX","velocityPointAY","relativeVelocityX","relativeVelocityY","tangentVelocity","normalOverlap","normalForce","frictionLimit","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","pairIndex","pairsList","pairsListLength","pairsTable","collisionsLength","removePairIndex","Matter","Composites","Grid","MouseConstraint","Query","Runner","SAT","Svg","World","before","after","stack","columns","rows","columnGap","rowGap","lastBody","row","maxHeight","column","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","col","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","bucketWidth","bucketHeight","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","gridPairs","pairId","bucketLength","pairKeys","pairKeysLength","mouseConstraint","_triggerEvents","mouseEvents","partsAStart","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_frameTimeout","clearTimeout","runner","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","$7ec4b16cdc1e79b3$export$c04342dc9b7dcd2b","timeLimit","queue","$fpqML","TimedQueue","prevPoint","enqueue","updatePath","leftSide","rightSide","toArray","segmentSizeIncrement","dropUntil","$6A5Hp","$d0350651d2450633$export$f719b079108b4ba6","items","Queue","head","dequeue","toArrayHeadFirst","$d86dd992f2068262$export$3dc07afe418952bc","headNode","tailNode","oldTail","prev","Error","maybeDequeue"],"version":3,"file":"zen_blockbreaker.d7de8a43.js.map"}