{"mappings":"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","sources":["src/sketches/star_travel/star_travel.ts","src/common/cycled_request_animation_frame.ts","src/common/queue.ts","src/sketches/star_travel/nebula_generator.ts","src/sketches/star_travel/bezier_smoothed_closed_path.ts","src/sketches/star_travel/wobbly_circle.ts","src/sketches/star_travel/star_travel.module.scss"],"sourcesContent":["import {svgTag} from \"@nartallax/cardboard-dom\"\nimport {cycledRequestAnimationFrame} from \"common/cycled_request_animation_frame\"\nimport {Queue} from \"common/queue\"\nimport {generateRandomNebula} from \"./nebula_generator\"\nimport * as css from \"./star_travel.module.scss\"\n\nexport function main(root: HTMLElement): void {\n\tconst controller = new StarTravelController({\n\t\tcolors: [\"#ddd\", \"#B2BBFF\", \"#9EA6FF\", \"#A3E4FF\", \"#8CC7FF\", \"#B596FF\"],\n\t\tcount: 100,\n\t\ttravelTime: 2500,\n\t\ttravelTimeDeviation: 0.2\n\t})\n\troot.appendChild(controller.root)\n\tcontroller.start()\n}\n\ninterface StarTravelOpts {\n\tcolors: string[]\n\tcount: number\n\ttravelTime: number\n\ttravelTimeDeviation: number\n}\n\ninterface Star {\n\tdiesAt: number\n\tel: SVGElement\n}\n\n\nclass StarTravelController {\n\n\treadonly root: SVGSVGElement\n\tprivate readonly stars = new Queue<Star>()\n\tprivate width = 0\n\tprivate height = 0\n\tprivate starFlightRadius = 0\n\n\tconstructor(private readonly opts: StarTravelOpts) {\n\t\tthis.root = svgTag({tag: \"svg\", attrs: {x: \"0\", y: \"0\"}, class: css.startravelSvg})\n\t}\n\n\tprivate init(): void {\n\t\tthis.stars.clear()\n\t\tconst w = this.width = this.root.clientWidth\n\t\tconst h = this.height = this.root.clientHeight\n\t\tthis.starFlightRadius = Math.sqrt(Math.pow(this.width / 2, 2) + Math.pow(this.height / 2, 2))\n\t\tthis.root.setAttribute(\"width\", w + \"\")\n\t\tthis.root.setAttribute(\"height\", h + \"\")\n\t\tthis.root.setAttribute(\"viewBox\", `0 0 ${w} ${h}`)\n\n\t\tthis.root.innerHTML = \"\"\n\t\tthis.root.appendChild(this.generateBackground())\n\t}\n\n\tprivate removeOldStars() {\n\t\tconst now = Date.now()\n\t\twhile(this.stars.head && this.stars.head.diesAt < now){\n\t\t\tconst star = this.stars.dequeue()\n\t\t\tstar.el.remove()\n\t\t}\n\t}\n\n\tprivate addNewStars(count = this.opts.count - this.stars.length) {\n\t\tconst offsetPerStar = 1 / count\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tthis.addStar(offsetPerStar * i)\n\t\t}\n\t}\n\n\tprivate addStar(animationProgress = 0): void {\n\t\tconst direction = Math.random() * 360\n\t\t// let travelTime = this.opts.travelTime * (1 + ((Math.random() - 0.5) * this.opts.travelTimeDeviation));\n\t\tconst travelTime = this.opts.travelTime\n\t\tconst speed = this.starFlightRadius / travelTime\n\t\tconst trackLength = speed * 350\n\t\tconst trackWidth = (Math.random() + 0.5) * 10\n\t\tconst color = this.opts.colors[Math.floor(Math.random() * this.opts.colors.length)]\n\n\t\tconst offsetDistance = ((((this.width + this.height) / 2) * 0.2) * (Math.random() + 0.15))\n\t\tconst timeOffset = animationProgress * travelTime\n\n\t\tconst star: Star = {\n\t\t\tdiesAt: Date.now() + travelTime - timeOffset,\n\t\t\tel: svgTag({\n\t\t\t\tclass: css.startravelStar,\n\t\t\t\tattrs: {\n\t\t\t\t\ttransform: `translate(${this.width / 2}, ${this.height / 2}) rotate(${direction}) translate(${offsetDistance}, 0)`\n\t\t\t\t}\n\t\t\t}, [svgTag({\n\t\t\t\tattrs: {\n\t\t\t\t\tstyle: `animation-duration: ${travelTime / 1000}s;animation-delay: ${-timeOffset / 1000}s`\n\t\t\t\t}\n\t\t\t}, [\n\t\t\t\tsvgTag({\n\t\t\t\t\ttag: \"path\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\td: `M ${-trackLength} 0 L 0 ${trackWidth / 2} A ${trackWidth / 2} ${trackWidth / 2} 0 0 0 0 ${-trackWidth / 2} z`,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tsvgTag({\n\t\t\t\t\ttag: \"circle\",\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tcx: 0,\n\t\t\t\t\t\tcy: 0,\n\t\t\t\t\t\tr: trackWidth / 3,\n\t\t\t\t\t\tfill: color\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t\t)]\n\t\t\t)\n\t\t}\n\n\t\tthis.stars.enqueue(star)\n\t\tthis.root.appendChild(star.el)\n\t}\n\n\tstart() {\n\t\tthis.init()\n\t\tcycledRequestAnimationFrame(this.root, timePassed => {\n\t\t\tif(timePassed > 1000 || this.root.clientWidth !== this.width || this.root.clientHeight !== this.height){\n\t\t\t\tthis.init()\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// void this.removeOldStars, void this.addNewStars\n\t\t\tthis.removeOldStars()\n\t\t\tthis.addNewStars()\n\t\t})\n\t}\n\n\tprivate generateBackground(): SVGElement {\n\t\tconst nebulae = [] as SVGElement[]\n\t\tfor(let i = 0; i < 2; i++){\n\t\t\tconst nebula = generateRandomNebula(Math.min(this.width + this.height) / 3)\n\t\t\tnebulae.push(nebula)\n\t\t\tconst dx = (Math.random() - 0.5) * (this.width / 3)\n\t\t\tconst dy = (Math.random() - 0.5) * (this.height / 3)\n\t\t\tnebula.setAttribute(\"transform\", `translate(${(this.width / 2) + dx}, ${(this.height / 2) + dy})`)\n\t\t}\n\t\treturn svgTag({class: css.startravelBackground}, nebulae)\n\t}\n\n}","/** Wrapped RequestAnimationFrame, which cycles.\n * Passes time since previous frame as argument.\n * Returns stopper function\n * Unmounting root also stops it */\nexport function cycledRequestAnimationFrame(root: HTMLElement | SVGElement, handler: (delta: number) => void, onStop?: () => void): () => void {\n\tlet stopped = false\n\n\tlet prevCallTime = 0\n\n\tconst wrappedHandler = (time: number) => {\n\t\tif(stopped){\n\t\t\tonStop?.()\n\t\t\treturn\n\t\t}\n\t\tif(!root.isConnected){\n\t\t\tonStop?.()\n\t\t\tstopped = true\n\t\t\treturn\n\t\t}\n\t\tconst delta = time - prevCallTime\n\t\tprevCallTime = time\n\t\trequestAnimationFrame(wrappedHandler)\n\t\thandler(delta)\n\t}\n\n\trequestAnimationFrame(wrappedHandler)\n\n\treturn () => stopped = true\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.tailNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tmaybeDequeue(): T | undefined {\n\t\tif(!this.headNode){\n\t\t\treturn undefined\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n\ttoArrayHeadFirst(): T[] {\n\t\tconst result: T[] = new Array(this.len)\n\t\tlet node = this.headNode\n\t\tlet i = 0\n\t\twhile(node){\n\t\t\tresult[i++] = node.value\n\t\t\tnode = node.prev\n\t\t}\n\t\treturn result\n\t}\n\n}","import {svgTag} from \"@nartallax/cardboard-dom\"\nimport {makeBezierSmoothedClosePath} from \"./bezier_smoothed_closed_path\"\nimport {generateWobblyCirclePoints} from \"./wobbly_circle\"\n\ninterface Color {\n\tr: number\n\tg: number\n\tb: number\n}\n\nconst filterName = \"random-nebula-blur\"\n\nfunction twoHex(x: number): string {\n\treturn (x < 16 ? \"0\" : \"\") + x.toString(16)\n}\n\nfunction twoHexOneBased(x: number): string {\n\treturn twoHex(Math.floor(Math.min(1, x) * 255))\n}\n\nfunction generateColorMults(totalMultAmount = 1): Color {\n\tlet r = Math.random()\n\t// зеленый всегда должен быть на нуле\n\t// иначе при применении градиента начинает даваться йобу глубина цвета\n\t// и появляются \"лесенки\"\n\t// и ваще зеленый не смотрится в космосе\n\tlet g = 0 // Math.random();\n\tlet b = Math.random() * 0.5\n\tconst normalizer = totalMultAmount / (r + g + b)\n\tr *= normalizer\n\tg *= normalizer\n\tb *= normalizer\n\treturn {r, g, b}\n}\n\nfunction makeColorStr(mults: Color, power: number): string {\n\t// return `#${twoHexOneBased(mults.r * power)}${twoHexOneBased(mults.g * power)}${twoHexOneBased(mults.b * power)}`\n\tvoid twoHexOneBased\n\treturn `rgba(${mults.r}, ${mults.g}, ${mults.b}, ${power})`\n}\n\nexport function generateRandomNebula(radius: number): SVGElement {\n\tconst vertex = generateWobblyCirclePoints({\n\t\tradius: radius,\n\t\tvertexCount: 15,\n\t\twobbliness: 0.9\n\t})\n\n\tconst smoothness = 0.2\n\tlet intensity = 0.2\n\tconst colorMult = generateColorMults(255)\n\n\tconst circles: SVGElement[] = []\n\tfor(let i = 0; i < 15; i++){\n\t\tconst path = makeBezierSmoothedClosePath(vertex, smoothness)\n\t\t// path.setAttribute(\"filter\", `url(#${filterName})`)\n\t\tpath.setAttribute(\"fill\", makeColorStr(colorMult, intensity))\n\t\tpath.setAttribute(\"fill-opacity\", intensity.toFixed(2))\n\t\tcircles.push(path)\n\n\t\tintensity += 0.05\n\t\tvertex.forEach(vertex => {\n\t\t\tvertex.x /= 1.15\n\t\t\tvertex.y /= 1.15\n\t\t})\n\t}\n\n\treturn svgTag({tag: \"g\"}, [\n\t\tsvgTag({tag: \"filter\",\n\t\t\tattrs: {\n\t\t\t\tid: filterName\n\t\t\t}}, [\n\t\t\tsvgTag({\n\t\t\t\ttag: \"feGaussianBlur\",\n\t\t\t\tattrs: {\n\t\t\t\t\tin: \"SourceGraphic\",\n\t\t\t\t\tstdDeviation: \"15\"\n\t\t\t\t}\n\t\t\t})\n\t\t]),\n\t\tsvgTag({\n\t\t\ttag: \"g\",\n\t\t\tattrs: {\n\t\t\t\tfilter: `url(#${filterName})`\n\t\t\t}\n\t\t}, circles)\n\t])\n}","import {svgTag} from \"@nartallax/cardboard-dom\"\nimport {Point} from \"sketches/star_travel/wobbly_circle\"\n\n/** Имея массив точек, сделать из него сглаженный path  */\nexport function makeBezierSmoothedClosePath(vertex: Point[], smoothness: number): SVGPathElement {\n\tfunction getBezierAt(i: number, firstPoint: boolean): Point {\n\t\tconst cur = vertex[(i + vertex.length) % vertex.length]!\n\t\tconst prev = vertex[(i + vertex.length - 1) % vertex.length]!\n\t\tconst next = vertex[(i + 1) % vertex.length]!\n\t\treturn calcBezierPoint(cur, prev, next, firstPoint, smoothness)\n\t}\n\n\t// transforming points to svg path string, generating bezier points in process\n\tlet pathStr = `M ${vertex[vertex.length - 1]!.x} ${vertex[vertex.length - 1]!.y}`\n\tfor(let i = 0; i < vertex.length; i++){\n\t\tconst cur = vertex[i]!\n\t\tconst prevBezier = getBezierAt(i - 1, true)\n\t\tconst curBezier = getBezierAt(i, false)\n\t\tpathStr += `C ${prevBezier.x} ${prevBezier.y}, ${curBezier.x} ${curBezier.y}, ${cur.x} ${cur.y}`\n\t}\n\n\treturn svgTag({tag: \"path\", attrs: {d: pathStr}})\n}\n\nfunction calcBezierPoint(cur: Point, prev: Point, next: Point, firstPoint: boolean, smoothness: number): Point {\n\t// нам нужно, чтобы точка безье была на линии, параллельной линии prev -> next, проходящей через cur\n\t// поэтому мы двигаем одну из точек (prev, next) на расстояние от cur до другой из них\n\tconst a = firstPoint ? prev : next\n\tconst b = firstPoint ? next : prev\n\tlet dx = cur.x - a.x\n\tlet dy = cur.y - a.y\n\tconst result = {x: b.x + dx, y: b.y + dy}\n\t// после такого сдвига новая точка действительно лежит на этой линии, но она получается слишком далеко\n\t// поэтому мы её двигаем ближе к cur\n\tdx = cur.x - result.x\n\tdy = cur.y - result.y\n\tresult.x = cur.x - (dx * smoothness)\n\tresult.y = cur.y - (dy * smoothness)\n\treturn result\n}","export interface Point {\n\tx: number\n\ty: number\n}\n\nexport interface WobblyCircleParams {\n\tradius: number\n\tvertexCount: number\n\twobbliness: number\n}\n\nexport function generateWobblyCirclePoints(params: WobblyCircleParams): Point[] {\n\tconst vertex = [] as Point[]\n\n\t// generating random circle-like points\n\tlet currentDistance = params.radius\n\tconst degStep = (Math.PI * 2) / params.vertexCount\n\tfor(let i = 0; i < params.vertexCount; i++){\n\t\tconst deg = (i * degStep)\n\t\tcurrentDistance += (currentDistance < params.radius ? 1 : -1) * params.radius * params.wobbliness * 0.25\n\t\tcurrentDistance += (Math.random() - 0.5) * params.radius * params.wobbliness\n\t\tvertex.push({\n\t\t\tx: Math.cos(deg) * currentDistance,\n\t\t\t// минус здесь - потому что в svg ось y направлена вниз\n\t\t\t// а мне привычнее, когда радианы идут по часовой стрелке при увеличении\n\t\t\ty: -Math.sin(deg) * currentDistance\n\t\t})\n\t}\n\n\treturn vertex\n}\n\n","@keyframes startravel-starfly {\n\t0% { \n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 0;\n\t}\n\t50% {\n\t\ttransform: scale(0.1) translate(0, 0);\n\t\topacity: 1;\n\t}\n\t100% { \n\t\ttransform: scale(5) translate(100%, 0);\n\t\topacity: 1;\n\t}\n}\n\n@keyframes startravel-rotate-bg {\n\tfrom { \n\t\ttransform: translate(50%, 50%) rotate(0deg) translate(-50%, -50%);\n\t}\n\tto { \n\t\ttransform: translate(50%, 50%) rotate(360deg) translate(-50%, -50%);\n\t}\n}\n\n.startravelSvg {\n\tposition: relative;\n\tbackground: #000;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.startravelStar > g {\n\tanimation: startravel-starfly 1s cubic-bezier(1,0,1,0);\n\tanimation-fill-mode: forwards;\n}\n\n.startravelStar circle {\n\tfilter: brightness(200%);\n}\n\n.startravelBackground {\n\tanimation: startravel-rotate-bg 250s linear infinite;\n}"],"names":["$7sHgZ","parcelRequire","$ad08eec3e5b7b8ba$export$f22da7240b7add18","root","controller","$ad08eec3e5b7b8ba$var$StarTravelController","colors","count","travelTime","travelTimeDeviation","appendChild","start","constructor","opts","stars","$6A5Hp","Queue","width","height","starFlightRadius","this","svgTag","tag","attrs","x","y","class","$5mUU2","startravelSvg","init","clear","w","clientWidth","h","clientHeight","Math","sqrt","pow","setAttribute","innerHTML","generateBackground","removeOldStars","now","Date","head","diesAt","dequeue","el","remove","addNewStars","length","offsetPerStar","i","addStar","animationProgress","direction","random","trackLength","trackWidth","color","floor","offsetDistance","timeOffset","star","startravelStar","transform","style","d","fill","cx","cy","r","enqueue","$5DUDw","cycledRequestAnimationFrame","timePassed","nebulae","nebula","$f6lcZ","generateRandomNebula","min","push","dx","dy","startravelBackground","$6d25a2878a0e4597$export$519e26ca1f10de43","handler","onStop","stopped","prevCallTime","wrappedHandler","time","isConnected","delta","requestAnimationFrame","$d86dd992f2068262$export$3dc07afe418952bc","len","headNode","value","tail","tailNode","oldTail","prev","Error","result","maybeDequeue","undefined","toArrayHeadFirst","Array","node","$8345261d26a3b178$var$filterName","$8345261d26a3b178$export$dd54aaf74a2bf32b","radius","vertex","$5sXTG","generateWobblyCirclePoints","vertexCount","wobbliness","intensity","colorMult","totalMultAmount","g","b","normalizer","$8345261d26a3b178$var$generateColorMults","circles","path","$bddrq","makeBezierSmoothedClosePath","power","mults","toFixed","forEach","id","in","stdDeviation","filter","$22ccbd76036f7d57$export$d77b7e82a9cc293e","smoothness","getBezierAt","firstPoint","cur","next","a","$22ccbd76036f7d57$var$calcBezierPoint","pathStr","prevBezier","curBezier","$6d5408446ab836f7$export$22c1218281d54f73","params","currentDistance","degStep","PI","deg","cos","sin","$3e8b258f448bc1f2$export$132cdb902872b111","$3e8b258f448bc1f2$export$279cefaa126c9ca2","$3e8b258f448bc1f2$export$756cdbf8a4a74372","$3e8b258f448bc1f2$export$c84ea88972675b","$3e8b258f448bc1f2$export$3250ca2bbee7d90c"],"version":3,"file":"star_travel.8f858de4.js.map"}