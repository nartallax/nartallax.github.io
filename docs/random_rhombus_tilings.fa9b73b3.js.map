{"mappings":"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","sources":["src/sketches/random_rhombus_tilings/random_rhombus_tilings.ts","src/sketches/random_rhombus_tilings/rhombus_tiling_render.ts","src/common/color_utils.ts","src/common/tag.ts","src/common/classname.ts","src/sketches/random_rhombus_tilings/rhombus_tiling.ts","src/common/perfometer.ts","src/sketches/random_rhombus_tilings/triangle_grid.ts","src/common/queue.ts","src/sketches/random_rhombus_tilings/rhombus_randomizer.binding.ts","node_modules/@parcel/runtime-js/lib/runtime-be2eac7296bd2141.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/sketches/random_rhombus_tilings/wasm/rhombus_randomiser.js","src/common/bottom_bar/bottom_bar.ts","src/common/bottom_bar/bottom_bar.module.scss","src/common/slider/slider.ts","src/common/input_utils.ts","src/common/slider/slider.module.scss","src/common/debounce.ts"],"sourcesContent":["import {renderRhombuses} from \"sketches/random_rhombus_tilings/rhombus_tiling_render\"\nimport {getEmptyRhombusPattern, rhombusGridFromBytes, rhombusGridToBytes} from \"sketches/random_rhombus_tilings/rhombus_tiling\"\nimport {transformColorHsl} from \"common/color_utils\"\nimport {performeter} from \"common/perfometer\"\nimport {getWasmRhombusRandomiser, WasmRhombusRandomiser} from \"sketches/random_rhombus_tilings/rhombus_randomizer.binding\"\nimport {makeBottomBarredScreenContainer} from \"common/bottom_bar/bottom_bar\"\nimport {box, RBox, WBox} from \"common/box\"\nimport {Slider} from \"common/slider/slider\"\nimport {TriangleGrid} from \"sketches/random_rhombus_tilings/triangle_grid\"\nimport {getBinder} from \"common/binder/binder\"\nimport {tag} from \"common/tag\"\nimport {debounce} from \"common/debounce\"\n\nconst colors = [0x53bc01, 0xffeb03, 0xffa801, 0xf93a1d, 0xe21a5f, 0x572c62, 0xa1ccd3, 0x006898] as const\nconst defaultDims = {width: 10, height: 10, length: 10}\nconst defaultSteps = Math.floor(TriangleGrid.getCount(defaultDims.length, defaultDims.width, defaultDims.height) * 10)\nconst defaultSeed = Math.floor(Math.random() * 0x8fffffff)\n\nexport async function main(container: HTMLElement, {isPreview}: {isPreview: boolean}): Promise<void> {\n\tconst randomizer = await getWasmRhombusRandomiser()\n\tconst redraw = makeUpdater(() => root, randomizer)\n\tconst debouncedRedraw = debounce(\"raf\", () => redraw(props))\n\n\tconst steps = box(defaultSteps)\n\tconst maxSteps = box(steps())\n\tconst props = {\n\t\tcolor: box(colors[Math.floor(Math.random() * colors.length)]!),\n\t\tseed: box(defaultSeed),\n\t\tsteps, maxSteps,\n\t\theight: box(defaultDims.height),\n\t\twidth: box(defaultDims.width),\n\t\tlength: box(defaultDims.length)\n\t}\n\tconst root = isPreview ? container : bottomBar(container, props)\n\n\tconst update = () => {\n\t\tdebouncedRedraw()\n\t\tmaxSteps(Math.floor(TriangleGrid.getCount(props.length(), props.width(), props.height()) ** 1.5))\n\t}\n\tupdate()\n\n\tconst binder = getBinder(root)\n\tbinder.watch(props.steps, update)\n\tbinder.watch(props.height, update)\n\tbinder.watch(props.width, update)\n\tbinder.watch(props.length, update)\n\tbinder.watch(props.seed, update)\n\tbinder.watch(props.color, update)\n}\n\nconst margins = 25\n\nconst makeUpdater = (getRoot: () => HTMLElement, randomizer: WasmRhombusRandomiser) => (props: BarProps) => {\n\trandomizer.seedRandom(props.seed())\n\tperformeter.enterBlock(\"initializing\")\n\tconst dims = {\n\t\theight: props.height(),\n\t\tlength: props.length(),\n\t\twidth: props.width()\n\t}\n\tconsole.log({...dims, steps: props.steps(), seed: props.seed()})\n\tlet grid = getEmptyRhombusPattern(dims)\n\n\tperformeter.exitEnterBlock(\"randomizing\")\n\tconst bytes = randomizer.randomizeRhombusPattern(rhombusGridToBytes(grid), props.length(), props.width(), props.height(), props.steps())\n\tgrid = rhombusGridFromBytes(bytes, dims)\n\t// tileWithRandomRhombuses(grid, props.steps())\n\n\tperformeter.exitEnterBlock(\"drawing\")\n\n\tconst color = props.color()\n\n\tconst root = getRoot()\n\troot.innerHTML = \"\"\n\n\tconst rootRect = root.getBoundingClientRect()\n\tconst rootHeight = rootRect.height - (margins * 2)\n\tconst rootWidth = rootRect.width - (margins * 2)\n\tconst heightCellSize = Math.floor(rootHeight / (grid.yHeight + 1))\n\tconst widthCellSize = Math.floor(rootWidth / (grid.xWidth + 1))\n\tconst cellSize = Math.min(heightCellSize, widthCellSize)\n\n\tconst svg = renderRhombuses({\n\t\thorisontalColor: transformColorHsl(color, ([h, s, l]) => [h, s * 1.1, l]),\n\t\tleftColor: transformColorHsl(color, ([h, s, l]) => [h, s * 0.9, l * 0.9]),\n\t\trightColor: transformColorHsl(color, ([h, s, l]) => [h, s * 0.9, l * 0.8]),\n\t\tcellSize: {\n\t\t\tx: cellSize,\n\t\t\ty: cellSize\n\t\t},\n\t\tgrid\n\t})\n\t// debug render\n\t// const svg = renderRhombusDots(grid, xy => {\n\t// \tconst encoded = randomizer.getNeighbours(dims.length, dims.width, dims.height, grid.count, xy.x, xy.y)\n\t// \treturn [...encoded].filter(x => x !== -1).map(num => ({\n\t// \t\tx: (num & 0xff0000) >> 16,\n\t// \t\ty: num & 0xff\n\t// \t}))\n\t// })\n\tsvg.style.margin = cellSize === widthCellSize\n\t\t? `${(rootRect.height - ((grid.yHeight + 1) * cellSize)) / 2}px 0 0 ${margins}px`\n\t\t: `${margins}px 0 0 ${(rootRect.width - ((grid.xWidth + 1) * cellSize)) / 2}px`\n\troot.appendChild(svg)\n\n\tperformeter.exitBlock()\n\tperformeter.print()\n\n\tconsole.log(randomizer.getMetrics())\n}\n\n\ninterface BarProps {\n\tsteps: WBox<number>\n\tmaxSteps: RBox<number>\n\tlength: WBox<number>\n\twidth: WBox<number>\n\theight: WBox<number>\n\tcolor: WBox<number>\n\tseed: WBox<number>\n}\n\nconst labelWidth = 60\nconst maxDim = 50\n\nfunction bottomBar(root: HTMLElement, props: BarProps): HTMLElement {\n\treturn makeBottomBarredScreenContainer({\n\t\tparent: root,\n\t\tcontents: [\n\t\t\ttag({style: {width: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", gap: \"1rem\"}}, [\n\t\t\t\tSlider({\n\t\t\t\t\tvalue: props.steps,\n\t\t\t\t\tstep: 1,\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: props.maxSteps,\n\t\t\t\t\tlabel: \"Steps\",\n\t\t\t\t\tlabelWidth\n\t\t\t\t}),\n\t\t\t\ttag({\n\t\t\t\t\ttagName: \"button\",\n\t\t\t\t\ttext: \"Refresh\",\n\t\t\t\t\ton: {\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tprops.color(colors[Math.floor(Math.random() * colors.length)]!)\n\t\t\t\t\t\t\tprops.seed(Math.floor(Math.random() * 0x8fffffff))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]),\n\t\t\tSlider({\n\t\t\t\tvalue: props.length,\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 2,\n\t\t\t\tmax: maxDim,\n\t\t\t\tlabel: \"Length\",\n\t\t\t\tlabelWidth\n\t\t\t}),\n\t\t\tSlider({\n\t\t\t\tvalue: props.width,\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 2,\n\t\t\t\tmax: maxDim,\n\t\t\t\tlabel: \"Width\",\n\t\t\t\tlabelWidth\n\t\t\t}),\n\t\t\tSlider({\n\t\t\t\tvalue: props.height,\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 2,\n\t\t\t\tmax: maxDim,\n\t\t\t\tlabel: \"Height\",\n\t\t\t\tlabelWidth\n\t\t\t})\n\t\t]\n\t})\n}","import {rgbNumberToColorString} from \"common/color_utils\"\nimport {svgTag} from \"common/tag\"\nimport {RhombusGrid} from \"sketches/random_rhombus_tilings/rhombus_tiling\"\nimport {TriangleGrid, XY} from \"sketches/random_rhombus_tilings/triangle_grid\"\n\ninterface Props {\n\treadonly cellSize: XY\n\treadonly horisontalColor: number\n\treadonly leftColor: number\n\treadonly rightColor: number\n\treadonly grid: RhombusGrid\n}\n\nexport const renderRhombuses = (props: Props): SVGSVGElement => {\n\tconst grid = props.grid\n\tconst svg = svgTag({tagName: \"svg\"})\n\n\tsvg.setAttribute(\"width\", grid.xWidth + \"\")\n\tsvg.setAttribute(\"height\", grid.yHeight + \"\")\n\tsvg.setAttribute(\"viewBox\", `-1 -1 ${grid.xWidth + 1} ${grid.yHeight + 0.5}`)\n\tsvg.style.width = ((grid.xWidth + 1) * props.cellSize.x) + \"px\"\n\tsvg.style.height = ((grid.yHeight + 0.5) * props.cellSize.y) + \"px\"\n\n\tconst strokeWidth = 2 / (props.cellSize.x + props.cellSize.y)\n\tconst makePathMaker = (color: number, name: string, expr: (x: number, y: number) => string) => (x: number, y: number): SVGPathElement => {\n\t\tlet offset = grid.getVerticalOffset(Math.max(0, Math.min(grid.xWidth - 1, x)))\n\t\tif(x < 0 || x >= grid.xWidth){\n\t\t\toffset += 0.5\n\t\t}\n\t\treturn svgTag({\n\t\t\ttagName: \"path\",\n\t\t\tattrs: {\n\t\t\t\t\"data-name\": `${name} at ${x},${y} with offset ${offset}`,\n\t\t\t\td: expr(x, y + offset),\n\t\t\t\tfill: rgbNumberToColorString(color),\n\t\t\t\t// strokes are only required to fill small gaps between the elements\n\t\t\t\t// if all the lines were cardinal - there would be no gaps, but they are not\n\t\t\t\tstroke: rgbNumberToColorString(color),\n\t\t\t\t\"stroke-width\": strokeWidth\n\t\t\t}\n\t\t})\n\t}\n\n\tconst makeLeft = makePathMaker(\n\t\tprops.leftColor,\n\t\t\"left\",\n\t\t(x, y) => `M ${x} ${y} V ${y - 1} L ${x - 1} ${y - 0.5} V ${y + 0.5} z`)\n\n\tconst makeRight = makePathMaker(\n\t\tprops.rightColor,\n\t\t\"right\",\n\t\t(x, y) => `M ${x} ${y} V ${y - 1} L ${x + 1} ${y - 0.5} V ${y + 0.5} z`)\n\n\tconst makeBottom = makePathMaker(\n\t\tprops.horisontalColor,\n\t\t\"bottom\",\n\t\t(x, y) => `M ${x} ${y} L ${x - 1} ${y + 0.5} L ${x} ${y + 1} L ${x + 1} ${y + 0.5} z`)\n\n\tfor(const {x, y, value: {leftIsSolid, rightIsSolid, bottomIsSolid}} of props.grid){\n\t\tif(leftIsSolid){\n\t\t\tsvg.appendChild(makeLeft(x, y))\n\t\t}\n\t\tif(rightIsSolid){\n\t\t\tsvg.appendChild(makeRight(x, y))\n\t\t}\n\t\tif(bottomIsSolid){\n\t\t\tsvg.appendChild(makeBottom(x, y))\n\t\t}\n\t}\n\n\t// filling borders\n\tgrid.exploreFrom(grid.getTopCornerCoords(), xy => {\n\t\tgrid.get(xy).leftIsSolid || svg.appendChild(makeBottom(xy.x, xy.y - 1))\n\t\treturn [grid.getBottomLeftOf(xy)]\n\t})\n\n\tgrid.exploreFrom(grid.getTopCornerCoords(), xy => {\n\t\tgrid.get(xy).rightIsSolid || svg.appendChild(makeBottom(xy.x, xy.y - 1))\n\t\treturn [grid.getBottomRightOf(xy)]\n\t})\n\n\tgrid.exploreFrom(grid.getRightBottomCornerCoords(), xy => {\n\t\tgrid.get(xy).rightIsSolid || svg.appendChild(makeLeft(xy.x + 1, xy.y))\n\t\treturn [grid.getTopOf(xy)]\n\t})\n\n\tgrid.exploreFrom(grid.getRightBottomCornerCoords(), xy => {\n\t\tgrid.get(xy).bottomIsSolid || svg.appendChild(makeLeft(xy.x + 1, xy.y + (xy.x < grid.topCornerColumnX ? 1 : 0)))\n\t\treturn [grid.getBottomLeftOf(xy)]\n\t})\n\n\tgrid.exploreFrom(grid.getLeftBottomCornerCoords(), xy => {\n\t\tgrid.get(xy).bottomIsSolid || svg.appendChild(makeRight(xy.x - 1, xy.y + (xy.x > grid.topCornerColumnX ? 1 : 0)))\n\t\treturn [grid.getBottomRightOf(xy)]\n\t})\n\n\tgrid.exploreFrom(grid.getLeftBottomCornerCoords(), xy => {\n\t\tgrid.get(xy).leftIsSolid || svg.appendChild(makeRight(xy.x - 1, xy.y))\n\t\treturn [grid.getTopOf(xy)]\n\t})\n\n\t// debug dots\n\t// for(const {x, y} of grid){\n\t// \tsvg.appendChild(svgTag({tagName: \"circle\", attrs: {\n\t// \t\tcx: x, cy: y + grid.getVerticalOffset(x), r: 0.1, fill: \"white\", stroke: \"none\"\n\t// \t}}))\n\t// }\n\n\treturn svg\n}\n\n// that's mostly for debug\nexport const renderRhombusDots = (grid: TriangleGrid<unknown>, getNeighbours?: (xy: XY) => XY[]): SVGSVGElement => {\n\tconst cellSizePx = 20\n\tconst dotSizePx = 10\n\n\tconst doGetNeighbours = getNeighbours ?? (xy => grid.getValidNeighbourCoords(xy))\n\n\tconst svg = svgTag({tagName: \"svg\"})\n\tsvg.setAttribute(\"width\", grid.xWidth + \"\")\n\tsvg.setAttribute(\"height\", grid.yHeight + \"\")\n\tsvg.setAttribute(\"viewBox\", `-1 -1 ${grid.xWidth + 1} ${grid.yHeight + 1}`)\n\tsvg.style.width = (grid.xWidth * cellSizePx) + \"px\"\n\tsvg.style.height = (grid.yHeight * cellSizePx) + \"px\"\n\n\tconst findDot = ({x, y}: XY): SVGCircleElement | null => {\n\t\tconst el = svg.getElementById(`circle-${x}-${y}`)\n\t\treturn el instanceof SVGCircleElement ? el : null\n\t}\n\n\tconst setColor = (xy: XY, color: string) => {\n\t\tconst dot = findDot(xy)\n\t\tif(dot){\n\t\t\tdot.style.fill = color\n\t\t}\n\t}\n\n\tconst showNeighbours = (xy: XY) => doGetNeighbours(xy)\n\t\t.forEach(xy => setColor(xy, \"red\"))\n\n\tconst hideNeighbours = (xy: XY) => doGetNeighbours(xy)\n\t\t.forEach(xy => setColor(xy, \"white\"))\n\n\tfor(const xy of grid){\n\t\tconst circle = svgTag({\n\t\t\ttagName: \"circle\",\n\t\t\tattrs: {\n\t\t\t\tid: `circle-${xy.x}-${xy.y}`,\n\t\t\t\tcx: xy.x,\n\t\t\t\tcy: grid.getVerticalOffset(xy.x) + xy.y,\n\t\t\t\tr: dotSizePx / cellSizePx,\n\t\t\t\tfill: \"white\",\n\t\t\t\tstroke: \"none\"\n\t\t\t}\n\t\t})\n\n\t\tcircle.addEventListener(\"mouseover\", () => showNeighbours(xy))\n\t\tcircle.addEventListener(\"mouseout\", () => hideNeighbours(xy))\n\n\t\tsvg.appendChild(circle)\n\t}\n\n\treturn svg\n}","function twoHex(x: number): string {\n\treturn (x > 0xf ? \"\" : \"0\") + x.toString(16)\n}\n\nexport function colorNumberTo3Components(color: number): [r: number, g: number, b: number] {\n\tconst r = (color >> 16) & 0xff,\n\t\tg = (color >> 8) & 0xff,\n\t\tb = (color >> 0) & 0xff\n\treturn [r, g, b]\n}\n\nexport function color3ComponentsToNumber(components: [r: number, g: number, b: number]): number {\n\tconst [r, g, b] = components\n\treturn (r << 16) | (g << 8) | b\n}\n\nexport function rgbToHsl(color: number): number {\n\tlet [r, g, b] = colorNumberTo3Components(color)\n\t// Make r, g, and b fractions of 1\n\tr /= 255\n\tg /= 255\n\tb /= 255\n\n\t// Find greatest and smallest channel values\n\tconst cmin = Math.min(r, g, b),\n\t\tcmax = Math.max(r, g, b),\n\t\tdelta = cmax - cmin\n\tlet h = 0,\n\t\ts = 0,\n\t\tl = 0\n\n\t// Calculate hue\n\t// No difference\n\tif(delta === 0){\n\t\th = 0\n\t} else if(cmax === r){\n\t\t// Red is max\n\t\th = ((g - b) / delta) % 6\n\t} else if(cmax === g){\n\t\t// Green is max\n\t\th = (b - r) / delta + 2\n\t} else {\n\t\t// Blue is max\n\t\th = (r - g) / delta + 4\n\t}\n\n\th = Math.round(h * 60)\n\n\t// Make negative hues positive behind 360°\n\tif(h < 0){\n\t\th += 360\n\t}\n\n\t// Calculate lightness\n\tl = (cmax + cmin) / 2\n\n\t// Calculate saturation\n\ts = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n\t// Multiply l and s by 100\n\ts = +(s * 100).toFixed(1)\n\tl = +(l * 100).toFixed(1)\n\n\treturn color3ComponentsToNumber([(h / 360) * 255, (s / 100) * 255, (l / 100) * 255])\n}\n\nexport function hslToRgb(hsl: number): number {\n\tlet [h, s, l] = colorNumberTo3Components(hsl)\n\th /= 255\n\ts /= 255\n\tl /= 255\n\tlet r: number, g: number, b: number\n\n\tif(s === 0){\n\t\tr = g = b = l // achromatic\n\t} else {\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tr = hueToRgb(p, q, h + 1 / 3)\n\t\tg = hueToRgb(p, q, h)\n\t\tb = hueToRgb(p, q, h - 1 / 3)\n\t}\n\n\treturn color3ComponentsToNumber([Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)])\n}\n\nfunction hueToRgb(p: number, q: number, t: number): number {\n\tif(t < 0){\n\t\tt += 1\n\t}\n\tif(t > 1){\n\t\tt -= 1\n\t}\n\tif(t < 1 / 6){\n\t\treturn p + (q - p) * 6 * t\n\t}\n\tif(t < 1 / 2){\n\t\treturn q\n\t}\n\tif(t < 2 / 3){\n\t\treturn p + (q - p) * (2 / 3 - t) * 6\n\t}\n\treturn p\n}\n\nexport function rgbNumberToColorString(rgb: number): string {\n\tconst b = rgb & 0xff\n\trgb >>= 8\n\tconst g = rgb & 0xff\n\trgb >>= 8\n\tconst r = rgb & 0xff\n\n\treturn \"#\" + twoHex(r) + twoHex(g) + twoHex(b)\n}\n\nexport function transformColorHsl(colorRgb: number, transform: (hsl: [number, number, number]) => [number, number, number]): number {\n\tconst transformResult = transform(\n\t\tcolorNumberTo3Components(\n\t\t\trgbToHsl(colorRgb)\n\t\t)\n\t)\n\ttransformResult[0] = Math.max(0, Math.min(255, Math.round(transformResult[0])))\n\ttransformResult[1] = Math.max(0, Math.min(255, Math.round(transformResult[1])))\n\ttransformResult[2] = Math.max(0, Math.min(255, Math.round(transformResult[2])))\n\treturn hslToRgb(\n\t\tcolor3ComponentsToNumber(\n\t\t\ttransformResult\n\t\t)\n\t)\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, RBox, unbox, WBox} from \"common/box\"\nimport {ClassNameParts, makeClassname} from \"common/classname\"\nimport {FieldsOfObjectWithType, WritableKeysOf} from \"common/type_utils\"\n\ntype CssStyleAssignableKeys = WritableKeysOf<CSSStyleDeclaration> & FieldsOfObjectWithType<CSSStyleDeclaration, string>\n\ninterface TagDescription<K extends string = string, ThisType = unknown> {\n\treadonly tagName?: K\n\treadonly text?: MaybeRBoxed<string | number>\n\treadonly attrs?: {\n\t\treadonly [attrName: string]: MaybeRBoxed<string | number | undefined | null>\n\t}\n\treadonly on?: {\n\t\treadonly [k in keyof GlobalEventHandlersEventMap]?: (this: ThisType, evt: GlobalEventHandlersEventMap[k]) => void\n\t}\n\treadonly class?: ClassNameParts\n}\n\nexport interface HTMLTagDescription<K extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> extends TagDescription<K, HTMLElementTagNameMap[K]> {\n\n\treadonly style?: {\n\t\treadonly [k in CssStyleAssignableKeys]?: MaybeRBoxed<string | number>\n\t}\n}\n\nexport type SVGTagDescription<K extends keyof SVGElementTagNameMap = keyof SVGElementTagNameMap> = TagDescription<K, SVGElementTagNameMap[K]>\n\ntype ChildArray = (Element | null | undefined)[] | RBox<(Element | null | undefined)[]>\n\n// typings are weird here, had to cast\nfunction resolveArgs<K>(a?: K | ChildArray, b?: ChildArray): [K, ChildArray | undefined] {\n\tif(!a){\n\t\treturn [{} as K, b]\n\t} else if(Array.isArray(a) || isRBox(a)){\n\t\treturn [{} as K, a as ChildArray]\n\t} else {\n\t\treturn [a as K, b]\n\t}\n}\n\nfunction populateTag<K extends string, T>(tagBase: Element, description: TagDescription<K, T>, children?: ChildArray): Binder | null {\n\tlet binder: Binder | null = null\n\n\tif(description.text){\n\t\tconst text = description.text\n\t\tif(isRBox(text)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(text, text => {\n\t\t\t\ttagBase.textContent = text + \"\"\n\t\t\t})\n\t\t}\n\t\ttagBase.textContent = unbox(text) + \"\"\n\t}\n\n\tif(description.on){\n\t\tfor(const evtName in description.on){\n\t\t\tconst handler = description.on[evtName as keyof GlobalEventHandlersEventMap]\n\t\t\t// I don't want to construct elaborat solid type here\n\t\t\t// I know the type will be correct, because it is enforced by function parameter type\n\t\t\t// so just be Any and that's it\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\ttagBase.addEventListener(evtName, handler as any, {passive: true, capture: false})\n\t\t}\n\t}\n\n\tfor(const k in description.attrs){\n\t\tconst v = description.attrs[k]\n\t\tif(isRBox(v)){\n\t\t\t(binder ||= getBinder(tagBase)).watch<string | number | null | undefined>(v, v => {\n\t\t\t\tif(v === null || v === undefined){\n\t\t\t\t\ttagBase.removeAttribute(k)\n\t\t\t\t} else {\n\t\t\t\t\ttagBase.setAttribute(k, v + \"\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst vv = unbox(v)\n\t\tif(v !== null && v !== undefined){\n\t\t\ttagBase.setAttribute(k, vv + \"\")\n\t\t}\n\t}\n\n\tif(children){\n\t\tconst setChildren = (children: (Element | null | undefined)[]) => {\n\t\t\tconst childTags = children.filter(x => !!x) as Element[]\n\t\t\tupdateChildren(tagBase, childTags)\n\t\t}\n\n\t\tif(isRBox(children)){\n\t\t\t(binder ||= getBinder(tagBase)).watch(children, children => {\n\t\t\t\tsetChildren(children)\n\t\t\t})\n\t\t}\n\t\tsetChildren(unbox(children))\n\t}\n\n\tif(description.class){\n\t\tbinder = makeClassname(\n\t\t\tbinder,\n\t\t\ttagBase,\n\t\t\tdescription.class,\n\t\t\t// using classList here because on svg elements .className is readonly (in runtime)\n\t\t\tclassname => tagBase.classList.value = classname\n\t\t) || binder\n\t}\n\n\treturn binder\n}\n\nexport function tag(): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>): HTMLElementTagNameMap[K]\nexport function tag(children: ChildArray): HTMLDivElement\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(description: HTMLTagDescription<K>, children: ChildArray): HTMLElementTagNameMap[K]\n\nexport function tag<K extends keyof HTMLElementTagNameMap = \"div\">(a?: HTMLTagDescription<K> | ChildArray, b?: ChildArray): HTMLElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElement(description.tagName || \"div\")\n\n\tlet binder = populateTag(tagBase, description, children)\n\n\tif(description.style){\n\t\tfor(const k in description.style){\n\t\t\tconst v = description.style[k as CssStyleAssignableKeys]\n\t\t\tif(isRBox(v)){\n\t\t\t\t(binder ||= getBinder(tagBase)).watch<string | number>(v, v => {\n\t\t\t\t\ttagBase.style[k] = v + \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t\ttagBase.style[k] = unbox(description.style[k]!) + \"\"\n\t\t}\n\t}\n\n\treturn tagBase as HTMLElementTagNameMap[K]\n}\n\nexport function svgTag(): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>): SVGElementTagNameMap[K]\nexport function svgTag(children: ChildArray): SVGGElement\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(description: SVGTagDescription<K>, children: ChildArray): SVGElementTagNameMap[K]\n\nexport function svgTag<K extends keyof SVGElementTagNameMap = \"g\">(a?: SVGTagDescription<K> | ChildArray, b?: ChildArray): SVGElementTagNameMap[K] {\n\tconst [description, children] = resolveArgs(a, b)\n\n\tconst tagBase = document.createElementNS(\"http://www.w3.org/2000/svg\", description.tagName || \"g\")\n\n\tif(description.tagName === \"svg\"){\n\t\ttagBase.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n\t}\n\n\tpopulateTag(tagBase, description, children)\n\n\treturn tagBase as SVGElementTagNameMap[K]\n}\n\nfunction updateChildren(parent: Element, newChildren: readonly Element[]): void {\n\tfor(let i = 0; i < newChildren.length; i++){\n\t\tconst childTag = newChildren[i]!\n\t\tconst x = parent.childNodes[i]\n\t\tif(x === childTag){\n\t\t\tcontinue\n\t\t}\n\t\tif(x){\n\t\t\tparent.insertBefore(childTag, x)\n\t\t} else {\n\t\t\tparent.appendChild(childTag)\n\t\t}\n\t}\n\n\twhile(parent.childNodes[newChildren.length]){\n\t\tparent.childNodes[newChildren.length]!.remove()\n\t}\n}\n\n/** Cached renderer for list of elements\n * Won't re-render an element if already has one for the value */\nexport function renderArray<T, K, E extends Element>(src: WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: RBox<T[]>, getKey: (value: T) => K, render: (value: RBox<T>) => E): RBox<E[]>\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]>, getKey: (value: T) => K, render: (value: MaybeRBoxed<T>) => E): E[]\nexport function renderArray<T, K, E extends Element>(src: MaybeRBoxed<readonly T[]> | WBox<T[]>, getKey: (value: T) => K, render: (value: WBox<T> | T) => E): Node[] | RBox<Node[]> {\n\tif(Array.isArray(src)){\n\t\treturn src.map(el => render(el))\n\t}\n\n\tconst map = new Map<WBox<T>, E>()\n\n\treturn (src as WBox<T[]>).wrapElements(getKey).map(itemBoxes => {\n\t\tconst leftoverBoxes = new Set(map.keys())\n\n\t\tconst result = itemBoxes.map(itemBox => {\n\t\t\tleftoverBoxes.delete(itemBox)\n\t\t\tlet el = map.get(itemBox)\n\t\t\tif(!el){\n\t\t\t\tel = render(itemBox)\n\t\t\t\tmap.set(itemBox, el)\n\t\t\t}\n\t\t\treturn el\n\t\t})\n\n\t\tfor(const oldBox of leftoverBoxes){\n\t\t\tmap.delete(oldBox)\n\t\t}\n\n\t\treturn result\n\t})\n}","import {Binder, getBinder} from \"common/binder/binder\"\nimport {isRBox, MaybeRBoxed, unbox} from \"common/box\"\n\ntype ClassNamePart = MaybeRBoxed<string | null | undefined> | Record<string, MaybeRBoxed<boolean | undefined>>\nexport type ClassNameParts = ClassNamePart | ClassNamePart[]\n\n/** Utility function that assembles classname from parts */\nexport function makeClassname(binder: Binder | null, node: Node, parts: ClassNameParts, callback: (className: string) => void): Binder | null {\n\tconst arr = Array.isArray(parts) ? parts : [parts]\n\tfor(const item of arr){\n\t\tif(isRBox(item)){\n\t\t\t(binder ||= getBinder(node)).watch(item, makeClassnameAndCallTheCallback)\n\t\t} else if(item && typeof(item) === \"object\"){\n\t\t\tfor(const key in item){\n\t\t\t\tconst bool = item[key]\n\t\t\t\tif(isRBox(bool)){\n\t\t\t\t\t(binder ||= getBinder(node)).watch(bool, makeClassnameAndCallTheCallback)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeClassnameAndCallTheCallback() {\n\t\tconst result = []\n\t\tfor(const item of arr){\n\t\t\tif(item && typeof(item) === \"object\"){\n\t\t\t\tfor(const classname in item){\n\t\t\t\t\tif(unbox(item[classname])){\n\t\t\t\t\t\tresult.push(classname)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst classname = unbox(item)\n\t\t\t\tif(classname){\n\t\t\t\t\tresult.push(classname)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(result.join(\" \"))\n\t}\n\n\tmakeClassnameAndCallTheCallback()\n\n\treturn binder\n}","import {performeter} from \"common/perfometer\"\nimport {decodeXY, encodeXY, TriangleGrid, XY} from \"sketches/random_rhombus_tilings/triangle_grid\"\n\n// this all is very inoptimal, and can be stored in a few bits\n// but whatever, it's not heavy enough to lag anyway\nexport interface TriangleGridRhombusNode {\n\treadonly leftIsSolid: boolean\n\treadonly rightIsSolid: boolean\n\treadonly bottomIsSolid: boolean\n}\n\nexport type RhombusGrid = TriangleGrid<TriangleGridRhombusNode>\n\nexport function rhombusGridToBytes(grid: RhombusGrid): Uint8Array {\n\tconst result = new Uint8Array(grid.count)\n\tconst colStarts = calcColStarts(grid)\n\n\tfor(const {x, y, value: {bottomIsSolid, leftIsSolid, rightIsSolid}} of grid){\n\t\tconst value = (rightIsSolid ? 1 : 0) | (bottomIsSolid ? 2 : 0) | (leftIsSolid ? 4 : 0)\n\t\tconst index = colStarts[x]! + y\n\t\tresult[index] = value\n\t}\n\n\treturn result\n}\n\nexport function rhombusGridFromBytes(bytes: Uint8Array, props: {width: number, height: number, length: number}): RhombusGrid {\n\tconst grid = new TriangleGrid({\n\t\t...props,\n\t\tdefaultValue: {\n\t\t\tleftIsSolid: false,\n\t\t\trightIsSolid: false,\n\t\t\tbottomIsSolid: false\n\t\t}\n\t})\n\tconst colStarts = calcColStarts(grid)\n\tfor(const xy of grid){\n\t\tconst index = colStarts[xy.x]! + xy.y\n\t\tconst byte = bytes[index]!\n\t\tgrid.set(xy, {\n\t\t\trightIsSolid: (byte & 1) !== 0,\n\t\t\tbottomIsSolid: (byte & 2) !== 0,\n\t\t\tleftIsSolid: (byte & 4) !== 0\n\t\t})\n\t}\n\treturn grid\n}\n\nfunction calcColStarts(grid: RhombusGrid): number[] {\n\tconst colStarts: number[] = new Array(grid.xWidth).fill(0)\n\tfor(let x = 1; x < grid.xWidth; x++){\n\t\tcolStarts[x] = colStarts[x - 1]! + grid.getHeightOfColumnAt(x - 1)\n\t}\n\treturn colStarts\n}\n\n// horisontal places at the bottom\nexport const getEmptyRhombusPattern = (props: {width: number, height: number, length: number}): RhombusGrid => {\n\tconst grid = new TriangleGrid<TriangleGridRhombusNode>({\n\t\t...props,\n\t\tdefaultValue: {\n\t\t\tleftIsSolid: false,\n\t\t\trightIsSolid: false,\n\t\t\tbottomIsSolid: false\n\t\t}\n\t})\n\n\tconst center = grid.getCenterCornerCoords()\n\n\tgrid.exploreFrom(center, xy => {\n\t\tgrid.set(xy, {...grid.get(xy), bottomIsSolid: true})\n\t\treturn [grid.getBottomLeftOf(xy), grid.getBottomRightOf(xy), grid.getBottomOf(xy)]\n\t})\n\n\tgrid.exploreFrom(center, xy => {\n\t\tgrid.set(xy, {...grid.get(xy), leftIsSolid: true})\n\t\treturn [grid.getBottomLeftOf(xy), grid.getTopLeftOf(xy), grid.getTopOf(xy)]\n\t})\n\n\tgrid.exploreFrom(center, xy => {\n\t\tgrid.set(xy, {...grid.get(xy), rightIsSolid: true})\n\t\treturn [grid.getBottomRightOf(xy), grid.getTopRightOf(xy), grid.getTopOf(xy)]\n\t})\n\n\treturn grid\n}\n\nexport const tileWithRandomRhombuses = (grid: RhombusGrid, flipLimit: number): void => {\n\tconst flippables = new Set<number>([encodeXY(grid.getCenterCornerCoords())])\n\n\tconst updateNeighbours = (sourceXy: XY) => {\n\t\tfor(const xy of grid.getValidNeighbourCoords(sourceXy)){\n\t\t\tconst key = encodeXY(xy)\n\t\t\tif(canFlipAt(xy)){\n\t\t\t\tflippables.add(key)\n\t\t\t} else {\n\t\t\t\tflippables.delete(key)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst isConcaveCorner = (node: TriangleGridRhombusNode) => node.bottomIsSolid && node.leftIsSolid && node.rightIsSolid\n\tconst canFlipAt = (xy: XY) => {\n\t\tconst node = grid.get(xy)\n\t\tif(isConcaveCorner(node)){\n\t\t\treturn true\n\t\t}\n\n\t\tif(node.bottomIsSolid || node.leftIsSolid || node.rightIsSolid){\n\t\t\treturn false\n\t\t}\n\n\t\tconst top = grid.getTopOf(xy)\n\t\tconst left = grid.getBottomLeftOf(xy)\n\t\tconst right = grid.getBottomRightOf(xy)\n\n\t\tconst topIsSolid = !grid.isCoordValid(top) || grid.get(top).bottomIsSolid\n\t\tconst leftIsSolid = !grid.isCoordValid(left) || grid.get(left).rightIsSolid\n\t\tconst rightIsSolid = !grid.isCoordValid(right) || grid.get(right).leftIsSolid\n\n\t\treturn topIsSolid && leftIsSolid && rightIsSolid\n\t}\n\tconst getFlipped = (node: TriangleGridRhombusNode): TriangleGridRhombusNode => {\n\t\tif(isConcaveCorner(node)){\n\t\t\treturn {leftIsSolid: false, rightIsSolid: false, bottomIsSolid: false}\n\t\t}\n\t\treturn {leftIsSolid: true, rightIsSolid: true, bottomIsSolid: true}\n\t}\n\tconst tryMutate = (xy: XY, mutator: (node: TriangleGridRhombusNode) => TriangleGridRhombusNode) => {\n\t\tif(grid.isCoordValid(xy)){\n\t\t\tgrid.set(xy, mutator(grid.get(xy)))\n\t\t}\n\t}\n\tconst flipAt = (xy: XY) => {\n\t\t// console.log(`Flipping ${xy.x}, ${xy.y}`)\n\t\tconst node = grid.get(xy)\n\t\ttryMutate(grid.getBottomLeftOf(xy), node => ({...node, rightIsSolid: !node.rightIsSolid}))\n\t\ttryMutate(grid.getBottomRightOf(xy), node => ({...node, leftIsSolid: !node.leftIsSolid}))\n\t\ttryMutate(grid.getTopOf(xy), node => ({...node, bottomIsSolid: !node.bottomIsSolid}))\n\t\tgrid.set(xy, getFlipped(node))\n\t\tupdateNeighbours(xy)\n\t}\n\n\tfor(let i = 0; i < flipLimit; i++){\n\t\tif(flippables.size === 0){\n\t\t\tconsole.log(\"no flip candidate????\")\n\t\t\tbreak\n\t\t}\n\n\t\tperformeter.enterBlock(\"copy set\")\n\t\tconst arr = [...flippables] // very unoptimized, but I don't want to think about it too much right now\n\t\tperformeter.exitEnterBlock(\"flip\")\n\t\tconst xy = decodeXY(arr[Math.floor(Math.random() * arr.length)]!)\n\t\tflipAt(xy)\n\t\tperformeter.exitBlock()\n\t}\n\n}","interface Block {\n\tparent: Block | null\n\tsubblocks: Record<string, Block>\n\ttimeStart: number\n\ttimeSum: number\n\tenterCount: number\n}\n\ninterface BlockToPrint {\n\t\"ms per enter\": number\n\t\"full %\": number\n\t\"parent %\": number\n}\n\nclass Perfometer {\n\n\tprivate root: Block = this.makeBlock(null)\n\tprivate currentBlock: Block = this.root\n\tprivate eventCounters: Record<string, number> = {}\n\n\tprivate makeBlock(parent: Block | null): Block {\n\t\treturn {\n\t\t\tsubblocks: {}, parent: parent,\n\t\t\ttimeStart: -1, timeSum: 0,\n\t\t\tenterCount: 0\n\t\t}\n\t}\n\n\tenterBlock(name: string): void {\n\t\tlet nextBlock = this.currentBlock.subblocks[name]\n\t\tif(!nextBlock){\n\t\t\tnextBlock = this.makeBlock(this.currentBlock)\n\t\t\tthis.currentBlock.subblocks[name] = nextBlock\n\t\t}\n\t\tnextBlock.timeStart = performance.now()\n\t\tnextBlock.enterCount++\n\t\tthis.currentBlock = nextBlock\n\t}\n\n\trecordEvent(name: string): void {\n\t\tthis.eventCounters[name] = (this.eventCounters[name] ?? 0) + 1\n\t}\n\n\texitBlock(): void {\n\t\tthis.currentBlock.timeSum += performance.now() - this.currentBlock.timeStart\n\t\tconst parent = this.currentBlock.parent\n\t\tif(!parent){\n\t\t\tthrow new Error(\"No parent! Blocks are all messed up.\")\n\t\t}\n\t\tthis.currentBlock = parent\n\t}\n\n\texitEnterBlock(name: string): void {\n\t\tthis.exitBlock()\n\t\tthis.enterBlock(name)\n\t}\n\n\tprint(): void {\n\t\tconst table: Record<string, BlockToPrint> = {}\n\t\tlet fullTime = 0\n\t\tfor(const name in this.root.subblocks){\n\t\t\tfullTime += this.root.subblocks[name]!.timeSum\n\t\t}\n\n\t\tthis.forEachBlock((block, name, depth) => {\n\t\t\tname = new Array(depth + 1).join(\"-\") + name\n\t\t\ttable[name] = {\n\t\t\t\t\"parent %\": strip((block.timeSum / block.parent!.timeSum) * 100),\n\t\t\t\t\"full %\": strip((block.timeSum / fullTime) * 100),\n\t\t\t\t\"ms per enter\": strip(block.timeSum / block.enterCount)\n\t\t\t}\n\t\t})\n\n\t\tconsole.table(table)\n\t\tconsole.table(this.eventCounters)\n\t}\n\n\treset(): void {\n\t\tthis.root = this.makeBlock(null)\n\t\tthis.currentBlock = this.root\n\t\tthis.eventCounters = {}\n\t}\n\n\tprivate forEachBlock(callback: (block: Block, name: string, depth: number) => void, start: Block = this.root, currentDepth = 0): void {\n\t\tfor(const name in start.subblocks){\n\t\t\tconst subblock = start.subblocks[name]!\n\t\t\tcallback(subblock, name, currentDepth)\n\t\t\tthis.forEachBlock(callback, subblock, currentDepth + 1)\n\t\t}\n\t}\n\n}\n\nexport const performeter = new Perfometer()\n\nfunction strip(v: number): number {\n\treturn Math.round(v * 100) / 100\n}","import {Queue} from \"common/queue\"\n\ninterface Props<T> {\n\treadonly length: number // left side distance\n\treadonly width: number // right side distance\n\treadonly height: number // top side distance\n\treadonly defaultValue: T\n}\n\nexport interface XY {\n\treadonly x: number\n\treadonly y: number\n}\n\nexport const encodeXY = (xy: XY): number => (xy.y << 0x10) | xy.x\nexport const decodeXY = (key: number): XY => ({x: key & 0xffff, y: (key >> 0x10)})\n\n/** A container for values arranged in triangle pattern.\n * Columns are aligned, each next row is offset by half.\n * Resulting pattern of values, if drawn on 2d plane, will generally look like 6-sided polygon (4-sided, if one of the dimensions is 1, etc)\n *\n * This class also contains utility related arithmetic functions.  */\nexport class TriangleGrid<T> {\n\n\t/** Amount of columns in the grid */\n\treadonly xWidth: number\n\t/** Difference of Y coord between lowest and highest point of grid, in cells.\n\t * May be fractional (because half-cell distance is possible in triangle grid). */\n\treadonly yHeight: number\n\t/** Count of elements in the grid. */\n\treadonly count: number\n\t/** X coord of column that has highest grid point */\n\treadonly topCornerColumnX: number\n\tprivate readonly values: T[][]\n\n\tconstructor(private readonly props: Props<T>) {\n\t\tif(props.width < 1 || props.height < 1 || props.length < 1 || props.width % 1 || props.height % 1 || props.length % 1){\n\t\t\tthrow new Error(`Incorrect grid dimensions: ${props.length} x ${props.width} x ${props.height}`)\n\t\t}\n\t\tthis.xWidth = props.length + props.width - 1\n\t\tthis.yHeight = (this.xWidth / 2) + props.height\n\t\tthis.topCornerColumnX = this.props.length - 1\n\t\tthis.count = TriangleGrid.getCount(this.props.length, this.props.width, this.props.height)\n\t\tthis.values = new Array(this.xWidth)\n\t\t\t.fill(null)\n\t\t\t.map((_, x) => new Array(this.getHeightOfColumnAt(x))\n\t\t\t\t.fill(null)\n\t\t\t\t.map(() => props.defaultValue)\n\t\t\t)\n\t}\n\n\tstatic getCount(length: number, width: number, height: number): number {\n\t\tlet result = 0\n\t\tconst xWidth = length + width - 1\n\t\tfor(let x = 0; x < xWidth; x++){\n\t\t\tresult += this.getHeightOfColumnAt(length, width, height, x)\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic getHeightOfColumnAt(length: number, width: number, height: number, x: number): number {\n\t\tlet result = height\n\t\tif(x < length && x < width){\n\t\t\tresult += x\n\t\t} else if((x < length) !== (x < width)){\n\t\t\tresult += Math.min(length, width) - 1\n\t\t} else {\n\t\t\tresult += (length + width - 1) - 1 - x\n\t\t}\n\t\treturn result\n\t}\n\n\tgetHeightOfColumnAt(x: number): number {\n\t\treturn TriangleGrid.getHeightOfColumnAt(this.props.length, this.props.width, this.props.height, x)\n\t}\n\n\t* [Symbol.iterator](): IterableIterator<{x: number, y: number, value: T}> {\n\t\tfor(let x = 0; x < this.values.length; x++){\n\t\t\tconst col = this.values[x]!\n\t\t\tfor(let y = 0; y < col.length; y++){\n\t\t\t\tyield{x, y, value: col[y]!}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @returns difference between y coord of highest point of the whole rhombus and y coords the highest point in this column, in cells */\n\tgetVerticalOffset(x: number): number {\n\t\treturn Math.abs(this.topCornerColumnX - x) / 2\n\t}\n\n\tgetCenterCornerCoords(): XY {\n\t\treturn {\n\t\t\tx: this.topCornerColumnX,\n\t\t\ty: this.props.height - 1\n\t\t}\n\t}\n\n\tgetTopCornerCoords(): XY {\n\t\treturn {\n\t\t\tx: this.topCornerColumnX,\n\t\t\ty: 0\n\t\t}\n\t}\n\n\tgetLeftBottomCornerCoords(): XY {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: this.values[0]!.length - 1\n\t\t}\n\t}\n\n\tgetRightBottomCornerCoords(): XY {\n\t\treturn {\n\t\t\tx: this.values.length - 1,\n\t\t\ty: this.values[this.values.length - 1]!.length - 1\n\t\t}\n\t}\n\n\t/** @returns true if coords are within the grid */\n\tisCoordValid(coords: XY): boolean {\n\t\tif(coords.x < 0 || coords.y < 0){\n\t\t\treturn false\n\t\t}\n\t\tconst col = this.values[coords.x]\n\t\treturn !!col && col.length > coords.y\n\t}\n\n\tprivate throwOnInvalidCoords(coords: XY): void {\n\t\tif(!this.isCoordValid(coords)){\n\t\t\tthrow new Error(`Asked for value at ${coords.x}, ${coords.y}, but container only has ${this.values.length} columns, and this column ${this.values.length > coords.x ? `contains only ${this.values[coords.x]!.length} rows` : \"does not exist\"}.`)\n\t\t}\n\t}\n\n\tget(coords: XY): T {\n\t\tthis.throwOnInvalidCoords(coords)\n\t\treturn this.values[coords.x]![coords.y]!\n\t}\n\n\tset(coords: XY, value: T): void {\n\t\tthis.values[coords.x]![coords.y] = value\n\t}\n\n\t// this method, and others, are just for arithmetics\n\t// they can return a coord that is out of this grid\n\t// use areCoordsValid() to check if this is the case\n\tgetTopLeftOf({x, y}: XY): XY {\n\t\treturn {x: x - 1, y: x <= this.topCornerColumnX ? y - 1 : y}\n\t}\n\n\tgetBottomLeftOf({x, y}: XY): XY {\n\t\treturn {x: x - 1, y: x <= this.topCornerColumnX ? y : y + 1}\n\t}\n\n\tgetTopRightOf({x, y}: XY): XY {\n\t\treturn {x: x + 1, y: x < this.topCornerColumnX ? y : y - 1}\n\t}\n\n\tgetBottomRightOf({x, y}: XY): XY {\n\t\treturn {x: x + 1, y: x < this.topCornerColumnX ? y + 1 : y}\n\t}\n\n\tgetTopOf({x, y}: XY): XY {\n\t\treturn {x, y: y - 1}\n\t}\n\n\tgetBottomOf({x, y}: XY): XY {\n\t\treturn {x, y: y + 1}\n\t}\n\n\tgetValidNeighbourCoords(xy: XY): XY[] {\n\t\treturn [\n\t\t\tthis.getTopOf(xy),\n\t\t\tthis.getBottomOf(xy),\n\t\t\tthis.getTopLeftOf(xy),\n\t\t\tthis.getTopRightOf(xy),\n\t\t\tthis.getBottomLeftOf(xy),\n\t\t\tthis.getBottomRightOf(xy)\n\t\t].filter(xy => this.isCoordValid(xy))\n\t}\n\n\t/** Starting at startingPoint, get next points from explorer; explore while there are points to explore.\n\t * Each point is visited only once. */\n\texploreFrom(startingPoint: XY, explore: (xy: XY) => XY[]): void {\n\t\tconst queue = new Queue<XY>()\n\t\tconst processed = new Set<number>()\n\n\t\tlet next: XY | undefined = startingPoint\n\t\twhile(next){\n\t\t\tconst points = explore(next)\n\t\t\tfor(const xy of points){\n\t\t\t\tif(!this.isCoordValid(xy)){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst key = encodeXY(xy)\n\t\t\t\tif(!processed.has(key)){\n\t\t\t\t\tprocessed.add(key)\n\t\t\t\t\tqueue.enqueue(xy)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext = queue.maybeDequeue()\n\t\t}\n\t}\n\n}","interface Node<T> {\n\tprev?: Node<T>\n\tvalue: T\n}\n\nexport class Queue<T> {\n\n\tprivate len = 0\n\tprivate headNode?: Node<T>\n\tprivate tailNode?: Node<T>\n\n\tget length(): number {\n\t\treturn this.len\n\t}\n\n\tget head(): T | undefined {\n\t\treturn this.headNode?.value\n\t}\n\n\tget tail(): T | undefined {\n\t\treturn this.tailNode?.value\n\t}\n\n\tenqueue(value: T): void {\n\t\tif(this.headNode && this.tailNode){\n\t\t\tconst oldTail = this.tailNode\n\t\t\tthis.tailNode = {value}\n\t\t\toldTail.prev = this.tailNode\n\t\t} else {\n\t\t\tthis.headNode = this.tailNode = {value}\n\t\t}\n\t\tthis.len++\n\t}\n\n\tdequeue(): T {\n\t\tif(!this.headNode){\n\t\t\tthrow new Error(\"Queue empty, cannot dequeue.\")\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tmaybeDequeue(): T | undefined {\n\t\tif(!this.headNode){\n\t\t\treturn undefined\n\t\t}\n\t\tconst result = this.headNode.value\n\t\tthis.headNode = this.headNode.prev\n\t\tthis.len--\n\t\treturn result\n\t}\n\n\tclear(): void {\n\t\tthis.len = 0\n\t\tthis.headNode = this.tailNode = undefined\n\t}\n\n\ttoArrayHeadFirst(): T[] {\n\t\tconst result: T[] = new Array(this.len)\n\t\tlet node = this.headNode\n\t\tlet i = 0\n\t\twhile(node){\n\t\t\tresult[i++] = node.value\n\t\t\tnode = node.prev\n\t\t}\n\t\treturn result\n\t}\n\n}","import wasm from \"sketches/random_rhombus_tilings/wasm/rhombus_randomiser.wasm\"\nimport {instantiate} from \"./wasm/rhombus_randomiser\"\n\nexport type WasmRhombusRandomiser = ReturnType<typeof instantiate> extends Promise<infer X>? X: never\n\nexport const getWasmRhombusRandomiser = async(): Promise<WasmRhombusRandomiser> => {\n\treturn await instantiate(fetch(wasm))\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"d9iEL\")).toString();","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export async function instantiate(module, imports = {}) {\n  const adaptedImports = {\n    env: Object.assign(Object.create(globalThis), imports.env || {}, {\n      abort(message, fileName, lineNumber, columnNumber) {\n        // ~lib/builtins/abort(~lib/string/String | null?, ~lib/string/String | null?, u32?, u32?) => void\n        message = __liftString(message >>> 0);\n        fileName = __liftString(fileName >>> 0);\n        lineNumber = lineNumber >>> 0;\n        columnNumber = columnNumber >>> 0;\n        (() => {\n          // @external.js\n          throw Error(`${message} in ${fileName}:${lineNumber}:${columnNumber}`);\n        })();\n      },\n      \"performance.now\"() {\n        // ~lib/bindings/dom/performance.now() => f64\n        return performance.now();\n      },\n      seed() {\n        // ~lib/builtins/seed() => f64\n        return (() => {\n          // @external.js\n          return Date.now() * Math.random();\n        })();\n      },\n    }),\n  };\n  const { exports } = (await WebAssembly.instantiateStreaming(module, adaptedImports)).instance;\n  const memory = exports.memory || imports.env.memory;\n  const adaptedExports = Object.setPrototypeOf({\n    randomizeRhombusPattern(arr, length, width, height, flipLimit) {\n      // rhombus_randomizer.as/randomizeRhombusPattern(~lib/typedarray/Uint8Array, i32, i32, i32, i32) => ~lib/typedarray/Uint8Array\n      arr = __lowerTypedArray(Uint8Array, 5, 0, arr) || __notnull();\n      return __liftTypedArray(Uint8Array, exports.randomizeRhombusPattern(arr, length, width, height, flipLimit) >>> 0);\n    },\n    getMetrics() {\n      // rhombus_randomizer.as/getMetrics() => ~lib/typedarray/Float64Array\n      return __liftTypedArray(Float64Array, exports.getMetrics() >>> 0);\n    },\n    getNeighbours(length, width, height, count, x, y) {\n      // rhombus_randomizer.as/getNeighbours(i32, i32, i32, i32, i32, i32) => ~lib/typedarray/Int32Array\n      return __liftTypedArray(Int32Array, exports.getNeighbours(length, width, height, count, x, y) >>> 0);\n    },\n  }, exports);\n  function __liftString(pointer) {\n    if (!pointer) return null;\n    const\n      end = pointer + new Uint32Array(memory.buffer)[pointer - 4 >>> 2] >>> 1,\n      memoryU16 = new Uint16Array(memory.buffer);\n    let\n      start = pointer >>> 1,\n      string = \"\";\n    while (end - start > 1024) string += String.fromCharCode(...memoryU16.subarray(start, start += 1024));\n    return string + String.fromCharCode(...memoryU16.subarray(start, end));\n  }\n  function __liftTypedArray(constructor, pointer) {\n    if (!pointer) return null;\n    return new constructor(\n      memory.buffer,\n      __getU32(pointer + 4),\n      __dataview.getUint32(pointer + 8, true) / constructor.BYTES_PER_ELEMENT\n    ).slice();\n  }\n  function __lowerTypedArray(constructor, id, align, values) {\n    if (values == null) return 0;\n    const\n      length = values.length,\n      buffer = exports.__pin(exports.__new(length << align, 1)) >>> 0,\n      header = exports.__new(12, id) >>> 0;\n    __setU32(header + 0, buffer);\n    __dataview.setUint32(header + 4, buffer, true);\n    __dataview.setUint32(header + 8, length << align, true);\n    new constructor(memory.buffer, buffer, length).set(values);\n    exports.__unpin(buffer);\n    return header;\n  }\n  function __notnull() {\n    throw TypeError(\"value must not be null\");\n  }\n  let __dataview = new DataView(memory.buffer);\n  function __setU32(pointer, value) {\n    try {\n      __dataview.setUint32(pointer, value, true);\n    } catch {\n      __dataview = new DataView(memory.buffer);\n      __dataview.setUint32(pointer, value, true);\n    }\n  }\n  function __getU32(pointer) {\n    try {\n      return __dataview.getUint32(pointer, true);\n    } catch {\n      __dataview = new DataView(memory.buffer);\n      return __dataview.getUint32(pointer, true);\n    }\n  }\n  return adaptedExports;\n}\n","import {tag} from \"common/tag\"\nimport * as css from \"./bottom_bar.module.scss\"\n\ninterface Props {\n\tparent: HTMLElement\n\tcontents: HTMLElement[]\n}\n\n// this will return not the container itself, but the element you can add other stuff to\nexport const makeBottomBarredScreenContainer = (props: Props): HTMLElement => {\n\tconst bar = tag({class: css.bottomBar}, props.contents)\n\tconst contentContainer = tag({class: css.contentContainer})\n\tconst wrap = tag({class: css.pageContainer}, [contentContainer, bar])\n\n\tprops.parent.appendChild(wrap)\n\n\treturn contentContainer\n}","@import \"/src/website/style/vars\";\n\n.bottomBar {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tflex: 0 0 auto;\n\tcolumn-gap: 2rem;\n\trow-gap: 0.5rem;\n\tpadding: 0.5rem;\n\talign-items: center;\n\tbackground-color: $foreground-secondary-color;\n\talign-self: stretch;\n}\n\n.pageContainer {\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.contentContainer {\n\tflex: 1 1 0;\n}\n","import {getBinder} from \"common/binder/binder\"\nimport {box, isRBox, MaybeRBoxed, WBox} from \"common/box\"\nimport {addCursorMoveHandler, pointerEventsToClientCoords} from \"common/input_utils\"\nimport {tag} from \"common/tag\"\nimport * as css from \"./slider.module.scss\"\n\ninterface Props {\n\treadonly min: MaybeRBoxed<number>\n\treadonly max: MaybeRBoxed<number>\n\treadonly step?: number\n\treadonly value: WBox<number>\n\treadonly label?: MaybeRBoxed<string>\n\treadonly labelWidth?: MaybeRBoxed<number | string>\n}\n\nexport const Slider = (props: Props): HTMLElement => {\n\tconst min = isRBox(props.min) ? props.min : box(props.min)\n\tconst max = isRBox(props.max) ? props.max : box(props.max)\n\n\tconst handle = tag({class: css.handle})\n\tconst handleContainer = tag({class: css.handleContainer}, [handle])\n\tlet root = tag({class: css.slider}, [handleContainer])\n\tif(props.label){\n\t\tconst labelWidth = isRBox(props.labelWidth) ? props.labelWidth : box(props.labelWidth)\n\t\troot = tag({class: css.sliderRoot}, [\n\t\t\ttag({\n\t\t\t\tclass: css.label,\n\t\t\t\ttext: props.label,\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: labelWidth.map(x => typeof(x) === \"number\" ? x + \"px\" : x ?? \"\")\n\t\t\t\t}\n\t\t\t}),\n\t\t\troot\n\t\t])\n\t}\n\n\tfunction updateHandlePos(newValue: number): void {\n\t\thandle.style.left = (((newValue - min()) / (max() - min())) * 100) + \"%\"\n\t}\n\n\tfunction setValueByEvent(e: MouseEvent | TouchEvent): void {\n\t\tconst coords = pointerEventsToClientCoords(e)\n\t\tconst contRect = handleContainer.getBoundingClientRect()\n\n\t\tlet progress = (coords.x - contRect.left) / contRect.width\n\t\tprogress = Math.min(1, Math.max(0, progress))\n\t\tlet newValue = (progress * (max() - min())) + min()\n\t\tif(props.step){\n\t\t\tnewValue = Math.round(newValue / props.step) * props.step\n\t\t}\n\n\t\tprops.value(newValue)\n\t}\n\n\taddCursorMoveHandler({\n\t\telement: handle,\n\t\tonMove: setValueByEvent\n\t})\n\n\tconst onSliderBodyClick = (e: MouseEvent | TouchEvent) => {\n\t\tif(e.target === handle){\n\t\t\treturn\n\t\t}\n\n\t\tsetValueByEvent(e)\n\t}\n\n\troot.addEventListener(\"click\", onSliderBodyClick)\n\n\tconst binder = getBinder(root)\n\tbinder.watchAndRun(props.value, value => updateHandlePos(value))\n\tbinder.watchAndRun(max, max => {\n\t\tif(props.value() > max){\n\t\t\tprops.value(max)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value())\n\t\t}\n\t})\n\tbinder.watchAndRun(min, min => {\n\t\tif(props.value() < min){\n\t\t\tprops.value(min)\n\t\t} else {\n\t\t\tupdateHandlePos(props.value())\n\t\t}\n\t})\n\n\treturn root\n}","export function pointerEventsToClientCoords(e: MouseEvent | TouchEvent): {x: number, y: number} {\n\tif(isTouchEvent(e)){\n\t\tconst touch = e.touches[0]!\n\t\treturn {\n\t\t\tx: touch.clientX,\n\t\t\ty: touch.clientY\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t}\n}\n\nexport function pointerEventsToOffsetCoords(e: MouseEvent | TouchEvent): {x: number, y: number} | null {\n\tif(!(e.target instanceof HTMLElement)){\n\t\treturn null\n\t}\n\n\tconst rect = e.target.getBoundingClientRect() // performance may suck, but whatever\n\tconst coords = pointerEventsToClientCoords(e)\n\tcoords.x -= rect.left\n\tcoords.y -= rect.top\n\treturn coords\n}\n\nexport function isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n\treturn !!(e as TouchEvent).touches\n}\n\ntype CursorMoveHandlerParams = {\n\treadonly element: HTMLElement\n\tonMove(e: MouseEvent | TouchEvent): void\n\t/** If true, onMove will be invoked when down event happen */\n\treadonly downIsMove?: boolean\n\t/** If true, onMove will be invoked when up event happen */\n\treadonly upIsMove?: boolean\n}\n\n/** This is a good way to add a mousemove handler to an element */\nexport function addCursorMoveHandler(params: CursorMoveHandlerParams): void {\n\n\tconst onDown = (e: MouseEvent | TouchEvent) => {\n\t\twindow.addEventListener(\"mousemove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"touchmove\", params.onMove, {passive: true})\n\t\twindow.addEventListener(\"mouseup\", onUp, {passive: true})\n\t\twindow.addEventListener(\"touchend\", onUp, {passive: true})\n\t\tif(params.downIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tconst onUp = (e: MouseEvent | TouchEvent) => {\n\t\twindow.removeEventListener(\"mousemove\", params.onMove)\n\t\twindow.removeEventListener(\"touchmove\", params.onMove)\n\t\twindow.removeEventListener(\"mouseup\", onUp)\n\t\twindow.removeEventListener(\"touchend\", onUp)\n\t\tif(params.upIsMove){\n\t\t\tparams.onMove(e)\n\t\t}\n\t}\n\n\tparams.element.addEventListener(\"mousedown\", onDown, {passive: true})\n\tparams.element.addEventListener(\"touchstart\", onDown, {passive: true})\n}\n\nexport function preventContextMenu(el: HTMLElement): void {\n\tel.addEventListener(\"contextmenu\", e => {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\treturn false\n\t})\n}","@import \"/src/website/style/vars\";\n\n.sliderRoot {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: stretch;\n\tgap: 0.5rem;\n}\n\n.slider {\n\tbackground-color: $background-color;\n\tborder: 3px solid $font-color;\n\tborder-radius: 3px;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n}\n\n.handleContainer {\n\tflex: 1 1 auto;\n\tposition: relative;\n\theight: 100%;\n\tmargin: 0 0.5em;\n\tmin-width: 15rem;\n\tmin-height: 1.25em;\n}\n\n.handle {\n\tbox-sizing: border-box;\n\twidth: 1rem;\n\tcursor: pointer;\n\tborder: 3px solid $font-color;\n\tborder-top-width: 0;\n\tborder-bottom-width: 0;\n\tbackground-color: $font-color;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\ttransform: translateX(-50%);\n}\n\n.label {\n\toverflow: hidden;\n\tflex: 0 0 auto;\n\tcolor: $font-color;\n\ttext-align: right;\n}","export function debounce(time: number | \"raf\", handler: () => void): () => void {\n\tlet timer: ReturnType<typeof setTimeout> | ReturnType<typeof requestAnimationFrame> | null = null\n\n\treturn () => {\n\t\tif(timer){\n\t\t\treturn\n\t\t}\n\n\t\tif(time === \"raf\"){\n\t\t\ttimer = requestAnimationFrame(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t})\n\t\t} else {\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\ttimer = null\n\t\t\t\thandler()\n\t\t\t}, time)\n\t\t}\n\t}\n}"],"names":["$elQpM","parcelRequire","$feb87bdc332a04e8$var$colors","$feb87bdc332a04e8$var$defaultDims","$feb87bdc332a04e8$var$defaultSteps","Math","floor","$6fuK6","TriangleGrid","getCount","$feb87bdc332a04e8$var$defaultSeed","random","async","$feb87bdc332a04e8$export$f22da7240b7add18","container","isPreview","randomizer","$kxLP6","getWasmRhombusRandomiser","redraw","$feb87bdc332a04e8$var$makeUpdater","root","debouncedRedraw","$euaFP","debounce","props","steps","$hsvBG","box","maxSteps","color","length","seed","height","width","$kTeo1","makeBottomBarredScreenContainer","parent","contents","$aCP3q","tag","style","display","flexDirection","justifyContent","gap","$jmBhk","Slider","value","step","min","max","label","$feb87bdc332a04e8$var$labelWidth","tagName","text","on","click","$feb87bdc332a04e8$var$maxDim","$feb87bdc332a04e8$var$bottomBar","update","binder","$hIDiW","getBinder","watch","getRoot","seedRandom","$8HcCf","performeter","enterBlock","dims","console","log","grid","$kFpLY","getEmptyRhombusPattern","exitEnterBlock","bytes","randomizeRhombusPattern","rhombusGridToBytes","rhombusGridFromBytes","innerHTML","rootRect","getBoundingClientRect","rootHeight","$feb87bdc332a04e8$var$margins","rootWidth","heightCellSize","yHeight","widthCellSize","xWidth","cellSize","svg","renderRhombuses","horisontalColor","$efatB","transformColorHsl","h","s","l","leftColor","rightColor","x","y","margin","appendChild","exitBlock","print","getMetrics","$fbf140c75cf60424$export$61227af714afdbe3","svgTag","setAttribute","strokeWidth","makePathMaker","name","expr","offset","getVerticalOffset","attrs","d","fill","rgbNumberToColorString","stroke","makeLeft","makeRight","makeBottom","leftIsSolid","rightIsSolid","bottomIsSolid","exploreFrom","getTopCornerCoords","xy","get","getBottomLeftOf","getBottomRightOf","getRightBottomCornerCoords","getTopOf","topCornerColumnX","getLeftBottomCornerCoords","$fa4a5aa5cdd6ce8e$var$twoHex","toString","$fa4a5aa5cdd6ce8e$export$fdc9c29511f1a926","$fa4a5aa5cdd6ce8e$export$79db3ad3d560d193","components","r","g","b","$fa4a5aa5cdd6ce8e$var$hueToRgb","p","q","t","$fa4a5aa5cdd6ce8e$export$c5ea230d2f55d434","rgb","$fa4a5aa5cdd6ce8e$export$21d90289cdbe307c","colorRgb","transform","transformResult","cmin","cmax","delta","round","abs","toFixed","$fa4a5aa5cdd6ce8e$export$c85ca4f4753af384","hsl","$fa4a5aa5cdd6ce8e$export$29fb7152bd3f781a","$4c0fbf616468c6ce$var$resolveArgs","a","Array","isArray","isRBox","$4c0fbf616468c6ce$var$populateTag","tagBase","description","children","textContent","unbox","evtName","handler","addEventListener","passive","capture","k","v","removeAttribute","vv","setChildren","childTags","filter","newChildren","i","childTag","childNodes","insertBefore","remove","$4c0fbf616468c6ce$var$updateChildren","class","$jM5hi","makeClassname","classname","classList","$4c0fbf616468c6ce$export$2b067c6666111485","document","createElement","$4c0fbf616468c6ce$export$e0e99c6b21dfde8d","createElementNS","setAttributeNS","$0d27fb504028ccb8$export$4ded07f8b6ee4cea","node","parts","callback","arr","item","makeClassnameAndCallTheCallback","key","bool","result","push","classname1","join","$625d88d1d12e65ae$export$f5bbc667addc1649","Uint8Array","count","colStarts","$625d88d1d12e65ae$var$calcColStarts","$625d88d1d12e65ae$export$a2bb0ff498b7a243","defaultValue","byte","set","getHeightOfColumnAt","$625d88d1d12e65ae$export$594265a16ba9ecb7","center","getCenterCornerCoords","getBottomOf","getTopLeftOf","getTopRightOf","$6f792b9b35387246$export$e1ee22bc4cc102ea","this","makeBlock","currentBlock","eventCounters","subblocks","timeStart","timeSum","enterCount","nextBlock","performance","now","recordEvent","Error","table","fullTime","forEachBlock","block","depth","$6f792b9b35387246$var$strip","reset","start","currentDepth","subblock","$6A5Hp","$420e0860c859833c$export$7f5a1f6765a2b466","$420e0860c859833c$export$5fdd4d96ea786aae","$420e0860c859833c$export$f83afd22d38be4aa","constructor","values","map","_","static","Symbol","iterator","col","isCoordValid","coords","throwOnInvalidCoords","getValidNeighbourCoords","startingPoint","explore","queue","Queue","processed","Set","next","points","has","add","enqueue","maybeDequeue","$d86dd992f2068262$export$3dc07afe418952bc","len","head","headNode","tail","tailNode","oldTail","prev","dequeue","clear","undefined","toArrayHeadFirst","$9qvFf","$ac3684afa04ca243$export$bd88742c9a5aa178","$je7up","instantiate","fetch","$parcel$interopDefault","module","exports","URL","resolve","import","meta","url","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","$dff52266ebfa9e35$export$f9bb8d20ccc7477a","imports","adaptedImports","env","assign","create","globalThis","abort","message","fileName","lineNumber","columnNumber","__liftString","Date","WebAssembly","instantiateStreaming","instance","memory","adaptedExports","setPrototypeOf","flipLimit","align","buffer","__pin","__new","header","pointer","__dataview","setUint32","DataView","__setU32","__unpin","__lowerTypedArray","TypeError","__notnull","__liftTypedArray","Float64Array","getNeighbours","Int32Array","end","Uint32Array","memoryU16","Uint16Array","string","String","fromCharCode","subarray","getUint32","__getU32","BYTES_PER_ELEMENT","slice","$0b128bc07ced54fa$export$efc4f4afff32aea8","bar","$3MmRR","bottomBar","contentContainer","wrap","pageContainer","$2c0797ddc08f9f2b$export$9bfd64464b8f45a7","$2c0797ddc08f9f2b$export$8f981dffec84ba52","$2c0797ddc08f9f2b$export$eebe73d6e99d9049","$1bf0a92f5a0d7095$export$472062a354075cee","handle","$3KaNR","handleContainer","slider","labelWidth","sliderRoot","updateHandlePos","newValue","left","setValueByEvent","e","$ih12A","pointerEventsToClientCoords","contRect","progress","addCursorMoveHandler","element","onMove","target","watchAndRun","$070b40bf88f7afea$export$f9e1fc62131d1b82","touches","$070b40bf88f7afea$export$c4dfce035d43d1e0","touch","clientX","clientY","$070b40bf88f7afea$export$4eb1c1f17f883a41","HTMLElement","rect","top","$070b40bf88f7afea$export$80eb02ad18c977f1","params","onDown","window","onUp","downIsMove","removeEventListener","upIsMove","$070b40bf88f7afea$export$b3002a74c1b9a5fd","el","preventDefault","stopPropagation","$2b9e0c477a19ae15$export$b38bf4f33e9e4c25","$2b9e0c477a19ae15$export$8f34ce051745d39e","$2b9e0c477a19ae15$export$c19509281e5dc3a3","$2b9e0c477a19ae15$export$1237798dc640739a","$2b9e0c477a19ae15$export$8240c6390807f912","$1fa5674b28854650$export$61fc7d43ac8f84b0","time","timer","requestAnimationFrame","setTimeout"],"version":3,"file":"random_rhombus_tilings.fa9b73b3.js.map"}